; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\raknet\FileListTransfer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??4PlayerID@@QAEAAU0@ABU0@@Z			; PlayerID::operator=
PUBLIC	??0PluginInterface@@QAE@XZ			; PluginInterface::PluginInterface
PUBLIC	??0FileListTransfer@@QAE@XZ			; FileListTransfer::FileListTransfer
PUBLIC	??1FileListTransfer@@QAE@XZ			; FileListTransfer::~FileListTransfer
PUBLIC	?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z ; FileListTransfer::SetupReceive
PUBLIC	?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z ; FileListTransfer::Send
PUBLIC	?RemoveReceiver@FileListTransfer@@QAEXUPlayerID@@@Z ; FileListTransfer::RemoveReceiver
PUBLIC	?OnReceive@FileListTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ; FileListTransfer::OnReceive
PUBLIC	?OnDisconnect@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z ; FileListTransfer::OnDisconnect
PUBLIC	?OnCloseConnection@FileListTransfer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z ; FileListTransfer::OnCloseConnection
PUBLIC	?OnAttach@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z ; FileListTransfer::OnAttach
PUBLIC	?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z ; FileListTransfer::DecodeSetHeader
PUBLIC	?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z ; FileListTransfer::DecodeFile
PUBLIC	?Clear@FileListTransfer@@IAEXXZ			; FileListTransfer::Clear
PUBLIC	??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z ; DataStructures::defaultMapKeyComparison<unsigned short>
PUBLIC	?IMPLEMENT_DEFAULT_COMPARISON@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAXXZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::IMPLEMENT_DEFAULT_COMPARISON
PUBLIC	?NodeComparisonFunc@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAHABGABUMapNode@12@@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc
PUBLIC	??0?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >
PUBLIC	??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::~Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >
PUBLIC	?Get@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEAAPAUFileListReceiver@FileListTransfer@@ABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Get
PUBLIC	?Set@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXABGABQAUFileListReceiver@FileListTransfer@@@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Set
PUBLIC	?Has@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Has
PUBLIC	?Delete@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Delete
PUBLIC	??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
PUBLIC	?RemoveAtIndex@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXI@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::RemoveAtIndex
PUBLIC	?Clear@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Clear
PUBLIC	?Size@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Size
PUBLIC	??0?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>
PUBLIC	??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::~OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>
PUBLIC	?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEIABGABUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Insert
PUBLIC	??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::operator[]
PUBLIC	?RemoveAtIndex@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::RemoveAtIndex
PUBLIC	?Clear@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Clear
PUBLIC	?Size@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Size
PUBLIC	??0?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>
PUBLIC	??1?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::~List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>
PUBLIC	??A?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::operator[]
PUBLIC	?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Insert
PUBLIC	?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Insert
PUBLIC	?RemoveAtIndex@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::RemoveAtIndex
PUBLIC	?Del@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Del
PUBLIC	?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size
PUBLIC	?Clear@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Clear
PUBLIC	?SaveLastSearch@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IAEXABGI@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::SaveLastSearch
PUBLIC	?HasSavedSearchResult@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IBE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::HasSavedSearchResult
PUBLIC	?GetNumberOfBitsUsed@BitStream@RakNet@@QBEHXZ	; RakNet::BitStream::GetNumberOfBitsUsed
PUBLIC	?GetWriteOffset@BitStream@RakNet@@QBEHXZ	; RakNet::BitStream::GetWriteOffset
PUBLIC	?GetData@BitStream@RakNet@@QBEPAEXZ		; RakNet::BitStream::GetData
PUBLIC	??$Write@_N@BitStream@RakNet@@QAEX_N@Z		; RakNet::BitStream::Write<bool>
PUBLIC	??$Write@G@BitStream@RakNet@@QAEXG@Z		; RakNet::BitStream::Write<unsigned short>
PUBLIC	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z	; RakNet::BitStream::Read<bool>
PUBLIC	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z		; RakNet::BitStream::Read<unsigned int>
PUBLIC	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z		; RakNet::BitStream::Read<unsigned short>
PUBLIC	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
PUBLIC	?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::List<FileListNode>::Size
PUBLIC	??0FileListReceiver@FileListTransfer@@QAE@XZ	; FileListTransfer::FileListReceiver::FileListReceiver
PUBLIC	??1FileListReceiver@FileListTransfer@@QAE@XZ	; FileListTransfer::FileListReceiver::~FileListReceiver
PUBLIC	??_GFileListReceiver@FileListTransfer@@QAEPAXI@Z ; FileListTransfer::FileListReceiver::`scalar deleting destructor'
PUBLIC	??0?$Queue@UFileListNode@@@DataStructures@@QAE@XZ ; DataStructures::Queue<FileListNode>::Queue<FileListNode>
PUBLIC	??1?$Queue@UFileListNode@@@DataStructures@@QAE@XZ ; DataStructures::Queue<FileListNode>::~Queue<FileListNode>
PUBLIC	?Push@?$Queue@UFileListNode@@@DataStructures@@QAEXABUFileListNode@@@Z ; DataStructures::Queue<FileListNode>::Push
PUBLIC	??A?$Queue@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::Queue<FileListNode>::operator[]
PUBLIC	?Size@?$Queue@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::Queue<FileListNode>::Size
PUBLIC	??$Write@E@BitStream@RakNet@@QAEXE@Z		; RakNet::BitStream::Write<unsigned char>
PUBLIC	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::WriteCompressed<unsigned int>
PUBLIC	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>
PUBLIC	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z		; RakNet::BitStream::Read<unsigned char>
PUBLIC	??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode
PUBLIC	??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@GPAUFileListReceiver@FileListTransfer@@@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode
PUBLIC	??_7PluginInterface@@6B@			; PluginInterface::`vftable'
PUBLIC	??_7FileListTransfer@@6B@			; FileListTransfer::`vftable'
PUBLIC	?__LINE__Var@?1??Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z@4JA ; `FileListTransfer::Send'::`2'::__LINE__Var
PUBLIC	??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@ ; `string'
PUBLIC	??_C@_1IG@OBJNAPDB@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAf?$AAi?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh@ ; `string'
PUBLIC	?__LINE__Var@?1??DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z@4JA ; `FileListTransfer::DecodeSetHeader'::`2'::__LINE__Var
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	??_C@_1EM@KHGPHHCM@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAr?$AA?9?$AA?$DO?$AAg?$AAo?$AAt?$AAS?$AAe?$AAt?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?$DN?$AA?$DN@ ; `string'
PUBLIC	?__LINE__Var@?1??DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z@4JA ; `FileListTransfer::DecodeFile'::`2'::__LINE__Var
PUBLIC	??_C@_1EK@KEDOGKKC@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAr?$AA?9?$AA?$DO?$AAg?$AAo?$AAt?$AAS?$AAe?$AAt?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?$DN?$AA?$DN@ ; `string'
PUBLIC	??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@ ; `string'
PUBLIC	??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@ ; `string'
PUBLIC	??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@ ; `string'
PUBLIC	??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CE@CLDOPLDF@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_R4PluginInterface@@6B@			; PluginInterface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluginInterface@@@8			; PluginInterface `RTTI Type Descriptor'
PUBLIC	??_R3PluginInterface@@8				; PluginInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluginInterface@@8				; PluginInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluginInterface@@8		; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FileListTransfer@@6B@			; FileListTransfer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFileListTransfer@@@8			; FileListTransfer `RTTI Type Descriptor'
PUBLIC	??_R3FileListTransfer@@8			; FileListTransfer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FileListTransfer@@8			; FileListTransfer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FileListTransfer@@8		; FileListTransfer::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??8PlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator==
EXTRN	??9PlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator!=
EXTRN	?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnAttach
EXTRN	?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDetach
EXTRN	?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnInitialize
EXTRN	?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::Update
EXTRN	?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z:PROC ; PluginInterface::OnReceive
EXTRN	?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDisconnect
EXTRN	?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z:PROC ; PluginInterface::OnCloseConnection
EXTRN	?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketSend
EXTRN	?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketReceive
EXTRN	?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z:PROC ; PluginInterface::OnInternalPacket
EXTRN	__wassert:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_memmove:PROC
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	??0BitStream@RakNet@@QAE@PAEI_N@Z:PROC		; RakNet::BitStream::BitStream
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?Reset@BitStream@RakNet@@QAEXXZ:PROC		; RakNet::BitStream::Reset
EXTRN	?Read@BitStream@RakNet@@QAE_NPADH@Z:PROC	; RakNet::BitStream::Read
EXTRN	?IgnoreBits@BitStream@RakNet@@QAEXH@Z:PROC	; RakNet::BitStream::IgnoreBits
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z:PROC	; RakNet::BitStream::WriteBits
EXTRN	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z:PROC	; RakNet::BitStream::ReadBits
EXTRN	?Write0@BitStream@RakNet@@QAEXXZ:PROC		; RakNet::BitStream::Write0
EXTRN	?Write1@BitStream@RakNet@@QAEXXZ:PROC		; RakNet::BitStream::Write1
EXTRN	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z:PROC ; RakNet::BitStream::WriteCompressed
EXTRN	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z:PROC ; RakNet::BitStream::ReadCompressed
EXTRN	??0HuffmanEncodingTree@@QAE@XZ:PROC		; HuffmanEncodingTree::HuffmanEncodingTree
EXTRN	??1HuffmanEncodingTree@@QAE@XZ:PROC		; HuffmanEncodingTree::~HuffmanEncodingTree
EXTRN	?EncodeArray@HuffmanEncodingTree@@QAEXPAEIPAVBitStream@RakNet@@@Z:PROC ; HuffmanEncodingTree::EncodeArray
EXTRN	?DecodeArray@HuffmanEncodingTree@@QAEIPAVBitStream@RakNet@@IIPAE@Z:PROC ; HuffmanEncodingTree::DecodeArray
EXTRN	?GenerateFromFrequencyTable@HuffmanEncodingTree@@QAEXQAI@Z:PROC ; HuffmanEncodingTree::GenerateFromFrequencyTable
EXTRN	?Instance@StringCompressor@@SAPAV1@XZ:PROC	; StringCompressor::Instance
EXTRN	?EncodeString@StringCompressor@@QAEXPBDHPAVBitStream@RakNet@@H@Z:PROC ; StringCompressor::EncodeString
EXTRN	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z:PROC ; StringCompressor::DecodeString
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@FileListTransfer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FileListTransfer@@8 DD FLAT:??_R0?AVFileListTransfer@@@8 ; FileListTransfer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FileListTransfer@@8
rdata$r	ENDS
;	COMDAT ??_R2FileListTransfer@@8
rdata$r	SEGMENT
??_R2FileListTransfer@@8 DD FLAT:??_R1A@?0A@EA@FileListTransfer@@8 ; FileListTransfer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R3FileListTransfer@@8
rdata$r	SEGMENT
??_R3FileListTransfer@@8 DD 00H				; FileListTransfer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FileListTransfer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFileListTransfer@@@8
data$r	SEGMENT
??_R0?AVFileListTransfer@@@8 DD FLAT:??_7type_info@@6B@	; FileListTransfer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFileListTransfer@@', 00H
data$r	ENDS
;	COMDAT ??_R4FileListTransfer@@6B@
rdata$r	SEGMENT
??_R4FileListTransfer@@6B@ DD 00H			; FileListTransfer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFileListTransfer@@@8
	DD	FLAT:??_R3FileListTransfer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluginInterface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluginInterface@@8 DD FLAT:??_R0?AVPluginInterface@@@8 ; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R2PluginInterface@@8
rdata$r	SEGMENT
??_R2PluginInterface@@8 DD FLAT:??_R1A@?0A@EA@PluginInterface@@8 ; PluginInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PluginInterface@@8
rdata$r	SEGMENT
??_R3PluginInterface@@8 DD 00H				; PluginInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluginInterface@@@8
data$r	SEGMENT
??_R0?AVPluginInterface@@@8 DD FLAT:??_7type_info@@6B@	; PluginInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluginInterface@@', 00H
data$r	ENDS
;	COMDAT ??_R4PluginInterface@@6B@
rdata$r	SEGMENT
??_R4PluginInterface@@6B@ DD 00H			; PluginInterface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluginInterface@@@8
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, '>', 00H, '=', 00H, 'n', 00H, 'u', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@CLDOPLDF@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@CLDOPLDF@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ DB 'n'
	DB	00H, 'e', 00H, 'w', 00H, '_', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
CONST	SEGMENT
??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'q', 00H, 'u', 00H, 'e', 00H, 'u', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
CONST	SEGMENT
??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
CONST	SEGMENT
??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@KEDOGKKC@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAr?$AA?9?$AA?$DO?$AAg?$AAo?$AAt?$AAS?$AAe?$AAt?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?$DN?$AA?$DN@
CONST	SEGMENT
??_C@_1EK@KEDOGKKC@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAr?$AA?9?$AA?$DO?$AAg?$AAo?$AAt?$AAS?$AAe?$AAt?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?$DN?$AA?$DN@ DB 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'e', 00H, 'i', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, '-', 00H, '>', 00H, 'g', 00H, 'o', 00H
	DB	't', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'H', 00H, 'e', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '=', 00H, '=', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z@4JA DD 0e2H ; `FileListTransfer::DecodeFile'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EM@KHGPHHCM@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAr?$AA?9?$AA?$DO?$AAg?$AAo?$AAt?$AAS?$AAe?$AAt?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?$DN?$AA?$DN@
CONST	SEGMENT
??_C@_1EM@KHGPHHCM@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAr?$AA?9?$AA?$DO?$AAg?$AAo?$AAt?$AAS?$AAe?$AAt?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?$DN?$AA?$DN@ DB 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'e', 00H, 'i', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, '-', 00H, '>', 00H, 'g', 00H, 'o', 00H
	DB	't', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'H', 00H, 'e', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '=', 00H, '=', 00H, 'f', 00H
	DB	'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z@4JA DD 0a3H ; `FileListTransfer::DecodeSetHeader'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IG@OBJNAPDB@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAf?$AAi?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh@
CONST	SEGMENT
??_C@_1IG@OBJNAPDB@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAf?$AAi?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh@ DB 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, '-', 00H, '>', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '[', 00H, 'i', 00H
	DB	']', 00H, '.', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'L'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '=', 00H
	DB	'=', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '['
	DB	00H, 'i', 00H, ']', 00H, '.', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
CONST	SEGMENT
??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z@4JA DD 045H ; `FileListTransfer::Send'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7FileListTransfer@@6B@
CONST	SEGMENT
??_7FileListTransfer@@6B@ DD FLAT:??_R4FileListTransfer@@6B@ ; FileListTransfer::`vftable'
	DD	FLAT:?OnAttach@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@FileListTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@FileListTransfer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT ??_7PluginInterface@@6B@
CONST	SEGMENT
??_7PluginInterface@@6B@ DD FLAT:??_R4PluginInterface@@6B@ ; PluginInterface::`vftable'
	DD	FLAT:?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z$0
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z$0
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z$0
__ehfuncinfo$?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z$0
__ehfuncinfo$?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z$3
__ehfuncinfo$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z$0
__ehfuncinfo$?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1FileListTransfer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1FileListTransfer@@QAE@XZ$0
__ehfuncinfo$??1FileListTransfer@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1FileListTransfer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0FileListTransfer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FileListTransfer@@QAE@XZ$0
__ehfuncinfo$??0FileListTransfer@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0FileListTransfer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@GPAUFileListReceiver@FileListTransfer@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__key$ = 8						; size = 2
__data$ = 12						; size = 4
??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@GPAUFileListReceiver@FileListTransfer@@@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 49   : 			MapNode(key_type _key, data_type _data) : mapNodeKey(_key), mapNodeData(_data) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR __key$[ebp]
	mov	WORD PTR [eax], cx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __data$[ebp]
	mov	DWORD PTR [eax+2], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@GPAUFileListReceiver@FileListTransfer@@@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 48   : 			MapNode() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@E@BitStream@RakNet@@QAE_NAAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z PROC		; RakNet::BitStream::Read<unsigned char>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z ENDP		; RakNet::BitStream::Read<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z PROC	; RakNet::BitStream::ReadCompressed<unsigned int>, COMDAT
; _this$ = ecx

; 1080 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1081 : #ifdef _MSC_VER
; 1082 : #pragma warning(disable:4127)   // conditional expression is constant
; 1083 : #endif
; 1084 : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@ReadCompre

; 1085 : 			return ReadCompressed( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z ; RakNet::BitStream::ReadCompressed
	jmp	SHORT $LN3@ReadCompre

; 1086 : 		else

	jmp	SHORT $LN3@ReadCompre
$LN2@ReadCompre:

; 1087 : 		{
; 1088 : #ifndef __BITSTREAM_NATIVE_END
; 1089 : 			if (DoEndianSwap())
; 1090 : 			{
; 1091 : 				unsigned char output[sizeof(templateType)];
; 1092 : 				if (ReadCompressed( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1093 : 				{
; 1094 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1095 : 					return true;
; 1096 : 				}
; 1097 : 				return false;
; 1098 : 			}
; 1099 : 			else
; 1100 : #endif
; 1101 : 				return ReadCompressed( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z ; RakNet::BitStream::ReadCompressed
$LN3@ReadCompre:

; 1102 : 		}
; 1103 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ENDP	; RakNet::BitStream::ReadCompressed<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z PROC	; RakNet::BitStream::WriteCompressed<unsigned int>, COMDAT
; _this$ = ecx

; 865  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 866  : #ifdef _MSC_VER
; 867  : #pragma warning(disable:4127)   // conditional expression is constant
; 868  : #endif
; 869  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@WriteCompr

; 870  : 			WriteCompressed( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z ; RakNet::BitStream::WriteCompressed

; 871  : 		else

	jmp	SHORT $LN3@WriteCompr
$LN2@WriteCompr:

; 872  : 		{
; 873  : #ifndef __BITSTREAM_NATIVE_END
; 874  : #ifdef _MSC_VER
; 875  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 876  : #endif
; 877  : 
; 878  : 			if (DoEndianSwap())
; 879  : 			{
; 880  : 				unsigned char output[sizeof(templateType)];
; 881  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 882  : 				WriteCompressed( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 883  : 			}
; 884  : 			else
; 885  : #endif
; 886  : 				WriteCompressed( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z ; RakNet::BitStream::WriteCompressed
$LN3@WriteCompr:

; 887  : 		}
; 888  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ENDP	; RakNet::BitStream::WriteCompressed<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@E@BitStream@RakNet@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 1
??$Write@E@BitStream@RakNet@@QAEXE@Z PROC		; RakNet::BitStream::Write<unsigned char>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@E@BitStream@RakNet@@QAEXE@Z ENDP		; RakNet::BitStream::Write<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Size@?$Queue@UFileListNode@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Queue@UFileListNode@@@DataStructures@@QBEIXZ PROC ; DataStructures::Queue<FileListNode>::Size, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		if ( head <= tail )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@Size

; 64   : 			return tail -head;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN3@Size

; 65   : 		else

	jmp	SHORT $LN3@Size
$LN2@Size:

; 66   : 			return allocation_size -head + tail;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
$LN3@Size:

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Queue@UFileListNode@@@DataStructures@@QBEIXZ ENDP ; DataStructures::Queue<FileListNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??A?$Queue@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$Queue@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z PROC ; DataStructures::Queue<FileListNode>::operator[], COMDAT
; _this$ = ecx

; 356  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 357  : #ifdef _DEBUG
; 358  : 		assert( position < Size() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Queue@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::Queue<FileListNode>::Size
	cmp	DWORD PTR _position$[ebp], eax
	jb	SHORT $LN5@operator
	push	358					; 00000166H
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1CE@CLDOPLDF@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@operator:

; 359  : #endif
; 360  : 		//return array[(head + position) % allocation_size];
; 361  : 
; 362  : 		if ( head + position >= allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _position$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+12]
	jb	SHORT $LN2@operator

; 363  : 			return array[ head + position - allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _position$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	sub	ecx, DWORD PTR [edx+12]
	imul	eax, ecx, 17
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN3@operator

; 364  : 		else

	jmp	SHORT $LN3@operator
$LN2@operator:

; 365  : 			return array[ head + position ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _position$[ebp]
	imul	eax, ecx, 17
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx]
$LN3@operator:

; 366  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$Queue@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ENDP ; DataStructures::Queue<FileListNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Push@?$Queue@UFileListNode@@@DataStructures@@QAEXABUFileListNode@@@Z
_TEXT	SEGMENT
$T1 = -260						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
_counter$4 = -32					; size = 4
_new_array$5 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 4
?Push@?$Queue@UFileListNode@@@DataStructures@@QAEXABUFileListNode@@@Z PROC ; DataStructures::Queue<FileListNode>::Push, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN6@Push

; 184  : 		{
; 185  : 			array = new queue_type[ 16 ];

	push	272					; 00000110H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], ecx

; 186  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 187  : 			tail = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1

; 188  : 			array[ 0 ] = input;

	mov	eax, 17					; 00000011H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, ecx
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	cl, BYTE PTR [ecx+16]
	mov	BYTE PTR [eax+16], cl

; 189  : 			allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 190  : 			return ;

	jmp	$LN7@Push
$LN6@Push:

; 191  : 		}
; 192  : 
; 193  : 		array[ tail++ ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+8], 17
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, ecx
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	cl, BYTE PTR [ecx+16]
	mov	BYTE PTR [eax+16], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 194  : 
; 195  : 		if ( tail == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN5@Push

; 196  : 			tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN5@Push:

; 197  : 
; 198  : 		if ( tail == head )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	$LN7@Push

; 199  : 		{
; 200  : 			//  unsigned int index=tail;
; 201  : 
; 202  : 			// Need to allocate more memory.
; 203  : 			queue_type * new_array;
; 204  : 			new_array = new queue_type[ allocation_size * 2 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	shl	eax, 1
	xor	ecx, ecx
	mov	edx, 17					; 00000011H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _new_array$5[ebp], eax

; 205  : #ifdef _DEBUG
; 206  : 
; 207  : 			assert( new_array );

	cmp	DWORD PTR _new_array$5[ebp], 0
	jne	SHORT $LN9@Push
	push	207					; 000000cfH
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@Push:

; 208  : #endif
; 209  : 
; 210  : 			for ( unsigned int counter = 0; counter < allocation_size; ++counter )

	mov	DWORD PTR _counter$4[ebp], 0
	jmp	SHORT $LN3@Push
$LN2@Push:
	mov	eax, DWORD PTR _counter$4[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$4[ebp], eax
$LN3@Push:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _counter$4[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN1@Push

; 211  : 				new_array[ counter ] = array[ ( head + counter ) % ( allocation_size ) ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR _counter$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	div	DWORD PTR [ecx+12]
	imul	edx, edx, 17
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, edx
	imul	edx, DWORD PTR _counter$4[ebp], 17
	add	edx, DWORD PTR _new_array$5[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+12], eax
	mov	cl, BYTE PTR [ecx+16]
	mov	BYTE PTR [edx+16], cl
	jmp	SHORT $LN2@Push
$LN1@Push:

; 212  : 
; 213  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 214  : 
; 215  : 			tail = allocation_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx

; 216  : 
; 217  : 			allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 218  : 
; 219  : 			// Delete the old array and move the pointer to the new array
; 220  : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 221  : 
; 222  : 			array = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$5[ebp]
	mov	DWORD PTR [eax], ecx
$LN7@Push:

; 223  : 		}
; 224  : 
; 225  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Push@?$Queue@UFileListNode@@@DataStructures@@QAEXABUFileListNode@@@Z ENDP ; DataStructures::Queue<FileListNode>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??1?$Queue@UFileListNode@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$Queue@UFileListNode@@@DataStructures@@QAE@XZ PROC	; DataStructures::Queue<FileListNode>::~Queue<FileListNode>, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN2@Queue

; 94   : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@Queue:

; 95   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Queue@UFileListNode@@@DataStructures@@QAE@XZ ENDP	; DataStructures::Queue<FileListNode>::~Queue<FileListNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??0?$Queue@UFileListNode@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??0?$Queue@UFileListNode@@@DataStructures@@QAE@XZ PROC	; DataStructures::Queue<FileListNode>::Queue<FileListNode>, COMDAT
; _this$ = ecx

; 83   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 		allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 85   : 		array = new queue_type[ allocation_size ];

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, 17					; 00000011H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], ecx

; 86   : 		head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 87   : 		tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 88   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$Queue@UFileListNode@@@DataStructures@@QAE@XZ ENDP	; DataStructures::Queue<FileListNode>::Queue<FileListNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFileListReceiver@FileListTransfer@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFileListReceiver@FileListTransfer@@QAEPAXI@Z PROC	; FileListTransfer::FileListReceiver::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FileListReceiver@FileListTransfer@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFileListReceiver@FileListTransfer@@QAEPAXI@Z ENDP	; FileListTransfer::FileListReceiver::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1FileListReceiver@FileListTransfer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1FileListReceiver@FileListTransfer@@QAE@XZ PROC	; FileListTransfer::FileListReceiver::~FileListReceiver, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 10					; 0000000aH
	call	??1HuffmanEncodingTree@@QAE@XZ		; HuffmanEncodingTree::~HuffmanEncodingTree
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FileListReceiver@FileListTransfer@@QAE@XZ ENDP	; FileListTransfer::FileListReceiver::~FileListReceiver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FileListReceiver@FileListTransfer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FileListReceiver@FileListTransfer@@QAE@XZ PROC	; FileListTransfer::FileListReceiver::FileListReceiver, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 10					; 0000000aH
	call	??0HuffmanEncodingTree@@QAE@XZ		; HuffmanEncodingTree::HuffmanEncodingTree
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FileListReceiver@FileListTransfer@@QAE@XZ ENDP	; FileListTransfer::FileListReceiver::FileListReceiver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<FileListNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<FileListNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z PROC ; DataStructures::List<FileListNode>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 17
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ENDP ; DataStructures::List<FileListNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@G@BitStream@RakNet@@QAE_NAAG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z PROC		; RakNet::BitStream::Read<unsigned short>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z ENDP		; RakNet::BitStream::Read<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@I@BitStream@RakNet@@QAE_NAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z PROC		; RakNet::BitStream::Read<unsigned int>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z ENDP		; RakNet::BitStream::Read<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z PROC		; RakNet::BitStream::Read<bool>, COMDAT
; _this$ = ecx

; 1019 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1020 : 		if ( readOffset + 1 > numberOfBitsUsed )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx]
	jle	SHORT $LN3@Read

; 1021 : 			return false;

	xor	al, al
	jmp	SHORT $LN4@Read
$LN3@Read:

; 1022 : 
; 1023 : 		if ( data[ readOffset >> 3 ] & ( 0x80 >> ( readOffset++ % 8 ) ) )   // Is it faster to just write it out here?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sar	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movzx	edx, BYTE PTR [eax+ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -2147483641			; 80000007H
	jns	SHORT $LN6@Read
	dec	ecx
	or	ecx, -8					; fffffff8H
	inc	ecx
$LN6@Read:
	mov	eax, 128				; 00000080H
	sar	eax, cl
	and	edx, eax
	mov	DWORD PTR tv82[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
	cmp	DWORD PTR tv82[ebp], 0
	je	SHORT $LN2@Read

; 1024 : 			var = true;

	mov	eax, DWORD PTR _var$[ebp]
	mov	BYTE PTR [eax], 1

; 1025 : 		else

	jmp	SHORT $LN1@Read
$LN2@Read:

; 1026 : 			var = false;

	mov	eax, DWORD PTR _var$[ebp]
	mov	BYTE PTR [eax], 0
$LN1@Read:

; 1027 : 
; 1028 : 		return true;

	mov	al, 1
$LN4@Read:

; 1029 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ENDP		; RakNet::BitStream::Read<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@G@BitStream@RakNet@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 2
??$Write@G@BitStream@RakNet@@QAEXG@Z PROC		; RakNet::BitStream::Write<unsigned short>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@G@BitStream@RakNet@@QAEXG@Z ENDP		; RakNet::BitStream::Write<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@_N@BitStream@RakNet@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 1
??$Write@_N@BitStream@RakNet@@QAEX_N@Z PROC		; RakNet::BitStream::Write<bool>, COMDAT
; _this$ = ecx

; 754  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 755  : 		if ( var )

	movzx	eax, BYTE PTR _var$[ebp]
	test	eax, eax
	je	SHORT $LN2@Write

; 756  : 			Write1();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write1@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write1

; 757  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 758  : 			Write0();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write0@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write0
$LN3@Write:

; 759  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@_N@BitStream@RakNet@@QAEX_N@Z ENDP		; RakNet::BitStream::Write<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ?GetData@BitStream@RakNet@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@BitStream@RakNet@@QBEPAEXZ PROC		; RakNet::BitStream::GetData, COMDAT
; _this$ = ecx

; 397  : 		inline unsigned char* GetData( void ) const {return data;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@BitStream@RakNet@@QBEPAEXZ ENDP		; RakNet::BitStream::GetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ?GetWriteOffset@BitStream@RakNet@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetWriteOffset@BitStream@RakNet@@QBEHXZ PROC		; RakNet::BitStream::GetWriteOffset, COMDAT
; _this$ = ecx

; 370  : 		inline int GetWriteOffset( void ) const {return numberOfBitsUsed;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWriteOffset@BitStream@RakNet@@QBEHXZ ENDP		; RakNet::BitStream::GetWriteOffset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ?GetNumberOfBitsUsed@BitStream@RakNet@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetNumberOfBitsUsed@BitStream@RakNet@@QBEHXZ PROC	; RakNet::BitStream::GetNumberOfBitsUsed, COMDAT
; _this$ = ecx

; 369  : 		inline int GetNumberOfBitsUsed( void ) const {return GetWriteOffset();}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetWriteOffset@BitStream@RakNet@@QBEHXZ ; RakNet::BitStream::GetWriteOffset
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumberOfBitsUsed@BitStream@RakNet@@QBEHXZ ENDP	; RakNet::BitStream::GetNumberOfBitsUsed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?HasSavedSearchResult@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IBE_NABG@Z
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasSavedSearchResult@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IBE_NABG@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::HasSavedSearchResult, COMDAT
; _this$ = ecx

; 309  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		return lastSearchIndexValid && key_comparison_func(key,lastSearchKey)==0;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+18]
	test	ecx, ecx
	je	SHORT $LN3@HasSavedSe
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z ; DataStructures::defaultMapKeyComparison<unsigned short>
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@HasSavedSe
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@HasSavedSe
$LN3@HasSavedSe:
	mov	DWORD PTR tv72[ebp], 0
$LN4@HasSavedSe:
	mov	al, BYTE PTR tv72[ebp]

; 311  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HasSavedSearchResult@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IBE_NABG@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::HasSavedSearchResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SaveLastSearch@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IAEXABGI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_index$ = 12						; size = 4
?SaveLastSearch@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IAEXABGI@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::SaveLastSearch, COMDAT
; _this$ = ecx

; 301  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		lastSearchIndex=index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 303  : 		lastSearchKey=key;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax+16], dx

; 304  : 		lastSearchIndexValid=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 1

; 305  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveLastSearch@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IAEXABGI@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::SaveLastSearch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?RemoveAtIndex@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?RemoveAtIndex@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 333  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef _DEBUG
; 335  : 		assert( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN4@RemoveAtIn
	push	335					; 0000014fH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RemoveAtIn:

; 336  : #endif
; 337  : 
; 338  : 		if ( position < list_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@RemoveAtIn

; 339  : 		{
; 340  : 			// Compress the array
; 341  : 			/*
; 342  : 			for ( unsigned int counter = position; counter < list_size - 1 ; ++counter )
; 343  : 			listArray[ counter ] = listArray[ counter + 1 ];
; 344  : 			*/
; 345  : 			memmove(listArray+position, listArray+position+1, (list_size-1-position) * sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 6
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax+6]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 6
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 			Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Del
$LN2@RemoveAtIn:

; 348  : 		}
; 349  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z
_TEXT	SEGMENT
tv88 = -280						; size = 4
$T2 = -272						; size = 4
$T3 = -260						; size = 4
$T4 = -248						; size = 4
$T5 = -236						; size = 4
_new_array$6 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 6
?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 6
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@Insert
	push	OFFSET ??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR tv88[ebp], edx
	jmp	SHORT $LN7@Insert
$LN6@Insert:
	mov	DWORD PTR tv88[ebp], 0
$LN7@Insert:
	mov	eax, DWORD PTR tv88[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$6[ebp], ecx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 6
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$6[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$6[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, ecx
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _input$[ebp+4]
	mov	WORD PTR [eax+4], dx

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z
_TEXT	SEGMENT
tv94 = -280						; size = 4
$T2 = -272						; size = 4
$T3 = -260						; size = 4
$T4 = -248						; size = 4
$T5 = -236						; size = 4
_new_array$6 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 6
_position$ = 16						; size = 4
?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 6
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@Insert
	push	OFFSET ??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR tv94[ebp], edx
	jmp	SHORT $LN8@Insert
$LN7@Insert:
	mov	DWORD PTR tv94[ebp], 0
$LN8@Insert:
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$6[ebp], ecx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 6
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$6[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$6[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 6
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	imul	edx, DWORD PTR _position$[ebp], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx+6]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	imul	eax, DWORD PTR _position$[ebp], 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _input$[ebp]
	mov	DWORD PTR [edx], eax
	mov	cx, WORD PTR _input$[ebp+4]
	mov	WORD PTR [edx+4], cx

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::~List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::~List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Size@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIXZ PROC ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Size, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return orderedList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?RemoveAtIndex@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?RemoveAtIndex@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXI@Z PROC ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  : 		orderedList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::RemoveAtIndex

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXI@Z ENDP ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z PROC ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::operator[], COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		return orderedList[position];

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::operator[]

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ENDP ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEIABGABUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEIABGABUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z PROC ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	cx, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], cx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEIABGABUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z ENDP ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z PROC ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	?NodeComparisonFunc@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAHABGABUMapNode@12@@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z ENDP ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::~OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::~List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::~List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>
__ehhandler$??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::~OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>::List<DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Size@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEIXZ PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Size, COMDAT
; _this$ = ecx

; 295  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 296  : 		return mapNodeList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Size

; 297  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Clear@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Clear, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 0

; 278  : 		mapNodeList.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Clear

; 279  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?RemoveAtIndex@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?RemoveAtIndex@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXI@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::RemoveAtIndex, COMDAT
; _this$ = ecx

; 157  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 158  : 		mapNodeList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::RemoveAtIndex

; 159  : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 0

; 160  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXI@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 283  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 284  : 		return mapNodeList[position].mapNodeData;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::operator[]
	add	eax, 2

; 285  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Delete@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Delete@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Delete, COMDAT
; _this$ = ecx

; 253  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 254  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IBE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Delete

; 255  : 		{
; 256  : 			lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 0

; 257  : 			mapNodeList.RemoveAtIndex(lastSearchIndex);   

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::RemoveAtIndex

; 258  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@Delete
$LN3@Delete:

; 259  : 		}
; 260  : 
; 261  : 		bool objectExists;
; 262  : 		unsigned index;
; 263  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 264  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN2@Delete

; 265  : 		{
; 266  : 			lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 0

; 267  : 			mapNodeList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::RemoveAtIndex

; 268  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@Delete

; 269  : 		}
; 270  : 		else

	jmp	SHORT $LN4@Delete
$LN2@Delete:

; 271  : 			return false;

	xor	al, al
$LN4@Delete:

; 272  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Delete
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@Delete:
	DD	1
	DD	$LN7@Delete
$LN7@Delete:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Delete
$LN6@Delete:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Delete@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Has@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Has@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Has, COMDAT
; _this$ = ecx

; 239  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 240  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IBE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Has

; 241  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Has
$LN2@Has:

; 242  : 
; 243  : 		bool objectExists;
; 244  : 		unsigned index;
; 245  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 246  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN1@Has

; 247  : 			SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IAEXABGI@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::SaveLastSearch
$LN1@Has:

; 248  : 		return objectExists;

	mov	al, BYTE PTR _objectExists$[ebp]
$LN3@Has:

; 249  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Has
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@Has:
	DD	1
	DD	$LN6@Has
$LN6@Has:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Has
$LN5@Has:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Has@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Has
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Set@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXABGABQAUFileListReceiver@FileListTransfer@@@Z
_TEXT	SEGMENT
$T1 = -238						; size = 6
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Set@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXABGABQAUFileListReceiver@FileListTransfer@@@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Set, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		bool objectExists;
; 184  : 		unsigned index;
; 185  : 
; 186  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IBE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Set

; 187  : 		{
; 188  : 			mapNodeList[lastSearchIndex].mapNodeData=data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::operator[]
	mov	edx, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax+2], ecx

; 189  : 			return;

	jmp	SHORT $LN4@Set
$LN3@Set:

; 190  : 		}
; 191  : 		
; 192  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 193  : 
; 194  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN2@Set

; 195  : 		{
; 196  : 			SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IAEXABGI@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::SaveLastSearch

; 197  : 			mapNodeList[index].mapNodeData=data;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::operator[]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+2], edx

; 198  : 		}
; 199  : 		else

	jmp	SHORT $LN4@Set
$LN2@Set:

; 200  : 		{
; 201  : 			SaveLastSearch(key,mapNodeList.Insert(key,MapNode(key,data)));

	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	movzx	eax, WORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0MapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@GPAUFileListReceiver@FileListTransfer@@@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode::MapNode
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAEIABGABUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@2@@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::Insert
	push	eax
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IAEXABGI@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::SaveLastSearch
$LN4@Set:

; 202  : 		}
; 203  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Set
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Set:
	DD	1
	DD	$LN7@Set
$LN7@Set:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Set
$LN6@Set:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Set@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXABGABQAUFileListReceiver@FileListTransfer@@@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Get@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEAAPAUFileListReceiver@FileListTransfer@@ABG@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Get@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEAAPAUFileListReceiver@FileListTransfer@@ABG@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Get, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 130  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IBE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Get

; 131  : 			return mapNodeList[lastSearchIndex].mapNodeData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::operator[]
	add	eax, 2
	jmp	SHORT $LN2@Get
$LN1@Get:

; 132  : 
; 133  : 		bool objectExists;
; 134  : 		unsigned index;
; 135  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEIABGPA_N@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 136  : 		assert(objectExists);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Get
	push	136					; 00000088H
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@Get:

; 137  : 		SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@IAEXABGI@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::SaveLastSearch

; 138  : 		return mapNodeList[index].mapNodeData;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@1@I@Z ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::operator[]
	add	eax, 2
$LN2@Get:

; 139  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Get
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@Get:
	DD	1
	DD	$LN6@Get
$LN6@Get:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Get
$LN5@Get:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Get@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEAAPAUFileListReceiver@FileListTransfer@@ABG@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::~Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 105  : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Clear

; 106  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::~OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::~OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>
__ehhandler$??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::~Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$OrderedList@GUMapNode@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABGABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>::OrderedList<unsigned short,DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::MapNode,&DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc>

; 99   : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 0

; 100  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?NodeComparisonFunc@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAHABGABUMapNode@12@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?NodeComparisonFunc@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAHABGABUMapNode@12@@Z PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc, COMDAT

; 56   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 57   : #ifdef _MSC_VER
; 58   : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 59   : #endif
; 60   : 			return key_comparison_func(a, b.mapNodeKey);

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z ; DataStructures::defaultMapKeyComparison<unsigned short>
	add	esp, 8

; 61   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NodeComparisonFunc@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAHABGABUMapNode@12@@Z ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::NodeComparisonFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?IMPLEMENT_DEFAULT_COMPARISON@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAXXZ
_TEXT	SEGMENT
$T1 = -210						; size = 2
$T2 = -198						; size = 2
?IMPLEMENT_DEFAULT_COMPARISON@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAXXZ PROC ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::IMPLEMENT_DEFAULT_COMPARISON, COMDAT

; 44   : 		static void IMPLEMENT_DEFAULT_COMPARISON(void) {DataStructures::defaultMapKeyComparison<key_type>(key_type(),key_type());}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	xor	eax, eax
	mov	WORD PTR $T1[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR $T2[ebp], cx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z ; DataStructures::defaultMapKeyComparison<unsigned short>
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IMPLEMENT_DEFAULT_COMPARISON@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAXXZ ENDP ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::IMPLEMENT_DEFAULT_COMPARISON
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z PROC ; DataStructures::defaultMapKeyComparison<unsigned short>, COMDAT

; 35   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 36   : 		if (a<b) return -1; if (a==b) return 0; return 1;

	mov	eax, DWORD PTR _a$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _b$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jge	SHORT $LN2@defaultMap
	or	eax, -1
	jmp	SHORT $LN3@defaultMap
$LN2@defaultMap:
	mov	eax, DWORD PTR _a$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _b$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN1@defaultMap
	xor	eax, eax
	jmp	SHORT $LN3@defaultMap
$LN1@defaultMap:
	mov	eax, 1
$LN3@defaultMap:

; 37   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z ENDP ; DataStructures::defaultMapKeyComparison<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?Clear@FileListTransfer@@IAEXXZ
_TEXT	SEGMENT
tv90 = -256						; size = 4
$T1 = -248						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
?Clear@FileListTransfer@@IAEXXZ PROC			; FileListTransfer::Clear, COMDAT
; _this$ = ecx

; 365  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 366  : 	unsigned i;
; 367  : 	for (i=0; i < fileListReceivers.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Clear
$LN3@Clear:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Clear:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN2@Clear

; 368  : 	{
; 369  : 		if (fileListReceivers[i]->deleteDownloadHandler)

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, BYTE PTR [ecx+1565]
	test	edx, edx
	je	SHORT $LN1@Clear

; 370  : 			delete fileListReceivers[i]->downloadHandler;

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Clear:

; 371  : 		delete fileListReceivers[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN7@Clear
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GFileListReceiver@FileListTransfer@@QAEPAXI@Z
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN8@Clear
$LN7@Clear:
	mov	DWORD PTR tv90[ebp], 0
$LN8@Clear:

; 372  : 	}

	jmp	$LN3@Clear
$LN2@Clear:

; 373  : 	fileListReceivers.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Clear@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Clear

; 374  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@FileListTransfer@@IAEXXZ ENDP			; FileListTransfer::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z
_TEXT	SEGMENT
tv243 = -1304						; size = 4
$T2 = -1293						; size = 1
$T3 = -1281						; size = 1
$T4 = -1269						; size = 1
$T5 = -1260						; size = 4
$T6 = -1248						; size = 4
$T7 = -1233						; size = 1
$T8 = -1224						; size = 4
$T9 = -1212						; size = 4
$T10 = -1200						; size = 4
$T11 = -1188						; size = 4
$T12 = -1173						; size = 1
_fileListReceiver$ = -972				; size = 4
_partLength$ = -960					; size = 4
_partTotal$ = -948					; size = 4
_partCount$ = -936					; size = 4
_inBitStream$ = -924					; size = 273
_setID$ = -640						; size = 2
_len$ = -628						; size = 4
_bitLength$ = -616					; size = 4
_compressedLength$ = -604				; size = 4
_fileLength$ = -592					; size = 4
_fileIndex$ = -580					; size = 4
_context$ = -565					; size = 1
_fileName$ = -556					; size = 512
_decompressedFileData$ = -36				; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_packet$ = 8						; size = 4
_fullFile$ = 12						; size = 1
?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z PROC	; FileListTransfer::DecodeFile, COMDAT
; _this$ = ecx

; 226  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1292				; 0000050cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1304]
	mov	ecx, 323				; 00000143H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 	unsigned char *decompressedFileData;
; 228  : 	char fileName[512];
; 229  : 	unsigned char context;
; 230  : 	unsigned fileIndex, fileLength, compressedLength;
; 231  : 	unsigned bitLength;
; 232  : 	unsigned len;
; 233  : 	unsigned short setID;
; 234  : 	RakNet::BitStream inBitStream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 235  : 	inBitStream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 236  : 
; 237  : 	unsigned int partCount;
; 238  : 	unsigned int partTotal;
; 239  : 	unsigned int partLength;
; 240  : 	if (fullFile==false)

	movzx	eax, BYTE PTR _fullFile$[ebp]
	test	eax, eax
	jne	SHORT $LN13@DecodeFile

; 241  : 	{
; 242  : 		inBitStream.Read(partCount);

	lea	eax, DWORD PTR _partCount$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 243  : 		inBitStream.Read(partTotal);

	lea	eax, DWORD PTR _partTotal$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 244  : 		inBitStream.Read(partLength);

	lea	eax, DWORD PTR _partLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 245  : 		inBitStream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits
$LN13@DecodeFile:

; 246  : 	}
; 247  : 	inBitStream.Read(context);

	lea	eax, DWORD PTR _context$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 248  : 	inBitStream.Read(setID);

	lea	eax, DWORD PTR _setID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>

; 249  : 	FileListReceiver *fileListReceiver;
; 250  : 	if (fileListReceivers.Has(setID)==false)

	lea	eax, DWORD PTR _setID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Has@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Has
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN12@DecodeFile

; 251  : 	{
; 252  : #ifdef _DEBUG
; 253  : 		assert(0);

	xor	eax, eax
	jne	SHORT $LN16@DecodeFile
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z@4JA
	add	ecx, 27					; 0000001bH
	push	ecx
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN16@DecodeFile:

; 254  : #endif
; 255  : 		return false;

	mov	BYTE PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T2[ebp]
	jmp	$LN14@DecodeFile
$LN12@DecodeFile:

; 256  : 	}
; 257  : 	fileListReceiver=fileListReceivers.Get(setID);

	lea	eax, DWORD PTR _setID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Get@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEAAPAUFileListReceiver@FileListTransfer@@ABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Get
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fileListReceiver$[ebp], ecx

; 258  : 	if (fileListReceiver->allowedSender!=packet->playerId)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	add	ecx, 4
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@DecodeFile

; 259  : 	{
; 260  : #ifdef _DEBUG
; 261  : 		assert(0);

	xor	eax, eax
	jne	SHORT $LN17@DecodeFile
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z@4JA
	add	ecx, 35					; 00000023H
	push	ecx
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN17@DecodeFile:

; 262  : #endif
; 263  : 		return false;

	mov	BYTE PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T3[ebp]
	jmp	$LN14@DecodeFile
$LN11@DecodeFile:

; 264  : 	}
; 265  : 
; 266  : #ifdef _DEBUG
; 267  : 	assert(fileListReceiver->gotSetHeader==true);

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	movzx	ecx, BYTE PTR [eax+1564]
	cmp	ecx, 1
	je	SHORT $LN18@DecodeFile
	mov	edx, DWORD PTR ?__LINE__Var@?1??DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z@4JA
	add	edx, 41					; 00000029H
	push	edx
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_1EK@KEDOGKKC@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAr?$AA?9?$AA?$DO?$AAg?$AAo?$AAt?$AAS?$AAe?$AAt?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?$DN?$AA?$DN@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN18@DecodeFile:

; 268  : #endif
; 269  : 	
; 270  : 	inBitStream.ReadCompressed(fileIndex);

	lea	eax, DWORD PTR _fileIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>

; 271  : 	inBitStream.ReadCompressed(fileLength);

	lea	eax, DWORD PTR _fileLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>

; 272  : 	if (fileListReceiver->isCompressed)

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	movzx	ecx, BYTE PTR [eax+1566]
	test	ecx, ecx
	je	SHORT $LN10@DecodeFile

; 273  : 	{
; 274  : 		inBitStream.ReadCompressed(bitLength);

	lea	eax, DWORD PTR _bitLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>

; 275  : 		compressedLength=BITS_TO_BYTES(bitLength);

	mov	eax, DWORD PTR _bitLength$[ebp]
	add	eax, 7
	shr	eax, 3
	mov	DWORD PTR _compressedLength$[ebp], eax
$LN10@DecodeFile:

; 276  : 	}
; 277  : 
; 278  : 	if (stringCompressor->DecodeString(fileName, 512, &inBitStream)==false)

	push	0
	lea	eax, DWORD PTR _inBitStream$[ebp]
	push	eax
	push	512					; 00000200H
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z ; StringCompressor::DecodeString
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN9@DecodeFile

; 279  : 	{
; 280  : #ifdef _DEBUG
; 281  : 		assert(0);

	xor	eax, eax
	jne	SHORT $LN19@DecodeFile
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z@4JA
	add	ecx, 55					; 00000037H
	push	ecx
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN19@DecodeFile:

; 282  : #endif
; 283  : 		return false;

	mov	BYTE PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN14@DecodeFile
$LN9@DecodeFile:

; 284  : 	}
; 285  : 
; 286  : 	if (fullFile)

	movzx	eax, BYTE PTR _fullFile$[ebp]
	test	eax, eax
	je	$LN8@DecodeFile

; 287  : 	{
; 288  : 	decompressedFileData = new unsigned char [fileLength];

	mov	eax, DWORD PTR _fileLength$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _decompressedFileData$[ebp], ecx

; 289  : 
; 290  : 	if (fileListReceiver->isCompressed)

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	movzx	ecx, BYTE PTR [eax+1566]
	test	ecx, ecx
	je	$LN7@DecodeFile

; 291  : 	{
; 292  : 		len=fileListReceiver->tree.DecodeArray(&inBitStream, bitLength, fileLength, decompressedFileData);

	mov	eax, DWORD PTR _decompressedFileData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bitLength$[ebp]
	push	edx
	lea	eax, DWORD PTR _inBitStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	add	ecx, 10					; 0000000aH
	call	?DecodeArray@HuffmanEncodingTree@@QAEIPAVBitStream@RakNet@@IIPAE@Z ; HuffmanEncodingTree::DecodeArray
	mov	DWORD PTR _len$[ebp], eax

; 293  : 		if (len!=fileLength)

	mov	eax, DWORD PTR _len$[ebp]
	cmp	eax, DWORD PTR _fileLength$[ebp]
	je	SHORT $LN6@DecodeFile

; 294  : 		{
; 295  : #ifdef _DEBUG
; 296  : 			assert(0);

	xor	eax, eax
	jne	SHORT $LN20@DecodeFile
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z@4JA
	add	ecx, 70					; 00000046H
	push	ecx
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN20@DecodeFile:

; 297  : #endif
; 298  : 			delete [] decompressedFileData;

	mov	eax, DWORD PTR _decompressedFileData$[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 299  : 			return false;

	mov	BYTE PTR $T7[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T7[ebp]
	jmp	$LN14@DecodeFile
$LN6@DecodeFile:

; 300  : 		}
; 301  : 	}
; 302  : 	else

	jmp	SHORT $LN8@DecodeFile
$LN7@DecodeFile:

; 303  : 		inBitStream.Read((char*)decompressedFileData, fileLength);

	mov	eax, DWORD PTR _fileLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _decompressedFileData$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADH@Z	; RakNet::BitStream::Read
$LN8@DecodeFile:

; 304  : 	}
; 305  : 	
; 306  : 
; 307  : 	// User callback for this file.
; 308  : 	if (fullFile)

	movzx	eax, BYTE PTR _fullFile$[ebp]
	test	eax, eax
	je	$LN4@DecodeFile

; 309  : 	{
; 310  : 	fileListReceiver->downloadHandler->OnFile(fileIndex, fileName, (char*)decompressedFileData, compressedLength, fileLength, setID, fileListReceiver->setCount, fileListReceiver->setTotalCompressedTransmissionLength, fileListReceiver->setTotalFinalLength, context);

	mov	esi, esp
	movzx	eax, BYTE PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	mov	edx, DWORD PTR [ecx+1560]
	push	edx
	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	ecx, DWORD PTR [eax+1556]
	push	ecx
	mov	edx, DWORD PTR _fileListReceiver$[ebp]
	mov	eax, DWORD PTR [edx+1552]
	push	eax
	movzx	ecx, WORD PTR _setID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _compressedLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _decompressedFileData$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _fileIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 311  : 	delete [] decompressedFileData;

	mov	eax, DWORD PTR _decompressedFileData$[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	ecx, DWORD PTR $T8[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 312  : 
; 313  : 	// If this set is done, free the memory for it.
; 314  : 	if (fileListReceiver->setCount==fileIndex+1)

	mov	eax, DWORD PTR _fileIndex$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	cmp	DWORD PTR [ecx+1552], eax
	jne	$LN3@DecodeFile

; 315  : 	{
; 316  : 		if (fileListReceiver->deleteDownloadHandler)

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	movzx	ecx, BYTE PTR [eax+1565]
	test	ecx, ecx
	je	SHORT $LN2@DecodeFile

; 317  : 			delete fileListReceiver->downloadHandler;

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T9[ebp], ecx
	mov	edx, DWORD PTR $T9[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@DecodeFile:

; 318  : 		delete fileListReceiver;

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	DWORD PTR $T11[ebp], eax
	mov	ecx, DWORD PTR $T11[ebp]
	mov	DWORD PTR $T10[ebp], ecx
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN21@DecodeFile
	push	1
	mov	ecx, DWORD PTR $T10[ebp]
	call	??_GFileListReceiver@FileListTransfer@@QAEPAXI@Z
	mov	DWORD PTR tv243[ebp], eax
	jmp	SHORT $LN22@DecodeFile
$LN21@DecodeFile:
	mov	DWORD PTR tv243[ebp], 0
$LN22@DecodeFile:

; 319  : 		fileListReceivers.Delete(setID);

	lea	eax, DWORD PTR _setID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Delete@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Delete
$LN3@DecodeFile:

; 320  : 	}
; 321  : 
; 322  : 	}
; 323  : 	else

	jmp	$LN1@DecodeFile
$LN4@DecodeFile:

; 324  : 		fileListReceiver->downloadHandler->OnFileProgress(fileIndex, fileName, compressedLength, fileLength, setID, fileListReceiver->setCount, fileListReceiver->setTotalCompressedTransmissionLength, fileListReceiver->setTotalFinalLength, context, partCount, partTotal, partLength);

	mov	esi, esp
	mov	eax, DWORD PTR _partLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _partTotal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _partCount$[ebp]
	push	edx
	movzx	eax, BYTE PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	mov	edx, DWORD PTR [ecx+1560]
	push	edx
	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	ecx, DWORD PTR [eax+1556]
	push	ecx
	mov	edx, DWORD PTR _fileListReceiver$[ebp]
	mov	eax, DWORD PTR [edx+1552]
	push	eax
	movzx	ecx, WORD PTR _setID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _compressedLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _fileListReceiver$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@DecodeFile:

; 325  : 
; 326  : 	return true;

	mov	BYTE PTR $T12[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T12[ebp]
$LN14@DecodeFile:

; 327  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN36@DecodeFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1304				; 00000518H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN36@DecodeFile:
	DD	10					; 0000000aH
	DD	$LN35@DecodeFile
$LN35@DecodeFile:
	DD	-556					; fffffdd4H
	DD	512					; 00000200H
	DD	$LN24@DecodeFile
	DD	-565					; fffffdcbH
	DD	1
	DD	$LN25@DecodeFile
	DD	-580					; fffffdbcH
	DD	4
	DD	$LN26@DecodeFile
	DD	-592					; fffffdb0H
	DD	4
	DD	$LN27@DecodeFile
	DD	-616					; fffffd98H
	DD	4
	DD	$LN28@DecodeFile
	DD	-640					; fffffd80H
	DD	2
	DD	$LN29@DecodeFile
	DD	-924					; fffffc64H
	DD	273					; 00000111H
	DD	$LN30@DecodeFile
	DD	-936					; fffffc58H
	DD	4
	DD	$LN31@DecodeFile
	DD	-948					; fffffc4cH
	DD	4
	DD	$LN32@DecodeFile
	DD	-960					; fffffc40H
	DD	4
	DD	$LN33@DecodeFile
$LN33@DecodeFile:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN32@DecodeFile:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN31@DecodeFile:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN30@DecodeFile:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN29@DecodeFile:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN28@DecodeFile:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN27@DecodeFile:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN26@DecodeFile:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN25@DecodeFile:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN24@DecodeFile:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z$0:
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z ENDP	; FileListTransfer::DecodeFile
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z
_TEXT	SEGMENT
$T2 = -1637						; size = 1
$T3 = -1625						; size = 1
$T4 = -1613						; size = 1
$T5 = -1601						; size = 1
$T6 = -1589						; size = 1
_fileListReceiver$ = -1388				; size = 4
_inBitStream$ = -1376					; size = 273
_setID$ = -1092						; size = 2
_anythingToWrite$ = -1077				; size = 1
_frequencyTable$ = -1068				; size = 1024
_i$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_packet$ = 8						; size = 4
?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z PROC ; FileListTransfer::DecodeSetHeader, COMDAT
; _this$ = ecx

; 163  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1632				; 00000660H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1644]
	mov	ecx, 408				; 00000198H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 164  : 	unsigned i;
; 165  : 	unsigned int frequencyTable[ 256 ];
; 166  : 	bool anythingToWrite;
; 167  : 	unsigned short setID;
; 168  : 	RakNet::BitStream inBitStream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 169  : 	inBitStream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 170  : 	inBitStream.Read(setID);

	lea	eax, DWORD PTR _setID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>

; 171  : 	FileListReceiver *fileListReceiver;
; 172  : 	if (fileListReceivers.Has(setID)==false)

	lea	eax, DWORD PTR _setID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Has@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Has
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@DecodeSetH

; 173  : 	{
; 174  : #ifdef _DEBUG
; 175  : 		assert(0);

	xor	eax, eax
	jne	SHORT $LN13@DecodeSetH
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z@4JA
	add	ecx, 12					; 0000000cH
	push	ecx
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN13@DecodeSetH:

; 176  : #endif
; 177  : 		return false;

	mov	BYTE PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T2[ebp]
	jmp	$LN11@DecodeSetH
$LN10@DecodeSetH:

; 178  : 	}
; 179  : 	fileListReceiver=fileListReceivers.Get(setID);

	lea	eax, DWORD PTR _setID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Get@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEAAPAUFileListReceiver@FileListTransfer@@ABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Get
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fileListReceiver$[ebp], ecx

; 180  : 	if (fileListReceiver->allowedSender!=packet->playerId)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	add	ecx, 4
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@DecodeSetH

; 181  : 	{
; 182  : #ifdef _DEBUG
; 183  : 		assert(0);

	xor	eax, eax
	jne	SHORT $LN14@DecodeSetH
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z@4JA
	add	ecx, 20					; 00000014H
	push	ecx
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN14@DecodeSetH:

; 184  : #endif
; 185  : 		return false;

	mov	BYTE PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T3[ebp]
	jmp	$LN11@DecodeSetH
$LN9@DecodeSetH:

; 186  : 	}
; 187  : 
; 188  : #ifdef _DEBUG
; 189  : 	assert(fileListReceiver->gotSetHeader==false);

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	movzx	ecx, BYTE PTR [eax+1564]
	test	ecx, ecx
	je	SHORT $LN15@DecodeSetH
	mov	edx, DWORD PTR ?__LINE__Var@?1??DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z@4JA
	add	edx, 26					; 0000001aH
	push	edx
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_1EM@KHGPHHCM@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAr?$AA?9?$AA?$DO?$AAg?$AAo?$AAt?$AAS?$AAe?$AAt?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?$DN?$AA?$DN@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN15@DecodeSetH:

; 190  : #endif
; 191  : 
; 192  : 	inBitStream.Read(anythingToWrite);

	lea	eax, DWORD PTR _anythingToWrite$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ; RakNet::BitStream::Read<bool>

; 193  : 	if (anythingToWrite)

	movzx	eax, BYTE PTR _anythingToWrite$[ebp]
	test	eax, eax
	je	$LN8@DecodeSetH

; 194  : 	{
; 195  : 		inBitStream.Read(fileListReceiver->isCompressed);

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	add	eax, 1566				; 0000061eH
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ; RakNet::BitStream::Read<bool>

; 196  : 		if (fileListReceiver->isCompressed)

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	movzx	ecx, BYTE PTR [eax+1566]
	test	ecx, ecx
	je	$LN7@DecodeSetH

; 197  : 		{
; 198  : 			for (i=0; i < 256; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@DecodeSetH
$LN5@DecodeSetH:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@DecodeSetH:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jae	SHORT $LN4@DecodeSetH

; 199  : 				inBitStream.ReadCompressed(frequencyTable[i]);

	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR _frequencyTable$[ebp+eax*4]
	push	ecx
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>
	jmp	SHORT $LN5@DecodeSetH
$LN4@DecodeSetH:

; 200  : 			fileListReceiver->tree.GenerateFromFrequencyTable(frequencyTable);

	lea	eax, DWORD PTR _frequencyTable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	add	ecx, 10					; 0000000aH
	call	?GenerateFromFrequencyTable@HuffmanEncodingTree@@QAEXQAI@Z ; HuffmanEncodingTree::GenerateFromFrequencyTable

; 201  : 			inBitStream.ReadCompressed(fileListReceiver->setCount);

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	add	eax, 1552				; 00000610H
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>

; 202  : 			inBitStream.ReadCompressed(fileListReceiver->setTotalFinalLength);

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	add	eax, 1560				; 00000618H
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>

; 203  : 			if (inBitStream.ReadCompressed(fileListReceiver->setTotalCompressedTransmissionLength))

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	add	eax, 1556				; 00000614H
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@DecodeSetH

; 204  : 			{
; 205  : 				fileListReceiver->gotSetHeader=true;

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	BYTE PTR [eax+1564], 1

; 206  : 				return true;

	mov	BYTE PTR $T4[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN11@DecodeSetH
$LN3@DecodeSetH:

; 207  : 			}
; 208  : 		}
; 209  : 		else

	jmp	SHORT $LN2@DecodeSetH
$LN7@DecodeSetH:

; 210  : 		{
; 211  : 			inBitStream.ReadCompressed(fileListReceiver->setCount);

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	add	eax, 1552				; 00000610H
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>

; 212  : 			inBitStream.ReadCompressed(fileListReceiver->setTotalFinalLength);

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	add	eax, 1560				; 00000618H
	push	eax
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>

; 213  : 			fileListReceiver->setTotalCompressedTransmissionLength=fileListReceiver->setTotalFinalLength;

	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	mov	edx, DWORD PTR [ecx+1560]
	mov	DWORD PTR [eax+1556], edx
$LN2@DecodeSetH:

; 214  : 		}
; 215  : 	}
; 216  : 	else

	jmp	SHORT $LN1@DecodeSetH
$LN8@DecodeSetH:

; 217  : 	{
; 218  : 		fileListReceiver->downloadHandler->OnFile(0, 0, 0, 0, 0, setID, 0, 0, 0, 0);

	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	movzx	eax, WORD PTR _setID$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _fileListReceiver$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _fileListReceiver$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 219  : 		return true;

	mov	BYTE PTR $T5[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T5[ebp]
	jmp	SHORT $LN11@DecodeSetH
$LN1@DecodeSetH:

; 220  : 	}
; 221  : 
; 222  : 	return false;

	mov	BYTE PTR $T6[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T6[ebp]
$LN11@DecodeSetH:

; 223  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@DecodeSetH
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1644				; 0000066cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN23@DecodeSetH:
	DD	4
	DD	$LN22@DecodeSetH
$LN22@DecodeSetH:
	DD	-1068					; fffffbd4H
	DD	1024					; 00000400H
	DD	$LN17@DecodeSetH
	DD	-1077					; fffffbcbH
	DD	1
	DD	$LN18@DecodeSetH
	DD	-1092					; fffffbbcH
	DD	2
	DD	$LN19@DecodeSetH
	DD	-1376					; fffffaa0H
	DD	273					; 00000111H
	DD	$LN20@DecodeSetH
$LN20@DecodeSetH:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN19@DecodeSetH:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN18@DecodeSetH:
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	87					; 00000057H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN17@DecodeSetH:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _inBitStream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1648]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z ENDP ; FileListTransfer::DecodeSetHeader
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?OnAttach@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnAttach@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z PROC ; FileListTransfer::OnAttach, COMDAT
; _this$ = ecx

; 401  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	rakPeer=peer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	DWORD PTR [eax+25], ecx

; 403  : 
; 404  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?OnAttach@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z ENDP ; FileListTransfer::OnAttach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?OnCloseConnection@FileListTransfer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_playerId$ = 12						; size = 6
?OnCloseConnection@FileListTransfer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z PROC ; FileListTransfer::OnCloseConnection, COMDAT
; _this$ = ecx

; 379  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 	RemoveReceiver(playerId);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveReceiver@FileListTransfer@@QAEXUPlayerID@@@Z ; FileListTransfer::RemoveReceiver

; 381  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnCloseConnection@FileListTransfer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z ENDP ; FileListTransfer::OnCloseConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?OnDisconnect@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnDisconnect@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z PROC ; FileListTransfer::OnDisconnect, COMDAT
; _this$ = ecx

; 361  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 362  : 	Clear();	

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@FileListTransfer@@IAEXXZ		; FileListTransfer::Clear

; 363  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnDisconnect@FileListTransfer@@UAEXPAVRakPeerInterface@@@Z ENDP ; FileListTransfer::OnDisconnect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?OnReceive@FileListTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnReceive@FileListTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z PROC ; FileListTransfer::OnReceive, COMDAT
; _this$ = ecx

; 332  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 333  : 	switch (packet->data[0]) 

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	sub	edx, 28					; 0000001cH
	mov	DWORD PTR tv68[ebp], edx
	cmp	DWORD PTR tv68[ebp], 63			; 0000003fH
	ja	$LN6@OnReceive
	mov	eax, DWORD PTR tv68[ebp]
	movzx	ecx, BYTE PTR $LN10@OnReceive[eax]
	jmp	DWORD PTR $LN11@OnReceive[ecx*4]
$LN5@OnReceive:

; 334  : 	{
; 335  : 	case ID_CONNECTION_LOST:
; 336  : 	case ID_DISCONNECTION_NOTIFICATION:
; 337  : 		RemoveReceiver(packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveReceiver@FileListTransfer@@QAEXUPlayerID@@@Z ; FileListTransfer::RemoveReceiver

; 338  : 	break;

	jmp	SHORT $LN6@OnReceive
$LN4@OnReceive:

; 339  : 	case ID_FILE_LIST_TRANSFER_HEADER:
; 340  : 		DecodeSetHeader(packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecodeSetHeader@FileListTransfer@@IAE_NPAUPacket@@@Z ; FileListTransfer::DecodeSetHeader

; 341  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	SHORT $LN8@OnReceive
$LN3@OnReceive:

; 342  : 	case ID_FILE_LIST_TRANSFER_FILE:
; 343  : 		DecodeFile(packet, true);

	push	1
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z ; FileListTransfer::DecodeFile

; 344  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	SHORT $LN8@OnReceive
$LN2@OnReceive:

; 345  : 	case ID_DOWNLOAD_PROGRESS:
; 346  : 		if (packet->length>sizeof(MessageID)+sizeof(unsigned int)*3 &&
; 347  : 			packet->data[sizeof(MessageID)+sizeof(unsigned int)*3]==ID_FILE_LIST_TRANSFER_FILE)

	mov	eax, DWORD PTR _packet$[ebp]
	cmp	DWORD PTR [eax+8], 13			; 0000000dH
	jbe	SHORT $LN6@OnReceive
	mov	eax, 1
	imul	ecx, eax, 13
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN6@OnReceive

; 348  : 		{
; 349  : 			DecodeFile(packet, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecodeFile@FileListTransfer@@IAE_NPAUPacket@@_N@Z ; FileListTransfer::DecodeFile

; 350  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	SHORT $LN8@OnReceive
$LN6@OnReceive:

; 351  : 	}
; 352  : 		break;
; 353  : 	}
; 354  : 
; 355  : 	return RR_CONTINUE_PROCESSING;

	mov	eax, 1
$LN8@OnReceive:

; 356  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN11@OnReceive:
	DD	$LN5@OnReceive
	DD	$LN4@OnReceive
	DD	$LN3@OnReceive
	DD	$LN2@OnReceive
	DD	$LN6@OnReceive
$LN10@OnReceive:
	DB	0
	DB	4
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
?OnReceive@FileListTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ENDP ; FileListTransfer::OnReceive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?RemoveReceiver@FileListTransfer@@QAEXUPlayerID@@@Z
_TEXT	SEGMENT
tv131 = -256						; size = 4
$T1 = -248						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_playerId$ = 8						; size = 6
?RemoveReceiver@FileListTransfer@@QAEXUPlayerID@@@Z PROC ; FileListTransfer::RemoveReceiver, COMDAT
; _this$ = ecx

; 384  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 385  : 	unsigned i;
; 386  : 	i=0;

	mov	DWORD PTR _i$[ebp], 0
$LN5@RemoveRece:

; 387  : 	while (i < fileListReceivers.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN6@RemoveRece

; 388  : 	{
; 389  : 		if (fileListReceivers[i]->allowedSender==playerId)

	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	call	??8PlayerID@@QBE_NABU0@@Z		; PlayerID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN3@RemoveRece

; 390  : 		{
; 391  : 			if (fileListReceivers[i]->deleteDownloadHandler)

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, BYTE PTR [ecx+1565]
	test	edx, edx
	je	SHORT $LN2@RemoveRece

; 392  : 				delete fileListReceivers[i]->downloadHandler;

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@RemoveRece:

; 393  : 			delete fileListReceivers[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QBEAAPAUFileListReceiver@FileListTransfer@@I@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN8@RemoveRece
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GFileListReceiver@FileListTransfer@@QAEPAXI@Z
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN9@RemoveRece
$LN8@RemoveRece:
	mov	DWORD PTR tv131[ebp], 0
$LN9@RemoveRece:

; 394  : 			fileListReceivers.RemoveAtIndex(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?RemoveAtIndex@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXI@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::RemoveAtIndex

; 395  : 		}
; 396  : 		else

	jmp	SHORT $LN1@RemoveRece
$LN3@RemoveRece:

; 397  : 			i++;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN1@RemoveRece:

; 398  : 	}

	jmp	$LN5@RemoveRece
$LN6@RemoveRece:

; 399  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveReceiver@FileListTransfer@@QAEXUPlayerID@@@Z ENDP ; FileListTransfer::RemoveReceiver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z
_TEXT	SEGMENT
tv207 = -3508						; size = 4
tv135 = -3508						; size = 4
$T2 = -3500						; size = 4
$T3 = -3488						; size = 4
_anythingToWrite$ = -3281				; size = 1
_n$ = -3272						; size = 17
_compressedFiles$ = -3244				; size = 16
_totalLength$ = -3220					; size = 4
_totalCompressedLength$ = -3208				; size = 4
_j$ = -3196						; size = 4
_i$ = -3184						; size = 4
_frequencyTable$ = -3172				; size = 1024
_tree$ = -2140						; size = 1540
_encodedData$ = -592					; size = 273
_outBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fileList$ = 8						; size = 4
_rakPeer$ = 12						; size = 4
_recipient$ = 16					; size = 6
_setID$ = 24						; size = 2
_priority$ = 28						; size = 4
_orderingChannel$ = 32					; size = 1
_compressData$ = 36					; size = 1
?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z PROC ; FileListTransfer::Send, COMDAT
; _this$ = ecx

; 69   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 3496				; 00000da8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-3508]
	mov	ecx, 874				; 0000036aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 70   : 	RakNet::BitStream outBitstream, encodedData;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _encodedData$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 71   : 	HuffmanEncodingTree tree;

	lea	ecx, DWORD PTR _tree$[ebp]
	call	??0HuffmanEncodingTree@@QAE@XZ		; HuffmanEncodingTree::HuffmanEncodingTree
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 72   : 	unsigned int frequencyTable[ 256 ];
; 73   : 	unsigned int i,j;
; 74   : 	unsigned totalCompressedLength, totalLength;
; 75   : 	DataStructures::Queue<FileListNode> compressedFiles;

	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	call	??0?$Queue@UFileListNode@@@DataStructures@@QAE@XZ ; DataStructures::Queue<FileListNode>::Queue<FileListNode>
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 76   : 	FileListNode n;
; 77   : 
; 78   : 	if (compressData)

	movzx	eax, BYTE PTR _compressData$[ebp]
	test	eax, eax
	je	$LN23@Send

; 79   : 	{
; 80   : 		memset(frequencyTable,0,256*sizeof(unsigned int));

	push	1024					; 00000400H
	push	0
	lea	eax, DWORD PTR _frequencyTable$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 81   : 
; 82   : 		for (i=0; i < fileList->fileList.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN22@Send
$LN21@Send:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN22@Send:
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::List<FileListNode>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN20@Send

; 83   : 		{
; 84   : 			for (j=0; j < fileList->fileList[i].dataLength; j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN19@Send
$LN18@Send:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN19@Send:
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN17@Send

; 85   : 			{
; 86   : 				++frequencyTable[(unsigned char)(fileList->fileList[i].data[j])];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _j$[ebp]
	movzx	eax, BYTE PTR [ecx+edx]
	lea	ecx, DWORD PTR _frequencyTable$[ebp+eax*4]
	mov	DWORD PTR tv135[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR [ecx], eax

; 87   : 			}

	jmp	SHORT $LN18@Send
$LN17@Send:

; 88   : 		}

	jmp	$LN21@Send
$LN20@Send:

; 89   : 
; 90   : 		tree.GenerateFromFrequencyTable(frequencyTable);

	lea	eax, DWORD PTR _frequencyTable$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tree$[ebp]
	call	?GenerateFromFrequencyTable@HuffmanEncodingTree@@QAEXQAI@Z ; HuffmanEncodingTree::GenerateFromFrequencyTable

; 91   : 
; 92   : 		// Compress all the files, so we know the total compressed size to be sent
; 93   : 		totalCompressedLength=totalLength=0;

	mov	DWORD PTR _totalLength$[ebp], 0
	mov	eax, DWORD PTR _totalLength$[ebp]
	mov	DWORD PTR _totalCompressedLength$[ebp], eax

; 94   : 		for (i=0; i < fileList->fileList.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN16@Send
$LN15@Send:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN16@Send:
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::List<FileListNode>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN23@Send

; 95   : 		{
; 96   : 			encodedData.Reset();

	lea	ecx, DWORD PTR _encodedData$[ebp]
	call	?Reset@BitStream@RakNet@@QAEXXZ		; RakNet::BitStream::Reset

; 97   : 			// Why send compressed chunks if we are not sending the whole file?
; 98   : 			assert(fileList->fileList[i].fileLength==fileList->fileList[i].fileLength);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	esi, eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	edx, DWORD PTR [esi+12]
	cmp	edx, DWORD PTR [eax+12]
	je	SHORT $LN26@Send
	mov	eax, DWORD PTR ?__LINE__Var@?1??Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z@4JA
	add	eax, 29					; 0000001dH
	push	eax
	push	OFFSET ??_C@_1FK@BMLBCKLC@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAi?$AAl?$AAe?$AAl?$AAi?$AAs?$AAt@
	push	OFFSET ??_C@_1IG@OBJNAPDB@?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAf?$AAi?$AAl?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAf?$AAi?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN26@Send:

; 99   : 			tree.EncodeArray((unsigned char*)fileList->fileList[i].data, fileList->fileList[i].dataLength, &encodedData);

	lea	eax, DWORD PTR _encodedData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	edx, DWORD PTR [eax+8]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR _tree$[ebp]
	call	?EncodeArray@HuffmanEncodingTree@@QAEXPAEIPAVBitStream@RakNet@@@Z ; HuffmanEncodingTree::EncodeArray

; 100  : 			n.dataLength=encodedData.GetNumberOfBitsUsed();

	lea	ecx, DWORD PTR _encodedData$[ebp]
	call	?GetNumberOfBitsUsed@BitStream@RakNet@@QBEHXZ ; RakNet::BitStream::GetNumberOfBitsUsed
	mov	DWORD PTR _n$[ebp+8], eax

; 101  : 			totalCompressedLength+=BITS_TO_BYTES(n.dataLength);

	mov	eax, DWORD PTR _n$[ebp+8]
	add	eax, 7
	shr	eax, 3
	add	eax, DWORD PTR _totalCompressedLength$[ebp]
	mov	DWORD PTR _totalCompressedLength$[ebp], eax

; 102  : 			totalLength+=fileList->fileList[i].fileLength;

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	ecx, DWORD PTR _totalLength$[ebp]
	add	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _totalLength$[ebp], ecx

; 103  : 			n.data = new char[BITS_TO_BYTES(n.dataLength)];

	mov	eax, DWORD PTR _n$[ebp+8]
	add	eax, 7
	shr	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _n$[ebp+4], ecx

; 104  : 			memcpy(n.data, encodedData.GetData(), BITS_TO_BYTES(n.dataLength));

	mov	eax, DWORD PTR _n$[ebp+8]
	add	eax, 7
	shr	eax, 3
	push	eax
	lea	ecx, DWORD PTR _encodedData$[ebp]
	call	?GetData@BitStream@RakNet@@QBEPAEXZ	; RakNet::BitStream::GetData
	push	eax
	mov	ecx, DWORD PTR _n$[ebp+4]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 105  : 			compressedFiles.Push(n);

	lea	eax, DWORD PTR _n$[ebp]
	push	eax
	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	call	?Push@?$Queue@UFileListNode@@@DataStructures@@QAEXABUFileListNode@@@Z ; DataStructures::Queue<FileListNode>::Push

; 106  : 		}

	jmp	$LN15@Send
$LN23@Send:

; 107  : 	}
; 108  : 
; 109  : 	// Write the chunk header, which contains the frequency table, the total number of files, and the total number of bytes
; 110  : 	bool anythingToWrite;
; 111  : 	outBitstream.Write((unsigned char)ID_FILE_LIST_TRANSFER_HEADER);

	push	46					; 0000002eH
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 112  : 	outBitstream.Write(setID);

	movzx	eax, WORD PTR _setID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 113  : 	anythingToWrite=fileList->fileList.Size()>0;

	mov	ecx, DWORD PTR _fileList$[ebp]
	call	?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::List<FileListNode>::Size
	test	eax, eax
	jbe	SHORT $LN27@Send
	mov	DWORD PTR tv207[ebp], 1
	jmp	SHORT $LN28@Send
$LN27@Send:
	mov	DWORD PTR tv207[ebp], 0
$LN28@Send:
	mov	al, BYTE PTR tv207[ebp]
	mov	BYTE PTR _anythingToWrite$[ebp], al

; 114  : 	outBitstream.Write(anythingToWrite);

	movzx	eax, BYTE PTR _anythingToWrite$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@_N@BitStream@RakNet@@QAEX_N@Z	; RakNet::BitStream::Write<bool>

; 115  : 	if (anythingToWrite)

	movzx	eax, BYTE PTR _anythingToWrite$[ebp]
	test	eax, eax
	je	$LN13@Send

; 116  : 	{
; 117  : 		if (compressData)

	movzx	eax, BYTE PTR _compressData$[ebp]
	test	eax, eax
	je	$LN12@Send

; 118  : 		{
; 119  : 			outBitstream.Write(true);

	push	1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@_N@BitStream@RakNet@@QAEX_N@Z	; RakNet::BitStream::Write<bool>

; 120  : 			for (i=0; i < 256; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@Send
$LN10@Send:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@Send:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jae	SHORT $LN9@Send

; 121  : 				outBitstream.WriteCompressed(frequencyTable[i]);

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _frequencyTable$[ebp+eax*4]
	push	ecx
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>
	jmp	SHORT $LN10@Send
$LN9@Send:

; 122  : 			outBitstream.WriteCompressed(fileList->fileList.Size());

	mov	ecx, DWORD PTR _fileList$[ebp]
	call	?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::List<FileListNode>::Size
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>

; 123  : 			outBitstream.WriteCompressed(totalLength);

	mov	eax, DWORD PTR _totalLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>

; 124  : 			outBitstream.WriteCompressed(totalCompressedLength);

	mov	eax, DWORD PTR _totalCompressedLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>

; 125  : 		}
; 126  : 		else

	jmp	SHORT $LN8@Send
$LN12@Send:

; 127  : 		{
; 128  : 			outBitstream.Write(false);

	push	0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@_N@BitStream@RakNet@@QAEX_N@Z	; RakNet::BitStream::Write<bool>

; 129  : 			outBitstream.WriteCompressed(fileList->fileList.Size());

	mov	ecx, DWORD PTR _fileList$[ebp]
	call	?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::List<FileListNode>::Size
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>

; 130  : 			outBitstream.WriteCompressed(totalLength);

	mov	eax, DWORD PTR _totalLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>
$LN8@Send:

; 131  : 		}
; 132  : 		
; 133  : 		rakPeer->Send(&outBitstream, priority, RELIABLE_ORDERED, orderingChannel, recipient, false);

	mov	esi, esp
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _recipient$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _recipient$[ebp+4]
	mov	WORD PTR [eax+4], dx
	movzx	eax, BYTE PTR _orderingChannel$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _priority$[ebp]
	push	ecx
	lea	edx, DWORD PTR _outBitstream$[ebp]
	push	edx
	mov	eax, DWORD PTR _rakPeer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _rakPeer$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 134  : 
; 135  : 		// Send each possibly compressed file
; 136  : 		for (i=0; i < compressedFiles.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@Send
$LN6@Send:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@Send:
	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	call	?Size@?$Queue@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::Queue<FileListNode>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN5@Send

; 137  : 		{
; 138  : 			outBitstream.Reset();

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	?Reset@BitStream@RakNet@@QAEXXZ		; RakNet::BitStream::Reset

; 139  : 			outBitstream.Write((unsigned char)ID_FILE_LIST_TRANSFER_FILE);

	push	47					; 0000002fH
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 140  : 			outBitstream.Write(fileList->fileList[i].context);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	cl, BYTE PTR [eax+16]
	movzx	edx, cl
	push	edx
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 141  : 			outBitstream.Write(setID);

	movzx	eax, WORD PTR _setID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 142  : 			outBitstream.WriteCompressed(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>

; 143  : 			outBitstream.WriteCompressed(fileList->fileList[i].dataLength); // Original length

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>

; 144  : 			if (compressData)

	movzx	eax, BYTE PTR _compressData$[ebp]
	test	eax, eax
	je	SHORT $LN4@Send

; 145  : 				outBitstream.WriteCompressed(compressedFiles[i].dataLength); // Compressed bitlength			}

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	call	??A?$Queue@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::Queue<FileListNode>::operator[]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>
$LN4@Send:

; 146  : 			stringCompressor->EncodeString(fileList->fileList[i].filename, 512, &outBitstream);

	push	0
	lea	eax, DWORD PTR _outBitstream$[ebp]
	push	eax
	push	512					; 00000200H
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?EncodeString@StringCompressor@@QAEXPBDHPAVBitStream@RakNet@@H@Z ; StringCompressor::EncodeString

; 147  : 			if (compressData)

	movzx	eax, BYTE PTR _compressData$[ebp]
	test	eax, eax
	je	SHORT $LN3@Send

; 148  : 			{
; 149  : 				outBitstream.WriteBits((const unsigned char*)compressedFiles[i].data, compressedFiles[i].dataLength);

	push	1
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	call	??A?$Queue@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::Queue<FileListNode>::operator[]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	call	??A?$Queue@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::Queue<FileListNode>::operator[]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 150  : 				delete [] compressedFiles[i].data;

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	call	??A?$Queue@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::Queue<FileListNode>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 151  : 			}
; 152  : 			else

	jmp	SHORT $LN2@Send
$LN3@Send:

; 153  : 				outBitstream.WriteBits((const unsigned char*)fileList->fileList[i].data, fileList->fileList[i].dataLength);

	push	1
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _fileList$[ebp]
	call	??A?$List@UFileListNode@@@DataStructures@@QBEAAUFileListNode@@I@Z ; DataStructures::List<FileListNode>::operator[]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN2@Send:

; 154  : 			
; 155  : 			rakPeer->Send(&outBitstream, priority, RELIABLE_ORDERED, orderingChannel, recipient, false);

	mov	esi, esp
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _recipient$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _recipient$[ebp+4]
	mov	WORD PTR [eax+4], dx
	movzx	eax, BYTE PTR _orderingChannel$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _priority$[ebp]
	push	ecx
	lea	edx, DWORD PTR _outBitstream$[ebp]
	push	edx
	mov	eax, DWORD PTR _rakPeer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _rakPeer$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 156  : 		}

	jmp	$LN6@Send
$LN5@Send:

; 157  : 	}
; 158  : 	else

	jmp	SHORT $LN1@Send
$LN13@Send:

; 159  : 		rakPeer->Send(&outBitstream, priority, RELIABLE_ORDERED, orderingChannel, recipient, false);

	mov	esi, esp
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _recipient$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _recipient$[ebp+4]
	mov	WORD PTR [eax+4], dx
	movzx	eax, BYTE PTR _orderingChannel$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _priority$[ebp]
	push	ecx
	lea	edx, DWORD PTR _outBitstream$[ebp]
	push	edx
	mov	eax, DWORD PTR _rakPeer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _rakPeer$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Send:

; 160  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	call	??1?$Queue@UFileListNode@@@DataStructures@@QAE@XZ ; DataStructures::Queue<FileListNode>::~Queue<FileListNode>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tree$[ebp]
	call	??1HuffmanEncodingTree@@QAE@XZ		; HuffmanEncodingTree::~HuffmanEncodingTree
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _encodedData$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN41@Send
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 3508				; 00000db4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	2
$LN41@Send:
	DD	6
	DD	$LN40@Send
$LN40@Send:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN33@Send
	DD	-592					; fffffdb0H
	DD	273					; 00000111H
	DD	$LN34@Send
	DD	-2140					; fffff7a4H
	DD	1540					; 00000604H
	DD	$LN35@Send
	DD	-3172					; fffff39cH
	DD	1024					; 00000400H
	DD	$LN36@Send
	DD	-3244					; fffff354H
	DD	16					; 00000010H
	DD	$LN37@Send
	DD	-3272					; fffff338H
	DD	17					; 00000011H
	DD	$LN38@Send
$LN38@Send:
	DB	110					; 0000006eH
	DB	0
$LN37@Send:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN36@Send:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN35@Send:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	0
$LN34@Send:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN33@Send:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z$0:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z$1:
	lea	ecx, DWORD PTR _encodedData$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z$2:
	lea	ecx, DWORD PTR _tree$[ebp]
	jmp	??1HuffmanEncodingTree@@QAE@XZ		; HuffmanEncodingTree::~HuffmanEncodingTree
__unwindfunclet$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z$3:
	lea	ecx, DWORD PTR _compressedFiles$[ebp]
	jmp	??1?$Queue@UFileListNode@@@DataStructures@@QAE@XZ ; DataStructures::Queue<FileListNode>::~Queue<FileListNode>
__ehhandler$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-3512]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z ENDP ; FileListTransfer::Send
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z
_TEXT	SEGMENT
tv139 = -304						; size = 4
tv95 = -304						; size = 4
tv153 = -302						; size = 2
$T2 = -296						; size = 4
$T3 = -284						; size = 4
$T4 = -272						; size = 4
$T5 = -260						; size = 4
$T6 = -248						; size = 4
_oldId$ = -44						; size = 2
_receiver$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_handler$ = 8						; size = 4
_deleteHandler$ = 12					; size = 1
_allowedSender$ = 16					; size = 6
?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z PROC ; FileListTransfer::SetupReceive, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 	if (rakPeer->GetIndexFromPlayerID(allowedSender)==-1)

	mov	esi, esp
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _allowedSender$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _allowedSender$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+25]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+25]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN4@SetupRecei

; 43   : 		return (unsigned short)-1;

	mov	eax, 65535				; 0000ffffH
	jmp	$LN5@SetupRecei
$LN4@SetupRecei:

; 44   : 	FileListReceiver *receiver;
; 45   : 
; 46   : 	if (fileListReceivers.Has(setId))

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 23					; 00000017H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Has@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Has
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@SetupRecei

; 47   : 	{
; 48   : 		receiver=fileListReceivers.Get(setId);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 23					; 00000017H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Get@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEAAPAUFileListReceiver@FileListTransfer@@ABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Get
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _receiver$[ebp], ecx

; 49   : 		if (receiver->deleteDownloadHandler)

	mov	eax, DWORD PTR _receiver$[ebp]
	movzx	ecx, BYTE PTR [eax+1565]
	test	ecx, ecx
	je	SHORT $LN2@SetupRecei

; 50   : 			delete receiver->downloadHandler;

	mov	eax, DWORD PTR _receiver$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@SetupRecei:

; 51   : 		delete receiver;

	mov	eax, DWORD PTR _receiver$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN7@SetupRecei
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	??_GFileListReceiver@FileListTransfer@@QAEPAXI@Z
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN8@SetupRecei
$LN7@SetupRecei:
	mov	DWORD PTR tv95[ebp], 0
$LN8@SetupRecei:

; 52   : 		fileListReceivers.Delete(setId);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 23					; 00000017H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Delete@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE_NABG@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Delete
$LN3@SetupRecei:

; 53   : 	}
; 54   : 
; 55   : 	unsigned short oldId;
; 56   : 	receiver = new FileListReceiver;

	push	1567					; 0000061fH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN9@SetupRecei
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0FileListReceiver@FileListTransfer@@QAE@XZ
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN10@SetupRecei
$LN9@SetupRecei:
	mov	DWORD PTR tv139[ebp], 0
$LN10@SetupRecei:
	mov	eax, DWORD PTR tv139[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _receiver$[ebp], ecx

; 57   : 	receiver->downloadHandler=handler;

	mov	eax, DWORD PTR _receiver$[ebp]
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	DWORD PTR [eax], ecx

; 58   : 	receiver->allowedSender=allowedSender;

	lea	eax, DWORD PTR _allowedSender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _receiver$[ebp]
	add	ecx, 4
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 59   : 	receiver->gotSetHeader=false;

	mov	eax, DWORD PTR _receiver$[ebp]
	mov	BYTE PTR [eax+1564], 0

; 60   : 	receiver->deleteDownloadHandler=deleteHandler;

	mov	eax, DWORD PTR _receiver$[ebp]
	mov	cl, BYTE PTR _deleteHandler$[ebp]
	mov	BYTE PTR [eax+1565], cl

; 61   : 	fileListReceivers.Set(setId, receiver);

	lea	eax, DWORD PTR _receiver$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23					; 00000017H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Set@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAEXABGABQAUFileListReceiver@FileListTransfer@@@Z ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Set

; 62   : 	oldId=setId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+23]
	mov	WORD PTR _oldId$[ebp], cx

; 63   : 	if (++setId==(unsigned short)-1)

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+23]
	add	cx, 1
	mov	WORD PTR tv153[ebp], cx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR tv153[ebp]
	mov	WORD PTR [edx+23], ax
	movzx	ecx, WORD PTR tv153[ebp]
	cmp	ecx, 65535				; 0000ffffH
	jne	SHORT $LN1@SetupRecei

; 64   : 		setId=0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+23], ax
$LN1@SetupRecei:

; 65   : 	return oldId;

	mov	ax, WORD PTR _oldId$[ebp]
$LN5@SetupRecei:

; 66   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@SetupRecei
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN15@SetupRecei:
	DD	1
	DD	$LN14@SetupRecei
$LN14@SetupRecei:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN12@SetupRecei
$LN12@SetupRecei:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z ENDP ; FileListTransfer::SetupReceive
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ??1FileListTransfer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1FileListTransfer@@QAE@XZ PROC			; FileListTransfer::~FileListTransfer, COMDAT
; _this$ = ecx

; 37   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1FileListTransfer@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FileListTransfer@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 38   : 	Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@FileListTransfer@@IAEXXZ		; FileListTransfer::Clear

; 39   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::~Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1FileListTransfer@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::~Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >
__ehhandler$??1FileListTransfer@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1FileListTransfer@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1FileListTransfer@@QAE@XZ ENDP			; FileListTransfer::~FileListTransfer
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfer.cpp
;	COMDAT ??0FileListTransfer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0FileListTransfer@@QAE@XZ PROC			; FileListTransfer::FileListTransfer, COMDAT
; _this$ = ecx

; 31   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FileListTransfer@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluginInterface@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FileListTransfer@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 32   : 	rakPeer=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+25], 0

; 33   : 	setId=0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+23], ax

; 34   : 	DataStructures::Map<unsigned short, FileListReceiver*>::IMPLEMENT_DEFAULT_COMPARISON();

	call	?IMPLEMENT_DEFAULT_COMPARISON@?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@SAXXZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::IMPLEMENT_DEFAULT_COMPARISON

; 35   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0FileListTransfer@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$Map@GPAUFileListReceiver@FileListTransfer@@$1??$defaultMapKeyComparison@G@DataStructures@@YAHABG0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >::~Map<unsigned short,FileListTransfer::FileListReceiver *,&DataStructures::defaultMapKeyComparison<unsigned short> >
__ehhandler$??0FileListTransfer@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FileListTransfer@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FileListTransfer@@QAE@XZ ENDP			; FileListTransfer::FileListTransfer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluginInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluginInterface@@QAE@XZ PROC				; PluginInterface::PluginInterface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluginInterface@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluginInterface@@QAE@XZ ENDP				; PluginInterface::PluginInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\networktypes.h
;	COMDAT ??4PlayerID@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??4PlayerID@@QAEAAU0@ABU0@@Z PROC			; PlayerID::operator=, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 		binaryAddress = input.binaryAddress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 76   : 		port = input.port;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx

; 77   : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PlayerID@@QAEAAU0@ABU0@@Z ENDP			; PlayerID::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
