; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\chatwindow.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?SetLocation@CDXUTControl@@QAEXHH@Z		; CDXUTControl::SetLocation
PUBLIC	?SetSize@CDXUTControl@@QAEXHH@Z			; CDXUTControl::SetSize
PUBLIC	?SetPageSize@CDXUTScrollBar@@QAEXH@Z		; CDXUTScrollBar::SetPageSize
PUBLIC	?PushBack@CChatWindow@@AAEXXZ			; CChatWindow::PushBack
PUBLIC	?FilterInvalidChars@CChatWindow@@AAEXPAD@Z	; CChatWindow::FilterInvalidChars
PUBLIC	?AddToChatWindowBuffer@CChatWindow@@AAEXW4eChatMessageType@@PAD1KK@Z ; CChatWindow::AddToChatWindowBuffer
PUBLIC	?Draw@CChatWindow@@QAEXXZ			; CChatWindow::Draw
PUBLIC	?AddChatMessage@CChatWindow@@QAEXPADK0@Z	; CChatWindow::AddChatMessage
PUBLIC	?AddInfoMessage@CChatWindow@@QAAXPADZZ		; CChatWindow::AddInfoMessage
PUBLIC	?AddDebugMessage@CChatWindow@@QAAXPADZZ		; CChatWindow::AddDebugMessage
PUBLIC	?AddClientMessage@CChatWindow@@QAEXKPAD@Z	; CChatWindow::AddClientMessage
PUBLIC	?PageUp@CChatWindow@@QAEXXZ			; CChatWindow::PageUp
PUBLIC	?PageDown@CChatWindow@@QAEXXZ			; CChatWindow::PageDown
PUBLIC	?RenderText@CChatWindow@@QAEXPADUtagRECT@@K@Z	; CChatWindow::RenderText
PUBLIC	?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z ; CChatWindow::ResetDialogControls
PUBLIC	??0CChatWindow@@QAE@PAUIDirect3DDevice9@@PAUID3DXFont@@@Z ; CChatWindow::CChatWindow
PUBLIC	??1CChatWindow@@QAE@XZ				; CChatWindow::~CChatWindow
PUBLIC	?ScrollBarPosFromCurrentPage@CChatWindow@@QAEXXZ ; CChatWindow::ScrollBarPosFromCurrentPage
PUBLIC	??_C@_01NFFPALBN@Y?$AA@				; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_vsprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	_strncpy:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	_D3DXCreateSprite@8:PROC
EXTRN	?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z:PROC ; CDXUTDialog::AddControl
EXTRN	??0CDXUTScrollBar@@QAE@PAVCDXUTDialog@@@Z:PROC	; CDXUTScrollBar::CDXUTScrollBar
EXTRN	?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z:PROC	; CDXUTScrollBar::SetTrackRange
EXTRN	?ShowItem@CDXUTScrollBar@@QAEXH@Z:PROC		; CDXUTScrollBar::ShowItem
EXTRN	?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ:PROC	; CDXUTScrollBar::UpdateThumbRect
EXTRN	?Cap@CDXUTScrollBar@@IAEXXZ:PROC		; CDXUTScrollBar::Cap
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NFFPALBN@Y?$AA@
CONST	SEGMENT
??_C@_01NFFPALBN@Y?$AA@ DB 'Y', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z$0
__ehfuncinfo$?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?ScrollBarPosFromCurrentPage@CChatWindow@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ScrollBarPosFromCurrentPage@CChatWindow@@QAEXXZ PROC	; CChatWindow::ScrollBarPosFromCurrentPage, COMDAT
; _this$ = ecx

; 86   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 87   : 	if(m_pScrollBar) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8336], 0
	je	SHORT $LN7@ScrollBarP

; 88   : 		if(m_iCurrentPage==1) m_pScrollBar->ShowItem(39);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN5@ScrollBarP
	push	39					; 00000027H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?ShowItem@CDXUTScrollBar@@QAEXH@Z	; CDXUTScrollBar::ShowItem
$LN5@ScrollBarP:

; 89   : 		if(m_iCurrentPage==2) m_pScrollBar->ShowItem(29);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 2
	jne	SHORT $LN4@ScrollBarP
	push	29					; 0000001dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?ShowItem@CDXUTScrollBar@@QAEXH@Z	; CDXUTScrollBar::ShowItem
$LN4@ScrollBarP:

; 90   : 		if(m_iCurrentPage==3) m_pScrollBar->ShowItem(19);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 3
	jne	SHORT $LN3@ScrollBarP
	push	19					; 00000013H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?ShowItem@CDXUTScrollBar@@QAEXH@Z	; CDXUTScrollBar::ShowItem
$LN3@ScrollBarP:

; 91   : 		if(m_iCurrentPage==4) m_pScrollBar->ShowItem(9);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 4
	jne	SHORT $LN2@ScrollBarP
	push	9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?ShowItem@CDXUTScrollBar@@QAEXH@Z	; CDXUTScrollBar::ShowItem
$LN2@ScrollBarP:

; 92   : 		if(m_iCurrentPage==5) m_pScrollBar->ShowItem(0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 5
	jne	SHORT $LN7@ScrollBarP
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?ShowItem@CDXUTScrollBar@@QAEXH@Z	; CDXUTScrollBar::ShowItem
$LN7@ScrollBarP:

; 93   : 	}
; 94   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ScrollBarPosFromCurrentPage@CChatWindow@@QAEXXZ ENDP	; CChatWindow::ScrollBarPosFromCurrentPage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ??1CChatWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CChatWindow@@QAE@XZ PROC				; CChatWindow::~CChatWindow, COMDAT
; _this$ = ecx

; 46   : CChatWindow::~CChatWindow() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CChatWindow@@QAE@XZ ENDP				; CChatWindow::~CChatWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ??0CChatWindow@@QAE@PAUIDirect3DDevice9@@PAUID3DXFont@@@Z
_TEXT	SEGMENT
_rectSize$ = -48					; size = 16
_x$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pD3DDevice$ = 8					; size = 4
_pFont$ = 12						; size = 4
??0CChatWindow@@QAE@PAUIDirect3DDevice9@@PAUID3DXFont@@@Z PROC ; CChatWindow::CChatWindow, COMDAT
; _this$ = ecx

; 17   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 18   : 	int x=0;

	mov	DWORD PTR _x$[ebp], 0

; 19   : 
; 20   : 	m_pD3DDevice		= pD3DDevice;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pD3DDevice$[ebp]
	mov	DWORD PTR [eax+8352], ecx

; 21   : 	m_pD3DFont			= pFont;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR [eax+8344], ecx

; 22   : 	m_iEnabled			= CHAT_WINDOW_MODE_FULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2

; 23   : 	m_iCurrentPage		= 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1

; 24   : 
; 25   : 	// Create a sprite to use when drawing text
; 26   : 	D3DXCreateSprite(pD3DDevice,&m_pChatTextSprite);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8348				; 0000209cH
	push	eax
	mov	ecx, DWORD PTR _pD3DDevice$[ebp]
	push	ecx
	call	_D3DXCreateSprite@8
$LN2@CChatWindo:

; 27   : 
; 28   : 	// Init the chat window lines to 0
; 29   : 	while(x!=MAX_MESSAGES) {

	cmp	DWORD PTR _x$[ebp], 50			; 00000032H
	je	SHORT $LN1@CChatWindo

; 30   : 		memset(&m_ChatWindowEntries[x],0,sizeof(CHAT_WINDOW_ENTRY));

	push	166					; 000000a6H
	push	0
	imul	eax, DWORD PTR _x$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+8]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 31   : 		x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 32   : 	}

	jmp	SHORT $LN2@CChatWindo
$LN1@CChatWindo:

; 33   : 
; 34   : 	RECT rectSize;
; 35   : 	m_pD3DFont->DrawText(0,"Y",-1,&rectSize,DT_CALCRECT|DT_SINGLELINE|DT_LEFT,0xFF000000);

	mov	esi, esp
	push	-16777216				; ff000000H
	push	1056					; 00000420H
	lea	eax, DWORD PTR _rectSize$[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_01NFFPALBN@Y?$AA@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8344]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8344]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 36   : 	m_lFontSizeY = rectSize.bottom - rectSize.top;

	mov	eax, DWORD PTR _rectSize$[ebp+12]
	sub	eax, DWORD PTR _rectSize$[ebp+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8340], eax

; 37   : 
; 38   : 	m_dwChatTextColor = D3DCOLOR_ARGB(255,255,255,255);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8308], -1

; 39   : 	m_dwChatInfoColor = D3DCOLOR_ARGB(255,0,200,200);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8312], -16725816		; ff00c8c8H

; 40   : 	m_dwChatDebugColor = D3DCOLOR_ARGB(255,244,164,25);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8316], -744423		; fff4a419H

; 41   : 	m_dwChatBackgroundColor = D3DCOLOR_ARGB(255,0,0,0);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8320], -16777216		; ff000000H

; 42   : }

	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@CChatWindo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@CChatWindo:
	DD	1
	DD	$LN6@CChatWindo
$LN6@CChatWindo:
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN5@CChatWindo
$LN5@CChatWindo:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
??0CChatWindow@@QAE@PAUIDirect3DDevice9@@PAUID3DXFont@@@Z ENDP ; CChatWindow::CChatWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pGameUI$ = 8						; size = 4
?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z PROC ; CChatWindow::ResetDialogControls, COMDAT
; _this$ = ecx

; 51   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 52   : 	m_pGameUI = pGameUI;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pGameUI$[ebp]
	mov	DWORD PTR [eax+8328], ecx

; 53   : 
; 54   : 	if(pGameUI) {

	cmp	DWORD PTR _pGameUI$[ebp], 0
	je	$LN2@ResetDialo

; 55   : 		//pGameUI->AddEditBox(IDC_CHATBACK,"",5,5,420,170,true,&m_pEditBackground);
; 56   : 
; 57   : 		m_pScrollBar = new CDXUTScrollBar(pGameUI);        

	push	178					; 000000b2H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@ResetDialo
	mov	eax, DWORD PTR _pGameUI$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CDXUTScrollBar@@QAE@PAVCDXUTDialog@@@Z ; CDXUTScrollBar::CDXUTScrollBar
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@ResetDialo
$LN4@ResetDialo:
	mov	DWORD PTR tv75[ebp], 0
$LN5@ResetDialo:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+8336], eax

; 58   : 		pGameUI->AddControl(m_pScrollBar);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	push	ecx
	mov	ecx, DWORD PTR _pGameUI$[ebp]
	call	?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl

; 59   : 		m_pScrollBar->SetVisible(true);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8336]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 60   : 		m_pScrollBar->SetEnabled(true);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8336]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 61   : 		m_pScrollBar->SetLocation(5,40);

	push	40					; 00000028H
	push	5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?SetLocation@CDXUTControl@@QAEXHH@Z	; CDXUTControl::SetLocation

; 62   :         m_pScrollBar->SetSize(15,((m_lFontSizeY+1)*DISP_MESSAGES)-60);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8340]
	add	ecx, 1
	imul	edx, ecx, 10
	sub	edx, 60					; 0000003cH
	push	edx
	push	15					; 0000000fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?SetSize@CDXUTControl@@QAEXHH@Z		; CDXUTControl::SetSize

; 63   : 		m_pScrollBar->SetTrackRange(0,(MAX_MESSAGES-DISP_MESSAGES)-1);

	push	39					; 00000027H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z	; CDXUTScrollBar::SetTrackRange

; 64   : 		m_pScrollBar->SetPageSize(5);

	push	5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?SetPageSize@CDXUTScrollBar@@QAEXH@Z	; CDXUTScrollBar::SetPageSize

; 65   : 		m_pScrollBar->ShowItem(MAX_MESSAGES-1);

	push	49					; 00000031H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	call	?ShowItem@CDXUTScrollBar@@QAEXH@Z	; CDXUTScrollBar::ShowItem
$LN2@ResetDialo:

; 66   : 
; 67   : 		/*
; 68   : 		m_pEditBackground->GetElement(0)->TextureColor.Init(D3DCOLOR_ARGB( 170, 20, 20, 20 ));
; 69   : 		m_pEditBackground->GetElement(1)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));
; 70   : 		m_pEditBackground->GetElement(2)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));
; 71   : 		m_pEditBackground->GetElement(3)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));
; 72   : 		m_pEditBackground->GetElement(4)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));
; 73   : 		m_pEditBackground->GetElement(5)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));
; 74   : 		m_pEditBackground->GetElement(6)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));
; 75   : 		m_pEditBackground->GetElement(7)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));
; 76   : 		m_pEditBackground->GetElement(8)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));
; 77   : 		m_pEditBackground->SetEnabled(false);
; 78   : 		m_pEditBackground->SetVisible(true);*/
; 79   : 
; 80   : 	}
; 81   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResetDialogControls@CChatWindow@@QAEXPAVCDXUTDialog@@@Z ENDP ; CChatWindow::ResetDialogControls
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?RenderText@CChatWindow@@QAEXPADUtagRECT@@K@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_sz$ = 8						; size = 4
_rect$ = 12						; size = 16
_dwColor$ = 28						; size = 4
?RenderText@CChatWindow@@QAEXPADUtagRECT@@K@Z PROC	; CChatWindow::RenderText, COMDAT
; _this$ = ecx

; 346  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 347  : 	if(m_iEnabled == CHAT_WINDOW_MODE_FULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	$LN1@RenderText

; 348  : 		// above
; 349  : 		rect.top -= 1;

	mov	eax, DWORD PTR _rect$[ebp+4]
	sub	eax, 1
	mov	DWORD PTR _rect$[ebp+4], eax

; 350  : 		m_pD3DFont->DrawText(m_pChatTextSprite,sz,-1,&rect,DT_NOCLIP|DT_SINGLELINE|DT_LEFT,0xFF000000);

	mov	esi, esp
	push	-16777216				; ff000000H
	push	288					; 00000120H
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _sz$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8348]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8344]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8344]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 351  : 		rect.top += 1;

	mov	eax, DWORD PTR _rect$[ebp+4]
	add	eax, 1
	mov	DWORD PTR _rect$[ebp+4], eax

; 352  : 
; 353  : 		// below
; 354  : 		rect.top += 1;

	mov	eax, DWORD PTR _rect$[ebp+4]
	add	eax, 1
	mov	DWORD PTR _rect$[ebp+4], eax

; 355  : 		m_pD3DFont->DrawText(m_pChatTextSprite,sz,-1,&rect,DT_NOCLIP|DT_SINGLELINE|DT_LEFT,0xFF000000);

	mov	esi, esp
	push	-16777216				; ff000000H
	push	288					; 00000120H
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _sz$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8348]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8344]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8344]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 356  : 		rect.top -= 1;

	mov	eax, DWORD PTR _rect$[ebp+4]
	sub	eax, 1
	mov	DWORD PTR _rect$[ebp+4], eax

; 357  : 
; 358  : 		// left
; 359  : 		rect.left -= 1;

	mov	eax, DWORD PTR _rect$[ebp]
	sub	eax, 1
	mov	DWORD PTR _rect$[ebp], eax

; 360  : 		m_pD3DFont->DrawText(m_pChatTextSprite,sz,-1,&rect,DT_NOCLIP|DT_SINGLELINE|DT_LEFT,0xFF000000);

	mov	esi, esp
	push	-16777216				; ff000000H
	push	288					; 00000120H
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _sz$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8348]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8344]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8344]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 361  : 		rect.left += 1;

	mov	eax, DWORD PTR _rect$[ebp]
	add	eax, 1
	mov	DWORD PTR _rect$[ebp], eax

; 362  : 
; 363  : 		// right
; 364  : 		rect.left += 1;

	mov	eax, DWORD PTR _rect$[ebp]
	add	eax, 1
	mov	DWORD PTR _rect$[ebp], eax

; 365  : 		m_pD3DFont->DrawText(m_pChatTextSprite,sz,-1,&rect,DT_NOCLIP|DT_SINGLELINE|DT_LEFT,0xFF000000);

	mov	esi, esp
	push	-16777216				; ff000000H
	push	288					; 00000120H
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _sz$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8348]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8344]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8344]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 366  : 		rect.left -= 1;

	mov	eax, DWORD PTR _rect$[ebp]
	sub	eax, 1
	mov	DWORD PTR _rect$[ebp], eax
$LN1@RenderText:

; 367  : 	}
; 368  : 
; 369  : 	m_pD3DFont->DrawText(m_pChatTextSprite,sz,-1,&rect,DT_NOCLIP|DT_SINGLELINE|DT_LEFT,dwColor);

	mov	esi, esp
	mov	eax, DWORD PTR _dwColor$[ebp]
	push	eax
	push	288					; 00000120H
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _sz$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8348]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8344]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8344]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+56]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 370  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?RenderText@CChatWindow@@QAEXPADUtagRECT@@K@Z ENDP	; CChatWindow::RenderText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?PageDown@CChatWindow@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?PageDown@CChatWindow@@QAEXXZ PROC			; CChatWindow::PageDown, COMDAT
; _this$ = ecx

; 114  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 115  : 	if(!m_iEnabled) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@PageDown
	jmp	SHORT $LN4@PageDown
$LN3@PageDown:

; 116  : 
; 117  :     m_iCurrentPage--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 118  : 	if(m_iCurrentPage < 1) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jge	SHORT $LN2@PageDown

; 119  : 		m_iCurrentPage = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1

; 120  : 	} else {

	jmp	SHORT $LN4@PageDown
$LN2@PageDown:

; 121  : 		ScrollBarPosFromCurrentPage();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScrollBarPosFromCurrentPage@CChatWindow@@QAEXXZ ; CChatWindow::ScrollBarPosFromCurrentPage
$LN4@PageDown:

; 122  : 	}
; 123  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PageDown@CChatWindow@@QAEXXZ ENDP			; CChatWindow::PageDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?PageUp@CChatWindow@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?PageUp@CChatWindow@@QAEXXZ PROC			; CChatWindow::PageUp, COMDAT
; _this$ = ecx

; 99   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 	if(!m_iEnabled) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@PageUp
	jmp	SHORT $LN4@PageUp
$LN3@PageUp:

; 101  : 
; 102  :     m_iCurrentPage++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 103  : 	if(m_iCurrentPage > CHAT_WINDOW_PAGES) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 5
	jle	SHORT $LN2@PageUp

; 104  : 		m_iCurrentPage = CHAT_WINDOW_PAGES;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 5

; 105  : 	} else {

	jmp	SHORT $LN4@PageUp
$LN2@PageUp:

; 106  : 		ScrollBarPosFromCurrentPage();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScrollBarPosFromCurrentPage@CChatWindow@@QAEXXZ ; CChatWindow::ScrollBarPosFromCurrentPage
$LN4@PageUp:

; 107  : 	}
; 108  : 	
; 109  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PageUp@CChatWindow@@QAEXXZ ENDP			; CChatWindow::PageUp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?AddClientMessage@CChatWindow@@QAEXKPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dwColor$ = 8						; size = 4
_szStr$ = 12						; size = 4
?AddClientMessage@CChatWindow@@QAEXKPAD@Z PROC		; CChatWindow::AddClientMessage, COMDAT
; _this$ = ecx

; 244  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 245  : 	dwColor = (dwColor >> 8) | 0xFF000000; // convert to ARGB

	mov	eax, DWORD PTR _dwColor$[ebp]
	shr	eax, 8
	or	eax, -16777216				; ff000000H
	mov	DWORD PTR _dwColor$[ebp], eax

; 246  : 
; 247  : 	FilterInvalidChars(szStr);

	mov	eax, DWORD PTR _szStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FilterInvalidChars@CChatWindow@@AAEXPAD@Z ; CChatWindow::FilterInvalidChars

; 248  : 
; 249  : 	if(strlen(szStr) > MAX_MESSAGE_LENGTH) return;

	mov	eax, DWORD PTR _szStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 128				; 00000080H
	jbe	SHORT $LN1@AddClientM
	jmp	SHORT $LN2@AddClientM
$LN1@AddClientM:

; 250  : 
; 251  : 	AddToChatWindowBuffer(CHAT_TYPE_INFO,szStr,NULL,dwColor,0);

	push	0
	mov	eax, DWORD PTR _dwColor$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _szStr$[ebp]
	push	ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToChatWindowBuffer@CChatWindow@@AAEXW4eChatMessageType@@PAD1KK@Z ; CChatWindow::AddToChatWindowBuffer
$LN2@AddClientM:

; 252  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddClientMessage@CChatWindow@@QAEXKPAD@Z ENDP		; CChatWindow::AddClientMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?AddDebugMessage@CChatWindow@@QAAXPADZZ
_TEXT	SEGMENT
_args$ = -532						; size = 4
_tmp_buf$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_szFormat$ = 12						; size = 4
?AddDebugMessage@CChatWindow@@QAAXPADZZ PROC		; CChatWindow::AddDebugMessage, COMDAT

; 224  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 728				; 000002d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-728]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 225  : 	char tmp_buf[512];
; 226  : 	memset(tmp_buf,0,512);

	push	512					; 00000200H
	push	0
	lea	eax, DWORD PTR _tmp_buf$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 227  : 
; 228  : 	va_list args;
; 229  : 	va_start(args, szFormat);

	lea	eax, DWORD PTR _szFormat$[ebp+4]
	mov	DWORD PTR _args$[ebp], eax

; 230  : 	vsprintf(tmp_buf, szFormat, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szFormat$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmp_buf$[ebp]
	push	edx
	call	_vsprintf
	add	esp, 12					; 0000000cH

; 231  : 	va_end(args);

	mov	DWORD PTR _args$[ebp], 0

; 232  : 
; 233  : 	FilterInvalidChars(tmp_buf);

	lea	eax, DWORD PTR _tmp_buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FilterInvalidChars@CChatWindow@@AAEXPAD@Z ; CChatWindow::FilterInvalidChars

; 234  : 
; 235  : 	if(strlen(tmp_buf) > MAX_MESSAGE_LENGTH) return;

	lea	eax, DWORD PTR _tmp_buf$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 128				; 00000080H
	jbe	SHORT $LN1@AddDebugMe
	jmp	SHORT $LN2@AddDebugMe
$LN1@AddDebugMe:

; 236  : 
; 237  : 	AddToChatWindowBuffer(CHAT_TYPE_DEBUG,tmp_buf,NULL,m_dwChatDebugColor,0);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8316]
	push	ecx
	push	0
	lea	edx, DWORD PTR _tmp_buf$[ebp]
	push	edx
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToChatWindowBuffer@CChatWindow@@AAEXW4eChatMessageType@@PAD1KK@Z ; CChatWindow::AddToChatWindowBuffer

; 238  : 	OutputDebugString(tmp_buf);

	mov	esi, esp
	lea	eax, DWORD PTR _tmp_buf$[ebp]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@AddDebugMe:

; 239  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@AddDebugMe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 728				; 000002d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@AddDebugMe:
	DD	1
	DD	$LN5@AddDebugMe
$LN5@AddDebugMe:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN4@AddDebugMe
$LN4@AddDebugMe:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?AddDebugMessage@CChatWindow@@QAAXPADZZ ENDP		; CChatWindow::AddDebugMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?AddInfoMessage@CChatWindow@@QAAXPADZZ
_TEXT	SEGMENT
_args$ = -532						; size = 4
_tmp_buf$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_szFormat$ = 12						; size = 4
?AddInfoMessage@CChatWindow@@QAAXPADZZ PROC		; CChatWindow::AddInfoMessage, COMDAT

; 205  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 728				; 000002d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-728]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 206  : 	char tmp_buf[512];
; 207  : 	memset(tmp_buf,0,512);

	push	512					; 00000200H
	push	0
	lea	eax, DWORD PTR _tmp_buf$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 208  : 
; 209  : 	va_list args;
; 210  : 	va_start(args, szFormat);

	lea	eax, DWORD PTR _szFormat$[ebp+4]
	mov	DWORD PTR _args$[ebp], eax

; 211  : 	vsprintf(tmp_buf, szFormat, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szFormat$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmp_buf$[ebp]
	push	edx
	call	_vsprintf
	add	esp, 12					; 0000000cH

; 212  : 	va_end(args);

	mov	DWORD PTR _args$[ebp], 0

; 213  : 
; 214  : 	FilterInvalidChars(tmp_buf);

	lea	eax, DWORD PTR _tmp_buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FilterInvalidChars@CChatWindow@@AAEXPAD@Z ; CChatWindow::FilterInvalidChars

; 215  : 
; 216  : 	if(strlen(tmp_buf) > MAX_MESSAGE_LENGTH) return;

	lea	eax, DWORD PTR _tmp_buf$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 128				; 00000080H
	jbe	SHORT $LN1@AddInfoMes
	jmp	SHORT $LN2@AddInfoMes
$LN1@AddInfoMes:

; 217  : 
; 218  : 	AddToChatWindowBuffer(CHAT_TYPE_INFO,tmp_buf,NULL,m_dwChatInfoColor,0);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8312]
	push	ecx
	push	0
	lea	edx, DWORD PTR _tmp_buf$[ebp]
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToChatWindowBuffer@CChatWindow@@AAEXW4eChatMessageType@@PAD1KK@Z ; CChatWindow::AddToChatWindowBuffer
$LN2@AddInfoMes:

; 219  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@AddInfoMes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 728				; 000002d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@AddInfoMes:
	DD	1
	DD	$LN5@AddInfoMes
$LN5@AddInfoMes:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN4@AddInfoMes
$LN4@AddInfoMes:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?AddInfoMessage@CChatWindow@@QAAXPADZZ ENDP		; CChatWindow::AddInfoMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?AddChatMessage@CChatWindow@@QAEXPADK0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szNick$ = 8						; size = 4
_dwNickColor$ = 12					; size = 4
_szMessage$ = 16					; size = 4
?AddChatMessage@CChatWindow@@QAEXPADK0@Z PROC		; CChatWindow::AddChatMessage, COMDAT
; _this$ = ecx

; 194  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 	FilterInvalidChars(szMessage);

	mov	eax, DWORD PTR _szMessage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FilterInvalidChars@CChatWindow@@AAEXPAD@Z ; CChatWindow::FilterInvalidChars

; 196  : 
; 197  : 	if(strlen(szMessage) > MAX_MESSAGE_LENGTH) return;

	mov	eax, DWORD PTR _szMessage$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 128				; 00000080H
	jbe	SHORT $LN1@AddChatMes
	jmp	SHORT $LN2@AddChatMes
$LN1@AddChatMes:

; 198  : 
; 199  : 	AddToChatWindowBuffer(CHAT_TYPE_CHAT,szMessage,szNick,m_dwChatTextColor,dwNickColor);

	mov	eax, DWORD PTR _dwNickColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8308]
	push	edx
	mov	eax, DWORD PTR _szNick$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szMessage$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToChatWindowBuffer@CChatWindow@@AAEXW4eChatMessageType@@PAD1KK@Z ; CChatWindow::AddToChatWindowBuffer
$LN2@AddChatMes:

; 200  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AddChatMessage@CChatWindow@@QAEXPADK0@Z ENDP		; CChatWindow::AddChatMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?Draw@CChatWindow@@QAEXXZ
_TEXT	SEGMENT
tv144 = -308						; size = 4
_iMessageAt$ = -108					; size = 4
_i$ = -96						; size = 4
_x$ = -84						; size = 4
_rectSize$ = -72					; size = 16
_rect$ = -48						; size = 16
_dwColorChat$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Draw@CChatWindow@@QAEXXZ PROC				; CChatWindow::Draw, COMDAT
; _this$ = ecx

; 128  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 129  : 	DWORD dwColorChat=0;

	mov	DWORD PTR _dwColorChat$[ebp], 0

; 130  : 	RECT rect;
; 131  : 	RECT rectSize;
; 132  : 	int x=0;

	mov	DWORD PTR _x$[ebp], 0

; 133  : 	int i=0;

	mov	DWORD PTR _i$[ebp], 0

; 134  : 	int iMessageAt;
; 135  : 		
; 136  : 	rect.top		= 10;

	mov	DWORD PTR _rect$[ebp+4], 10		; 0000000aH

; 137  : 	rect.left		= 30;

	mov	DWORD PTR _rect$[ebp], 30		; 0000001eH

; 138  : 	rect.bottom		= 110;

	mov	DWORD PTR _rect$[ebp+12], 110		; 0000006eH

; 139  : 	rect.right		= 550;

	mov	DWORD PTR _rect$[ebp+8], 550		; 00000226H

; 140  : 
; 141  : 	if(!m_iEnabled || m_iCurrentPage == 1) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN10@Draw
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN11@Draw
$LN10@Draw:

; 142  : 		m_pScrollBar->SetVisible(false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8336]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 143  : 	} else {

	jmp	SHORT $LN9@Draw
$LN11@Draw:

; 144  : 		m_pScrollBar->SetVisible(true);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8336]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8336]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@Draw:

; 145  : 	}
; 146  : 
; 147  : 	iMessageAt = (m_iCurrentPage * DISP_MESSAGES) - 1;

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 10
	sub	ecx, 1
	mov	DWORD PTR _iMessageAt$[ebp], ecx

; 148  : 
; 149  : 	if(m_pD3DFont && m_iEnabled)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8344], 0
	je	$LN12@Draw
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN12@Draw

; 150  : 	{
; 151  : 		m_pChatTextSprite->Begin( D3DXSPRITE_ALPHABLEND | D3DXSPRITE_SORT_TEXTURE );

	mov	esi, esp
	push	48					; 00000030H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8348]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8348]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@Draw:

; 152  : 
; 153  : 		while(x!=DISP_MESSAGES) {

	cmp	DWORD PTR _x$[ebp], 10			; 0000000aH
	je	$LN6@Draw

; 154  : 
; 155  : 			switch(m_ChatWindowEntries[iMessageAt].eType) {

	imul	eax, DWORD PTR _iMessageAt$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	mov	DWORD PTR tv144[ebp], edx
	cmp	DWORD PTR tv144[ebp], 1
	je	SHORT $LN3@Draw
	cmp	DWORD PTR tv144[ebp], 1
	jle	$LN4@Draw
	cmp	DWORD PTR tv144[ebp], 3
	jle	$LN1@Draw
	jmp	$LN4@Draw
$LN3@Draw:

; 156  : 
; 157  : 				case CHAT_TYPE_CHAT:
; 158  : 
; 159  : 					i = strlen(m_ChatWindowEntries[iMessageAt].szNick);

	imul	eax, DWORD PTR _iMessageAt$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+141]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 160  : 
; 161  : 					if(i) {

	cmp	DWORD PTR _i$[ebp], 0
	je	$LN2@Draw

; 162  : 						m_pD3DFont->DrawText(0,m_ChatWindowEntries[iMessageAt].szNick,-1,&rectSize,DT_CALCRECT|DT_LEFT,0xFF000000);

	mov	esi, esp
	push	-16777216				; ff000000H
	push	1024					; 00000400H
	lea	eax, DWORD PTR _rectSize$[ebp]
	push	eax
	push	-1
	imul	ecx, DWORD PTR _iMessageAt$[ebp], 166
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+141]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8344]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8344]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 163  : 						RenderText(m_ChatWindowEntries[iMessageAt].szNick,rect,m_ChatWindowEntries[iMessageAt].dwNickColor);

	imul	eax, DWORD PTR _iMessageAt$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+170]
	push	edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	imul	eax, DWORD PTR _iMessageAt$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+141]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RenderText@CChatWindow@@QAEXPADUtagRECT@@K@Z ; CChatWindow::RenderText

; 164  : 						rect.left = 35 + (rectSize.right - rectSize.left);

	mov	eax, DWORD PTR _rectSize$[ebp+8]
	sub	eax, DWORD PTR _rectSize$[ebp]
	add	eax, 35					; 00000023H
	mov	DWORD PTR _rect$[ebp], eax
$LN2@Draw:

; 165  : 					}					
; 166  : 
; 167  : 					RenderText(m_ChatWindowEntries[iMessageAt].szMessage,rect,m_ChatWindowEntries[iMessageAt].dwTextColor);

	imul	eax, DWORD PTR _iMessageAt$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+166]
	push	edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	imul	eax, DWORD PTR _iMessageAt$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RenderText@CChatWindow@@QAEXPADUtagRECT@@K@Z ; CChatWindow::RenderText

; 168  : 	
; 169  : 					break;

	jmp	SHORT $LN4@Draw
$LN1@Draw:

; 170  : 
; 171  : 				case CHAT_TYPE_INFO:
; 172  : 				case CHAT_TYPE_DEBUG:
; 173  : 
; 174  : 					RenderText(m_ChatWindowEntries[iMessageAt].szMessage,rect,m_ChatWindowEntries[iMessageAt].dwTextColor);

	imul	eax, DWORD PTR _iMessageAt$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+166]
	push	edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	imul	eax, DWORD PTR _iMessageAt$[ebp], 166
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RenderText@CChatWindow@@QAEXPADUtagRECT@@K@Z ; CChatWindow::RenderText
$LN4@Draw:

; 175  : 					break;
; 176  : 			}		
; 177  : 
; 178  : 			rect.top+=m_lFontSizeY+1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8340]
	mov	edx, DWORD PTR _rect$[ebp+4]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _rect$[ebp+4], eax

; 179  : 			rect.bottom= rect.top + m_lFontSizeY+1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8340]
	mov	edx, DWORD PTR _rect$[ebp+4]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _rect$[ebp+12], eax

; 180  : 			rect.left = 30;

	mov	DWORD PTR _rect$[ebp], 30		; 0000001eH

; 181  : 			
; 182  : 			iMessageAt--;

	mov	eax, DWORD PTR _iMessageAt$[ebp]
	sub	eax, 1
	mov	DWORD PTR _iMessageAt$[ebp], eax

; 183  : 			x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 184  : 		}

	jmp	$LN7@Draw
$LN6@Draw:

; 185  : 		m_lChatWindowBottom = rect.bottom;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR [eax+8324], ecx

; 186  : 
; 187  : 		m_pChatTextSprite->End();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8348]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8348]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@Draw:

; 188  : 	}	
; 189  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@Draw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@Draw:
	DD	2
	DD	$LN16@Draw
$LN16@Draw:
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN14@Draw
	DD	-72					; ffffffb8H
	DD	16					; 00000010H
	DD	$LN15@Draw
$LN15@Draw:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN14@Draw:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?Draw@CChatWindow@@QAEXXZ ENDP				; CChatWindow::Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?AddToChatWindowBuffer@CChatWindow@@AAEXW4eChatMessageType@@PAD1KK@Z
_TEXT	SEGMENT
_iBestLineLength$ = -20					; size = 4
_this$ = -8						; size = 4
_eType$ = 8						; size = 4
_szString$ = 12						; size = 4
_szNick$ = 16						; size = 4
_dwTextColor$ = 20					; size = 4
_dwChatColor$ = 24					; size = 4
?AddToChatWindowBuffer@CChatWindow@@AAEXW4eChatMessageType@@PAD1KK@Z PROC ; CChatWindow::AddToChatWindowBuffer, COMDAT
; _this$ = ecx

; 273  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 274  : 	int iBestLineLength=0;

	mov	DWORD PTR _iBestLineLength$[ebp], 0

; 275  : 
; 276  : 	PushBack();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBack@CChatWindow@@AAEXXZ		; CChatWindow::PushBack

; 277  : 
; 278  : 	m_ChatWindowEntries[0].eType = eType;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eType$[ebp]
	mov	DWORD PTR [edx+ecx+8], eax

; 279  : 	m_ChatWindowEntries[0].dwTextColor = dwTextColor;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _dwTextColor$[ebp]
	mov	DWORD PTR [edx+ecx+166], eax

; 280  : 	m_ChatWindowEntries[0].dwNickColor = dwChatColor;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _dwChatColor$[ebp]
	mov	DWORD PTR [edx+ecx+170], eax

; 281  : 	
; 282  : 	if(szNick) {

	cmp	DWORD PTR _szNick$[ebp], 0
	je	SHORT $LN8@AddToChatW

; 283  : 		strcpy(m_ChatWindowEntries[0].szNick,szNick);

	mov	eax, DWORD PTR _szNick$[ebp]
	push	eax
	mov	ecx, 166				; 000000a6H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+141]
	push	ecx
	call	_strcpy
	add	esp, 8

; 284  : 		strcat(m_ChatWindowEntries[0].szNick,":");

	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+141]
	push	eax
	call	_strcat
	add	esp, 8

; 285  : 	} else {

	jmp	SHORT $LN7@AddToChatW
$LN8@AddToChatW:

; 286  : 		m_ChatWindowEntries[0].szNick[0] = '\0';

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	BYTE PTR [eax+edx+133], 0
$LN7@AddToChatW:

; 287  : 	}
; 288  : 
; 289  : 	if(m_ChatWindowEntries[0].eType == CHAT_TYPE_CHAT && strlen(szString) > MAX_LINE_LENGTH)

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+8], 1
	jne	$LN6@AddToChatW
	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 64					; 00000040H
	jbe	$LN6@AddToChatW

; 290  : 	{
; 291  : 		iBestLineLength = MAX_LINE_LENGTH;

	mov	DWORD PTR _iBestLineLength$[ebp], 64	; 00000040H
$LN5@AddToChatW:

; 292  : 		// see if we can locate a space.
; 293  : 		while(szString[iBestLineLength] != ' ' && iBestLineLength)

	mov	eax, DWORD PTR _szString$[ebp]
	add	eax, DWORD PTR _iBestLineLength$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN4@AddToChatW
	cmp	DWORD PTR _iBestLineLength$[ebp], 0
	je	SHORT $LN4@AddToChatW

; 294  : 			iBestLineLength--;

	mov	eax, DWORD PTR _iBestLineLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _iBestLineLength$[ebp], eax
	jmp	SHORT $LN5@AddToChatW
$LN4@AddToChatW:

; 295  : 
; 296  : 		if((MAX_LINE_LENGTH - iBestLineLength) > 12) {

	mov	eax, 64					; 00000040H
	sub	eax, DWORD PTR _iBestLineLength$[ebp]
	cmp	eax, 12					; 0000000cH
	jle	$LN3@AddToChatW

; 297  : 			// we should just take the whole line
; 298  : 			strncpy(m_ChatWindowEntries[0].szMessage,szString,MAX_LINE_LENGTH);

	push	64					; 00000040H
	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	mov	ecx, 166				; 000000a6H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+12]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 299  : 			m_ChatWindowEntries[0].szMessage[MAX_LINE_LENGTH] = '\0';

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, 1
	shl	ecx, 6
	mov	BYTE PTR [eax+ecx+4], 0

; 300  : 
; 301  : 			PushBack();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBack@CChatWindow@@AAEXXZ		; CChatWindow::PushBack

; 302  : 			
; 303  : 			m_ChatWindowEntries[0].eType = eType;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eType$[ebp]
	mov	DWORD PTR [edx+ecx+8], eax

; 304  : 			m_ChatWindowEntries[0].dwTextColor = dwTextColor;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _dwTextColor$[ebp]
	mov	DWORD PTR [edx+ecx+166], eax

; 305  : 			m_ChatWindowEntries[0].dwNickColor = dwChatColor;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _dwChatColor$[ebp]
	mov	DWORD PTR [edx+ecx+170], eax

; 306  : 			m_ChatWindowEntries[0].szNick[0] = '\0';

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	BYTE PTR [eax+edx+133], 0

; 307  : 
; 308  : 			strcpy(m_ChatWindowEntries[0].szMessage,szString+MAX_LINE_LENGTH);

	mov	eax, DWORD PTR _szString$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, 166				; 000000a6H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+12]
	push	ecx
	call	_strcpy
	add	esp, 8

; 309  : 		}
; 310  : 		else {

	jmp	$LN2@AddToChatW
$LN3@AddToChatW:

; 311  : 			// grab upto the found space.
; 312  : 			strncpy(m_ChatWindowEntries[0].szMessage,szString,iBestLineLength);

	mov	eax, DWORD PTR _iBestLineLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szString$[ebp]
	push	ecx
	mov	edx, 166				; 000000a6H
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+12]
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 313  : 			m_ChatWindowEntries[0].szMessage[iBestLineLength] = '\0';

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, DWORD PTR _iBestLineLength$[ebp]
	mov	BYTE PTR [eax+ecx+4], 0

; 314  : 
; 315  : 			PushBack();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBack@CChatWindow@@AAEXXZ		; CChatWindow::PushBack

; 316  : 
; 317  : 			m_ChatWindowEntries[0].eType = eType;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eType$[ebp]
	mov	DWORD PTR [edx+ecx+8], eax

; 318  : 			m_ChatWindowEntries[0].dwTextColor = dwTextColor;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _dwTextColor$[ebp]
	mov	DWORD PTR [edx+ecx+166], eax

; 319  : 			m_ChatWindowEntries[0].dwNickColor = dwChatColor;

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _dwChatColor$[ebp]
	mov	DWORD PTR [edx+ecx+170], eax

; 320  : 			m_ChatWindowEntries[0].szNick[0] = '\0';

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	BYTE PTR [eax+edx+133], 0

; 321  : 
; 322  : 			strcpy(m_ChatWindowEntries[0].szMessage,szString+(iBestLineLength+1));

	mov	eax, DWORD PTR _iBestLineLength$[ebp]
	mov	ecx, DWORD PTR _szString$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	push	edx
	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+12]
	push	eax
	call	_strcpy
	add	esp, 8
$LN2@AddToChatW:

; 323  : 		}
; 324  : 	}
; 325  : 	else {

	jmp	SHORT $LN9@AddToChatW
$LN6@AddToChatW:

; 326  : 		strncpy(m_ChatWindowEntries[0].szMessage,szString,MAX_MESSAGE_LENGTH);

	push	128					; 00000080H
	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	mov	ecx, 166				; 000000a6H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+12]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 327  : 		m_ChatWindowEntries[0].szMessage[MAX_MESSAGE_LENGTH] = '\0';

	mov	eax, 166				; 000000a6H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, 1
	shl	ecx, 7
	mov	BYTE PTR [eax+ecx+4], 0
$LN9@AddToChatW:

; 328  : 	}
; 329  : 	
; 330  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddToChatWindowBuffer@CChatWindow@@AAEXW4eChatMessageType@@PAD1KK@Z ENDP ; CChatWindow::AddToChatWindowBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?FilterInvalidChars@CChatWindow@@AAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szString$ = 8						; size = 4
?FilterInvalidChars@CChatWindow@@AAEXPAD@Z PROC		; CChatWindow::FilterInvalidChars, COMDAT
; _this$ = ecx

; 257  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN3@FilterInva:

; 258  : 	while(*szString) {

	mov	eax, DWORD PTR _szString$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@FilterInva

; 259  : 		if(*szString > 0 && *szString < ' ') {

	mov	eax, DWORD PTR _szString$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jle	SHORT $LN1@FilterInva
	mov	eax, DWORD PTR _szString$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jge	SHORT $LN1@FilterInva

; 260  : 			*szString = ' ';

	mov	eax, DWORD PTR _szString$[ebp]
	mov	BYTE PTR [eax], 32			; 00000020H
$LN1@FilterInva:

; 261  : 		}
; 262  : 		szString++;

	mov	eax, DWORD PTR _szString$[ebp]
	add	eax, 1
	mov	DWORD PTR _szString$[ebp], eax

; 263  : 	}

	jmp	SHORT $LN3@FilterInva
$LN4@FilterInva:

; 264  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?FilterInvalidChars@CChatWindow@@AAEXPAD@Z ENDP		; CChatWindow::FilterInvalidChars
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.cpp
;	COMDAT ?PushBack@CChatWindow@@AAEXXZ
_TEXT	SEGMENT
_x$ = -20						; size = 4
_this$ = -8						; size = 4
?PushBack@CChatWindow@@AAEXXZ PROC			; CChatWindow::PushBack, COMDAT
; _this$ = ecx

; 335  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 336  : 	int x=MAX_MESSAGES-1;

	mov	DWORD PTR _x$[ebp], 49			; 00000031H
$LN2@PushBack:

; 337  : 	while(x) {

	cmp	DWORD PTR _x$[ebp], 0
	je	SHORT $LN3@PushBack

; 338  : 		memcpy(&m_ChatWindowEntries[x],&m_ChatWindowEntries[x-1],sizeof(CHAT_WINDOW_ENTRY));

	push	166					; 000000a6H
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	imul	ecx, eax, 166
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	push	eax
	imul	ecx, DWORD PTR _x$[ebp], 166
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 339  : 		x--;

	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 340  : 	}

	jmp	SHORT $LN2@PushBack
$LN3@PushBack:

; 341  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PushBack@CChatWindow@@AAEXXZ ENDP			; CChatWindow::PushBack
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutgui.h
;	COMDAT ?SetPageSize@CDXUTScrollBar@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nPageSize$ = 8						; size = 4
?SetPageSize@CDXUTScrollBar@@QAEXH@Z PROC		; CDXUTScrollBar::SetPageSize, COMDAT
; _this$ = ecx

; 555  :     void SetPageSize( int nPageSize ) { m_nPageSize = nPageSize; Cap(); UpdateThumbRect(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nPageSize$[ebp]
	mov	DWORD PTR [eax+146], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cap@CDXUTScrollBar@@IAEXXZ		; CDXUTScrollBar::Cap
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ	; CDXUTScrollBar::UpdateThumbRect
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPageSize@CDXUTScrollBar@@QAEXH@Z ENDP		; CDXUTScrollBar::SetPageSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutgui.h
;	COMDAT ?SetSize@CDXUTControl@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SetSize@CDXUTControl@@QAEXHH@Z PROC			; CDXUTControl::SetSize, COMDAT
; _this$ = ecx

; 389  :     void SetSize( int width, int height ) { m_width = width; m_height = height; UpdateRects(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _height$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetSize@CDXUTControl@@QAEXHH@Z ENDP			; CDXUTControl::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutgui.h
;	COMDAT ?SetLocation@CDXUTControl@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetLocation@CDXUTControl@@QAEXHH@Z PROC		; CDXUTControl::SetLocation, COMDAT
; _this$ = ecx

; 388  :     void SetLocation( int x, int y ) { m_x = x; m_y = y; UpdateRects(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetLocation@CDXUTControl@@QAEXHH@Z ENDP		; CDXUTControl::SetLocation
_TEXT	ENDS
END
