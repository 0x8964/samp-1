; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\game\camera.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_fade	DW	016aH
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_set_camera_behind_player DW 0373H
	DB	00H
	ORG $+15
	ORG $+2
_point_camera DW 0160H
	DB	'fffi', 00H
	ORG $+11
	ORG $+2
_restore_camera_jumpcut DW 02ebH
	DB	00H
	ORG $+15
	ORG $+2
_set_camera_position DW 015fH
	DB	'ffffff', 00H
	ORG $+9
CONST	ENDS
PUBLIC	?SetBehindPlayer@CCamera@@QAEXXZ		; CCamera::SetBehindPlayer
PUBLIC	?SetPosition@CCamera@@QAEXMMMMMM@Z		; CCamera::SetPosition
PUBLIC	?LookAtPoint@CCamera@@QAEXMMMH@Z		; CCamera::LookAtPoint
PUBLIC	?Restore@CCamera@@QAEXXZ			; CCamera::Restore
PUBLIC	?Fade@CCamera@@QAEXH@Z				; CCamera::Fade
PUBLIC	?GetMatrix@CCamera@@QAEXPAU_MATRIX4X4@@@Z	; CCamera::GetMatrix
EXTRN	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ:PROC	; ScriptCommand
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__fltused:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\camera.cpp
;	COMDAT ?GetMatrix@CCamera@@QAEXPAU_MATRIX4X4@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Matrix$ = 8						; size = 4
?GetMatrix@CCamera@@QAEXPAU_MATRIX4X4@@@Z PROC		; CCamera::GetMatrix, COMDAT
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 54   : 	Matrix->right.X = m_matPos->right.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 55   : 	Matrix->right.Y = m_matPos->right.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 56   : 	Matrix->right.Z = m_matPos->right.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax

; 57   : 
; 58   : 	Matrix->up.X = m_matPos->up.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+16], eax

; 59   : 	Matrix->up.Y = m_matPos->up.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+20], eax

; 60   : 	Matrix->up.Z = m_matPos->up.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR [edx+24], eax

; 61   : 
; 62   : 	Matrix->at.X = m_matPos->at.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+32], eax

; 63   : 	Matrix->at.Y = m_matPos->at.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx+36], eax

; 64   : 	Matrix->at.Z = m_matPos->at.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+40]
	mov	DWORD PTR [edx+40], eax

; 65   : 
; 66   : 	Matrix->pos.X = m_matPos->pos.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [edx+48], eax

; 67   : 	Matrix->pos.Y = m_matPos->pos.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx+52], eax

; 68   : 	Matrix->pos.Z = m_matPos->pos.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _Matrix$[ebp]
	mov	eax, DWORD PTR [ecx+56]
	mov	DWORD PTR [edx+56], eax

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetMatrix@CCamera@@QAEXPAU_MATRIX4X4@@@Z ENDP		; CCamera::GetMatrix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\camera.cpp
;	COMDAT ?Fade@CCamera@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iInOut$ = 8						; size = 4
?Fade@CCamera@@QAEXH@Z PROC				; CCamera::Fade, COMDAT
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 	ScriptCommand(&fade,500,iInOut);

	mov	eax, DWORD PTR _iInOut$[ebp]
	push	eax
	push	500					; 000001f4H
	push	OFFSET _fade
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 48   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Fade@CCamera@@QAEXH@Z ENDP				; CCamera::Fade
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\camera.cpp
;	COMDAT ?Restore@CCamera@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Restore@CCamera@@QAEXXZ PROC				; CCamera::Restore, COMDAT
; _this$ = ecx

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 40   : 	ScriptCommand(&restore_camera_jumpcut);

	push	OFFSET _restore_camera_jumpcut
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 4

; 41   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Restore@CCamera@@QAEXXZ ENDP				; CCamera::Restore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\camera.cpp
;	COMDAT ?LookAtPoint@CCamera@@QAEXMMMH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_fZ$ = 16						; size = 4
_iType$ = 20						; size = 4
?LookAtPoint@CCamera@@QAEXMMMH@Z PROC			; CCamera::LookAtPoint, COMDAT
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 33   : 	ScriptCommand(&point_camera,fX,fY,fZ,iType);

	mov	eax, DWORD PTR _iType$[ebp]
	push	eax
	cvtss2sd xmm0, DWORD PTR _fZ$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET _point_camera
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 32					; 00000020H

; 34   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?LookAtPoint@CCamera@@QAEXMMMH@Z ENDP			; CCamera::LookAtPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\camera.cpp
;	COMDAT ?SetPosition@CCamera@@QAEXMMMMMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_fZ$ = 16						; size = 4
_fRotationX$ = 20					; size = 4
_fRotationY$ = 24					; size = 4
_fRotationZ$ = 28					; size = 4
?SetPosition@CCamera@@QAEXMMMMMM@Z PROC			; CCamera::SetPosition, COMDAT
; _this$ = ecx

; 25   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 26   : 	ScriptCommand(&set_camera_position,fX,fY,fZ,fRotationX,fRotationY,fRotationZ);

	cvtss2sd xmm0, DWORD PTR _fRotationZ$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fRotationY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fRotationX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fZ$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET _set_camera_position
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 52					; 00000034H

; 27   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?SetPosition@CCamera@@QAEXMMMMMM@Z ENDP			; CCamera::SetPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\camera.cpp
;	COMDAT ?SetBehindPlayer@CCamera@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetBehindPlayer@CCamera@@QAEXXZ PROC			; CCamera::SetBehindPlayer, COMDAT
; _this$ = ecx

; 16   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 17   : 	ScriptCommand(&set_camera_behind_player);

	push	OFFSET _set_camera_behind_player
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 4

; 18   : 	ScriptCommand(&restore_camera_jumpcut);

	push	OFFSET _restore_camera_jumpcut
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 4

; 19   : 	//ScriptCommand(&restore_camera);
; 20   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SetBehindPlayer@CCamera@@QAEXXZ ENDP			; CCamera::SetBehindPlayer
_TEXT	ENDS
END
