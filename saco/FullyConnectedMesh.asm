; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\raknet\FullyConnectedMesh.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??0PluginInterface@@QAE@XZ			; PluginInterface::PluginInterface
PUBLIC	??0FullyConnectedMesh@@QAE@XZ			; FullyConnectedMesh::FullyConnectedMesh
PUBLIC	??1FullyConnectedMesh@@UAE@XZ			; FullyConnectedMesh::~FullyConnectedMesh
PUBLIC	?Initialize@FullyConnectedMesh@@QAEXPBD@Z	; FullyConnectedMesh::Initialize
PUBLIC	?OnDisconnect@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z ; FullyConnectedMesh::OnDisconnect
PUBLIC	?Update@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z ; FullyConnectedMesh::Update
PUBLIC	?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ; FullyConnectedMesh::OnReceive
PUBLIC	??_GFullyConnectedMesh@@UAEPAXI@Z		; FullyConnectedMesh::`scalar deleting destructor'
PUBLIC	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>
PUBLIC	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z		; RakNet::BitStream::Read<unsigned int>
PUBLIC	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z		; RakNet::BitStream::Read<unsigned short>
PUBLIC	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z		; RakNet::BitStream::Read<unsigned char>
PUBLIC	??_7PluginInterface@@6B@			; PluginInterface::`vftable'
PUBLIC	??_7FullyConnectedMesh@@6B@			; FullyConnectedMesh::`vftable'
PUBLIC	?__LINE__Var@?1??OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA ; `FullyConnectedMesh::OnReceive'::`2'::__LINE__Var
PUBLIC	??_C@_1FO@LIONGLMP@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAu?$AAl?$AAl?$AAy?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1O@HMOJLPKG@?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_19OLDIEKDA@?$AAp?$AAe?$AAe?$AAr?$AA?$AA@	; `string'
PUBLIC	??_R4PluginInterface@@6B@			; PluginInterface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluginInterface@@@8			; PluginInterface `RTTI Type Descriptor'
PUBLIC	??_R3PluginInterface@@8				; PluginInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluginInterface@@8				; PluginInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluginInterface@@8		; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FullyConnectedMesh@@6B@			; FullyConnectedMesh::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFullyConnectedMesh@@@8			; FullyConnectedMesh `RTTI Type Descriptor'
PUBLIC	??_R3FullyConnectedMesh@@8			; FullyConnectedMesh::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FullyConnectedMesh@@8			; FullyConnectedMesh::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FullyConnectedMesh@@8		; FullyConnectedMesh::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnAttach
EXTRN	?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDetach
EXTRN	?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnInitialize
EXTRN	?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::Update
EXTRN	?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z:PROC ; PluginInterface::OnReceive
EXTRN	?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDisconnect
EXTRN	?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z:PROC ; PluginInterface::OnCloseConnection
EXTRN	?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketSend
EXTRN	?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketReceive
EXTRN	?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z:PROC ; PluginInterface::OnInternalPacket
EXTRN	??_EFullyConnectedMesh@@UAEPAXI@Z:PROC		; FullyConnectedMesh::`vector deleting destructor'
EXTRN	__wassert:PROC
EXTRN	??0BitStream@RakNet@@QAE@PAEI_N@Z:PROC		; RakNet::BitStream::BitStream
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?IgnoreBits@BitStream@RakNet@@QAEXH@Z:PROC	; RakNet::BitStream::IgnoreBits
EXTRN	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z:PROC	; RakNet::BitStream::ReadBits
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@FullyConnectedMesh@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FullyConnectedMesh@@8 DD FLAT:??_R0?AVFullyConnectedMesh@@@8 ; FullyConnectedMesh::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FullyConnectedMesh@@8
rdata$r	ENDS
;	COMDAT ??_R2FullyConnectedMesh@@8
rdata$r	SEGMENT
??_R2FullyConnectedMesh@@8 DD FLAT:??_R1A@?0A@EA@FullyConnectedMesh@@8 ; FullyConnectedMesh::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R3FullyConnectedMesh@@8
rdata$r	SEGMENT
??_R3FullyConnectedMesh@@8 DD 00H			; FullyConnectedMesh::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FullyConnectedMesh@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFullyConnectedMesh@@@8
data$r	SEGMENT
??_R0?AVFullyConnectedMesh@@@8 DD FLAT:??_7type_info@@6B@ ; FullyConnectedMesh `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFullyConnectedMesh@@', 00H
data$r	ENDS
;	COMDAT ??_R4FullyConnectedMesh@@6B@
rdata$r	SEGMENT
??_R4FullyConnectedMesh@@6B@ DD 00H			; FullyConnectedMesh::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFullyConnectedMesh@@@8
	DD	FLAT:??_R3FullyConnectedMesh@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluginInterface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluginInterface@@8 DD FLAT:??_R0?AVPluginInterface@@@8 ; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R2PluginInterface@@8
rdata$r	SEGMENT
??_R2PluginInterface@@8 DD FLAT:??_R1A@?0A@EA@PluginInterface@@8 ; PluginInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PluginInterface@@8
rdata$r	SEGMENT
??_R3PluginInterface@@8 DD 00H				; PluginInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluginInterface@@@8
data$r	SEGMENT
??_R0?AVPluginInterface@@@8 DD FLAT:??_7type_info@@6B@	; PluginInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluginInterface@@', 00H
data$r	ENDS
;	COMDAT ??_R4PluginInterface@@6B@
rdata$r	SEGMENT
??_R4PluginInterface@@6B@ DD 00H			; PluginInterface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluginInterface@@@8
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_C@_19OLDIEKDA@?$AAp?$AAe?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_19OLDIEKDA@?$AAp?$AAe?$AAe?$AAr?$AA?$AA@ DB 'p', 00H, 'e', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@HMOJLPKG@?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1O@HMOJLPKG@?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?$AA@ DB 'p', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, 'e', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@LIONGLMP@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAu?$AAl?$AAl?$AAy?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1FO@LIONGLMP@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAu?$AAl?$AAl?$AAy?$AAc?$AAo?$AAn@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'f', 00H, 'u', 00H, 'l'
	DB	00H, 'l', 00H, 'y', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'm', 00H, 'e'
	DB	00H, 's', 00H, 'h', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA DD 045H ; `FullyConnectedMesh::OnReceive'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7FullyConnectedMesh@@6B@
CONST	SEGMENT
??_7FullyConnectedMesh@@6B@ DD FLAT:??_R4FullyConnectedMesh@@6B@ ; FullyConnectedMesh::`vftable'
	DD	FLAT:?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
	DD	FLAT:??_EFullyConnectedMesh@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7PluginInterface@@6B@
CONST	SEGMENT
??_7PluginInterface@@6B@ DD FLAT:??_R4PluginInterface@@6B@ ; PluginInterface::`vftable'
	DD	FLAT:?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z$0
__ehfuncinfo$?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@E@BitStream@RakNet@@QAE_NAAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z PROC		; RakNet::BitStream::Read<unsigned char>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z ENDP		; RakNet::BitStream::Read<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@G@BitStream@RakNet@@QAE_NAAG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z PROC		; RakNet::BitStream::Read<unsigned short>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z ENDP		; RakNet::BitStream::Read<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@I@BitStream@RakNet@@QAE_NAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z PROC		; RakNet::BitStream::Read<unsigned int>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z ENDP		; RakNet::BitStream::Read<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z PROC ; RakNet::BitStream::Read<PlayerID>, COMDAT
; _this$ = ecx

; 1035 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1036 : 		Read(var.binaryAddress);

	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 1037 : 		return Read(var.port);

	mov	eax, DWORD PTR _var$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>

; 1038 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ENDP ; RakNet::BitStream::Read<PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFullyConnectedMesh@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFullyConnectedMesh@@UAEPAXI@Z PROC			; FullyConnectedMesh::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FullyConnectedMesh@@UAE@XZ		; FullyConnectedMesh::~FullyConnectedMesh
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFullyConnectedMesh@@UAEPAXI@Z ENDP			; FullyConnectedMesh::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\fullyconnectedmesh.cpp
;	COMDAT ?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
tv171 = -564						; size = 4
tv142 = -564						; size = 4
tv80 = -564						; size = 4
_node2$2 = -364						; size = 6
_node1$3 = -348						; size = 6
_group2$4 = -329					; size = 1
_group1$5 = -317					; size = 1
_b$6 = -308						; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z PROC ; FullyConnectedMesh::OnReceive, COMDAT
; _this$ = ecx

; 69   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 552				; 00000228H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-564]
	mov	ecx, 138				; 0000008aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 70   : 	assert(packet);

	cmp	DWORD PTR _packet$[ebp], 0
	jne	SHORT $LN8@OnReceive
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1FO@LIONGLMP@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAu?$AAl?$AAl?$AAy?$AAc?$AAo?$AAn@
	push	OFFSET ??_C@_1O@HMOJLPKG@?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN8@OnReceive:

; 71   : 	assert(peer);

	cmp	DWORD PTR _peer$[ebp], 0
	jne	SHORT $LN9@OnReceive
	mov	eax, DWORD PTR ?__LINE__Var@?1??OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_1FO@LIONGLMP@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAf?$AAu?$AAl?$AAl?$AAy?$AAc?$AAo?$AAn@
	push	OFFSET ??_C@_19OLDIEKDA@?$AAp?$AAe?$AAe?$AAr?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@OnReceive:

; 72   : 
; 73   : 	switch (packet->data[0])

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	cl, BYTE PTR [ecx+eax]
	mov	BYTE PTR tv80[ebp], cl
	cmp	BYTE PTR tv80[ebp], 42			; 0000002aH
	je	SHORT $LN3@OnReceive
	jmp	$LN4@OnReceive
$LN3@OnReceive:

; 74   : 	{
; 75   : 	case ID_REMOTE_NEW_INCOMING_CONNECTION: // This comes from the connection graph plugin
; 76   : 		{
; 77   : 			RakNet::BitStream b(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _b$6[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 78   : 			b.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _b$6[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 79   : 			ConnectionGraphGroupID group1, group2;
; 80   : 			PlayerID node1, node2;
; 81   : 			b.Read(node1);

	lea	eax, DWORD PTR _node1$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$6[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 82   : 			b.Read(group1);

	lea	eax, DWORD PTR _group1$5[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$6[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 83   : 			if (peer->GetIndexFromPlayerID(node1)==-1)

	mov	esi, esp
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _node1$3[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _node1$3[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	$LN2@OnReceive

; 84   : 				peer->Connect(peer->PlayerIDToDottedIP(node1), node1.port, pw, pw ? (int)strlen(pw) : 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN10@OnReceive
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv142[ebp], eax
	jmp	SHORT $LN11@OnReceive
$LN10@OnReceive:
	mov	DWORD PTR tv142[ebp], 0
$LN11@OnReceive:
	mov	esi, esp
	mov	eax, DWORD PTR tv142[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	movzx	eax, WORD PTR _node1$3[ebp+4]
	push	eax
	mov	edi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _node1$3[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _node1$3[ebp+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+184]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@OnReceive:

; 85   : 			b.Read(node2);

	lea	eax, DWORD PTR _node2$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$6[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 86   : 			b.Read(group2);

	lea	eax, DWORD PTR _group2$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$6[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 87   : 			if (peer->GetIndexFromPlayerID(node2)==-1)

	mov	esi, esp
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _node2$2[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _node2$2[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	$LN1@OnReceive

; 88   : 				peer->Connect(peer->PlayerIDToDottedIP(node2), node2.port, pw, pw ? (int)strlen(pw) : 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN12@OnReceive
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv171[ebp], eax
	jmp	SHORT $LN13@OnReceive
$LN12@OnReceive:
	mov	DWORD PTR tv171[ebp], 0
$LN13@OnReceive:
	mov	esi, esp
	mov	eax, DWORD PTR tv171[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	movzx	eax, WORD PTR _node2$2[ebp+4]
	push	eax
	mov	edi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _node2$2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _node2$2[ebp+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+184]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@OnReceive:

; 89   : 			break;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _b$6[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN4@OnReceive:

; 90   : 		}
; 91   : 	}
; 92   : 
; 93   : 	return RR_CONTINUE_PROCESSING;

	mov	eax, 1

; 94   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@OnReceive
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 564				; 00000234H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN22@OnReceive:
	DD	5
	DD	$LN21@OnReceive
$LN21@OnReceive:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN15@OnReceive
	DD	-317					; fffffec3H
	DD	1
	DD	$LN16@OnReceive
	DD	-329					; fffffeb7H
	DD	1
	DD	$LN17@OnReceive
	DD	-348					; fffffea4H
	DD	6
	DD	$LN18@OnReceive
	DD	-364					; fffffe94H
	DD	6
	DD	$LN19@OnReceive
$LN19@OnReceive:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN18@OnReceive:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
$LN17@OnReceive:
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	50					; 00000032H
	DB	0
$LN16@OnReceive:
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	49					; 00000031H
	DB	0
$LN15@OnReceive:
	DB	98					; 00000062H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _b$6[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-568]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnReceive@FullyConnectedMesh@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ENDP ; FullyConnectedMesh::OnReceive
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\fullyconnectedmesh.cpp
;	COMDAT ?Update@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?Update@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z PROC ; FullyConnectedMesh::Update, COMDAT
; _this$ = ecx

; 65   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z ENDP ; FullyConnectedMesh::Update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\fullyconnectedmesh.cpp
;	COMDAT ?OnDisconnect@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnDisconnect@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z PROC ; FullyConnectedMesh::OnDisconnect, COMDAT
; _this$ = ecx

; 58   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?OnDisconnect@FullyConnectedMesh@@UAEXPAVRakPeerInterface@@@Z ENDP ; FullyConnectedMesh::OnDisconnect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\fullyconnectedmesh.cpp
;	COMDAT ?Initialize@FullyConnectedMesh@@QAEXPBD@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_password$ = 8						; size = 4
?Initialize@FullyConnectedMesh@@QAEXPBD@Z PROC		; FullyConnectedMesh::Initialize, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 	if (pw)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Initialize

; 43   : 		delete [] pw;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3@Initialize:

; 44   : 	if (password && password[0])

	cmp	DWORD PTR _password$[ebp], 0
	je	SHORT $LN2@Initialize
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _password$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN2@Initialize

; 45   : 	{
; 46   : 		pw = new char [strlen(password)+1];

	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx

; 47   : 		strcpy(pw, password);

	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_strcpy
	add	esp, 8

; 48   : 	}
; 49   : 	else

	jmp	SHORT $LN4@Initialize
$LN2@Initialize:

; 50   : 		pw=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@Initialize:

; 51   : 	
; 52   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Initialize@FullyConnectedMesh@@QAEXPBD@Z ENDP		; FullyConnectedMesh::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\fullyconnectedmesh.cpp
;	COMDAT ??1FullyConnectedMesh@@UAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1FullyConnectedMesh@@UAE@XZ PROC			; FullyConnectedMesh::~FullyConnectedMesh, COMDAT
; _this$ = ecx

; 35   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FullyConnectedMesh@@6B@

; 36   : 	if (pw)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@FullyConne

; 37   : 		delete [] pw;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@FullyConne:

; 38   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FullyConnectedMesh@@UAE@XZ ENDP			; FullyConnectedMesh::~FullyConnectedMesh
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\fullyconnectedmesh.cpp
;	COMDAT ??0FullyConnectedMesh@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FullyConnectedMesh@@QAE@XZ PROC			; FullyConnectedMesh::FullyConnectedMesh, COMDAT
; _this$ = ecx

; 30   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluginInterface@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FullyConnectedMesh@@6B@

; 31   : 	pw=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 32   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FullyConnectedMesh@@QAE@XZ ENDP			; FullyConnectedMesh::FullyConnectedMesh
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluginInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluginInterface@@QAE@XZ PROC				; PluginInterface::PluginInterface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluginInterface@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluginInterface@@QAE@XZ ENDP				; PluginInterface::PluginInterface
_TEXT	ENDS
END
