; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\d3dhook\IDirect3DDevice9Hook.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?matPlayer@@3U_MATRIX4X4@@A			; matPlayer
PUBLIC	?matTest@@3U_MATRIX4X4@@A			; matTest
PUBLIC	?matLocal@@3U_MATRIX4X4@@A			; matLocal
PUBLIC	?vecCam@@3U_VECTOR@@A				; vecCam
PUBLIC	?vecColPoint@@3U_VECTOR@@A			; vecColPoint
PUBLIC	?vecRemotePlayer@@3U_VECTOR@@A			; vecRemotePlayer
PUBLIC	?dwSavedEBP@@3KA				; dwSavedEBP
PUBLIC	?dwHitEntity@@3KA				; dwHitEntity
PUBLIC	?pHitEntity@@3PAKA				; pHitEntity
PUBLIC	?dwTestPtr@@3KA					; dwTestPtr
PUBLIC	?dwD3DDev@@3KA					; dwD3DDev
PUBLIC	?szBuffer@@3PADA				; szBuffer
_BSS	SEGMENT
?matPlayer@@3U_MATRIX4X4@@A DB 040H DUP (?)		; matPlayer
?matTest@@3U_MATRIX4X4@@A DB 040H DUP (?)		; matTest
?matLocal@@3U_MATRIX4X4@@A DB 040H DUP (?)		; matLocal
?vecCam@@3U_VECTOR@@A DB 0cH DUP (?)			; vecCam
?vecColPoint@@3U_VECTOR@@A DB 0cH DUP (?)		; vecColPoint
?vecRemotePlayer@@3U_VECTOR@@A DB 0cH DUP (?)		; vecRemotePlayer
?dwSavedEBP@@3KA DD 01H DUP (?)				; dwSavedEBP
?dwHitEntity@@3KA DD 01H DUP (?)			; dwHitEntity
?dwTestPtr@@3KA DD 01H DUP (?)				; dwTestPtr
?dwD3DDev@@3KA DD 01H DUP (?)				; dwD3DDev
?szBuffer@@3PADA DB 080H DUP (?)			; szBuffer
_BSS	ENDS
CONST	SEGMENT
_get_line_of_sight DW 06bdH
	DB	'ffffffiiiii', 00H
	ORG $+4
CONST	ENDS
_DATA	SEGMENT
_FindGroundZForCoord DD 0569660H
?pHitEntity@@3PAKA DD FLAT:?dwHitEntity@@3KA		; pHitEntity
_DATA	ENDS
PUBLIC	_hypot
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??0D3DXMATRIX@@QAE@ABU_D3DMATRIX@@@Z		; D3DXMATRIX::D3DXMATRIX
PUBLIC	?QueryInterface@IDirect3DDevice9Hook@@UAGJABU_GUID@@PAPAX@Z ; IDirect3DDevice9Hook::QueryInterface
PUBLIC	?AddRef@IDirect3DDevice9Hook@@UAGKXZ		; IDirect3DDevice9Hook::AddRef
PUBLIC	?Release@IDirect3DDevice9Hook@@UAGKXZ		; IDirect3DDevice9Hook::Release
PUBLIC	?TestCooperativeLevel@IDirect3DDevice9Hook@@UAGJXZ ; IDirect3DDevice9Hook::TestCooperativeLevel
PUBLIC	?GetAvailableTextureMem@IDirect3DDevice9Hook@@UAGIXZ ; IDirect3DDevice9Hook::GetAvailableTextureMem
PUBLIC	?EvictManagedResources@IDirect3DDevice9Hook@@UAGJXZ ; IDirect3DDevice9Hook::EvictManagedResources
PUBLIC	?GetDirect3D@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3D9@@@Z ; IDirect3DDevice9Hook::GetDirect3D
PUBLIC	?GetDeviceCaps@IDirect3DDevice9Hook@@UAGJPAU_D3DCAPS9@@@Z ; IDirect3DDevice9Hook::GetDeviceCaps
PUBLIC	?GetDisplayMode@IDirect3DDevice9Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z ; IDirect3DDevice9Hook::GetDisplayMode
PUBLIC	?GetCreationParameters@IDirect3DDevice9Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z ; IDirect3DDevice9Hook::GetCreationParameters
PUBLIC	?SetCursorProperties@IDirect3DDevice9Hook@@UAGJIIPAUIDirect3DSurface9@@@Z ; IDirect3DDevice9Hook::SetCursorProperties
PUBLIC	?SetCursorPosition@IDirect3DDevice9Hook@@UAGXHHK@Z ; IDirect3DDevice9Hook::SetCursorPosition
PUBLIC	?ShowCursor@IDirect3DDevice9Hook@@UAGHH@Z	; IDirect3DDevice9Hook::ShowCursor
PUBLIC	?CreateAdditionalSwapChain@IDirect3DDevice9Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain9@@@Z ; IDirect3DDevice9Hook::CreateAdditionalSwapChain
PUBLIC	?GetSwapChain@IDirect3DDevice9Hook@@UAGJIPAPAUIDirect3DSwapChain9@@@Z ; IDirect3DDevice9Hook::GetSwapChain
PUBLIC	?GetNumberOfSwapChains@IDirect3DDevice9Hook@@UAGIXZ ; IDirect3DDevice9Hook::GetNumberOfSwapChains
PUBLIC	?Reset@IDirect3DDevice9Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z ; IDirect3DDevice9Hook::Reset
PUBLIC	?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z ; IDirect3DDevice9Hook::Present
PUBLIC	?GetBackBuffer@IDirect3DDevice9Hook@@UAGJIIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface9@@@Z ; IDirect3DDevice9Hook::GetBackBuffer
PUBLIC	?GetRasterStatus@IDirect3DDevice9Hook@@UAGJIPAU_D3DRASTER_STATUS@@@Z ; IDirect3DDevice9Hook::GetRasterStatus
PUBLIC	?SetDialogBoxMode@IDirect3DDevice9Hook@@UAGJH@Z	; IDirect3DDevice9Hook::SetDialogBoxMode
PUBLIC	?SetGammaRamp@IDirect3DDevice9Hook@@UAGXIKPBU_D3DGAMMARAMP@@@Z ; IDirect3DDevice9Hook::SetGammaRamp
PUBLIC	?GetGammaRamp@IDirect3DDevice9Hook@@UAGXIPAU_D3DGAMMARAMP@@@Z ; IDirect3DDevice9Hook::GetGammaRamp
PUBLIC	?CreateTexture@IDirect3DDevice9Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture9@@PAPAX@Z ; IDirect3DDevice9Hook::CreateTexture
PUBLIC	?CreateVolumeTexture@IDirect3DDevice9Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture9@@PAPAX@Z ; IDirect3DDevice9Hook::CreateVolumeTexture
PUBLIC	?CreateCubeTexture@IDirect3DDevice9Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture9@@PAPAX@Z ; IDirect3DDevice9Hook::CreateCubeTexture
PUBLIC	?CreateVertexBuffer@IDirect3DDevice9Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer9@@PAPAX@Z ; IDirect3DDevice9Hook::CreateVertexBuffer
PUBLIC	?CreateIndexBuffer@IDirect3DDevice9Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer9@@PAPAX@Z ; IDirect3DDevice9Hook::CreateIndexBuffer
PUBLIC	?CreateRenderTarget@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@KHPAPAUIDirect3DSurface9@@PAPAX@Z ; IDirect3DDevice9Hook::CreateRenderTarget
PUBLIC	?CreateDepthStencilSurface@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@KHPAPAUIDirect3DSurface9@@PAPAX@Z ; IDirect3DDevice9Hook::CreateDepthStencilSurface
PUBLIC	?UpdateSurface@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@0PBUtagPOINT@@@Z ; IDirect3DDevice9Hook::UpdateSurface
PUBLIC	?UpdateTexture@IDirect3DDevice9Hook@@UAGJPAUIDirect3DBaseTexture9@@0@Z ; IDirect3DDevice9Hook::UpdateTexture
PUBLIC	?GetRenderTargetData@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@0@Z ; IDirect3DDevice9Hook::GetRenderTargetData
PUBLIC	?GetFrontBufferData@IDirect3DDevice9Hook@@UAGJIPAUIDirect3DSurface9@@@Z ; IDirect3DDevice9Hook::GetFrontBufferData
PUBLIC	?StretchRect@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@01W4_D3DTEXTUREFILTERTYPE@@@Z ; IDirect3DDevice9Hook::StretchRect
PUBLIC	?ColorFill@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@K@Z ; IDirect3DDevice9Hook::ColorFill
PUBLIC	?CreateOffscreenPlainSurface@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DSurface9@@PAPAX@Z ; IDirect3DDevice9Hook::CreateOffscreenPlainSurface
PUBLIC	?SetRenderTarget@IDirect3DDevice9Hook@@UAGJKPAUIDirect3DSurface9@@@Z ; IDirect3DDevice9Hook::SetRenderTarget
PUBLIC	?GetRenderTarget@IDirect3DDevice9Hook@@UAGJKPAPAUIDirect3DSurface9@@@Z ; IDirect3DDevice9Hook::GetRenderTarget
PUBLIC	?SetDepthStencilSurface@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@@Z ; IDirect3DDevice9Hook::SetDepthStencilSurface
PUBLIC	?GetDepthStencilSurface@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DSurface9@@@Z ; IDirect3DDevice9Hook::GetDepthStencilSurface
PUBLIC	?BeginScene@IDirect3DDevice9Hook@@UAGJXZ	; IDirect3DDevice9Hook::BeginScene
PUBLIC	?EndScene@IDirect3DDevice9Hook@@UAGJXZ		; IDirect3DDevice9Hook::EndScene
PUBLIC	?Clear@IDirect3DDevice9Hook@@UAGJKPBU_D3DRECT@@KKMK@Z ; IDirect3DDevice9Hook::Clear
PUBLIC	?SetTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; IDirect3DDevice9Hook::SetTransform
PUBLIC	?GetTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; IDirect3DDevice9Hook::GetTransform
PUBLIC	?MultiplyTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; IDirect3DDevice9Hook::MultiplyTransform
PUBLIC	?SetViewport@IDirect3DDevice9Hook@@UAGJPBU_D3DVIEWPORT9@@@Z ; IDirect3DDevice9Hook::SetViewport
PUBLIC	?GetViewport@IDirect3DDevice9Hook@@UAGJPAU_D3DVIEWPORT9@@@Z ; IDirect3DDevice9Hook::GetViewport
PUBLIC	?SetMaterial@IDirect3DDevice9Hook@@UAGJPBU_D3DMATERIAL9@@@Z ; IDirect3DDevice9Hook::SetMaterial
PUBLIC	?GetMaterial@IDirect3DDevice9Hook@@UAGJPAU_D3DMATERIAL9@@@Z ; IDirect3DDevice9Hook::GetMaterial
PUBLIC	?SetLight@IDirect3DDevice9Hook@@UAGJKPBU_D3DLIGHT9@@@Z ; IDirect3DDevice9Hook::SetLight
PUBLIC	?GetLight@IDirect3DDevice9Hook@@UAGJKPAU_D3DLIGHT9@@@Z ; IDirect3DDevice9Hook::GetLight
PUBLIC	?LightEnable@IDirect3DDevice9Hook@@UAGJKH@Z	; IDirect3DDevice9Hook::LightEnable
PUBLIC	?GetLightEnable@IDirect3DDevice9Hook@@UAGJKPAH@Z ; IDirect3DDevice9Hook::GetLightEnable
PUBLIC	?SetClipPlane@IDirect3DDevice9Hook@@UAGJKPBM@Z	; IDirect3DDevice9Hook::SetClipPlane
PUBLIC	?GetClipPlane@IDirect3DDevice9Hook@@UAGJKPAM@Z	; IDirect3DDevice9Hook::GetClipPlane
PUBLIC	?SetRenderState@IDirect3DDevice9Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z ; IDirect3DDevice9Hook::SetRenderState
PUBLIC	?GetRenderState@IDirect3DDevice9Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z ; IDirect3DDevice9Hook::GetRenderState
PUBLIC	?CreateStateBlock@IDirect3DDevice9Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAPAUIDirect3DStateBlock9@@@Z ; IDirect3DDevice9Hook::CreateStateBlock
PUBLIC	?BeginStateBlock@IDirect3DDevice9Hook@@UAGJXZ	; IDirect3DDevice9Hook::BeginStateBlock
PUBLIC	?EndStateBlock@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DStateBlock9@@@Z ; IDirect3DDevice9Hook::EndStateBlock
PUBLIC	?SetClipStatus@IDirect3DDevice9Hook@@UAGJPBU_D3DCLIPSTATUS9@@@Z ; IDirect3DDevice9Hook::SetClipStatus
PUBLIC	?GetClipStatus@IDirect3DDevice9Hook@@UAGJPAU_D3DCLIPSTATUS9@@@Z ; IDirect3DDevice9Hook::GetClipStatus
PUBLIC	?GetTexture@IDirect3DDevice9Hook@@UAGJKPAPAUIDirect3DBaseTexture9@@@Z ; IDirect3DDevice9Hook::GetTexture
PUBLIC	?SetTexture@IDirect3DDevice9Hook@@UAGJKPAUIDirect3DBaseTexture9@@@Z ; IDirect3DDevice9Hook::SetTexture
PUBLIC	?GetTextureStageState@IDirect3DDevice9Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z ; IDirect3DDevice9Hook::GetTextureStageState
PUBLIC	?SetTextureStageState@IDirect3DDevice9Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; IDirect3DDevice9Hook::SetTextureStageState
PUBLIC	?GetSamplerState@IDirect3DDevice9Hook@@UAGJKW4_D3DSAMPLERSTATETYPE@@PAK@Z ; IDirect3DDevice9Hook::GetSamplerState
PUBLIC	?SetSamplerState@IDirect3DDevice9Hook@@UAGJKW4_D3DSAMPLERSTATETYPE@@K@Z ; IDirect3DDevice9Hook::SetSamplerState
PUBLIC	?ValidateDevice@IDirect3DDevice9Hook@@UAGJPAK@Z	; IDirect3DDevice9Hook::ValidateDevice
PUBLIC	?SetPaletteEntries@IDirect3DDevice9Hook@@UAGJIPBUtagPALETTEENTRY@@@Z ; IDirect3DDevice9Hook::SetPaletteEntries
PUBLIC	?GetPaletteEntries@IDirect3DDevice9Hook@@UAGJIPAUtagPALETTEENTRY@@@Z ; IDirect3DDevice9Hook::GetPaletteEntries
PUBLIC	?SetCurrentTexturePalette@IDirect3DDevice9Hook@@UAGJI@Z ; IDirect3DDevice9Hook::SetCurrentTexturePalette
PUBLIC	?GetCurrentTexturePalette@IDirect3DDevice9Hook@@UAGJPAI@Z ; IDirect3DDevice9Hook::GetCurrentTexturePalette
PUBLIC	?SetScissorRect@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@@Z ; IDirect3DDevice9Hook::SetScissorRect
PUBLIC	?GetScissorRect@IDirect3DDevice9Hook@@UAGJPAUtagRECT@@@Z ; IDirect3DDevice9Hook::GetScissorRect
PUBLIC	?SetSoftwareVertexProcessing@IDirect3DDevice9Hook@@UAGJH@Z ; IDirect3DDevice9Hook::SetSoftwareVertexProcessing
PUBLIC	?GetSoftwareVertexProcessing@IDirect3DDevice9Hook@@UAGHXZ ; IDirect3DDevice9Hook::GetSoftwareVertexProcessing
PUBLIC	?SetNPatchMode@IDirect3DDevice9Hook@@UAGJM@Z	; IDirect3DDevice9Hook::SetNPatchMode
PUBLIC	?GetNPatchMode@IDirect3DDevice9Hook@@UAGMXZ	; IDirect3DDevice9Hook::GetNPatchMode
PUBLIC	?DrawPrimitive@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z ; IDirect3DDevice9Hook::DrawPrimitive
PUBLIC	?DrawIndexedPrimitive@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@HIIII@Z ; IDirect3DDevice9Hook::DrawIndexedPrimitive
PUBLIC	?DrawPrimitiveUP@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; IDirect3DDevice9Hook::DrawPrimitiveUP
PUBLIC	?DrawIndexedPrimitiveUP@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z ; IDirect3DDevice9Hook::DrawIndexedPrimitiveUP
PUBLIC	?ProcessVertices@IDirect3DDevice9Hook@@UAGJIIIPAUIDirect3DVertexBuffer9@@PAUIDirect3DVertexDeclaration9@@K@Z ; IDirect3DDevice9Hook::ProcessVertices
PUBLIC	?CreateVertexDeclaration@IDirect3DDevice9Hook@@UAGJPBU_D3DVERTEXELEMENT9@@PAPAUIDirect3DVertexDeclaration9@@@Z ; IDirect3DDevice9Hook::CreateVertexDeclaration
PUBLIC	?SetVertexDeclaration@IDirect3DDevice9Hook@@UAGJPAUIDirect3DVertexDeclaration9@@@Z ; IDirect3DDevice9Hook::SetVertexDeclaration
PUBLIC	?GetVertexDeclaration@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DVertexDeclaration9@@@Z ; IDirect3DDevice9Hook::GetVertexDeclaration
PUBLIC	?SetFVF@IDirect3DDevice9Hook@@UAGJK@Z		; IDirect3DDevice9Hook::SetFVF
PUBLIC	?GetFVF@IDirect3DDevice9Hook@@UAGJPAK@Z		; IDirect3DDevice9Hook::GetFVF
PUBLIC	?CreateVertexShader@IDirect3DDevice9Hook@@UAGJPBKPAPAUIDirect3DVertexShader9@@@Z ; IDirect3DDevice9Hook::CreateVertexShader
PUBLIC	?SetVertexShader@IDirect3DDevice9Hook@@UAGJPAUIDirect3DVertexShader9@@@Z ; IDirect3DDevice9Hook::SetVertexShader
PUBLIC	?GetVertexShader@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DVertexShader9@@@Z ; IDirect3DDevice9Hook::GetVertexShader
PUBLIC	?SetVertexShaderConstantF@IDirect3DDevice9Hook@@UAGJIPBMI@Z ; IDirect3DDevice9Hook::SetVertexShaderConstantF
PUBLIC	?GetVertexShaderConstantF@IDirect3DDevice9Hook@@UAGJIPAMI@Z ; IDirect3DDevice9Hook::GetVertexShaderConstantF
PUBLIC	?SetVertexShaderConstantI@IDirect3DDevice9Hook@@UAGJIPBHI@Z ; IDirect3DDevice9Hook::SetVertexShaderConstantI
PUBLIC	?GetVertexShaderConstantI@IDirect3DDevice9Hook@@UAGJIPAHI@Z ; IDirect3DDevice9Hook::GetVertexShaderConstantI
PUBLIC	?SetVertexShaderConstantB@IDirect3DDevice9Hook@@UAGJIPBHI@Z ; IDirect3DDevice9Hook::SetVertexShaderConstantB
PUBLIC	?GetVertexShaderConstantB@IDirect3DDevice9Hook@@UAGJIPAHI@Z ; IDirect3DDevice9Hook::GetVertexShaderConstantB
PUBLIC	?SetStreamSource@IDirect3DDevice9Hook@@UAGJIPAUIDirect3DVertexBuffer9@@II@Z ; IDirect3DDevice9Hook::SetStreamSource
PUBLIC	?GetStreamSource@IDirect3DDevice9Hook@@UAGJIPAPAUIDirect3DVertexBuffer9@@PAI1@Z ; IDirect3DDevice9Hook::GetStreamSource
PUBLIC	?SetStreamSourceFreq@IDirect3DDevice9Hook@@UAGJII@Z ; IDirect3DDevice9Hook::SetStreamSourceFreq
PUBLIC	?GetStreamSourceFreq@IDirect3DDevice9Hook@@UAGJIPAI@Z ; IDirect3DDevice9Hook::GetStreamSourceFreq
PUBLIC	?SetIndices@IDirect3DDevice9Hook@@UAGJPAUIDirect3DIndexBuffer9@@@Z ; IDirect3DDevice9Hook::SetIndices
PUBLIC	?GetIndices@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DIndexBuffer9@@@Z ; IDirect3DDevice9Hook::GetIndices
PUBLIC	?CreatePixelShader@IDirect3DDevice9Hook@@UAGJPBKPAPAUIDirect3DPixelShader9@@@Z ; IDirect3DDevice9Hook::CreatePixelShader
PUBLIC	?SetPixelShader@IDirect3DDevice9Hook@@UAGJPAUIDirect3DPixelShader9@@@Z ; IDirect3DDevice9Hook::SetPixelShader
PUBLIC	?GetPixelShader@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DPixelShader9@@@Z ; IDirect3DDevice9Hook::GetPixelShader
PUBLIC	?SetPixelShaderConstantF@IDirect3DDevice9Hook@@UAGJIPBMI@Z ; IDirect3DDevice9Hook::SetPixelShaderConstantF
PUBLIC	?GetPixelShaderConstantF@IDirect3DDevice9Hook@@UAGJIPAMI@Z ; IDirect3DDevice9Hook::GetPixelShaderConstantF
PUBLIC	?SetPixelShaderConstantI@IDirect3DDevice9Hook@@UAGJIPBHI@Z ; IDirect3DDevice9Hook::SetPixelShaderConstantI
PUBLIC	?GetPixelShaderConstantI@IDirect3DDevice9Hook@@UAGJIPAHI@Z ; IDirect3DDevice9Hook::GetPixelShaderConstantI
PUBLIC	?SetPixelShaderConstantB@IDirect3DDevice9Hook@@UAGJIPBHI@Z ; IDirect3DDevice9Hook::SetPixelShaderConstantB
PUBLIC	?GetPixelShaderConstantB@IDirect3DDevice9Hook@@UAGJIPAHI@Z ; IDirect3DDevice9Hook::GetPixelShaderConstantB
PUBLIC	?DrawRectPatch@IDirect3DDevice9Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z ; IDirect3DDevice9Hook::DrawRectPatch
PUBLIC	?DrawTriPatch@IDirect3DDevice9Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z ; IDirect3DDevice9Hook::DrawTriPatch
PUBLIC	?DeletePatch@IDirect3DDevice9Hook@@UAGJI@Z	; IDirect3DDevice9Hook::DeletePatch
PUBLIC	?CreateQuery@IDirect3DDevice9Hook@@UAGJW4_D3DQUERYTYPE@@PAPAUIDirect3DQuery9@@@Z ; IDirect3DDevice9Hook::CreateQuery
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ	; CGame::GetMainWindowHwnd
PUBLIC	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ	; CGame::FindPlayerPed
PUBLIC	?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ; CRemotePlayer::GetPlayerPed
PUBLIC	?IsActive@CRemotePlayer@@QAEHXZ			; CRemotePlayer::IsActive
PUBLIC	?GetReportedHealth@CRemotePlayer@@QAEMXZ	; CRemotePlayer::GetReportedHealth
PUBLIC	?GetReportedArmour@CRemotePlayer@@QAEMXZ	; CRemotePlayer::GetReportedArmour
PUBLIC	?GetPlayerName@CPlayerPool@@QAEPADE@Z		; CPlayerPool::GetPlayerName
PUBLIC	?GetAt@CPlayerPool@@QAEPAVCRemotePlayer@@E@Z	; CPlayerPool::GetAt
PUBLIC	?GetSlotState@CPlayerPool@@QAEHE@Z		; CPlayerPool::GetSlotState
PUBLIC	?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z	; CVehiclePool::GetAt
PUBLIC	?GetSlotState@CVehiclePool@@QAEHG@Z		; CVehiclePool::GetSlotState
PUBLIC	?GetVehicleVirtualWorld@CVehiclePool@@QAEEG@Z	; CVehiclePool::GetVehicleVirtualWorld
PUBLIC	?GetPlayerPool@CNetGame@@QAEPAVCPlayerPool@@XZ	; CNetGame::GetPlayerPool
PUBLIC	?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ; CNetGame::GetVehiclePool
PUBLIC	?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ ; CNetGame::GetRakClient
PUBLIC	?GetGameState@CNetGame@@QAEHXZ			; CNetGame::GetGameState
PUBLIC	?isEnabled@CCmdWindow@@QAEHXZ			; CCmdWindow::isEnabled
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?RenderPlayerTags@@YGXXZ			; RenderPlayerTags
PUBLIC	??$Write@M@BitStream@RakNet@@QAEXM@Z		; RakNet::BitStream::Write<float>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?matView@@3UD3DXMATRIX@@A			; matView
PUBLIC	?matProj@@3UD3DXMATRIX@@A			; matProj
PUBLIC	?PlayerPos@@3UD3DXVECTOR3@@A			; PlayerPos
PUBLIC	??_C@_06BPGFIOAL@?$CFs?$CI?$CFd?$CJ?$AA@	; `string'
PUBLIC	??_C@_0BG@HIFLIMMB@Screenshot?5Taken?5?9?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BL@OIDJAMNC@Unable?5to?5save?5screenshot?4?$AA@ ; `string'
PUBLIC	??_C@_0FH@IHBOGFPJ@Offset?3?5?$CFX?6Vehicle?5?$FLid?3?5?$CFd?0?5type@ ; `string'
PUBLIC	??_C@_0EE@NOJKDLMO@Offset?3?5?$CFX?6Player?5?$FLid?3?5?$CFd?$FN?6Healt@ ; `string'
PUBLIC	??_C@_02IGCIGBLK@dl?$AA@			; `string'
PUBLIC	??_C@_1IO@GEGDPIKI@?$AAz?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@41200000
PUBLIC	__real@428c0000
PUBLIC	__real@42a00000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__ClientToScreen@8:PROC
EXTRN	__hypot:PROC
EXTRN	_D3DXSaveSurfaceToFileA@20:PROC
EXTRN	_sprintf:PROC
EXTRN	?OnRender@CDXUTDialog@@QAEJM@Z:PROC		; CDXUTDialog::OnRender
EXTRN	?GameDebugDrawDebugScreens@@YAXXZ:PROC		; GameDebugDrawDebugScreens
EXTRN	?IsAdded@CEntity@@QAEHXZ:PROC			; CEntity::IsAdded
EXTRN	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z:PROC	; CEntity::GetMatrix
EXTRN	?GetModelIndex@CEntity@@QAEIXZ:PROC		; CEntity::GetModelIndex
EXTRN	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ:PROC ; CEntity::GetDistanceFromLocalPlayerPed
EXTRN	?GetHealth@CVehicle@@QAEMXZ:PROC		; CVehicle::GetHealth
EXTRN	?GameGetInternalAim@@YGPAU_CAMERA_AIM@@XZ:PROC	; GameGetInternalAim
EXTRN	?GetHealth@CPlayerPed@@QAEMXZ:PROC		; CPlayerPed::GetHealth
EXTRN	?IsInVehicle@CPlayerPed@@QAEHXZ:PROC		; CPlayerPed::IsInVehicle
EXTRN	?GetActionTrigger@CPlayerPed@@QAEEXZ:PROC	; CPlayerPed::GetActionTrigger
EXTRN	?IsAPassenger@CPlayerPed@@QAEHXZ:PROC		; CPlayerPed::IsAPassenger
EXTRN	??0CPlayerPed@@QAE@XZ:PROC			; CPlayerPed::CPlayerPed
EXTRN	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ:PROC	; ScriptCommand
EXTRN	?IsMenuActive@CGame@@QAEHXZ:PROC		; CGame::IsMenuActive
EXTRN	?DisplayHud@CGame@@QAEXH@Z:PROC			; CGame::DisplayHud
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z:PROC	; RakNet::BitStream::WriteBits
EXTRN	?GetDistanceFromLocalPlayer@CRemotePlayer@@QAEMXZ:PROC ; CRemotePlayer::GetDistanceFromLocalPlayer
EXTRN	?GetPlayerColorAsARGB@CRemotePlayer@@QAEKXZ:PROC ; CRemotePlayer::GetPlayerColorAsARGB
EXTRN	?Draw@CChatWindow@@QAEXXZ:PROC			; CChatWindow::Draw
EXTRN	?AddInfoMessage@CChatWindow@@QAAXPADZZ:PROC	; CChatWindow::AddInfoMessage
EXTRN	?AddDebugMessage@CChatWindow@@QAAXPADZZ:PROC	; CChatWindow::AddDebugMessage
EXTRN	?Draw@CCmdWindow@@QAEXXZ:PROC			; CCmdWindow::Draw
EXTRN	?Draw@CDeathWindow@@QAEXXZ:PROC			; CDeathWindow::Draw
EXTRN	?Draw@CSpawnScreen@@QAEXXZ:PROC			; CSpawnScreen::Draw
EXTRN	?Begin@CNewPlayerTags@@QAEXXZ:PROC		; CNewPlayerTags::Begin
EXTRN	?End@CNewPlayerTags@@QAEXXZ:PROC		; CNewPlayerTags::End
EXTRN	?Draw@CNewPlayerTags@@QAEXPAUD3DXVECTOR3@@PADKMMM@Z:PROC ; CNewPlayerTags::Draw
EXTRN	?Draw@CScoreBoard@@QAEXXZ:PROC			; CScoreBoard::Draw
EXTRN	?Draw@CLabel@@QAEXPAUD3DXVECTOR3@@PADK@Z:PROC	; CLabel::Draw
EXTRN	?Draw@CNetStats@@QAEXXZ:PROC			; CNetStats::Draw
EXTRN	?Draw@CSvrNetStats@@QAEXXZ:PROC			; CSvrNetStats::Draw
EXTRN	?Draw@CHelpDialog@@QAEXXZ:PROC			; CHelpDialog::Draw
EXTRN	?GameForcedExit@@YAXH@Z:PROC			; GameForcedExit
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?d3d9DestroyDeviceObjects@@YAXXZ:PROC		; d3d9DestroyDeviceObjects
EXTRN	?d3d9RestoreDeviceObjects@@YAXXZ:PROC		; d3d9RestoreDeviceObjects
EXTRN	?GetScreenshotFileName@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; GetScreenshotFileName
EXTRN	?DoCheatDataStoring@@YAXXZ:PROC			; DoCheatDataStoring
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?pD3DDevice@@3PAUIDirect3DDevice9@@A:DWORD	; pD3DDevice
EXTRN	?g_bTakeScreenshot@@3HA:DWORD			; g_bTakeScreenshot
EXTRN	?pNetGame@@3PAVCNetGame@@A:DWORD		; pNetGame
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	?pCmdWindow@@3PAVCCmdWindow@@A:DWORD		; pCmdWindow
EXTRN	?pDeathWindow@@3PAVCDeathWindow@@A:DWORD	; pDeathWindow
EXTRN	?pSpawnScreen@@3PAVCSpawnScreen@@A:DWORD	; pSpawnScreen
EXTRN	?pNetStats@@3PAVCNetStats@@A:DWORD		; pNetStats
EXTRN	?pSvrNetStats@@3PAVCSvrNetStats@@A:DWORD	; pSvrNetStats
EXTRN	?pScoreBoard@@3PAVCScoreBoard@@A:DWORD		; pScoreBoard
EXTRN	?pNewPlayerTags@@3PAVCNewPlayerTags@@A:DWORD	; pNewPlayerTags
EXTRN	?pLabel@@3PAVCLabel@@A:DWORD			; pLabel
EXTRN	?pHelpDialog@@3PAVCHelpDialog@@A:DWORD		; pHelpDialog
EXTRN	?pGameUI@@3PAVCDXUTDialog@@A:DWORD		; pGameUI
EXTRN	?bShowDebugLabels@@3_NA:BYTE			; bShowDebugLabels
EXTRN	?dwD3D9DllBaseAddr@@3KA:DWORD			; dwD3D9DllBaseAddr
EXTRN	?dwD3D9DllSize@@3KA:DWORD			; dwD3D9DllSize
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?matView@@3UD3DXMATRIX@@A DB 040H DUP (?)		; matView
?matProj@@3UD3DXMATRIX@@A DB 040H DUP (?)		; matProj
?PlayerPos@@3UD3DXVECTOR3@@A DB 0cH DUP (?)		; PlayerPos
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@42a00000
CONST	SEGMENT
__real@42a00000 DD 042a00000r			; 80
CONST	ENDS
;	COMDAT __real@428c0000
CONST	SEGMENT
__real@428c0000 DD 0428c0000r			; 70
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@GEGDPIKI@?$AAz?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@GEGDPIKI@?$AAz?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02IGCIGBLK@dl?$AA@
CONST	SEGMENT
??_C@_02IGCIGBLK@dl?$AA@ DB 'dl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@NOJKDLMO@Offset?3?5?$CFX?6Player?5?$FLid?3?5?$CFd?$FN?6Healt@
CONST	SEGMENT
??_C@_0EE@NOJKDLMO@Offset?3?5?$CFX?6Player?5?$FLid?3?5?$CFd?$FN?6Healt@ DB 'O'
	DB	'ffset: %X', 0aH, 'Player [id: %d]', 0aH, 'Health: %.1f', 0aH, ' '
	DB	'Distance: %.2fm', 0aH, 'Action: %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@IHBOGFPJ@Offset?3?5?$CFX?6Vehicle?5?$FLid?3?5?$CFd?0?5type@
CONST	SEGMENT
??_C@_0FH@IHBOGFPJ@Offset?3?5?$CFX?6Vehicle?5?$FLid?3?5?$CFd?0?5type@ DB 'O'
	DB	'ffset: %X', 0aH, 'Vehicle [id: %d, type: %d]', 0aH, 'Health: '
	DB	'%.1f', 0aH, ' Distance: %.2fm', 0aH, 'Trailer: %X', 0aH, 'VW:'
	DB	' %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OIDJAMNC@Unable?5to?5save?5screenshot?4?$AA@
CONST	SEGMENT
??_C@_0BL@OIDJAMNC@Unable?5to?5save?5screenshot?4?$AA@ DB 'Unable to save'
	DB	' screenshot.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HIFLIMMB@Screenshot?5Taken?5?9?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BG@HIFLIMMB@Screenshot?5Taken?5?9?5?$CFs?$AA@ DB 'Screenshot Taken'
	DB	' - %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFIOAL@?$CFs?$CI?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_06BPGFIOAL@?$CFs?$CI?$CFd?$CJ?$AA@ DB '%s(%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0
__ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z$1
__ehfuncinfo$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_matView$initializer$ DD FLAT:??__EmatView@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_matProj$initializer$ DD FLAT:??__EmatProj@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_PlayerPos$initializer$ DD FLAT:??__EPlayerPos@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 601  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 254  : 	__PURE_APPDOMAIN_GLOBAL locale::id numpunct<_Elem>::id;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 254  : 	__PURE_APPDOMAIN_GLOBAL locale::id numpunct<_Elem>::id;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 1567 : 	__PURE_APPDOMAIN_GLOBAL locale::id num_put<_Elem, _OutIt>::id;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 1567 : 	__PURE_APPDOMAIN_GLOBAL locale::id num_put<_Elem, _OutIt>::id;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 731  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>

; 724  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 639  : 	_System_error_category _Error_objects<_Cat>::_System_object;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 637  : 	_Iostream_error_category _Error_objects<_Cat>::_Iostream_object;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 635  : 	_Generic_error_category _Error_objects<_Cat>::_Generic_object;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 601  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8

; 579  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 880  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@M@BitStream@RakNet@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Write@M@BitStream@RakNet@@QAEXM@Z PROC		; RakNet::BitStream::Write<float>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@M@BitStream@RakNet@@QAEXM@Z ENDP		; RakNet::BitStream::Write<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?RenderPlayerTags@@YGXXZ
_TEXT	SEGMENT
tv244 = -256						; size = 4
_pCam$1 = -56						; size = 4
_PlayerPed$2 = -44					; size = 4
_Player$3 = -32						; size = 4
_x$4 = -20						; size = 4
_pPlayerPool$5 = -8					; size = 4
?RenderPlayerTags@@YGXXZ PROC				; RenderPlayerTags, COMDAT

; 70   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 71   : 	if(pNetGame && pNetGame->m_bShowPlayerTags)

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	$LN8@RenderPlay
	mov	eax, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	movzx	ecx, BYTE PTR [eax+59]
	test	ecx, ecx
	je	$LN8@RenderPlay

; 72   : 	{
; 73   : 		pNewPlayerTags->Begin();

	mov	ecx, DWORD PTR ?pNewPlayerTags@@3PAVCNewPlayerTags@@A ; pNewPlayerTags
	call	?Begin@CNewPlayerTags@@QAEXXZ		; CNewPlayerTags::Begin

; 74   : 
; 75   : 		CPlayerPool* pPlayerPool = pNetGame->GetPlayerPool();

	mov	ecx, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	call	?GetPlayerPool@CNetGame@@QAEPAVCPlayerPool@@XZ ; CNetGame::GetPlayerPool
	mov	DWORD PTR _pPlayerPool$5[ebp], eax

; 76   : 		pGame->FindPlayerPed()->GetMatrix(&matLocal);

	push	OFFSET ?matLocal@@3U_MATRIX4X4@@A	; matLocal
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	ecx, eax
	call	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z ; CEntity::GetMatrix

; 77   : 
; 78   : 		for (int x=0; x < MAX_PLAYERS; x++)

	mov	DWORD PTR _x$4[ebp], 0
	jmp	SHORT $LN7@RenderPlay
$LN6@RenderPlay:
	mov	eax, DWORD PTR _x$4[ebp]
	add	eax, 1
	mov	DWORD PTR _x$4[ebp], eax
$LN7@RenderPlay:
	cmp	DWORD PTR _x$4[ebp], 204		; 000000ccH
	jge	$LN5@RenderPlay

; 79   : 		{
; 80   : 			if (pPlayerPool->GetSlotState(x) == TRUE) // player is in use

	movzx	eax, BYTE PTR _x$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerPool$5[ebp]
	call	?GetSlotState@CPlayerPool@@QAEHE@Z	; CPlayerPool::GetSlotState
	cmp	eax, 1
	jne	$LN1@RenderPlay

; 81   : 			{
; 82   : 				CRemotePlayer* Player = pPlayerPool->GetAt(x);

	movzx	eax, BYTE PTR _x$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerPool$5[ebp]
	call	?GetAt@CPlayerPool@@QAEPAVCRemotePlayer@@E@Z ; CPlayerPool::GetAt
	mov	DWORD PTR _Player$3[ebp], eax

; 83   : 				if(Player && Player->IsActive() && Player->m_bShowNameTag)

	cmp	DWORD PTR _Player$3[ebp], 0
	je	$LN1@RenderPlay
	mov	ecx, DWORD PTR _Player$3[ebp]
	call	?IsActive@CRemotePlayer@@QAEHXZ		; CRemotePlayer::IsActive
	test	eax, eax
	je	$LN1@RenderPlay
	mov	eax, DWORD PTR _Player$3[ebp]
	cmp	DWORD PTR [eax+332], 0
	je	$LN1@RenderPlay

; 84   : 				{
; 85   : 					CPlayerPed* PlayerPed = Player->GetPlayerPed();

	mov	ecx, DWORD PTR _Player$3[ebp]
	call	?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ; CRemotePlayer::GetPlayerPed
	mov	DWORD PTR _PlayerPed$2[ebp], eax

; 86   : 					if(PlayerPed && PlayerPed->IsAdded() && PlayerPed->GetDistanceFromLocalPlayerPed() <= pNetGame->m_fNameTagDrawDistance)

	cmp	DWORD PTR _PlayerPed$2[ebp], 0
	je	$LN1@RenderPlay
	mov	ecx, DWORD PTR _PlayerPed$2[ebp]
	call	?IsAdded@CEntity@@QAEHXZ		; CEntity::IsAdded
	test	eax, eax
	je	$LN1@RenderPlay
	mov	ecx, DWORD PTR _PlayerPed$2[ebp]
	call	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ ; CEntity::GetDistanceFromLocalPlayerPed
	fstp	DWORD PTR tv244[ebp]
	mov	eax, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	movss	xmm0, DWORD PTR [eax+49]
	comiss	xmm0, DWORD PTR tv244[ebp]
	jb	$LN1@RenderPlay

; 87   : 					{	
; 88   : 						PlayerPed->GetMatrix(&matPlayer);

	push	OFFSET ?matPlayer@@3U_MATRIX4X4@@A	; matPlayer
	mov	ecx, DWORD PTR _PlayerPed$2[ebp]
	call	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z ; CEntity::GetMatrix

; 89   : 			
; 90   : 						// -- LINE OF SIGHT TESTING --
; 91   : 													
; 92   : 						PlayerPos.x = matPlayer.pos.X;

	movss	xmm0, DWORD PTR ?matPlayer@@3U_MATRIX4X4@@A+48
	movss	DWORD PTR ?PlayerPos@@3UD3DXVECTOR3@@A, xmm0

; 93   : 						PlayerPos.y = matPlayer.pos.Y;

	movss	xmm0, DWORD PTR ?matPlayer@@3U_MATRIX4X4@@A+52
	movss	DWORD PTR ?PlayerPos@@3UD3DXVECTOR3@@A+4, xmm0

; 94   : 						PlayerPos.z = matPlayer.pos.Z;

	movss	xmm0, DWORD PTR ?matPlayer@@3U_MATRIX4X4@@A+56
	movss	DWORD PTR ?PlayerPos@@3UD3DXVECTOR3@@A+8, xmm0

; 95   : 
; 96   : 						CAMERA_AIM *pCam = GameGetInternalAim();

	call	?GameGetInternalAim@@YGPAU_CAMERA_AIM@@XZ ; GameGetInternalAim
	mov	DWORD PTR _pCam$1[ebp], eax

; 97   : 						dwHitEntity = ScriptCommand( &get_line_of_sight,
; 98   : 							PlayerPos.x, PlayerPos.y, PlayerPos.z,
; 99   : 							pCam->pos1x, pCam->pos1y, pCam->pos1z,
; 100  : 							1, 0, 0, 0, 0 );

	push	0
	push	0
	push	0
	push	0
	push	1
	mov	eax, DWORD PTR _pCam$1[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+20]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _pCam$1[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+16]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _pCam$1[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+12]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR ?PlayerPos@@3UD3DXVECTOR3@@A+8
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR ?PlayerPos@@3UD3DXVECTOR3@@A+4
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR ?PlayerPos@@3UD3DXVECTOR3@@A
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET _get_line_of_sight
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 72					; 00000048H
	mov	DWORD PTR ?dwHitEntity@@3KA, eax	; dwHitEntity

; 101  : 
; 102  : 						if(dwHitEntity) {

	cmp	DWORD PTR ?dwHitEntity@@3KA, 0		; dwHitEntity
	je	SHORT $LN1@RenderPlay

; 103  : 							sprintf(szBuffer, "%s(%d)", pPlayerPool->GetPlayerName(x), x);

	mov	eax, DWORD PTR _x$4[ebp]
	push	eax
	movzx	ecx, BYTE PTR _x$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerPool$5[ebp]
	call	?GetPlayerName@CPlayerPool@@QAEPADE@Z	; CPlayerPool::GetPlayerName
	push	eax
	push	OFFSET ??_C@_06BPGFIOAL@?$CFs?$CI?$CFd?$CJ?$AA@
	push	OFFSET ?szBuffer@@3PADA			; szBuffer
	call	_sprintf
	add	esp, 16					; 00000010H

; 104  : 							pNewPlayerTags->Draw(&PlayerPos,szBuffer,
; 105  : 								Player->GetPlayerColorAsARGB(),
; 106  : 								Player->GetReportedHealth(),Player->GetReportedArmour(),
; 107  : 								Player->GetDistanceFromLocalPlayer());

	mov	ecx, DWORD PTR _Player$3[ebp]
	call	?GetDistanceFromLocalPlayer@CRemotePlayer@@QAEMXZ ; CRemotePlayer::GetDistanceFromLocalPlayer
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _Player$3[ebp]
	call	?GetReportedArmour@CRemotePlayer@@QAEMXZ ; CRemotePlayer::GetReportedArmour
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _Player$3[ebp]
	call	?GetReportedHealth@CRemotePlayer@@QAEMXZ ; CRemotePlayer::GetReportedHealth
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _Player$3[ebp]
	call	?GetPlayerColorAsARGB@CRemotePlayer@@QAEKXZ ; CRemotePlayer::GetPlayerColorAsARGB
	push	eax
	push	OFFSET ?szBuffer@@3PADA			; szBuffer
	push	OFFSET ?PlayerPos@@3UD3DXVECTOR3@@A	; PlayerPos
	mov	ecx, DWORD PTR ?pNewPlayerTags@@3PAVCNewPlayerTags@@A ; pNewPlayerTags
	call	?Draw@CNewPlayerTags@@QAEXPAUD3DXVECTOR3@@PADKMMM@Z ; CNewPlayerTags::Draw
$LN1@RenderPlay:

; 108  : 						}			
; 109  : 					}						
; 110  : 				}
; 111  : 			}
; 112  : 		}

	jmp	$LN6@RenderPlay
$LN5@RenderPlay:

; 113  : 
; 114  : 		pNewPlayerTags->End();

	mov	ecx, DWORD PTR ?pNewPlayerTags@@3PAVCNewPlayerTags@@A ; pNewPlayerTags
	call	?End@CNewPlayerTags@@QAEXXZ		; CNewPlayerTags::End
$LN8@RenderPlay:

; 115  : 
; 116  : 				/*
; 117  : 				#ifdef _DEBUG
; 118  : 					CLocalPlayer* pLocalPlayer = pPlayerPool->GetLocalPlayer();
; 119  : 					CPlayerPed* pLocalPlayerPed = pLocalPlayer->GetPlayerPed();
; 120  : 					MATRIX4X4 matLocPlayer;
; 121  : 					pLocalPlayerPed->GetMatrix(&matLocPlayer);
; 122  : 					D3DXVECTOR3 LocPlayerPos;
; 123  : 					LocPlayerPos.x = matLocPlayer.pos.X;
; 124  : 					LocPlayerPos.y = matLocPlayer.pos.Y;
; 125  : 					LocPlayerPos.z = matLocPlayer.pos.Z;
; 126  : 					pNewPlayerTags->Draw(&LocPlayerPos, pPlayerPool->GetLocalPlayerName(), pLocalPlayer->GetPlayerColorAsARGB(), 100.0f, 75.0f, 0.0f);
; 127  : 				#endif*/	
; 128  : 
; 129  : 	} // if(pNetGame->m_byteShowPlayerTags)
; 130  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RenderPlayerTags@@YGXXZ ENDP				; RenderPlayerTags
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ??__EPlayerPos@@YAXXZ
text$di	SEGMENT
??__EPlayerPos@@YAXXZ PROC				; `dynamic initializer for 'PlayerPos'', COMDAT

; 45   : D3DXVECTOR3 PlayerPos;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?PlayerPos@@3UD3DXVECTOR3@@A ; PlayerPos
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EPlayerPos@@YAXXZ ENDP				; `dynamic initializer for 'PlayerPos''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ??__EmatProj@@YAXXZ
text$di	SEGMENT
??__EmatProj@@YAXXZ PROC				; `dynamic initializer for 'matProj'', COMDAT

; 13   : D3DXMATRIX matView, matProj;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?matProj@@3UD3DXMATRIX@@A	; matProj
	call	??0D3DXMATRIX@@QAE@XZ			; D3DXMATRIX::D3DXMATRIX
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EmatProj@@YAXXZ ENDP				; `dynamic initializer for 'matProj''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ??__EmatView@@YAXXZ
text$di	SEGMENT
??__EmatView@@YAXXZ PROC				; `dynamic initializer for 'matView'', COMDAT

; 13   : D3DXMATRIX matView, matProj;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?matView@@3UD3DXMATRIX@@A	; matView
	call	??0D3DXMATRIX@@QAE@XZ			; D3DXMATRIX::D3DXMATRIX
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EmatView@@YAXXZ ENDP				; `dynamic initializer for 'matView''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 614  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 615  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 616  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 617  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 618  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 619  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T1 = -224						; size = 4
__Name$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 607  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 608  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 609  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	eax, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	ecx, DWORD PTR tv69[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 610  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 602  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 603  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 604  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 597  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 598  : 		{	// default constructor
; 599  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 584  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 585  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 586  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 587  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 588  : 			return (_Generic_error_category::message(_Errcode));

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 589  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 579  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 580  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 581  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 574  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 575  : 		{	// default constructor
; 576  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T1 = -224						; size = 4
__Name$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 563  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 564  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 565  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	eax, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	ecx, DWORD PTR tv69[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 566  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 558  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 559  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 560  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 553  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 554  : 		{	// default constructor
; 555  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 352  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 353  : 		return (category() == _Right.category()
; 354  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 355  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 337  : 		{	// get category

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 338  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 339  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 332  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 333  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 334  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 299  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 300  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 246  : 		{	// get category

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 247  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 248  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 241  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 242  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 243  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 176  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 177  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 178  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 391  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 392  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 393  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 384  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 385  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 386  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 377  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 378  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 379  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 159  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 160  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 154  : 	error_category()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 155  : 		{	// default constructor
; 156  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 652  : 	{	// get system_category

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 653  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 642  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 643  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 644  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT

; 545  : 	{	// test iterator for non-singularity, const pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 546  : 	if (_First == 0)

	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin

; 547  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:

; 548  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2294 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2295 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2296 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2289 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2290 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2291 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Ptr$3 = -20						; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2272 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2273 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2274 : 			;
; 2275 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2276 : 			{	// copy any leftovers to small buffer and deallocate
; 2277 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Ptr$3[ebp], ecx

; 2278 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2279 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2280 : 				_Traits::copy(this->_Bx._Buf,
; 2281 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$3[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2282 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$3[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2283 : 			}
; 2284 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH

; 2285 : 		_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2286 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2256 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2257 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2258 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2259 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2260 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2261 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2262 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -208						; size = 4
tv129 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2242 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2243 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2244 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2245 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2246 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2247 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2248 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2249 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2250 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2251 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2252 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2253 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2236 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2237 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2238 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -288						; size = 4
tv203 = -288						; size = 4
tv204 = -284						; size = 4
tv202 = -284						; size = 4
$T2 = -273						; size = 1
$T3 = -261						; size = 1
$T4 = -249						; size = 1
__Ptr$ = -48						; size = 4
__Newres$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2201 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2202 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2203 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2204 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2205 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2206 : 			;
; 2207 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy

; 2208 : 			_Newres = this->_Myres
; 2209 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx

; 2210 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2211 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2212 : 
; 2213 : 		_Elem *_Ptr;
; 2214 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2215 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	edx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2216 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2217 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2218 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2219 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2220 : 			_CATCH_ALL
; 2221 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2222 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2223 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2224 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2225 : 
; 2226 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2227 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2228 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2229 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2230 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2231 : 		this->_Myres = _Newres;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 2232 : 		_Eos(_Oldlen);

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2233 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Copy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN23@Copy:
	DD	1
	DD	$LN22@Copy
$LN22@Copy:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN20@Copy
$LN20@Copy:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -221						; size = 1
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1758 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1759 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1760 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv75[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1761 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1753 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1754 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 1755 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1738 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1739 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 1740 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -32					; size = 4
__Ptr$2 = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1342 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1343 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1344 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1345 : 		if (this->_Mysize - _Off <= _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1346 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1347 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1348 : 			{	// move elements down
; 1349 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1350 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], ecx

; 1351 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	eax, DWORD PTR __Newsize$1[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$2[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	push	edx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1352 : 			_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1353 : 			}
; 1354 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1355 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1334 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1335 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1336 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1337 : 		_Eos(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1338 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1339 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1167 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1168 : 		_DEBUG_POINTER(_Ptr);

	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@GEGDPIKI@?$AAz?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH

; 1169 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1170 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1148 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1149 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1150 : 		if (_Count != 0)

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign

; 1151 : 			_DEBUG_POINTER(_Ptr);

	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@GEGDPIKI@?$AAz?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:

; 1152 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1153 : 
; 1154 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1155 : 			return (assign(*this,
; 1156 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:

; 1157 : 
; 1158 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1159 : 			{	// make room and assign new stuff
; 1160 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1161 : 			_Eos(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1162 : 			}
; 1163 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:

; 1164 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1129 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1130 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1131 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1132 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1133 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1134 : 			_Num = _Count;	// trim _Num to size

	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
$LN4@assign:

; 1135 : 
; 1136 : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1137 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1138 : 		else if (_Grow(_Num))

	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1139 : 			{	// make room and assign new stuff
; 1140 : 			_Traits::copy(this->_Myptr(),
; 1141 : 				_Right._Myptr() + _Roff, _Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1142 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1143 : 			}
; 1144 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1145 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 990  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 991  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 992  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 780  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 781  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 782  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 783  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 738  : 		{	// construct empty string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 739  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 740  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 683  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 684  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 685  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 672  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 673  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 674  : 			_Alproxy;

	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>

; 675  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 676  : 		_Alproxy.destroy(this->_Myproxy);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>

; 677  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 678  : 		this->_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 679  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Alproxy$ = -17					; size = 1
_this$ = -8						; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 663  : 		{	// construct proxy from _Alval

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 664  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 665  : 			_Alproxy;

	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>

; 666  : 		this->_Myproxy = _Alproxy.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 667  : 		_Alproxy.construct(this->_Myproxy, _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>

; 668  : 		this->_Myproxy->_Mycont = this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx

; 669  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 649  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 650  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy

; 651  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 643  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 644  : 		{	// construct allocator from _Al
; 645  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 646  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 517  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 518  : 		return (this->_BUF_SIZE <= this->_Myres
; 519  : 			? _STD addressof(*this->_Bx._Ptr)
; 520  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 521  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 510  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 511  : 		return (this->_BUF_SIZE <= this->_Myres
; 512  : 			? _STD addressof(*this->_Bx._Ptr)
; 513  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 514  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 492  : 	_String_val()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 493  : 		{	// initialize values
; 494  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 495  : 		_Myres = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 496  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 885  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 859  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 848  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 736  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 613  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 579  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -197						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -32						; size = 4
__Lock$2 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 214  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 215  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 216  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all

; 217  : 		{	// proxy allocated, drain it
; 218  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 219  : 
; 220  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx

; 221  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_all

; 222  : 			(*_Pnext)->_Myproxy = 0;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 223  : 		_Myproxy->_Myfirstiter = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0

; 224  : 		}

	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:

; 225  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 226  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 94   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 96   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 80   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 68   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 69   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -197						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.h
;	COMDAT ?isEnabled@CCmdWindow@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEnabled@CCmdWindow@@QAEHXZ PROC			; CCmdWindow::isEnabled, COMDAT
; _this$ = ecx

; 54   : 	BOOL isEnabled() { return m_bEnabled; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1568]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEnabled@CCmdWindow@@QAEHXZ ENDP			; CCmdWindow::isEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\netgame.h
;	COMDAT ?GetGameState@CNetGame@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetGameState@CNetGame@@QAEHXZ PROC			; CNetGame::GetGameState, COMDAT
; _this$ = ecx

; 105  : 	int GetGameState() { return m_iGameState; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+90]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGameState@CNetGame@@QAEHXZ ENDP			; CNetGame::GetGameState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\netgame.h
;	COMDAT ?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ PROC ; CNetGame::GetRakClient, COMDAT
; _this$ = ecx

; 103  : 	RakClientInterface * GetRakClient() { return m_pRakClient; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ ENDP ; CNetGame::GetRakClient
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\netgame.h
;	COMDAT ?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ PROC	; CNetGame::GetVehiclePool, COMDAT
; _this$ = ecx

; 97   : 	CVehiclePool * GetVehiclePool() { return m_pVehiclePool; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ENDP	; CNetGame::GetVehiclePool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\netgame.h
;	COMDAT ?GetPlayerPool@CNetGame@@QAEPAVCPlayerPool@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPlayerPool@CNetGame@@QAEPAVCPlayerPool@@XZ PROC	; CNetGame::GetPlayerPool, COMDAT
; _this$ = ecx

; 96   : 	CPlayerPool * GetPlayerPool() { return m_pPlayerPool; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerPool@CNetGame@@QAEPAVCPlayerPool@@XZ ENDP	; CNetGame::GetPlayerPool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\vehiclepool.h
;	COMDAT ?GetVehicleVirtualWorld@CVehiclePool@@QAEEG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_VehicleID$ = 8						; size = 2
?GetVehicleVirtualWorld@CVehiclePool@@QAEEG@Z PROC	; CVehiclePool::GetVehicleVirtualWorld, COMDAT
; _this$ = ecx

; 83   : 	BYTE GetVehicleVirtualWorld(VEHICLEID VehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 		if (VehicleID >= MAX_VEHICLES) { return 0; }

	movzx	eax, WORD PTR _VehicleID$[ebp]
	cmp	eax, 702				; 000002beH
	jl	SHORT $LN1@GetVehicle
	xor	al, al
	jmp	SHORT $LN2@GetVehicle
$LN1@GetVehicle:

; 85   : 		return m_byteVirtualWorld[VehicleID];		

	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [ecx+eax+44928]
$LN2@GetVehicle:

; 86   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVehicleVirtualWorld@CVehiclePool@@QAEEG@Z ENDP	; CVehiclePool::GetVehicleVirtualWorld
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\vehiclepool.h
;	COMDAT ?GetSlotState@CVehiclePool@@QAEHG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_VehicleID$ = 8						; size = 2
?GetSlotState@CVehiclePool@@QAEHG@Z PROC		; CVehiclePool::GetSlotState, COMDAT
; _this$ = ecx

; 64   : 	BOOL GetSlotState(VEHICLEID VehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 		if(VehicleID >= MAX_VEHICLES) { return FALSE; }

	movzx	eax, WORD PTR _VehicleID$[ebp]
	cmp	eax, 702				; 000002beH
	jl	SHORT $LN1@GetSlotSta
	xor	eax, eax
	jmp	SHORT $LN2@GetSlotSta
$LN1@GetSlotSta:

; 66   : 		return m_bVehicleSlotState[VehicleID];

	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
$LN2@GetSlotSta:

; 67   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSlotState@CVehiclePool@@QAEHG@Z ENDP		; CVehiclePool::GetSlotState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\vehiclepool.h
;	COMDAT ?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_VehicleID$ = 8						; size = 2
?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z PROC		; CVehiclePool::GetAt, COMDAT
; _this$ = ecx

; 58   : 	CVehicle* GetAt(VEHICLEID VehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		if(VehicleID >= MAX_VEHICLES || !m_bVehicleSlotState[VehicleID]) { return NULL; }

	movzx	eax, WORD PTR _VehicleID$[ebp]
	cmp	eax, 702				; 000002beH
	jge	SHORT $LN1@GetAt
	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jne	SHORT $LN2@GetAt
$LN1@GetAt:
	xor	eax, eax
	jmp	SHORT $LN3@GetAt
$LN2@GetAt:

; 60   : 		return m_pVehicles[VehicleID];

	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2808]
$LN3@GetAt:

; 61   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z ENDP		; CVehiclePool::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\playerpool.h
;	COMDAT ?GetSlotState@CPlayerPool@@QAEHE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bytePlayerID$ = 8					; size = 1
?GetSlotState@CPlayerPool@@QAEHE@Z PROC			; CPlayerPool::GetSlotState, COMDAT
; _this$ = ecx

; 58   : 	BOOL GetSlotState(BYTE bytePlayerID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		if(bytePlayerID > MAX_PLAYERS) { return FALSE; }

	movzx	eax, BYTE PTR _bytePlayerID$[ebp]
	cmp	eax, 204				; 000000ccH
	jle	SHORT $LN1@GetSlotSta
	xor	eax, eax
	jmp	SHORT $LN2@GetSlotSta
$LN1@GetSlotSta:

; 60   : 		return m_bPlayerSlotState[bytePlayerID];

	movzx	eax, BYTE PTR _bytePlayerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+13]
$LN2@GetSlotSta:

; 61   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSlotState@CPlayerPool@@QAEHE@Z ENDP			; CPlayerPool::GetSlotState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\playerpool.h
;	COMDAT ?GetAt@CPlayerPool@@QAEPAVCRemotePlayer@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bytePlayerID$ = 8					; size = 1
?GetAt@CPlayerPool@@QAEPAVCRemotePlayer@@E@Z PROC	; CPlayerPool::GetAt, COMDAT
; _this$ = ecx

; 52   : 	CRemotePlayer* GetAt(BYTE bytePlayerID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   : 		if(bytePlayerID > MAX_PLAYERS) { return NULL; }

	movzx	eax, BYTE PTR _bytePlayerID$[ebp]
	cmp	eax, 204				; 000000ccH
	jle	SHORT $LN1@GetAt
	xor	eax, eax
	jmp	SHORT $LN2@GetAt
$LN1@GetAt:

; 54   : 		return m_pPlayers[bytePlayerID];

	movzx	eax, BYTE PTR _bytePlayerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+829]
$LN2@GetAt:

; 55   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CPlayerPool@@QAEPAVCRemotePlayer@@E@Z ENDP	; CPlayerPool::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\playerpool.h
;	COMDAT ?GetPlayerName@CPlayerPool@@QAEPADE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bytePlayerID$ = 8					; size = 1
?GetPlayerName@CPlayerPool@@QAEPADE@Z PROC		; CPlayerPool::GetPlayerName, COMDAT
; _this$ = ecx

; 41   : 	PCHAR GetPlayerName(BYTE bytePlayerID) { return m_szPlayerNames[bytePlayerID]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _bytePlayerID$[ebp]
	imul	ecx, eax, 25
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+4093]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerName@CPlayerPool@@QAEPADE@Z ENDP		; CPlayerPool::GetPlayerName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\remoteplayer.h
;	COMDAT ?GetReportedArmour@CRemotePlayer@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetReportedArmour@CRemotePlayer@@QAEMXZ PROC		; CRemotePlayer::GetReportedArmour, COMDAT
; _this$ = ecx

; 142  : 	float GetReportedArmour() { return m_fReportedArmour; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+344]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetReportedArmour@CRemotePlayer@@QAEMXZ ENDP		; CRemotePlayer::GetReportedArmour
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\remoteplayer.h
;	COMDAT ?GetReportedHealth@CRemotePlayer@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetReportedHealth@CRemotePlayer@@QAEMXZ PROC		; CRemotePlayer::GetReportedHealth, COMDAT
; _this$ = ecx

; 141  : 	float GetReportedHealth() { return m_fReportedHealth; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+340]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetReportedHealth@CRemotePlayer@@QAEMXZ ENDP		; CRemotePlayer::GetReportedHealth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\remoteplayer.h
;	COMDAT ?IsActive@CRemotePlayer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsActive@CRemotePlayer@@QAEHXZ PROC			; CRemotePlayer::IsActive, COMDAT
; _this$ = ecx

; 104  : 	BOOL IsActive() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		if(m_byteState != PLAYER_STATE_NONE && m_byteState != PLAYER_STATE_SPECTATING) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+315]
	test	ecx, ecx
	je	SHORT $LN1@IsActive
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+315]
	cmp	ecx, 9
	je	SHORT $LN1@IsActive

; 106  : 			return TRUE;

	mov	eax, 1
	jmp	SHORT $LN2@IsActive
$LN1@IsActive:

; 107  : 		}
; 108  : 		return FALSE;

	xor	eax, eax
$LN2@IsActive:

; 109  : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsActive@CRemotePlayer@@QAEHXZ ENDP			; CRemotePlayer::IsActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\remoteplayer.h
;	COMDAT ?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ PROC	; CRemotePlayer::GetPlayerPed, COMDAT
; _this$ = ecx

; 102  : 	CPlayerPed * GetPlayerPed() { return m_pPlayerPed; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ENDP	; CRemotePlayer::GetPlayerPed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.h
;	COMDAT ?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ PROC		; CGame::FindPlayerPed, COMDAT
; _this$ = ecx

; 142  : 	CPlayerPed  *FindPlayerPed() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		if(m_pGamePlayer==NULL)	m_pGamePlayer = new CPlayerPed();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@FindPlayer
	push	70					; 00000046H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@FindPlayer
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CPlayerPed@@QAE@XZ			; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@FindPlayer
$LN4@FindPlayer:
	mov	DWORD PTR tv74[ebp], 0
$LN5@FindPlayer:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@FindPlayer:

; 144  : 		return m_pGamePlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 145  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ENDP		; CGame::FindPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.h
;	COMDAT ?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ PROC		; CGame::GetMainWindowHwnd, COMDAT
; _this$ = ecx

; 128  : 	HWND	GetMainWindowHwnd() { return *(HWND *)ADDR_HWND; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ds:13204508
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ ENDP		; CGame::GetMainWindowHwnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\new.h
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 105  :         {return; }

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 103  :         {return (_Where); }

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR __Where$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateQuery@IDirect3DDevice9Hook@@UAGJW4_D3DQUERYTYPE@@PAPAUIDirect3DQuery9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Type$ = 12						; size = 4
_ppQuery$ = 16						; size = 4
?CreateQuery@IDirect3DDevice9Hook@@UAGJW4_D3DQUERYTYPE@@PAPAUIDirect3DQuery9@@@Z PROC ; IDirect3DDevice9Hook::CreateQuery, COMDAT

; 1027 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1028 : 	return pD3DDevice->CreateQuery(Type, ppQuery);

	mov	esi, esp
	mov	eax, DWORD PTR _ppQuery$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+472]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1029 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateQuery@IDirect3DDevice9Hook@@UAGJW4_D3DQUERYTYPE@@PAPAUIDirect3DQuery9@@@Z ENDP ; IDirect3DDevice9Hook::CreateQuery
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?DeletePatch@IDirect3DDevice9Hook@@UAGJI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
?DeletePatch@IDirect3DDevice9Hook@@UAGJI@Z PROC		; IDirect3DDevice9Hook::DeletePatch, COMDAT

; 1022 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1023 : 	return pD3DDevice->DeletePatch(Handle);

	mov	esi, esp
	mov	eax, DWORD PTR _Handle$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+468]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1024 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DeletePatch@IDirect3DDevice9Hook@@UAGJI@Z ENDP		; IDirect3DDevice9Hook::DeletePatch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?DrawTriPatch@IDirect3DDevice9Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
_pNumSegs$ = 16						; size = 4
_pTriPatchInfo$ = 20					; size = 4
?DrawTriPatch@IDirect3DDevice9Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z PROC ; IDirect3DDevice9Hook::DrawTriPatch, COMDAT

; 1017 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1018 : 	return pD3DDevice->DrawTriPatch(Handle, pNumSegs, pTriPatchInfo);

	mov	esi, esp
	mov	eax, DWORD PTR _pTriPatchInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNumSegs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Handle$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+464]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1019 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawTriPatch@IDirect3DDevice9Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z ENDP ; IDirect3DDevice9Hook::DrawTriPatch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?DrawRectPatch@IDirect3DDevice9Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
_pNumSegs$ = 16						; size = 4
_pRectPatchInfo$ = 20					; size = 4
?DrawRectPatch@IDirect3DDevice9Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z PROC ; IDirect3DDevice9Hook::DrawRectPatch, COMDAT

; 1012 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1013 : 	return pD3DDevice->DrawRectPatch(Handle, pNumSegs, pRectPatchInfo);

	mov	esi, esp
	mov	eax, DWORD PTR _pRectPatchInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNumSegs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Handle$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+460]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1014 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawRectPatch@IDirect3DDevice9Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z ENDP ; IDirect3DDevice9Hook::DrawRectPatch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetPixelShaderConstantB@IDirect3DDevice9Hook@@UAGJIPAHI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_BoolCount$ = 20					; size = 4
?GetPixelShaderConstantB@IDirect3DDevice9Hook@@UAGJIPAHI@Z PROC ; IDirect3DDevice9Hook::GetPixelShaderConstantB, COMDAT

; 1007 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1008 : 	return pD3DDevice->GetPixelShaderConstantB(StartRegister, pConstantData, BoolCount);

	mov	esi, esp
	mov	eax, DWORD PTR _BoolCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+456]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1009 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetPixelShaderConstantB@IDirect3DDevice9Hook@@UAGJIPAHI@Z ENDP ; IDirect3DDevice9Hook::GetPixelShaderConstantB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetPixelShaderConstantB@IDirect3DDevice9Hook@@UAGJIPBHI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_BoolCount$ = 20					; size = 4
?SetPixelShaderConstantB@IDirect3DDevice9Hook@@UAGJIPBHI@Z PROC ; IDirect3DDevice9Hook::SetPixelShaderConstantB, COMDAT

; 1002 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1003 : 	return pD3DDevice->SetPixelShaderConstantB(StartRegister, pConstantData, BoolCount);

	mov	esi, esp
	mov	eax, DWORD PTR _BoolCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+452]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1004 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetPixelShaderConstantB@IDirect3DDevice9Hook@@UAGJIPBHI@Z ENDP ; IDirect3DDevice9Hook::SetPixelShaderConstantB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetPixelShaderConstantI@IDirect3DDevice9Hook@@UAGJIPAHI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_Vector4iCount$ = 20					; size = 4
?GetPixelShaderConstantI@IDirect3DDevice9Hook@@UAGJIPAHI@Z PROC ; IDirect3DDevice9Hook::GetPixelShaderConstantI, COMDAT

; 997  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 998  : 	return pD3DDevice->GetPixelShaderConstantI(StartRegister, pConstantData, Vector4iCount);

	mov	esi, esp
	mov	eax, DWORD PTR _Vector4iCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+448]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 999  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetPixelShaderConstantI@IDirect3DDevice9Hook@@UAGJIPAHI@Z ENDP ; IDirect3DDevice9Hook::GetPixelShaderConstantI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetPixelShaderConstantI@IDirect3DDevice9Hook@@UAGJIPBHI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_Vector4iCount$ = 20					; size = 4
?SetPixelShaderConstantI@IDirect3DDevice9Hook@@UAGJIPBHI@Z PROC ; IDirect3DDevice9Hook::SetPixelShaderConstantI, COMDAT

; 992  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 993  : 	return pD3DDevice->SetPixelShaderConstantI(StartRegister, pConstantData, Vector4iCount);

	mov	esi, esp
	mov	eax, DWORD PTR _Vector4iCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+444]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 994  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetPixelShaderConstantI@IDirect3DDevice9Hook@@UAGJIPBHI@Z ENDP ; IDirect3DDevice9Hook::SetPixelShaderConstantI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetPixelShaderConstantF@IDirect3DDevice9Hook@@UAGJIPAMI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_Vector4fCount$ = 20					; size = 4
?GetPixelShaderConstantF@IDirect3DDevice9Hook@@UAGJIPAMI@Z PROC ; IDirect3DDevice9Hook::GetPixelShaderConstantF, COMDAT

; 987  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 988  : 	return pD3DDevice->GetPixelShaderConstantF(StartRegister, pConstantData, Vector4fCount);

	mov	esi, esp
	mov	eax, DWORD PTR _Vector4fCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+440]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 989  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetPixelShaderConstantF@IDirect3DDevice9Hook@@UAGJIPAMI@Z ENDP ; IDirect3DDevice9Hook::GetPixelShaderConstantF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetPixelShaderConstantF@IDirect3DDevice9Hook@@UAGJIPBMI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_Vector4fCount$ = 20					; size = 4
?SetPixelShaderConstantF@IDirect3DDevice9Hook@@UAGJIPBMI@Z PROC ; IDirect3DDevice9Hook::SetPixelShaderConstantF, COMDAT

; 982  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 983  : 	return pD3DDevice->SetPixelShaderConstantF(StartRegister, pConstantData, Vector4fCount);

	mov	esi, esp
	mov	eax, DWORD PTR _Vector4fCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+436]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 984  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetPixelShaderConstantF@IDirect3DDevice9Hook@@UAGJIPBMI@Z ENDP ; IDirect3DDevice9Hook::SetPixelShaderConstantF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetPixelShader@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DPixelShader9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppShader$ = 12						; size = 4
?GetPixelShader@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DPixelShader9@@@Z PROC ; IDirect3DDevice9Hook::GetPixelShader, COMDAT

; 977  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 978  : 	return pD3DDevice->GetPixelShader(ppShader);

	mov	esi, esp
	mov	eax, DWORD PTR _ppShader$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+432]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 979  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetPixelShader@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DPixelShader9@@@Z ENDP ; IDirect3DDevice9Hook::GetPixelShader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetPixelShader@IDirect3DDevice9Hook@@UAGJPAUIDirect3DPixelShader9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pShader$ = 12						; size = 4
?SetPixelShader@IDirect3DDevice9Hook@@UAGJPAUIDirect3DPixelShader9@@@Z PROC ; IDirect3DDevice9Hook::SetPixelShader, COMDAT

; 972  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 973  : 	return pD3DDevice->SetPixelShader(pShader);

	mov	esi, esp
	mov	eax, DWORD PTR _pShader$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+428]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 974  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetPixelShader@IDirect3DDevice9Hook@@UAGJPAUIDirect3DPixelShader9@@@Z ENDP ; IDirect3DDevice9Hook::SetPixelShader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreatePixelShader@IDirect3DDevice9Hook@@UAGJPBKPAPAUIDirect3DPixelShader9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFunction$ = 12					; size = 4
_ppShader$ = 16						; size = 4
?CreatePixelShader@IDirect3DDevice9Hook@@UAGJPBKPAPAUIDirect3DPixelShader9@@@Z PROC ; IDirect3DDevice9Hook::CreatePixelShader, COMDAT

; 967  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 968  : 	return pD3DDevice->CreatePixelShader(pFunction, ppShader);

	mov	esi, esp
	mov	eax, DWORD PTR _ppShader$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFunction$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+424]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 969  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreatePixelShader@IDirect3DDevice9Hook@@UAGJPBKPAPAUIDirect3DPixelShader9@@@Z ENDP ; IDirect3DDevice9Hook::CreatePixelShader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetIndices@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DIndexBuffer9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppIndexData$ = 12					; size = 4
?GetIndices@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DIndexBuffer9@@@Z PROC ; IDirect3DDevice9Hook::GetIndices, COMDAT

; 962  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 963  : 	return pD3DDevice->GetIndices(ppIndexData);

	mov	esi, esp
	mov	eax, DWORD PTR _ppIndexData$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+420]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 964  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndices@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DIndexBuffer9@@@Z ENDP ; IDirect3DDevice9Hook::GetIndices
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetIndices@IDirect3DDevice9Hook@@UAGJPAUIDirect3DIndexBuffer9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pIndexData$ = 12					; size = 4
?SetIndices@IDirect3DDevice9Hook@@UAGJPAUIDirect3DIndexBuffer9@@@Z PROC ; IDirect3DDevice9Hook::SetIndices, COMDAT

; 957  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 958  : 	return pD3DDevice->SetIndices(pIndexData);

	mov	esi, esp
	mov	eax, DWORD PTR _pIndexData$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+416]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 959  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetIndices@IDirect3DDevice9Hook@@UAGJPAUIDirect3DIndexBuffer9@@@Z ENDP ; IDirect3DDevice9Hook::SetIndices
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetStreamSourceFreq@IDirect3DDevice9Hook@@UAGJIPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StreamNumber$ = 12					; size = 4
_Divider$ = 16						; size = 4
?GetStreamSourceFreq@IDirect3DDevice9Hook@@UAGJIPAI@Z PROC ; IDirect3DDevice9Hook::GetStreamSourceFreq, COMDAT

; 952  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 953  : 	return pD3DDevice->GetStreamSourceFreq(StreamNumber, Divider);

	mov	esi, esp
	mov	eax, DWORD PTR _Divider$[ebp]
	push	eax
	mov	ecx, DWORD PTR _StreamNumber$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+412]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 954  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetStreamSourceFreq@IDirect3DDevice9Hook@@UAGJIPAI@Z ENDP ; IDirect3DDevice9Hook::GetStreamSourceFreq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetStreamSourceFreq@IDirect3DDevice9Hook@@UAGJII@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StreamNumber$ = 12					; size = 4
_Divider$ = 16						; size = 4
?SetStreamSourceFreq@IDirect3DDevice9Hook@@UAGJII@Z PROC ; IDirect3DDevice9Hook::SetStreamSourceFreq, COMDAT

; 947  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 948  : 	return pD3DDevice->SetStreamSourceFreq(StreamNumber, Divider);

	mov	esi, esp
	mov	eax, DWORD PTR _Divider$[ebp]
	push	eax
	mov	ecx, DWORD PTR _StreamNumber$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+408]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 949  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetStreamSourceFreq@IDirect3DDevice9Hook@@UAGJII@Z ENDP ; IDirect3DDevice9Hook::SetStreamSourceFreq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetStreamSource@IDirect3DDevice9Hook@@UAGJIPAPAUIDirect3DVertexBuffer9@@PAI1@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StreamNumber$ = 12					; size = 4
_ppStreamData$ = 16					; size = 4
_OffsetInBytes$ = 20					; size = 4
_pStride$ = 24						; size = 4
?GetStreamSource@IDirect3DDevice9Hook@@UAGJIPAPAUIDirect3DVertexBuffer9@@PAI1@Z PROC ; IDirect3DDevice9Hook::GetStreamSource, COMDAT

; 942  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 943  : 	return pD3DDevice->GetStreamSource(StreamNumber, ppStreamData, OffsetInBytes, pStride);

	mov	esi, esp
	mov	eax, DWORD PTR _pStride$[ebp]
	push	eax
	mov	ecx, DWORD PTR _OffsetInBytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppStreamData$[ebp]
	push	edx
	mov	eax, DWORD PTR _StreamNumber$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+404]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 944  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetStreamSource@IDirect3DDevice9Hook@@UAGJIPAPAUIDirect3DVertexBuffer9@@PAI1@Z ENDP ; IDirect3DDevice9Hook::GetStreamSource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetStreamSource@IDirect3DDevice9Hook@@UAGJIPAUIDirect3DVertexBuffer9@@II@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StreamNumber$ = 12					; size = 4
_pStreamData$ = 16					; size = 4
_OffsetInBytes$ = 20					; size = 4
_Stride$ = 24						; size = 4
?SetStreamSource@IDirect3DDevice9Hook@@UAGJIPAUIDirect3DVertexBuffer9@@II@Z PROC ; IDirect3DDevice9Hook::SetStreamSource, COMDAT

; 937  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 938  : 	return pD3DDevice->SetStreamSource(StreamNumber, pStreamData, OffsetInBytes, Stride);

	mov	esi, esp
	mov	eax, DWORD PTR _Stride$[ebp]
	push	eax
	mov	ecx, DWORD PTR _OffsetInBytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStreamData$[ebp]
	push	edx
	mov	eax, DWORD PTR _StreamNumber$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+400]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 939  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?SetStreamSource@IDirect3DDevice9Hook@@UAGJIPAUIDirect3DVertexBuffer9@@II@Z ENDP ; IDirect3DDevice9Hook::SetStreamSource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetVertexShaderConstantB@IDirect3DDevice9Hook@@UAGJIPAHI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_BoolCount$ = 20					; size = 4
?GetVertexShaderConstantB@IDirect3DDevice9Hook@@UAGJIPAHI@Z PROC ; IDirect3DDevice9Hook::GetVertexShaderConstantB, COMDAT

; 932  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 933  : 	return pD3DDevice->GetVertexShaderConstantB(StartRegister, pConstantData, BoolCount);

	mov	esi, esp
	mov	eax, DWORD PTR _BoolCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+396]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 934  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetVertexShaderConstantB@IDirect3DDevice9Hook@@UAGJIPAHI@Z ENDP ; IDirect3DDevice9Hook::GetVertexShaderConstantB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetVertexShaderConstantB@IDirect3DDevice9Hook@@UAGJIPBHI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_BoolCount$ = 20					; size = 4
?SetVertexShaderConstantB@IDirect3DDevice9Hook@@UAGJIPBHI@Z PROC ; IDirect3DDevice9Hook::SetVertexShaderConstantB, COMDAT

; 927  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 928  : 	return pD3DDevice->SetVertexShaderConstantB(StartRegister, pConstantData, BoolCount);

	mov	esi, esp
	mov	eax, DWORD PTR _BoolCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+392]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 929  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetVertexShaderConstantB@IDirect3DDevice9Hook@@UAGJIPBHI@Z ENDP ; IDirect3DDevice9Hook::SetVertexShaderConstantB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetVertexShaderConstantI@IDirect3DDevice9Hook@@UAGJIPAHI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_Vector4iCount$ = 20					; size = 4
?GetVertexShaderConstantI@IDirect3DDevice9Hook@@UAGJIPAHI@Z PROC ; IDirect3DDevice9Hook::GetVertexShaderConstantI, COMDAT

; 922  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 923  : 	return pD3DDevice->GetVertexShaderConstantI(StartRegister, pConstantData, Vector4iCount);

	mov	esi, esp
	mov	eax, DWORD PTR _Vector4iCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+388]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 924  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetVertexShaderConstantI@IDirect3DDevice9Hook@@UAGJIPAHI@Z ENDP ; IDirect3DDevice9Hook::GetVertexShaderConstantI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetVertexShaderConstantI@IDirect3DDevice9Hook@@UAGJIPBHI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_Vector4iCount$ = 20					; size = 4
?SetVertexShaderConstantI@IDirect3DDevice9Hook@@UAGJIPBHI@Z PROC ; IDirect3DDevice9Hook::SetVertexShaderConstantI, COMDAT

; 917  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 918  : 	return pD3DDevice->SetVertexShaderConstantI(StartRegister, pConstantData, Vector4iCount);

	mov	esi, esp
	mov	eax, DWORD PTR _Vector4iCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+384]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 919  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetVertexShaderConstantI@IDirect3DDevice9Hook@@UAGJIPBHI@Z ENDP ; IDirect3DDevice9Hook::SetVertexShaderConstantI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetVertexShaderConstantF@IDirect3DDevice9Hook@@UAGJIPAMI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_Vector4fCount$ = 20					; size = 4
?GetVertexShaderConstantF@IDirect3DDevice9Hook@@UAGJIPAMI@Z PROC ; IDirect3DDevice9Hook::GetVertexShaderConstantF, COMDAT

; 912  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 913  : 	return pD3DDevice->GetVertexShaderConstantF(StartRegister, pConstantData, Vector4fCount);

	mov	esi, esp
	mov	eax, DWORD PTR _Vector4fCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+380]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 914  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetVertexShaderConstantF@IDirect3DDevice9Hook@@UAGJIPAMI@Z ENDP ; IDirect3DDevice9Hook::GetVertexShaderConstantF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetVertexShaderConstantF@IDirect3DDevice9Hook@@UAGJIPBMI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StartRegister$ = 12					; size = 4
_pConstantData$ = 16					; size = 4
_Vector4fCount$ = 20					; size = 4
?SetVertexShaderConstantF@IDirect3DDevice9Hook@@UAGJIPBMI@Z PROC ; IDirect3DDevice9Hook::SetVertexShaderConstantF, COMDAT

; 907  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 908  : 	return pD3DDevice->SetVertexShaderConstantF(StartRegister, pConstantData, Vector4fCount);

	mov	esi, esp
	mov	eax, DWORD PTR _Vector4fCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StartRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+376]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 909  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetVertexShaderConstantF@IDirect3DDevice9Hook@@UAGJIPBMI@Z ENDP ; IDirect3DDevice9Hook::SetVertexShaderConstantF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetVertexShader@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DVertexShader9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppShader$ = 12						; size = 4
?GetVertexShader@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DVertexShader9@@@Z PROC ; IDirect3DDevice9Hook::GetVertexShader, COMDAT

; 902  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 903  : 	return pD3DDevice->GetVertexShader(ppShader);

	mov	esi, esp
	mov	eax, DWORD PTR _ppShader$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+372]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 904  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetVertexShader@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DVertexShader9@@@Z ENDP ; IDirect3DDevice9Hook::GetVertexShader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetVertexShader@IDirect3DDevice9Hook@@UAGJPAUIDirect3DVertexShader9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pShader$ = 12						; size = 4
?SetVertexShader@IDirect3DDevice9Hook@@UAGJPAUIDirect3DVertexShader9@@@Z PROC ; IDirect3DDevice9Hook::SetVertexShader, COMDAT

; 897  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 898  : 	return pD3DDevice->SetVertexShader(pShader);

	mov	esi, esp
	mov	eax, DWORD PTR _pShader$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+368]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 899  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVertexShader@IDirect3DDevice9Hook@@UAGJPAUIDirect3DVertexShader9@@@Z ENDP ; IDirect3DDevice9Hook::SetVertexShader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateVertexShader@IDirect3DDevice9Hook@@UAGJPBKPAPAUIDirect3DVertexShader9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFunction$ = 12					; size = 4
_ppShader$ = 16						; size = 4
?CreateVertexShader@IDirect3DDevice9Hook@@UAGJPBKPAPAUIDirect3DVertexShader9@@@Z PROC ; IDirect3DDevice9Hook::CreateVertexShader, COMDAT

; 892  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 893  : 	return pD3DDevice->CreateVertexShader(pFunction, ppShader);

	mov	esi, esp
	mov	eax, DWORD PTR _ppShader$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFunction$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+364]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 894  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateVertexShader@IDirect3DDevice9Hook@@UAGJPBKPAPAUIDirect3DVertexShader9@@@Z ENDP ; IDirect3DDevice9Hook::CreateVertexShader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetFVF@IDirect3DDevice9Hook@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFVF$ = 12						; size = 4
?GetFVF@IDirect3DDevice9Hook@@UAGJPAK@Z PROC		; IDirect3DDevice9Hook::GetFVF, COMDAT

; 887  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 888  : 	return pD3DDevice->GetFVF(pFVF);

	mov	esi, esp
	mov	eax, DWORD PTR _pFVF$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+360]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 889  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetFVF@IDirect3DDevice9Hook@@UAGJPAK@Z ENDP		; IDirect3DDevice9Hook::GetFVF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetFVF@IDirect3DDevice9Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_FVF$ = 12						; size = 4
?SetFVF@IDirect3DDevice9Hook@@UAGJK@Z PROC		; IDirect3DDevice9Hook::SetFVF, COMDAT

; 882  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 883  : 	return pD3DDevice->SetFVF(FVF);

	mov	esi, esp
	mov	eax, DWORD PTR _FVF$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+356]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 884  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetFVF@IDirect3DDevice9Hook@@UAGJK@Z ENDP		; IDirect3DDevice9Hook::SetFVF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetVertexDeclaration@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DVertexDeclaration9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppDecl$ = 12						; size = 4
?GetVertexDeclaration@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DVertexDeclaration9@@@Z PROC ; IDirect3DDevice9Hook::GetVertexDeclaration, COMDAT

; 877  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 878  : 	return pD3DDevice->GetVertexDeclaration(ppDecl);

	mov	esi, esp
	mov	eax, DWORD PTR _ppDecl$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+352]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 879  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetVertexDeclaration@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DVertexDeclaration9@@@Z ENDP ; IDirect3DDevice9Hook::GetVertexDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetVertexDeclaration@IDirect3DDevice9Hook@@UAGJPAUIDirect3DVertexDeclaration9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pDecl$ = 12						; size = 4
?SetVertexDeclaration@IDirect3DDevice9Hook@@UAGJPAUIDirect3DVertexDeclaration9@@@Z PROC ; IDirect3DDevice9Hook::SetVertexDeclaration, COMDAT

; 872  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 873  : 	return pD3DDevice->SetVertexDeclaration(pDecl);

	mov	esi, esp
	mov	eax, DWORD PTR _pDecl$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+348]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 874  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVertexDeclaration@IDirect3DDevice9Hook@@UAGJPAUIDirect3DVertexDeclaration9@@@Z ENDP ; IDirect3DDevice9Hook::SetVertexDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateVertexDeclaration@IDirect3DDevice9Hook@@UAGJPBU_D3DVERTEXELEMENT9@@PAPAUIDirect3DVertexDeclaration9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pVertexElements$ = 12					; size = 4
_ppDecl$ = 16						; size = 4
?CreateVertexDeclaration@IDirect3DDevice9Hook@@UAGJPBU_D3DVERTEXELEMENT9@@PAPAUIDirect3DVertexDeclaration9@@@Z PROC ; IDirect3DDevice9Hook::CreateVertexDeclaration, COMDAT

; 867  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 868  : 	return pD3DDevice->CreateVertexDeclaration(pVertexElements, ppDecl);

	mov	esi, esp
	mov	eax, DWORD PTR _ppDecl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVertexElements$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+344]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 869  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateVertexDeclaration@IDirect3DDevice9Hook@@UAGJPBU_D3DVERTEXELEMENT9@@PAPAUIDirect3DVertexDeclaration9@@@Z ENDP ; IDirect3DDevice9Hook::CreateVertexDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?ProcessVertices@IDirect3DDevice9Hook@@UAGJIIIPAUIDirect3DVertexBuffer9@@PAUIDirect3DVertexDeclaration9@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_SrcStartIndex$ = 12					; size = 4
_DestIndex$ = 16					; size = 4
_VertexCount$ = 20					; size = 4
_pDestBuffer$ = 24					; size = 4
_pVertexDecl$ = 28					; size = 4
_Flags$ = 32						; size = 4
?ProcessVertices@IDirect3DDevice9Hook@@UAGJIIIPAUIDirect3DVertexBuffer9@@PAUIDirect3DVertexDeclaration9@@K@Z PROC ; IDirect3DDevice9Hook::ProcessVertices, COMDAT

; 862  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 863  : 	return pD3DDevice->ProcessVertices(SrcStartIndex, DestIndex, VertexCount, pDestBuffer, pVertexDecl, Flags);

	mov	esi, esp
	mov	eax, DWORD PTR _Flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVertexDecl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDestBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _VertexCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _DestIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SrcStartIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+340]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 864  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?ProcessVertices@IDirect3DDevice9Hook@@UAGJIIIPAUIDirect3DVertexBuffer9@@PAUIDirect3DVertexDeclaration9@@K@Z ENDP ; IDirect3DDevice9Hook::ProcessVertices
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?DrawIndexedPrimitiveUP@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PrimitiveType$ = 12					; size = 4
_MinVertexIndex$ = 16					; size = 4
_NumVertices$ = 20					; size = 4
_PrimitiveCount$ = 24					; size = 4
_pIndexData$ = 28					; size = 4
_IndexDataFormat$ = 32					; size = 4
_pVertexStreamZeroData$ = 36				; size = 4
_VertexStreamZeroStride$ = 40				; size = 4
?DrawIndexedPrimitiveUP@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z PROC ; IDirect3DDevice9Hook::DrawIndexedPrimitiveUP, COMDAT

; 857  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 858  : 	return pD3DDevice->DrawIndexedPrimitiveUP(PrimitiveType, MinVertexIndex, NumVertices, PrimitiveCount, pIndexData, IndexDataFormat, pVertexStreamZeroData, VertexStreamZeroStride);

	mov	esi, esp
	mov	eax, DWORD PTR _VertexStreamZeroStride$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVertexStreamZeroData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _IndexDataFormat$[ebp]
	push	edx
	mov	eax, DWORD PTR _pIndexData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PrimitiveCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumVertices$[ebp]
	push	edx
	mov	eax, DWORD PTR _MinVertexIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PrimitiveType$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+336]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 859  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?DrawIndexedPrimitiveUP@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z ENDP ; IDirect3DDevice9Hook::DrawIndexedPrimitiveUP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?DrawPrimitiveUP@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PrimitiveType$ = 12					; size = 4
_PrimitiveCount$ = 16					; size = 4
_pVertexStreamZeroData$ = 20				; size = 4
_VertexStreamZeroStride$ = 24				; size = 4
?DrawPrimitiveUP@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z PROC ; IDirect3DDevice9Hook::DrawPrimitiveUP, COMDAT

; 852  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 853  : 	return pD3DDevice->DrawPrimitiveUP(PrimitiveType, PrimitiveCount, pVertexStreamZeroData, VertexStreamZeroStride);

	mov	esi, esp
	mov	eax, DWORD PTR _VertexStreamZeroStride$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVertexStreamZeroData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _PrimitiveCount$[ebp]
	push	edx
	mov	eax, DWORD PTR _PrimitiveType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+332]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 854  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?DrawPrimitiveUP@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z ENDP ; IDirect3DDevice9Hook::DrawPrimitiveUP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?DrawIndexedPrimitive@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@HIIII@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Type$ = 12						; size = 4
_BaseVertexIndex$ = 16					; size = 4
_MinVertexIndex$ = 20					; size = 4
_NumVertices$ = 24					; size = 4
_startIndex$ = 28					; size = 4
_primCount$ = 32					; size = 4
?DrawIndexedPrimitive@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@HIIII@Z PROC ; IDirect3DDevice9Hook::DrawIndexedPrimitive, COMDAT

; 847  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 848  : 	return pD3DDevice->DrawIndexedPrimitive(Type, BaseVertexIndex, MinVertexIndex, NumVertices, startIndex, primCount);

	mov	esi, esp
	mov	eax, DWORD PTR _primCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumVertices$[ebp]
	push	edx
	mov	eax, DWORD PTR _MinVertexIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BaseVertexIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Type$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+328]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 849  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?DrawIndexedPrimitive@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@HIIII@Z ENDP ; IDirect3DDevice9Hook::DrawIndexedPrimitive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?DrawPrimitive@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PrimitiveType$ = 12					; size = 4
_StartVertex$ = 16					; size = 4
_PrimitiveCount$ = 20					; size = 4
?DrawPrimitive@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z PROC ; IDirect3DDevice9Hook::DrawPrimitive, COMDAT

; 842  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 843  : 	return pD3DDevice->DrawPrimitive(PrimitiveType, StartVertex, PrimitiveCount);

	mov	esi, esp
	mov	eax, DWORD PTR _PrimitiveCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _StartVertex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _PrimitiveType$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+324]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 844  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawPrimitive@IDirect3DDevice9Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z ENDP ; IDirect3DDevice9Hook::DrawPrimitive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetNPatchMode@IDirect3DDevice9Hook@@UAGMXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNPatchMode@IDirect3DDevice9Hook@@UAGMXZ PROC	; IDirect3DDevice9Hook::GetNPatchMode, COMDAT

; 837  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 838  : 	return pD3DDevice->GetNPatchMode();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+320]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 839  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNPatchMode@IDirect3DDevice9Hook@@UAGMXZ ENDP	; IDirect3DDevice9Hook::GetNPatchMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetNPatchMode@IDirect3DDevice9Hook@@UAGJM@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_nSegments$ = 12					; size = 4
?SetNPatchMode@IDirect3DDevice9Hook@@UAGJM@Z PROC	; IDirect3DDevice9Hook::SetNPatchMode, COMDAT

; 832  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 833  : 	return pD3DDevice->SetNPatchMode(nSegments);

	mov	esi, esp
	push	ecx
	movss	xmm0, DWORD PTR _nSegments$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+316]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 834  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetNPatchMode@IDirect3DDevice9Hook@@UAGJM@Z ENDP	; IDirect3DDevice9Hook::SetNPatchMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetSoftwareVertexProcessing@IDirect3DDevice9Hook@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSoftwareVertexProcessing@IDirect3DDevice9Hook@@UAGHXZ PROC ; IDirect3DDevice9Hook::GetSoftwareVertexProcessing, COMDAT

; 827  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 828  : 	return pD3DDevice->GetSoftwareVertexProcessing();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+312]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 829  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSoftwareVertexProcessing@IDirect3DDevice9Hook@@UAGHXZ ENDP ; IDirect3DDevice9Hook::GetSoftwareVertexProcessing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetSoftwareVertexProcessing@IDirect3DDevice9Hook@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bSoftware$ = 12					; size = 4
?SetSoftwareVertexProcessing@IDirect3DDevice9Hook@@UAGJH@Z PROC ; IDirect3DDevice9Hook::SetSoftwareVertexProcessing, COMDAT

; 822  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 823  : 	return pD3DDevice->SetSoftwareVertexProcessing(bSoftware);

	mov	esi, esp
	mov	eax, DWORD PTR _bSoftware$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+308]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 824  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetSoftwareVertexProcessing@IDirect3DDevice9Hook@@UAGJH@Z ENDP ; IDirect3DDevice9Hook::SetSoftwareVertexProcessing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetScissorRect@IDirect3DDevice9Hook@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pRect$ = 12						; size = 4
?GetScissorRect@IDirect3DDevice9Hook@@UAGJPAUtagRECT@@@Z PROC ; IDirect3DDevice9Hook::GetScissorRect, COMDAT

; 817  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 818  : 	return pD3DDevice->GetScissorRect(pRect);

	mov	esi, esp
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 819  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetScissorRect@IDirect3DDevice9Hook@@UAGJPAUtagRECT@@@Z ENDP ; IDirect3DDevice9Hook::GetScissorRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetScissorRect@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pRect$ = 12						; size = 4
?SetScissorRect@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@@Z PROC ; IDirect3DDevice9Hook::SetScissorRect, COMDAT

; 812  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 813  : 	return pD3DDevice->SetScissorRect(pRect);

	mov	esi, esp
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 814  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetScissorRect@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@@Z ENDP ; IDirect3DDevice9Hook::SetScissorRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetCurrentTexturePalette@IDirect3DDevice9Hook@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PaletteNumber$ = 12					; size = 4
?GetCurrentTexturePalette@IDirect3DDevice9Hook@@UAGJPAI@Z PROC ; IDirect3DDevice9Hook::GetCurrentTexturePalette, COMDAT

; 807  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 808  : 	return pD3DDevice->GetCurrentTexturePalette(PaletteNumber);

	mov	esi, esp
	mov	eax, DWORD PTR _PaletteNumber$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+296]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 809  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCurrentTexturePalette@IDirect3DDevice9Hook@@UAGJPAI@Z ENDP ; IDirect3DDevice9Hook::GetCurrentTexturePalette
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetCurrentTexturePalette@IDirect3DDevice9Hook@@UAGJI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PaletteNumber$ = 12					; size = 4
?SetCurrentTexturePalette@IDirect3DDevice9Hook@@UAGJI@Z PROC ; IDirect3DDevice9Hook::SetCurrentTexturePalette, COMDAT

; 802  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 803  : 	return pD3DDevice->SetCurrentTexturePalette(PaletteNumber);

	mov	esi, esp
	mov	eax, DWORD PTR _PaletteNumber$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+292]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 804  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetCurrentTexturePalette@IDirect3DDevice9Hook@@UAGJI@Z ENDP ; IDirect3DDevice9Hook::SetCurrentTexturePalette
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetPaletteEntries@IDirect3DDevice9Hook@@UAGJIPAUtagPALETTEENTRY@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PaletteNumber$ = 12					; size = 4
_pEntries$ = 16						; size = 4
?GetPaletteEntries@IDirect3DDevice9Hook@@UAGJIPAUtagPALETTEENTRY@@@Z PROC ; IDirect3DDevice9Hook::GetPaletteEntries, COMDAT

; 797  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 798  : 	return pD3DDevice->GetPaletteEntries(PaletteNumber, pEntries);

	mov	esi, esp
	mov	eax, DWORD PTR _pEntries$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PaletteNumber$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+288]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 799  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetPaletteEntries@IDirect3DDevice9Hook@@UAGJIPAUtagPALETTEENTRY@@@Z ENDP ; IDirect3DDevice9Hook::GetPaletteEntries
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetPaletteEntries@IDirect3DDevice9Hook@@UAGJIPBUtagPALETTEENTRY@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PaletteNumber$ = 12					; size = 4
_pEntries$ = 16						; size = 4
?SetPaletteEntries@IDirect3DDevice9Hook@@UAGJIPBUtagPALETTEENTRY@@@Z PROC ; IDirect3DDevice9Hook::SetPaletteEntries, COMDAT

; 792  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 793  : 	return pD3DDevice->SetPaletteEntries(PaletteNumber, pEntries);

	mov	esi, esp
	mov	eax, DWORD PTR _pEntries$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PaletteNumber$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+284]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 794  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetPaletteEntries@IDirect3DDevice9Hook@@UAGJIPBUtagPALETTEENTRY@@@Z ENDP ; IDirect3DDevice9Hook::SetPaletteEntries
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?ValidateDevice@IDirect3DDevice9Hook@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pNumPasses$ = 12					; size = 4
?ValidateDevice@IDirect3DDevice9Hook@@UAGJPAK@Z PROC	; IDirect3DDevice9Hook::ValidateDevice, COMDAT

; 787  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 788  : 	return pD3DDevice->ValidateDevice(pNumPasses);

	mov	esi, esp
	mov	eax, DWORD PTR _pNumPasses$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+280]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 789  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ValidateDevice@IDirect3DDevice9Hook@@UAGJPAK@Z ENDP	; IDirect3DDevice9Hook::ValidateDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetSamplerState@IDirect3DDevice9Hook@@UAGJKW4_D3DSAMPLERSTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Sampler$ = 12						; size = 4
_Type$ = 16						; size = 4
_Value$ = 20						; size = 4
?SetSamplerState@IDirect3DDevice9Hook@@UAGJKW4_D3DSAMPLERSTATETYPE@@K@Z PROC ; IDirect3DDevice9Hook::SetSamplerState, COMDAT

; 782  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 783  : 	return pD3DDevice->SetSamplerState(Sampler, Type, Value);

	mov	esi, esp
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Sampler$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 784  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetSamplerState@IDirect3DDevice9Hook@@UAGJKW4_D3DSAMPLERSTATETYPE@@K@Z ENDP ; IDirect3DDevice9Hook::SetSamplerState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetSamplerState@IDirect3DDevice9Hook@@UAGJKW4_D3DSAMPLERSTATETYPE@@PAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Sampler$ = 12						; size = 4
_Type$ = 16						; size = 4
_pValue$ = 20						; size = 4
?GetSamplerState@IDirect3DDevice9Hook@@UAGJKW4_D3DSAMPLERSTATETYPE@@PAK@Z PROC ; IDirect3DDevice9Hook::GetSamplerState, COMDAT

; 777  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 778  : 	return pD3DDevice->GetSamplerState(Sampler, Type, pValue);

	mov	esi, esp
	mov	eax, DWORD PTR _pValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Sampler$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 779  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetSamplerState@IDirect3DDevice9Hook@@UAGJKW4_D3DSAMPLERSTATETYPE@@PAK@Z ENDP ; IDirect3DDevice9Hook::GetSamplerState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetTextureStageState@IDirect3DDevice9Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Stage$ = 12						; size = 4
_Type$ = 16						; size = 4
_Value$ = 20						; size = 4
?SetTextureStageState@IDirect3DDevice9Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z PROC ; IDirect3DDevice9Hook::SetTextureStageState, COMDAT

; 772  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 773  : 	return pD3DDevice->SetTextureStageState(Stage, Type, Value);

	mov	esi, esp
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Stage$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 774  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetTextureStageState@IDirect3DDevice9Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ENDP ; IDirect3DDevice9Hook::SetTextureStageState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetTextureStageState@IDirect3DDevice9Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Stage$ = 12						; size = 4
_Type$ = 16						; size = 4
_pValue$ = 20						; size = 4
?GetTextureStageState@IDirect3DDevice9Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z PROC ; IDirect3DDevice9Hook::GetTextureStageState, COMDAT

; 767  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 768  : 	return pD3DDevice->GetTextureStageState(Stage, Type, pValue);

	mov	esi, esp
	mov	eax, DWORD PTR _pValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Stage$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+264]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 769  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetTextureStageState@IDirect3DDevice9Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z ENDP ; IDirect3DDevice9Hook::GetTextureStageState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetTexture@IDirect3DDevice9Hook@@UAGJKPAUIDirect3DBaseTexture9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Stage$ = 12						; size = 4
_pTexture$ = 16						; size = 4
?SetTexture@IDirect3DDevice9Hook@@UAGJKPAUIDirect3DBaseTexture9@@@Z PROC ; IDirect3DDevice9Hook::SetTexture, COMDAT

; 762  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 763  : 	return pD3DDevice->SetTexture(Stage, pTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _pTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Stage$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+260]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 764  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTexture@IDirect3DDevice9Hook@@UAGJKPAUIDirect3DBaseTexture9@@@Z ENDP ; IDirect3DDevice9Hook::SetTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetTexture@IDirect3DDevice9Hook@@UAGJKPAPAUIDirect3DBaseTexture9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Stage$ = 12						; size = 4
_ppTexture$ = 16					; size = 4
?GetTexture@IDirect3DDevice9Hook@@UAGJKPAPAUIDirect3DBaseTexture9@@@Z PROC ; IDirect3DDevice9Hook::GetTexture, COMDAT

; 757  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 758  : 	return pD3DDevice->GetTexture(Stage, ppTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _ppTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Stage$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+256]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 759  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetTexture@IDirect3DDevice9Hook@@UAGJKPAPAUIDirect3DBaseTexture9@@@Z ENDP ; IDirect3DDevice9Hook::GetTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetClipStatus@IDirect3DDevice9Hook@@UAGJPAU_D3DCLIPSTATUS9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pClipStatus$ = 12					; size = 4
?GetClipStatus@IDirect3DDevice9Hook@@UAGJPAU_D3DCLIPSTATUS9@@@Z PROC ; IDirect3DDevice9Hook::GetClipStatus, COMDAT

; 752  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 753  : 	return pD3DDevice->GetClipStatus(pClipStatus);

	mov	esi, esp
	mov	eax, DWORD PTR _pClipStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+252]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 754  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetClipStatus@IDirect3DDevice9Hook@@UAGJPAU_D3DCLIPSTATUS9@@@Z ENDP ; IDirect3DDevice9Hook::GetClipStatus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetClipStatus@IDirect3DDevice9Hook@@UAGJPBU_D3DCLIPSTATUS9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pClipStatus$ = 12					; size = 4
?SetClipStatus@IDirect3DDevice9Hook@@UAGJPBU_D3DCLIPSTATUS9@@@Z PROC ; IDirect3DDevice9Hook::SetClipStatus, COMDAT

; 747  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 748  : 	return pD3DDevice->SetClipStatus(pClipStatus);

	mov	esi, esp
	mov	eax, DWORD PTR _pClipStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+248]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 749  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetClipStatus@IDirect3DDevice9Hook@@UAGJPBU_D3DCLIPSTATUS9@@@Z ENDP ; IDirect3DDevice9Hook::SetClipStatus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?EndStateBlock@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DStateBlock9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppSB$ = 12						; size = 4
?EndStateBlock@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DStateBlock9@@@Z PROC ; IDirect3DDevice9Hook::EndStateBlock, COMDAT

; 742  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 743  : 	return pD3DDevice->EndStateBlock(ppSB);

	mov	esi, esp
	mov	eax, DWORD PTR _ppSB$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+244]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 744  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?EndStateBlock@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DStateBlock9@@@Z ENDP ; IDirect3DDevice9Hook::EndStateBlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?BeginStateBlock@IDirect3DDevice9Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?BeginStateBlock@IDirect3DDevice9Hook@@UAGJXZ PROC	; IDirect3DDevice9Hook::BeginStateBlock, COMDAT

; 737  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 738  : 	return pD3DDevice->BeginStateBlock();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+240]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 739  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?BeginStateBlock@IDirect3DDevice9Hook@@UAGJXZ ENDP	; IDirect3DDevice9Hook::BeginStateBlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateStateBlock@IDirect3DDevice9Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAPAUIDirect3DStateBlock9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Type$ = 12						; size = 4
_ppSB$ = 16						; size = 4
?CreateStateBlock@IDirect3DDevice9Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAPAUIDirect3DStateBlock9@@@Z PROC ; IDirect3DDevice9Hook::CreateStateBlock, COMDAT

; 732  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 733  : 	return pD3DDevice->CreateStateBlock(Type, ppSB);

	mov	esi, esp
	mov	eax, DWORD PTR _ppSB$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+236]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 734  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateStateBlock@IDirect3DDevice9Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAPAUIDirect3DStateBlock9@@@Z ENDP ; IDirect3DDevice9Hook::CreateStateBlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetRenderState@IDirect3DDevice9Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_pValue$ = 16						; size = 4
?GetRenderState@IDirect3DDevice9Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z PROC ; IDirect3DDevice9Hook::GetRenderState, COMDAT

; 727  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 728  : 	return pD3DDevice->GetRenderState(State, pValue);

	mov	esi, esp
	mov	eax, DWORD PTR _pValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+232]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 729  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetRenderState@IDirect3DDevice9Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z ENDP ; IDirect3DDevice9Hook::GetRenderState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetRenderState@IDirect3DDevice9Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_Value$ = 16						; size = 4
?SetRenderState@IDirect3DDevice9Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z PROC ; IDirect3DDevice9Hook::SetRenderState, COMDAT

; 722  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 723  : 	return pD3DDevice->SetRenderState(State, Value);

	mov	esi, esp
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+228]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 724  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetRenderState@IDirect3DDevice9Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z ENDP ; IDirect3DDevice9Hook::SetRenderState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetClipPlane@IDirect3DDevice9Hook@@UAGJKPAM@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pPlane$ = 16						; size = 4
?GetClipPlane@IDirect3DDevice9Hook@@UAGJKPAM@Z PROC	; IDirect3DDevice9Hook::GetClipPlane, COMDAT

; 717  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 718  : 	return pD3DDevice->GetClipPlane(Index, pPlane);

	mov	esi, esp
	mov	eax, DWORD PTR _pPlane$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+224]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 719  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetClipPlane@IDirect3DDevice9Hook@@UAGJKPAM@Z ENDP	; IDirect3DDevice9Hook::GetClipPlane
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetClipPlane@IDirect3DDevice9Hook@@UAGJKPBM@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pPlane$ = 16						; size = 4
?SetClipPlane@IDirect3DDevice9Hook@@UAGJKPBM@Z PROC	; IDirect3DDevice9Hook::SetClipPlane, COMDAT

; 712  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 713  : 	return pD3DDevice->SetClipPlane(Index, pPlane);

	mov	esi, esp
	mov	eax, DWORD PTR _pPlane$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+220]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 714  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetClipPlane@IDirect3DDevice9Hook@@UAGJKPBM@Z ENDP	; IDirect3DDevice9Hook::SetClipPlane
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetLightEnable@IDirect3DDevice9Hook@@UAGJKPAH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pEnable$ = 16						; size = 4
?GetLightEnable@IDirect3DDevice9Hook@@UAGJKPAH@Z PROC	; IDirect3DDevice9Hook::GetLightEnable, COMDAT

; 707  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 708  : 	return pD3DDevice->GetLightEnable(Index, pEnable);

	mov	esi, esp
	mov	eax, DWORD PTR _pEnable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+216]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 709  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetLightEnable@IDirect3DDevice9Hook@@UAGJKPAH@Z ENDP	; IDirect3DDevice9Hook::GetLightEnable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?LightEnable@IDirect3DDevice9Hook@@UAGJKH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_Enable$ = 16						; size = 4
?LightEnable@IDirect3DDevice9Hook@@UAGJKH@Z PROC	; IDirect3DDevice9Hook::LightEnable, COMDAT

; 702  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 703  : 	return pD3DDevice->LightEnable(Index, Enable);

	mov	esi, esp
	mov	eax, DWORD PTR _Enable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+212]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 704  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?LightEnable@IDirect3DDevice9Hook@@UAGJKH@Z ENDP	; IDirect3DDevice9Hook::LightEnable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetLight@IDirect3DDevice9Hook@@UAGJKPAU_D3DLIGHT9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pLight$ = 16						; size = 4
?GetLight@IDirect3DDevice9Hook@@UAGJKPAU_D3DLIGHT9@@@Z PROC ; IDirect3DDevice9Hook::GetLight, COMDAT

; 697  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 698  : 	return pD3DDevice->GetLight(Index, pLight);

	mov	esi, esp
	mov	eax, DWORD PTR _pLight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+208]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 699  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetLight@IDirect3DDevice9Hook@@UAGJKPAU_D3DLIGHT9@@@Z ENDP ; IDirect3DDevice9Hook::GetLight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetLight@IDirect3DDevice9Hook@@UAGJKPBU_D3DLIGHT9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pLight$ = 16						; size = 4
?SetLight@IDirect3DDevice9Hook@@UAGJKPBU_D3DLIGHT9@@@Z PROC ; IDirect3DDevice9Hook::SetLight, COMDAT

; 692  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 693  : 	return pD3DDevice->SetLight(Index, pLight);

	mov	esi, esp
	mov	eax, DWORD PTR _pLight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+204]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 694  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetLight@IDirect3DDevice9Hook@@UAGJKPBU_D3DLIGHT9@@@Z ENDP ; IDirect3DDevice9Hook::SetLight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetMaterial@IDirect3DDevice9Hook@@UAGJPAU_D3DMATERIAL9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pMaterial$ = 12					; size = 4
?GetMaterial@IDirect3DDevice9Hook@@UAGJPAU_D3DMATERIAL9@@@Z PROC ; IDirect3DDevice9Hook::GetMaterial, COMDAT

; 687  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 688  : 	return pD3DDevice->GetMaterial(pMaterial);

	mov	esi, esp
	mov	eax, DWORD PTR _pMaterial$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+200]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 689  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMaterial@IDirect3DDevice9Hook@@UAGJPAU_D3DMATERIAL9@@@Z ENDP ; IDirect3DDevice9Hook::GetMaterial
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetMaterial@IDirect3DDevice9Hook@@UAGJPBU_D3DMATERIAL9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pMaterial$ = 12					; size = 4
?SetMaterial@IDirect3DDevice9Hook@@UAGJPBU_D3DMATERIAL9@@@Z PROC ; IDirect3DDevice9Hook::SetMaterial, COMDAT

; 682  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 683  : 	return pD3DDevice->SetMaterial(pMaterial);

	mov	esi, esp
	mov	eax, DWORD PTR _pMaterial$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+196]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 684  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetMaterial@IDirect3DDevice9Hook@@UAGJPBU_D3DMATERIAL9@@@Z ENDP ; IDirect3DDevice9Hook::SetMaterial
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetViewport@IDirect3DDevice9Hook@@UAGJPAU_D3DVIEWPORT9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pViewport$ = 12					; size = 4
?GetViewport@IDirect3DDevice9Hook@@UAGJPAU_D3DVIEWPORT9@@@Z PROC ; IDirect3DDevice9Hook::GetViewport, COMDAT

; 677  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 678  : 	return pD3DDevice->GetViewport(pViewport);

	mov	esi, esp
	mov	eax, DWORD PTR _pViewport$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+192]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 679  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetViewport@IDirect3DDevice9Hook@@UAGJPAU_D3DVIEWPORT9@@@Z ENDP ; IDirect3DDevice9Hook::GetViewport
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetViewport@IDirect3DDevice9Hook@@UAGJPBU_D3DVIEWPORT9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pViewport$ = 12					; size = 4
?SetViewport@IDirect3DDevice9Hook@@UAGJPBU_D3DVIEWPORT9@@@Z PROC ; IDirect3DDevice9Hook::SetViewport, COMDAT

; 672  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 673  : 	return pD3DDevice->SetViewport(pViewport);

	mov	esi, esp
	mov	eax, DWORD PTR _pViewport$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+188]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 674  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetViewport@IDirect3DDevice9Hook@@UAGJPBU_D3DVIEWPORT9@@@Z ENDP ; IDirect3DDevice9Hook::SetViewport
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?MultiplyTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_mat$ = 16						; size = 4
?MultiplyTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z PROC ; IDirect3DDevice9Hook::MultiplyTransform, COMDAT

; 667  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 668  : 	return pD3DDevice->MultiplyTransform(State, mat);

	mov	esi, esp
	mov	eax, DWORD PTR _mat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+184]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 669  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MultiplyTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ENDP ; IDirect3DDevice9Hook::MultiplyTransform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_mat$ = 16						; size = 4
?GetTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z PROC ; IDirect3DDevice9Hook::GetTransform, COMDAT

; 662  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 663  : 	return pD3DDevice->GetTransform(State, mat);

	mov	esi, esp
	mov	eax, DWORD PTR _mat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+180]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 664  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ENDP ; IDirect3DDevice9Hook::GetTransform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z
_TEXT	SEGMENT
tv71 = -344						; size = 4
$T1 = -336						; size = 64
$T2 = -264						; size = 64
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_mat$ = 16						; size = 4
?SetTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z PROC ; IDirect3DDevice9Hook::SetTransform, COMDAT

; 632  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 633  : 	// We want to check that what we're
; 634  : 	// about to call into is actually within
; 635  : 	// the d3d9.dll address space.
; 636  : 	dwD3DDev = (DWORD)pD3DDevice;

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	DWORD PTR ?dwD3DDev@@3KA, eax		; dwD3DDev

; 637  : 	
; 638  : 	_asm mov eax, dwD3DDev

	mov	eax, DWORD PTR ?dwD3DDev@@3KA		; dwD3DDev

; 639  : 	_asm mov ebx, [eax]

	mov	ebx, DWORD PTR [eax]

; 640  : 	_asm mov eax, [ebx+176]

	mov	eax, DWORD PTR [ebx+176]

; 641  : 	_asm mov dwTestPtr, eax

	mov	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr

; 642  : 		
; 643  : 	if(dwTestPtr < (dwD3D9DllBaseAddr ^ 0xACACACAC) || dwTestPtr > ((dwD3D9DllBaseAddr ^ 0xACACACAC) + dwD3D9DllSize)) {

	mov	eax, DWORD PTR ?dwD3D9DllBaseAddr@@3KA	; dwD3D9DllBaseAddr
	xor	eax, -1397969748			; acacacacH
	cmp	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr
	jb	SHORT $LN7@SetTransfo
	mov	eax, DWORD PTR ?dwD3D9DllBaseAddr@@3KA	; dwD3D9DllBaseAddr
	xor	eax, -1397969748			; acacacacH
	add	eax, DWORD PTR ?dwD3D9DllSize@@3KA	; dwD3D9DllSize
	cmp	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr
	jbe	SHORT $LN8@SetTransfo
$LN7@SetTransfo:

; 644  : 		//pChatWindow->AddDebugMessage("This isn't d3d9.dll");
; 645  : 		FORCE_EXIT( 25 );

	push	25					; 00000019H
	call	?GameForcedExit@@YAXH@Z			; GameForcedExit
	add	esp, 4
$LN6@SetTransfo:
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN8@SetTransfo
	jmp	SHORT $LN6@SetTransfo
$LN8@SetTransfo:

; 646  : 	}
; 647  : 
; 648  : 	switch (State)

	mov	eax, DWORD PTR _State$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 2
	je	SHORT $LN1@SetTransfo
	cmp	DWORD PTR tv71[ebp], 3
	je	SHORT $LN2@SetTransfo
	jmp	SHORT $LN3@SetTransfo
$LN2@SetTransfo:

; 649  : 	{
; 650  : 	case D3DTS_PROJECTION:
; 651  : 		matProj = *mat;

	mov	eax, DWORD PTR _mat$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0D3DXMATRIX@@QAE@ABU_D3DMATRIX@@@Z	; D3DXMATRIX::D3DXMATRIX
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T1[ebp]
	mov	edi, OFFSET ?matProj@@3UD3DXMATRIX@@A	; matProj
	rep movsd

; 652  : 		break;

	jmp	SHORT $LN3@SetTransfo
$LN1@SetTransfo:

; 653  : 	case D3DTS_VIEW:
; 654  : 		matView = *mat;

	mov	eax, DWORD PTR _mat$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0D3DXMATRIX@@QAE@ABU_D3DMATRIX@@@Z	; D3DXMATRIX::D3DXMATRIX
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T2[ebp]
	mov	edi, OFFSET ?matView@@3UD3DXMATRIX@@A	; matView
	rep movsd
$LN3@SetTransfo:

; 655  : 		break;
; 656  : 	}
; 657  : 
; 658  : 	return pD3DDevice->SetTransform(State, mat);

	mov	esi, esp
	mov	eax, DWORD PTR _mat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+176]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 659  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTransform@IDirect3DDevice9Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ENDP ; IDirect3DDevice9Hook::SetTransform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?Clear@IDirect3DDevice9Hook@@UAGJKPBU_D3DRECT@@KKMK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Count$ = 12						; size = 4
_pRects$ = 16						; size = 4
_Flags$ = 20						; size = 4
_Color$ = 24						; size = 4
_Z$ = 28						; size = 4
_Stencil$ = 32						; size = 4
?Clear@IDirect3DDevice9Hook@@UAGJKPBU_D3DRECT@@KKMK@Z PROC ; IDirect3DDevice9Hook::Clear, COMDAT

; 626  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 627  : 	// +172
; 628  : 	return pD3DDevice->Clear(Count, pRects, Flags, Color, Z, Stencil);

	mov	esi, esp
	mov	eax, DWORD PTR _Stencil$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _Z$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Color$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Flags$[ebp]
	push	edx
	mov	eax, DWORD PTR _pRects$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+172]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 629  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Clear@IDirect3DDevice9Hook@@UAGJKPBU_D3DRECT@@KKMK@Z ENDP ; IDirect3DDevice9Hook::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?EndScene@IDirect3DDevice9Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?EndScene@IDirect3DDevice9Hook@@UAGJXZ PROC		; IDirect3DDevice9Hook::EndScene, COMDAT

; 606  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 607  : 	// We want to check that what we're
; 608  : 	// about to call into is actually within
; 609  : 	// the d3d9.dll address space.
; 610  : 	dwD3DDev = (DWORD)pD3DDevice;

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	DWORD PTR ?dwD3DDev@@3KA, eax		; dwD3DDev

; 611  : 	
; 612  : 	_asm mov eax, dwD3DDev

	mov	eax, DWORD PTR ?dwD3DDev@@3KA		; dwD3DDev

; 613  : 	_asm mov ebx, [eax]

	mov	ebx, DWORD PTR [eax]

; 614  : 	_asm mov eax, [ebx+168]

	mov	eax, DWORD PTR [ebx+168]

; 615  : 	_asm mov dwTestPtr, eax

	mov	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr

; 616  : 		
; 617  : 	if(dwTestPtr < (dwD3D9DllBaseAddr ^ 0xACACACAC) || dwTestPtr > ((dwD3D9DllBaseAddr ^ 0xACACACAC) + dwD3D9DllSize)) {

	mov	eax, DWORD PTR ?dwD3D9DllBaseAddr@@3KA	; dwD3D9DllBaseAddr
	xor	eax, -1397969748			; acacacacH
	cmp	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr
	jb	SHORT $LN3@EndScene
	mov	eax, DWORD PTR ?dwD3D9DllBaseAddr@@3KA	; dwD3D9DllBaseAddr
	xor	eax, -1397969748			; acacacacH
	add	eax, DWORD PTR ?dwD3D9DllSize@@3KA	; dwD3D9DllSize
	cmp	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr
	jbe	SHORT $LN4@EndScene
$LN3@EndScene:

; 618  : 		//pChatWindow->AddDebugMessage("This isn't d3d9.dll");
; 619  : 		FORCE_EXIT( 22 );

	push	22					; 00000016H
	call	?GameForcedExit@@YAXH@Z			; GameForcedExit
	add	esp, 4
$LN2@EndScene:
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN4@EndScene
	jmp	SHORT $LN2@EndScene
$LN4@EndScene:

; 620  : 	}
; 621  : 
; 622  : 	return pD3DDevice->EndScene();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+168]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 623  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EndScene@IDirect3DDevice9Hook@@UAGJXZ ENDP		; IDirect3DDevice9Hook::EndScene
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?BeginScene@IDirect3DDevice9Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?BeginScene@IDirect3DDevice9Hook@@UAGJXZ PROC		; IDirect3DDevice9Hook::BeginScene, COMDAT

; 586  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 587  : 	// We want to check that what we're
; 588  : 	// about to call into is actually within
; 589  : 	// the d3d9.dll address space.
; 590  : 	dwD3DDev = (DWORD)pD3DDevice;

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	DWORD PTR ?dwD3DDev@@3KA, eax		; dwD3DDev

; 591  : 
; 592  : 	_asm mov eax, dwD3DDev

	mov	eax, DWORD PTR ?dwD3DDev@@3KA		; dwD3DDev

; 593  : 	_asm mov ebx, [eax]

	mov	ebx, DWORD PTR [eax]

; 594  : 	_asm mov eax, [ebx+164]

	mov	eax, DWORD PTR [ebx+164]

; 595  : 	_asm mov dwTestPtr, eax

	mov	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr

; 596  : 	
; 597  : 	if(dwTestPtr < (dwD3D9DllBaseAddr ^ 0xACACACAC) || dwTestPtr > ((dwD3D9DllBaseAddr ^ 0xACACACAC) + dwD3D9DllSize)) {

	mov	eax, DWORD PTR ?dwD3D9DllBaseAddr@@3KA	; dwD3D9DllBaseAddr
	xor	eax, -1397969748			; acacacacH
	cmp	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr
	jb	SHORT $LN3@BeginScene
	mov	eax, DWORD PTR ?dwD3D9DllBaseAddr@@3KA	; dwD3D9DllBaseAddr
	xor	eax, -1397969748			; acacacacH
	add	eax, DWORD PTR ?dwD3D9DllSize@@3KA	; dwD3D9DllSize
	cmp	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr
	jbe	SHORT $LN4@BeginScene
$LN3@BeginScene:

; 598  : 		//pChatWindow->AddDebugMessage("This isn't d3d9.dll");
; 599  : 		FORCE_EXIT( 21 );

	push	21					; 00000015H
	call	?GameForcedExit@@YAXH@Z			; GameForcedExit
	add	esp, 4
$LN2@BeginScene:
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN4@BeginScene
	jmp	SHORT $LN2@BeginScene
$LN4@BeginScene:

; 600  : 	}
; 601  : 
; 602  : 	return pD3DDevice->BeginScene();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+164]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 603  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?BeginScene@IDirect3DDevice9Hook@@UAGJXZ ENDP		; IDirect3DDevice9Hook::BeginScene
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetDepthStencilSurface@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DSurface9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppZStencilSurface$ = 12				; size = 4
?GetDepthStencilSurface@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DSurface9@@@Z PROC ; IDirect3DDevice9Hook::GetDepthStencilSurface, COMDAT

; 581  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 582  : 	return pD3DDevice->GetDepthStencilSurface(ppZStencilSurface);

	mov	esi, esp
	mov	eax, DWORD PTR _ppZStencilSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+160]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 583  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDepthStencilSurface@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3DSurface9@@@Z ENDP ; IDirect3DDevice9Hook::GetDepthStencilSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetDepthStencilSurface@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pNewZStencil$ = 12					; size = 4
?SetDepthStencilSurface@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@@Z PROC ; IDirect3DDevice9Hook::SetDepthStencilSurface, COMDAT

; 576  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 577  : 	return pD3DDevice->SetDepthStencilSurface(pNewZStencil);

	mov	esi, esp
	mov	eax, DWORD PTR _pNewZStencil$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+156]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 578  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetDepthStencilSurface@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@@Z ENDP ; IDirect3DDevice9Hook::SetDepthStencilSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetRenderTarget@IDirect3DDevice9Hook@@UAGJKPAPAUIDirect3DSurface9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_RenderTargetIndex$ = 12				; size = 4
_ppRenderTarget$ = 16					; size = 4
?GetRenderTarget@IDirect3DDevice9Hook@@UAGJKPAPAUIDirect3DSurface9@@@Z PROC ; IDirect3DDevice9Hook::GetRenderTarget, COMDAT

; 571  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 572  : 	return pD3DDevice->GetRenderTarget(RenderTargetIndex, ppRenderTarget);

	mov	esi, esp
	mov	eax, DWORD PTR _ppRenderTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RenderTargetIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+152]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 573  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetRenderTarget@IDirect3DDevice9Hook@@UAGJKPAPAUIDirect3DSurface9@@@Z ENDP ; IDirect3DDevice9Hook::GetRenderTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetRenderTarget@IDirect3DDevice9Hook@@UAGJKPAUIDirect3DSurface9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_RenderTargetIndex$ = 12				; size = 4
_pRenderTarget$ = 16					; size = 4
?SetRenderTarget@IDirect3DDevice9Hook@@UAGJKPAUIDirect3DSurface9@@@Z PROC ; IDirect3DDevice9Hook::SetRenderTarget, COMDAT

; 566  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 567  : 	return pD3DDevice->SetRenderTarget(RenderTargetIndex, pRenderTarget);

	mov	esi, esp
	mov	eax, DWORD PTR _pRenderTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RenderTargetIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+148]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 568  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetRenderTarget@IDirect3DDevice9Hook@@UAGJKPAUIDirect3DSurface9@@@Z ENDP ; IDirect3DDevice9Hook::SetRenderTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateOffscreenPlainSurface@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DSurface9@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Format$ = 20						; size = 4
_Pool$ = 24						; size = 4
_ppSurface$ = 28					; size = 4
_pSharedHandle$ = 32					; size = 4
?CreateOffscreenPlainSurface@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DSurface9@@PAPAX@Z PROC ; IDirect3DDevice9Hook::CreateOffscreenPlainSurface, COMDAT

; 561  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 562  : 	return pD3DDevice->CreateOffscreenPlainSurface(Width, Height, Format, Pool, ppSurface, pSharedHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pSharedHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppSurface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Pool$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Height$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Width$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+144]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 563  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?CreateOffscreenPlainSurface@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DSurface9@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::CreateOffscreenPlainSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?ColorFill@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pSurface$ = 12						; size = 4
_pRect$ = 16						; size = 4
_color$ = 20						; size = 4
?ColorFill@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@K@Z PROC ; IDirect3DDevice9Hook::ColorFill, COMDAT

; 556  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 557  : 	return pD3DDevice->ColorFill(pSurface, pRect, color);

	mov	esi, esp
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSurface$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+140]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 558  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ColorFill@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@K@Z ENDP ; IDirect3DDevice9Hook::ColorFill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?StretchRect@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@01W4_D3DTEXTUREFILTERTYPE@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pSourceSurface$ = 12					; size = 4
_pSourceRect$ = 16					; size = 4
_pDestSurface$ = 20					; size = 4
_pDestRect$ = 24					; size = 4
_Filter$ = 28						; size = 4
?StretchRect@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@01W4_D3DTEXTUREFILTERTYPE@@@Z PROC ; IDirect3DDevice9Hook::StretchRect, COMDAT

; 551  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 552  : 	return pD3DDevice->StretchRect(pSourceSurface, pSourceRect, pDestSurface, pDestRect, Filter);

	mov	esi, esp
	mov	eax, DWORD PTR _Filter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDestRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDestSurface$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSourceRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSourceSurface$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+136]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 553  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?StretchRect@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@01W4_D3DTEXTUREFILTERTYPE@@@Z ENDP ; IDirect3DDevice9Hook::StretchRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetFrontBufferData@IDirect3DDevice9Hook@@UAGJIPAUIDirect3DSurface9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iSwapChain$ = 12					; size = 4
_pDestSurface$ = 16					; size = 4
?GetFrontBufferData@IDirect3DDevice9Hook@@UAGJIPAUIDirect3DSurface9@@@Z PROC ; IDirect3DDevice9Hook::GetFrontBufferData, COMDAT

; 546  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 547  : 	return pD3DDevice->GetFrontBufferData(iSwapChain, pDestSurface);

	mov	esi, esp
	mov	eax, DWORD PTR _pDestSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+132]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 548  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetFrontBufferData@IDirect3DDevice9Hook@@UAGJIPAUIDirect3DSurface9@@@Z ENDP ; IDirect3DDevice9Hook::GetFrontBufferData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetRenderTargetData@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pRenderTarget$ = 12					; size = 4
_pDestSurface$ = 16					; size = 4
?GetRenderTargetData@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@0@Z PROC ; IDirect3DDevice9Hook::GetRenderTargetData, COMDAT

; 541  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 542  : 	return pD3DDevice->GetRenderTargetData(pRenderTarget, pDestSurface);

	mov	esi, esp
	mov	eax, DWORD PTR _pDestSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRenderTarget$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+128]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 543  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetRenderTargetData@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@0@Z ENDP ; IDirect3DDevice9Hook::GetRenderTargetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?UpdateTexture@IDirect3DDevice9Hook@@UAGJPAUIDirect3DBaseTexture9@@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pSourceTexture$ = 12					; size = 4
_pDestinationTexture$ = 16				; size = 4
?UpdateTexture@IDirect3DDevice9Hook@@UAGJPAUIDirect3DBaseTexture9@@0@Z PROC ; IDirect3DDevice9Hook::UpdateTexture, COMDAT

; 536  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 537  : 	return pD3DDevice->UpdateTexture(pSourceTexture, pDestinationTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _pDestinationTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSourceTexture$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+124]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 538  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?UpdateTexture@IDirect3DDevice9Hook@@UAGJPAUIDirect3DBaseTexture9@@0@Z ENDP ; IDirect3DDevice9Hook::UpdateTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?UpdateSurface@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@0PBUtagPOINT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pSourceSurface$ = 12					; size = 4
_pSourceRect$ = 16					; size = 4
_pDestinationSurface$ = 20				; size = 4
_pDestPoint$ = 24					; size = 4
?UpdateSurface@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@0PBUtagPOINT@@@Z PROC ; IDirect3DDevice9Hook::UpdateSurface, COMDAT

; 531  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 532  : 	return pD3DDevice->UpdateSurface(pSourceSurface, pSourceRect, pDestinationSurface, pDestPoint);

	mov	esi, esp
	mov	eax, DWORD PTR _pDestPoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDestinationSurface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSourceRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSourceSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+120]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 533  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?UpdateSurface@IDirect3DDevice9Hook@@UAGJPAUIDirect3DSurface9@@PBUtagRECT@@0PBUtagPOINT@@@Z ENDP ; IDirect3DDevice9Hook::UpdateSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateDepthStencilSurface@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@KHPAPAUIDirect3DSurface9@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Format$ = 20						; size = 4
_MultiSample$ = 24					; size = 4
_MultisampleQuality$ = 28				; size = 4
_Discard$ = 32						; size = 4
_ppSurface$ = 36					; size = 4
_pSharedHandle$ = 40					; size = 4
?CreateDepthStencilSurface@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@KHPAPAUIDirect3DSurface9@@PAPAX@Z PROC ; IDirect3DDevice9Hook::CreateDepthStencilSurface, COMDAT

; 526  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 527  : 	return pD3DDevice->CreateDepthStencilSurface(Width, Height, Format, MultiSample, MultisampleQuality, Discard, ppSurface, pSharedHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pSharedHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppSurface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Discard$[ebp]
	push	edx
	mov	eax, DWORD PTR _MultisampleQuality$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MultiSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Format$[ebp]
	push	edx
	mov	eax, DWORD PTR _Height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Width$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+116]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 528  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?CreateDepthStencilSurface@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@KHPAPAUIDirect3DSurface9@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::CreateDepthStencilSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateRenderTarget@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@KHPAPAUIDirect3DSurface9@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Format$ = 20						; size = 4
_MultiSample$ = 24					; size = 4
_MultisampleQuality$ = 28				; size = 4
_Lockable$ = 32						; size = 4
_ppSurface$ = 36					; size = 4
_pSharedHandle$ = 40					; size = 4
?CreateRenderTarget@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@KHPAPAUIDirect3DSurface9@@PAPAX@Z PROC ; IDirect3DDevice9Hook::CreateRenderTarget, COMDAT

; 521  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 522  : 	return pD3DDevice->CreateRenderTarget(Width, Height, Format, MultiSample, MultisampleQuality, Lockable, ppSurface, pSharedHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pSharedHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppSurface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Lockable$[ebp]
	push	edx
	mov	eax, DWORD PTR _MultisampleQuality$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MultiSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Format$[ebp]
	push	edx
	mov	eax, DWORD PTR _Height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Width$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 523  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?CreateRenderTarget@IDirect3DDevice9Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@KHPAPAUIDirect3DSurface9@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::CreateRenderTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateIndexBuffer@IDirect3DDevice9Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer9@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Length$ = 12						; size = 4
_Usage$ = 16						; size = 4
_Format$ = 20						; size = 4
_Pool$ = 24						; size = 4
_ppIndexBuffer$ = 28					; size = 4
_pSharedHandle$ = 32					; size = 4
?CreateIndexBuffer@IDirect3DDevice9Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer9@@PAPAX@Z PROC ; IDirect3DDevice9Hook::CreateIndexBuffer, COMDAT

; 516  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 517  : 	return pD3DDevice->CreateIndexBuffer(Length, Usage, Format, Pool, ppIndexBuffer, pSharedHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pSharedHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppIndexBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Pool$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Usage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Length$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 518  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?CreateIndexBuffer@IDirect3DDevice9Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer9@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::CreateIndexBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateVertexBuffer@IDirect3DDevice9Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer9@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Length$ = 12						; size = 4
_Usage$ = 16						; size = 4
_FVF$ = 20						; size = 4
_Pool$ = 24						; size = 4
_ppVertexBuffer$ = 28					; size = 4
_pSharedHandle$ = 32					; size = 4
?CreateVertexBuffer@IDirect3DDevice9Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer9@@PAPAX@Z PROC ; IDirect3DDevice9Hook::CreateVertexBuffer, COMDAT

; 511  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 512  : 	return pD3DDevice->CreateVertexBuffer(Length, Usage, FVF, Pool, ppVertexBuffer, pSharedHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pSharedHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppVertexBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Pool$[ebp]
	push	edx
	mov	eax, DWORD PTR _FVF$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Usage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Length$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 513  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?CreateVertexBuffer@IDirect3DDevice9Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer9@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::CreateVertexBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateCubeTexture@IDirect3DDevice9Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture9@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_EdgeLength$ = 12					; size = 4
_Levels$ = 16						; size = 4
_Usage$ = 20						; size = 4
_Format$ = 24						; size = 4
_Pool$ = 28						; size = 4
_ppCubeTexture$ = 32					; size = 4
_pSharedHandle$ = 36					; size = 4
?CreateCubeTexture@IDirect3DDevice9Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture9@@PAPAX@Z PROC ; IDirect3DDevice9Hook::CreateCubeTexture, COMDAT

; 506  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 507  : 	return pD3DDevice->CreateCubeTexture(EdgeLength, Levels, Usage, Format, Pool, ppCubeTexture, pSharedHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pSharedHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppCubeTexture$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Pool$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Usage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Levels$[ebp]
	push	edx
	mov	eax, DWORD PTR _EdgeLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+100]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 508  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?CreateCubeTexture@IDirect3DDevice9Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture9@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::CreateCubeTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateVolumeTexture@IDirect3DDevice9Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture9@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Depth$ = 20						; size = 4
_Levels$ = 24						; size = 4
_Usage$ = 28						; size = 4
_Format$ = 32						; size = 4
_Pool$ = 36						; size = 4
_ppVolumeTexture$ = 40					; size = 4
_pSharedHandle$ = 44					; size = 4
?CreateVolumeTexture@IDirect3DDevice9Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture9@@PAPAX@Z PROC ; IDirect3DDevice9Hook::CreateVolumeTexture, COMDAT

; 501  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 502  : 	return pD3DDevice->CreateVolumeTexture(Width, Height, Depth, Levels, Usage, Format, Pool, ppVolumeTexture, pSharedHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pSharedHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppVolumeTexture$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Pool$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Usage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Levels$[ebp]
	push	edx
	mov	eax, DWORD PTR _Depth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Height$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Width$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 503  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
?CreateVolumeTexture@IDirect3DDevice9Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture9@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::CreateVolumeTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateTexture@IDirect3DDevice9Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture9@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Levels$ = 20						; size = 4
_Usage$ = 24						; size = 4
_Format$ = 28						; size = 4
_Pool$ = 32						; size = 4
_ppTexture$ = 36					; size = 4
_pSharedHandle$ = 40					; size = 4
?CreateTexture@IDirect3DDevice9Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture9@@PAPAX@Z PROC ; IDirect3DDevice9Hook::CreateTexture, COMDAT

; 496  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 497  : 	return pD3DDevice->CreateTexture(Width, Height, Levels, Usage, Format, Pool, ppTexture, pSharedHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pSharedHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppTexture$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Pool$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Usage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Levels$[ebp]
	push	edx
	mov	eax, DWORD PTR _Height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Width$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 498  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?CreateTexture@IDirect3DDevice9Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture9@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::CreateTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetGammaRamp@IDirect3DDevice9Hook@@UAGXIPAU_D3DGAMMARAMP@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iSwapChain$ = 12					; size = 4
_pRamp$ = 16						; size = 4
?GetGammaRamp@IDirect3DDevice9Hook@@UAGXIPAU_D3DGAMMARAMP@@@Z PROC ; IDirect3DDevice9Hook::GetGammaRamp, COMDAT

; 491  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 492  : 	pD3DDevice->GetGammaRamp(iSwapChain, pRamp);

	mov	esi, esp
	mov	eax, DWORD PTR _pRamp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+88]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 493  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetGammaRamp@IDirect3DDevice9Hook@@UAGXIPAU_D3DGAMMARAMP@@@Z ENDP ; IDirect3DDevice9Hook::GetGammaRamp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetGammaRamp@IDirect3DDevice9Hook@@UAGXIKPBU_D3DGAMMARAMP@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iSwapChain$ = 12					; size = 4
_Flags$ = 16						; size = 4
_pRamp$ = 20						; size = 4
?SetGammaRamp@IDirect3DDevice9Hook@@UAGXIKPBU_D3DGAMMARAMP@@@Z PROC ; IDirect3DDevice9Hook::SetGammaRamp, COMDAT

; 486  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 487  : 	pD3DDevice->SetGammaRamp(iSwapChain, Flags, pRamp);

	mov	esi, esp
	mov	eax, DWORD PTR _pRamp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Flags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iSwapChain$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 488  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetGammaRamp@IDirect3DDevice9Hook@@UAGXIKPBU_D3DGAMMARAMP@@@Z ENDP ; IDirect3DDevice9Hook::SetGammaRamp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetDialogBoxMode@IDirect3DDevice9Hook@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnableDialogs$ = 12					; size = 4
?SetDialogBoxMode@IDirect3DDevice9Hook@@UAGJH@Z PROC	; IDirect3DDevice9Hook::SetDialogBoxMode, COMDAT

; 481  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 482  : 	return pD3DDevice->SetDialogBoxMode(bEnableDialogs);

	mov	esi, esp
	mov	eax, DWORD PTR _bEnableDialogs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+80]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 483  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetDialogBoxMode@IDirect3DDevice9Hook@@UAGJH@Z ENDP	; IDirect3DDevice9Hook::SetDialogBoxMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetRasterStatus@IDirect3DDevice9Hook@@UAGJIPAU_D3DRASTER_STATUS@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iSwapChain$ = 12					; size = 4
_pRasterStatus$ = 16					; size = 4
?GetRasterStatus@IDirect3DDevice9Hook@@UAGJIPAU_D3DRASTER_STATUS@@@Z PROC ; IDirect3DDevice9Hook::GetRasterStatus, COMDAT

; 476  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 477  : 	return pD3DDevice->GetRasterStatus(iSwapChain, pRasterStatus);

	mov	esi, esp
	mov	eax, DWORD PTR _pRasterStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 478  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetRasterStatus@IDirect3DDevice9Hook@@UAGJIPAU_D3DRASTER_STATUS@@@Z ENDP ; IDirect3DDevice9Hook::GetRasterStatus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetBackBuffer@IDirect3DDevice9Hook@@UAGJIIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iSwapChain$ = 12					; size = 4
_iBackBuffer$ = 16					; size = 4
_Type$ = 20						; size = 4
_ppBackBuffer$ = 24					; size = 4
?GetBackBuffer@IDirect3DDevice9Hook@@UAGJIIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface9@@@Z PROC ; IDirect3DDevice9Hook::GetBackBuffer, COMDAT

; 471  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 472  : 	return pD3DDevice->GetBackBuffer(iSwapChain, iBackBuffer, Type, ppBackBuffer);

	mov	esi, esp
	mov	eax, DWORD PTR _ppBackBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iBackBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _iSwapChain$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 473  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetBackBuffer@IDirect3DDevice9Hook@@UAGJIIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface9@@@Z ENDP ; IDirect3DDevice9Hook::GetBackBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z
_TEXT	SEGMENT
tv695 = -1440						; size = 4
tv616 = -1440						; size = 4
tv576 = -1440						; size = 4
tv465 = -1440						; size = 4
_bsSend$2 = -1240					; size = 273
_pos$3 = -956						; size = 4
_i$4 = -944						; size = 4
_mapY$5 = -932						; size = 4
_mapX$6 = -920						; size = 4
_color$7 = -908						; size = 4
_label$8 = -896						; size = 255
_vPlayerPos$9 = -632					; size = 12
_matPlayer$10 = -612					; size = 64
_PlayerPed$11 = -540					; size = 4
_pRemotePlayer$12 = -528				; size = 4
_x$13 = -516						; size = 4
_label$14 = -504					; size = 255
_vVehiclePos$15 = -240					; size = 12
_matVehicle$16 = -220					; size = 64
_Vehicle$17 = -148					; size = 4
_x$18 = -136						; size = 4
_pPlayerPool$19 = -124					; size = 4
_pVehiclePool$20 = -112					; size = 4
_rect$21 = -100						; size = 16
_point$22 = -76						; size = 8
_pFrontBuffer$23 = -60					; size = 4
_sFileName$24 = -48					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pSourceRect$ = 12					; size = 4
_pDestRect$ = 16					; size = 4
_hDestWindowOverride$ = 20				; size = 4
_pDirtyRegion$ = 24					; size = 4
?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z PROC ; IDirect3DDevice9Hook::Present, COMDAT

; 135  : {		

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1428				; 00000594H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1440]
	mov	ecx, 357				; 00000165H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 136  :     // ---- Detection of fake d3d9.dll
; 137  : 	dwD3DDev = (DWORD)pD3DDevice;

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	DWORD PTR ?dwD3DDev@@3KA, eax		; dwD3DDev

; 138  : 	
; 139  : 	_asm mov eax, dwD3DDev

	mov	eax, DWORD PTR ?dwD3DDev@@3KA		; dwD3DDev

; 140  : 	_asm mov ebx, [eax]

	mov	ebx, DWORD PTR [eax]

; 141  : 	_asm mov eax, [ebx+68]

	mov	eax, DWORD PTR [ebx+68]

; 142  : 	_asm mov dwTestPtr, eax

	mov	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr

; 143  : 		
; 144  : 	if(dwTestPtr < (dwD3D9DllBaseAddr ^ 0xACACACAC) || dwTestPtr > ((dwD3D9DllBaseAddr ^ 0xACACACAC) + dwD3D9DllSize)) {

	mov	eax, DWORD PTR ?dwD3D9DllBaseAddr@@3KA	; dwD3D9DllBaseAddr
	xor	eax, -1397969748			; acacacacH
	cmp	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr
	jb	SHORT $LN46@Present
	mov	eax, DWORD PTR ?dwD3D9DllBaseAddr@@3KA	; dwD3D9DllBaseAddr
	xor	eax, -1397969748			; acacacacH
	add	eax, DWORD PTR ?dwD3D9DllSize@@3KA	; dwD3D9DllSize
	cmp	DWORD PTR ?dwTestPtr@@3KA, eax		; dwTestPtr
	jbe	SHORT $LN44@Present
$LN46@Present:

; 145  : 		//pChatWindow->AddDebugMessage("This isn't d3d9.dll");
; 146  : 		FORCE_EXIT( 20 );

	push	20					; 00000014H
	call	?GameForcedExit@@YAXH@Z			; GameForcedExit
	add	esp, 4
$LN45@Present:
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN44@Present
	jmp	SHORT $LN45@Present
$LN44@Present:

; 147  : 	}
; 148  : 	// --- End detection of fake d3d9.dll
; 149  : 
; 150  : 	if (g_bTakeScreenshot)

	cmp	DWORD PTR ?g_bTakeScreenshot@@3HA, 0	; g_bTakeScreenshot
	je	$LN43@Present

; 151  : 	{
; 152  : 		g_bTakeScreenshot = FALSE;

	mov	DWORD PTR ?g_bTakeScreenshot@@3HA, 0	; g_bTakeScreenshot

; 153  : 		std::string sFileName;

	lea	ecx, DWORD PTR _sFileName$24[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 154  : 		GetScreenshotFileName(sFileName);

	lea	eax, DWORD PTR _sFileName$24[ebp]
	push	eax
	call	?GetScreenshotFileName@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GetScreenshotFileName
	add	esp, 4

; 155  : 	
; 156  : 		IDirect3DSurface9* pFrontBuffer;
; 157  : 		pD3DDevice->CreateOffscreenPlainSurface(GetSystemMetrics(SM_CXSCREEN), GetSystemMetrics(SM_CYSCREEN), D3DFMT_A8R8G8B8, D3DPOOL_SCRATCH, &pFrontBuffer, NULL);

	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _pFrontBuffer$23[ebp]
	push	eax
	push	3
	push	21					; 00000015H
	mov	edi, esp
	push	1
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+144]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 158  : 		if (SUCCEEDED(pD3DDevice->GetFrontBufferData(0, pFrontBuffer)))

	mov	esi, esp
	mov	eax, DWORD PTR _pFrontBuffer$23[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+132]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	$LN42@Present

; 159  : 		{
; 160  : 			POINT point = {0, 0};

	mov	DWORD PTR _point$22[ebp], 0
	mov	DWORD PTR _point$22[ebp+4], 0

; 161  : 			ClientToScreen(pGame->GetMainWindowHwnd(), &point);

	mov	esi, esp
	lea	eax, DWORD PTR _point$22[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ ; CGame::GetMainWindowHwnd
	push	eax
	call	DWORD PTR __imp__ClientToScreen@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 162  : 			RECT rect;
; 163  : 			GetClientRect(pGame->GetMainWindowHwnd(), &rect);

	mov	esi, esp
	lea	eax, DWORD PTR _rect$21[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ ; CGame::GetMainWindowHwnd
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 164  : 			rect.left += point.x; rect.right += point.x;

	mov	eax, DWORD PTR _rect$21[ebp]
	add	eax, DWORD PTR _point$22[ebp]
	mov	DWORD PTR _rect$21[ebp], eax
	mov	eax, DWORD PTR _rect$21[ebp+8]
	add	eax, DWORD PTR _point$22[ebp]
	mov	DWORD PTR _rect$21[ebp+8], eax

; 165  : 			rect.top += point.y; rect.bottom += point.y;

	mov	eax, DWORD PTR _rect$21[ebp+4]
	add	eax, DWORD PTR _point$22[ebp+4]
	mov	DWORD PTR _rect$21[ebp+4], eax
	mov	eax, DWORD PTR _rect$21[ebp+12]
	add	eax, DWORD PTR _point$22[ebp+4]
	mov	DWORD PTR _rect$21[ebp+12], eax

; 166  : 
; 167  : 			D3DXSaveSurfaceToFile(sFileName.c_str(), D3DXIFF_PNG, pFrontBuffer, NULL, &rect);

	lea	eax, DWORD PTR _rect$21[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pFrontBuffer$23[ebp]
	push	ecx
	push	3
	lea	ecx, DWORD PTR _sFileName$24[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	call	_D3DXSaveSurfaceToFileA@20

; 168  : 			pChatWindow->AddInfoMessage("Screenshot Taken - %s",sFileName.c_str());

	lea	ecx, DWORD PTR _sFileName$24[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	push	OFFSET ??_C@_0BG@HIFLIMMB@Screenshot?5Taken?5?9?5?$CFs?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddInfoMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddInfoMessage
	add	esp, 12					; 0000000cH

; 169  : 		} else {

	jmp	SHORT $LN41@Present
$LN42@Present:

; 170  : 			pChatWindow->AddDebugMessage("Unable to save screenshot.");

	push	OFFSET ??_C@_0BL@OIDJAMNC@Unable?5to?5save?5screenshot?4?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8
$LN41@Present:

; 171  : 		}
; 172  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sFileName$24[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN43@Present:

; 173  : 
; 174  : 	if(!pGame->IsMenuActive())

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsMenuActive@CGame@@QAEHXZ		; CGame::IsMenuActive
	test	eax, eax
	jne	$LN40@Present

; 175  : 	{
; 176  : 		if(pNetGame)

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	$LN30@Present

; 177  : 		{
; 178  : 
; 179  : 			CVehiclePool* pVehiclePool = pNetGame->GetVehiclePool();

	mov	ecx, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	call	?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ; CNetGame::GetVehiclePool
	mov	DWORD PTR _pVehiclePool$20[ebp], eax

; 180  : 			CPlayerPool* pPlayerPool = pNetGame->GetPlayerPool();

	mov	ecx, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	call	?GetPlayerPool@CNetGame@@QAEPAVCPlayerPool@@XZ ; CNetGame::GetPlayerPool
	mov	DWORD PTR _pPlayerPool$19[ebp], eax

; 181  : 
; 182  : 			/*
; 183  : 			if (GetAsyncKeyState(VK_F10)&1)
; 184  : 			{
; 185  : 				pNewPlayerTags->m_DrawPlayerIDs = !pNewPlayerTags->m_DrawPlayerIDs;
; 186  : 			}*/
; 187  : 
; 188  : 			RenderPlayerTags();

	call	?RenderPlayerTags@@YGXXZ		; RenderPlayerTags

; 189  : 			
; 190  : //-----------------------------------------------------------------------------------------
; 191  : 
; 192  : 			// DEBUG LABELS
; 193  : 
; 194  : //			#ifdef _DEBUG
; 195  : 
; 196  : 			if (bShowDebugLabels)

	movzx	eax, BYTE PTR ?bShowDebugLabels@@3_NA	; bShowDebugLabels
	test	eax, eax
	je	$LN30@Present

; 197  : 			{
; 198  : 				
; 199  : 				for (DWORD x=0; x < MAX_VEHICLES; x++)

	mov	DWORD PTR _x$18[ebp], 0
	jmp	SHORT $LN37@Present
$LN36@Present:
	mov	eax, DWORD PTR _x$18[ebp]
	add	eax, 1
	mov	DWORD PTR _x$18[ebp], eax
$LN37@Present:
	cmp	DWORD PTR _x$18[ebp], 702		; 000002beH
	jae	$LN35@Present

; 200  : 				{
; 201  : 					if (pVehiclePool->GetSlotState(x) == TRUE)

	movzx	eax, WORD PTR _x$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehiclePool$20[ebp]
	call	?GetSlotState@CVehiclePool@@QAEHG@Z	; CVehiclePool::GetSlotState
	cmp	eax, 1
	jne	$LN33@Present

; 202  : 					{
; 203  : 						CVehicle* Vehicle = pVehiclePool->GetAt(x);

	movzx	eax, WORD PTR _x$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehiclePool$20[ebp]
	call	?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z ; CVehiclePool::GetAt
	mov	DWORD PTR _Vehicle$17[ebp], eax

; 204  : 
; 205  : 						if (Vehicle && Vehicle->GetDistanceFromLocalPlayerPed() <= 80.0f)

	cmp	DWORD PTR _Vehicle$17[ebp], 0
	je	$LN33@Present
	mov	ecx, DWORD PTR _Vehicle$17[ebp]
	call	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ ; CEntity::GetDistanceFromLocalPlayerPed
	fstp	DWORD PTR tv576[ebp]
	movss	xmm0, DWORD PTR __real@42a00000
	comiss	xmm0, DWORD PTR tv576[ebp]
	jb	$LN33@Present

; 206  : 						{
; 207  : 							MATRIX4X4 matVehicle;
; 208  : 
; 209  : 							Vehicle->GetMatrix(&matVehicle);

	lea	eax, DWORD PTR _matVehicle$16[ebp]
	push	eax
	mov	ecx, DWORD PTR _Vehicle$17[ebp]
	call	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z ; CEntity::GetMatrix

; 210  : 
; 211  : 							D3DXVECTOR3 vVehiclePos;

	lea	ecx, DWORD PTR _vVehiclePos$15[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 212  : 
; 213  : 							vVehiclePos.x = matVehicle.pos.X;

	movss	xmm0, DWORD PTR _matVehicle$16[ebp+48]
	movss	DWORD PTR _vVehiclePos$15[ebp], xmm0

; 214  : 							vVehiclePos.y = matVehicle.pos.Y;

	movss	xmm0, DWORD PTR _matVehicle$16[ebp+52]
	movss	DWORD PTR _vVehiclePos$15[ebp+4], xmm0

; 215  : 							vVehiclePos.z = matVehicle.pos.Z;

	movss	xmm0, DWORD PTR _matVehicle$16[ebp+56]
	movss	DWORD PTR _vVehiclePos$15[ebp+8], xmm0

; 216  : 
; 217  : 							char label[255];
; 218  : 
; 219  : 							sprintf(label, "Offset: %X\nVehicle [id: %d, type: %d]\nHealth: %.1f\n Distance: %.2fm\nTrailer: %X\nVW: %d",
; 220  : 								Vehicle->m_pEntity,
; 221  : 								x,
; 222  : 								Vehicle->GetModelIndex(), Vehicle->GetHealth(),
; 223  : 								Vehicle->GetDistanceFromLocalPlayerPed(),
; 224  : 								Vehicle->m_pVehicle->dwTrailer,
; 225  : 								pVehiclePool->GetVehicleVirtualWorld(x));

	movzx	eax, WORD PTR _x$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehiclePool$20[ebp]
	call	?GetVehicleVirtualWorld@CVehiclePool@@QAEEG@Z ; CVehiclePool::GetVehicleVirtualWorld
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _Vehicle$17[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+1224]
	push	ecx
	mov	ecx, DWORD PTR _Vehicle$17[ebp]
	call	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ ; CEntity::GetDistanceFromLocalPlayerPed
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _Vehicle$17[ebp]
	call	?GetHealth@CVehicle@@QAEMXZ		; CVehicle::GetHealth
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _Vehicle$17[ebp]
	call	?GetModelIndex@CEntity@@QAEIXZ		; CEntity::GetModelIndex
	push	eax
	mov	edx, DWORD PTR _x$18[ebp]
	push	edx
	mov	eax, DWORD PTR _Vehicle$17[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	OFFSET ??_C@_0FH@IHBOGFPJ@Offset?3?5?$CFX?6Vehicle?5?$FLid?3?5?$CFd?0?5type@
	lea	edx, DWORD PTR _label$14[ebp]
	push	edx
	call	_sprintf
	add	esp, 44					; 0000002cH

; 226  : 
; 227  : 							pLabel->Draw(&vVehiclePos, label, 0xFF358BD4);

	push	-13268012				; ff358bd4H
	lea	eax, DWORD PTR _label$14[ebp]
	push	eax
	lea	ecx, DWORD PTR _vVehiclePos$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pLabel@@3PAVCLabel@@A	; pLabel
	call	?Draw@CLabel@@QAEXPAUD3DXVECTOR3@@PADK@Z ; CLabel::Draw
$LN33@Present:

; 228  : 						}
; 229  : 					}
; 230  : 				}

	jmp	$LN36@Present
$LN35@Present:

; 231  : 
; 232  : 				//----------------------------------------------------------------
; 233  : 
; 234  : 				for(DWORD x=0; x < MAX_PLAYERS; x++)

	mov	DWORD PTR _x$13[ebp], 0
	jmp	SHORT $LN32@Present
$LN31@Present:
	mov	eax, DWORD PTR _x$13[ebp]
	add	eax, 1
	mov	DWORD PTR _x$13[ebp], eax
$LN32@Present:
	cmp	DWORD PTR _x$13[ebp], 204		; 000000ccH
	jae	$LN30@Present

; 235  : 				{
; 236  : 					if(pPlayerPool->GetSlotState(x) == TRUE)

	movzx	eax, BYTE PTR _x$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerPool$19[ebp]
	call	?GetSlotState@CPlayerPool@@QAEHE@Z	; CPlayerPool::GetSlotState
	cmp	eax, 1
	jne	$LN28@Present

; 237  : 					{
; 238  : 						CRemotePlayer *pRemotePlayer = pPlayerPool->GetAt(x);

	movzx	eax, BYTE PTR _x$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerPool$19[ebp]
	call	?GetAt@CPlayerPool@@QAEPAVCRemotePlayer@@E@Z ; CPlayerPool::GetAt
	mov	DWORD PTR _pRemotePlayer$12[ebp], eax

; 239  : 						CPlayerPed*	PlayerPed = pRemotePlayer->GetPlayerPed();

	mov	ecx, DWORD PTR _pRemotePlayer$12[ebp]
	call	?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ; CRemotePlayer::GetPlayerPed
	mov	DWORD PTR _PlayerPed$11[ebp], eax

; 240  : 
; 241  : 						if(PlayerPed && PlayerPed->IsAdded() && PlayerPed->GetDistanceFromLocalPlayerPed() <= 70.0f)

	cmp	DWORD PTR _PlayerPed$11[ebp], 0
	je	$LN28@Present
	mov	ecx, DWORD PTR _PlayerPed$11[ebp]
	call	?IsAdded@CEntity@@QAEHXZ		; CEntity::IsAdded
	test	eax, eax
	je	$LN28@Present
	mov	ecx, DWORD PTR _PlayerPed$11[ebp]
	call	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ ; CEntity::GetDistanceFromLocalPlayerPed
	fstp	DWORD PTR tv616[ebp]
	movss	xmm0, DWORD PTR __real@428c0000
	comiss	xmm0, DWORD PTR tv616[ebp]
	jb	$LN28@Present

; 242  : 						{
; 243  : 							if(PlayerPed->IsInVehicle() && PlayerPed->IsAPassenger()) continue;

	mov	ecx, DWORD PTR _PlayerPed$11[ebp]
	call	?IsInVehicle@CPlayerPed@@QAEHXZ		; CPlayerPed::IsInVehicle
	test	eax, eax
	je	SHORT $LN27@Present
	mov	ecx, DWORD PTR _PlayerPed$11[ebp]
	call	?IsAPassenger@CPlayerPed@@QAEHXZ	; CPlayerPed::IsAPassenger
	test	eax, eax
	je	SHORT $LN27@Present
	jmp	$LN31@Present
$LN27@Present:

; 244  : 
; 245  : 							MATRIX4X4 matPlayer;
; 246  : 							PlayerPed->GetMatrix(&matPlayer);

	lea	eax, DWORD PTR _matPlayer$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerPed$11[ebp]
	call	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z ; CEntity::GetMatrix

; 247  : 
; 248  : 							D3DXVECTOR3 vPlayerPos;

	lea	ecx, DWORD PTR _vPlayerPos$9[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 249  : 							vPlayerPos.x = matPlayer.pos.X;

	movss	xmm0, DWORD PTR _matPlayer$10[ebp+48]
	movss	DWORD PTR _vPlayerPos$9[ebp], xmm0

; 250  : 							vPlayerPos.y = matPlayer.pos.Y;

	movss	xmm0, DWORD PTR _matPlayer$10[ebp+52]
	movss	DWORD PTR _vPlayerPos$9[ebp+4], xmm0

; 251  : 							vPlayerPos.z = matPlayer.pos.Z+0.5f;

	movss	xmm0, DWORD PTR _matPlayer$10[ebp+56]
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _vPlayerPos$9[ebp+8], xmm0

; 252  : 
; 253  : 							char label[255];
; 254  : 							DWORD color = 0xFF35D48B;

	mov	DWORD PTR _color$7[ebp], -13249397	; ff35d48bH

; 255  : 
; 256  : //							sprintf(label,"Off: %.4f %.4f %.4f",
; 257  : //								pRemotePlayer->m_vecPositionInaccuracy.X,
; 258  : //								pRemotePlayer->m_vecPositionInaccuracy.Y,
; 259  : //								pRemotePlayer->m_vecPositionInaccuracy.Z);
; 260  : //
; 261  : 							
; 262  : 							sprintf(label, "Offset: %X\nPlayer [id: %d]\nHealth: %.1f\n Distance: %.2fm\nAction: %d",
; 263  : 								PlayerPed->m_pEntity,
; 264  : 								x,
; 265  : 								PlayerPed->GetHealth(),
; 266  : 								PlayerPed->GetDistanceFromLocalPlayerPed(),
; 267  : 								PlayerPed->GetActionTrigger());

	mov	ecx, DWORD PTR _PlayerPed$11[ebp]
	call	?GetActionTrigger@CPlayerPed@@QAEEXZ	; CPlayerPed::GetActionTrigger
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _PlayerPed$11[ebp]
	call	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ ; CEntity::GetDistanceFromLocalPlayerPed
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _PlayerPed$11[ebp]
	call	?GetHealth@CPlayerPed@@QAEMXZ		; CPlayerPed::GetHealth
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _x$13[ebp]
	push	ecx
	mov	edx, DWORD PTR _PlayerPed$11[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET ??_C@_0EE@NOJKDLMO@Offset?3?5?$CFX?6Player?5?$FLid?3?5?$CFd?$FN?6Healt@
	lea	ecx, DWORD PTR _label$8[ebp]
	push	ecx
	call	_sprintf
	add	esp, 36					; 00000024H

; 268  : 
; 269  : 							if( pRemotePlayer->m_vecPositionInaccuracy.X > 1.0f ||
; 270  : 								pRemotePlayer->m_vecPositionInaccuracy.Y > 1.0f ||
; 271  : 								pRemotePlayer->m_vecPositionInaccuracy.Z > 1.0f )

	mov	eax, DWORD PTR _pRemotePlayer$12[ebp]
	movss	xmm0, DWORD PTR [eax+287]
	comiss	xmm0, DWORD PTR __real@3f800000
	ja	SHORT $LN25@Present
	mov	eax, DWORD PTR _pRemotePlayer$12[ebp]
	movss	xmm0, DWORD PTR [eax+291]
	comiss	xmm0, DWORD PTR __real@3f800000
	ja	SHORT $LN25@Present
	mov	eax, DWORD PTR _pRemotePlayer$12[ebp]
	movss	xmm0, DWORD PTR [eax+295]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN26@Present
$LN25@Present:

; 272  : 							{
; 273  : 								color = 0xFFD4D435;

	mov	DWORD PTR _color$7[ebp], -2829259	; ffd4d435H
$LN26@Present:

; 274  : 							}
; 275  : 
; 276  : 							if( pRemotePlayer->m_vecPositionInaccuracy.X > 2.0f ||
; 277  : 								pRemotePlayer->m_vecPositionInaccuracy.Y > 2.0f ||
; 278  : 								pRemotePlayer->m_vecPositionInaccuracy.Z > 2.0f )

	mov	eax, DWORD PTR _pRemotePlayer$12[ebp]
	movss	xmm0, DWORD PTR [eax+287]
	comiss	xmm0, DWORD PTR __real@40000000
	ja	SHORT $LN23@Present
	mov	eax, DWORD PTR _pRemotePlayer$12[ebp]
	movss	xmm0, DWORD PTR [eax+291]
	comiss	xmm0, DWORD PTR __real@40000000
	ja	SHORT $LN23@Present
	mov	eax, DWORD PTR _pRemotePlayer$12[ebp]
	movss	xmm0, DWORD PTR [eax+295]
	comiss	xmm0, DWORD PTR __real@40000000
	jbe	SHORT $LN24@Present
$LN23@Present:

; 279  : 							{
; 280  : 								color = 0xFFD4358B;

	mov	DWORD PTR _color$7[ebp], -2869877	; ffd4358bH
$LN24@Present:

; 281  : 							}                              
; 282  : 
; 283  : 							pLabel->Draw(&vPlayerPos, label, color);

	mov	eax, DWORD PTR _color$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _label$8[ebp]
	push	ecx
	lea	edx, DWORD PTR _vPlayerPos$9[ebp]
	push	edx
	mov	ecx, DWORD PTR ?pLabel@@3PAVCLabel@@A	; pLabel
	call	?Draw@CLabel@@QAEXPAUD3DXVECTOR3@@PADK@Z ; CLabel::Draw
$LN28@Present:

; 284  : 						}
; 285  : 					}
; 286  : 				}

	jmp	$LN31@Present
$LN30@Present:

; 287  : 
; 288  : 				//----------------------------------------------------------------
; 289  : 
; 290  : 			}	
; 291  : //#endif
; 292  : 
; 293  : 		} // if(pNetGame){}
; 294  : 
; 295  : //-----------------------------------------------------------------------------------------
; 296  : 
; 297  : 		// Scoreboard
; 298  : 		if(pNetGame && !pCmdWindow->isEnabled() &&
; 299  : 			((GetAsyncKeyState(VK_TAB) && !pCmdWindow->isEnabled()) || pNetGame->GetGameState() == GAMESTATE_RESTARTING))

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	SHORT $LN22@Present
	mov	ecx, DWORD PTR ?pCmdWindow@@3PAVCCmdWindow@@A ; pCmdWindow
	call	?isEnabled@CCmdWindow@@QAEHXZ		; CCmdWindow::isEnabled
	test	eax, eax
	jne	SHORT $LN22@Present
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	test	eax, eax
	je	SHORT $LN20@Present
	mov	ecx, DWORD PTR ?pCmdWindow@@3PAVCCmdWindow@@A ; pCmdWindow
	call	?isEnabled@CCmdWindow@@QAEHXZ		; CCmdWindow::isEnabled
	test	eax, eax
	je	SHORT $LN21@Present
$LN20@Present:
	mov	ecx, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	call	?GetGameState@CNetGame@@QAEHXZ		; CNetGame::GetGameState
	cmp	eax, 5
	jne	SHORT $LN22@Present
$LN21@Present:

; 300  : 		{
; 301  : 			pGame->DisplayHud(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 302  : 			pScoreBoard->Draw();

	mov	ecx, DWORD PTR ?pScoreBoard@@3PAVCScoreBoard@@A ; pScoreBoard
	call	?Draw@CScoreBoard@@QAEXXZ		; CScoreBoard::Draw
	jmp	$LN8@Present
$LN22@Present:

; 303  : 		}		
; 304  : 		// Help Dialog
; 305  : 		else if(pNetGame && GetAsyncKeyState(VK_F1))

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	SHORT $LN18@Present
	mov	esi, esp
	push	112					; 00000070H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	test	eax, eax
	je	SHORT $LN18@Present

; 306  : 		{
; 307  : 			pGame->DisplayHud(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 308  : 			pHelpDialog->Draw(); 

	mov	ecx, DWORD PTR ?pHelpDialog@@3PAVCHelpDialog@@A ; pHelpDialog
	call	?Draw@CHelpDialog@@QAEXXZ		; CHelpDialog::Draw
	jmp	$LN8@Present
$LN18@Present:

; 309  : 		} 
; 310  : 		// Net Statistics
; 311  : 		else if(pNetGame && GetAsyncKeyState(VK_F5))

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	SHORT $LN16@Present
	mov	esi, esp
	push	116					; 00000074H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	test	eax, eax
	je	SHORT $LN16@Present

; 312  : 		{
; 313  : 			pGame->DisplayHud(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 314  : 			pNetStats->Draw(); 

	mov	ecx, DWORD PTR ?pNetStats@@3PAVCNetStats@@A ; pNetStats
	call	?Draw@CNetStats@@QAEXXZ			; CNetStats::Draw
	jmp	$LN8@Present
$LN16@Present:

; 315  : 		} 
; 316  : 		// Server Net Statistics
; 317  : 		else if(pNetGame && GetAsyncKeyState(VK_F10))

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	SHORT $LN14@Present
	mov	esi, esp
	push	121					; 00000079H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	test	eax, eax
	je	SHORT $LN14@Present

; 318  : 		{
; 319  : 			pGame->DisplayHud(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 320  : 			pSvrNetStats->Draw(); 

	mov	ecx, DWORD PTR ?pSvrNetStats@@3PAVCSvrNetStats@@A ; pSvrNetStats
	call	?Draw@CSvrNetStats@@QAEXXZ		; CSvrNetStats::Draw

; 321  : 		} 
; 322  : 		else

	jmp	SHORT $LN8@Present
$LN14@Present:

; 323  : 		{
; 324  : 			pGame->DisplayHud(TRUE);

	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 325  : 			if(pGameUI) pGameUI->OnRender(10.0f);

	cmp	DWORD PTR ?pGameUI@@3PAVCDXUTDialog@@A, 0 ; pGameUI
	je	SHORT $LN12@Present
	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?pGameUI@@3PAVCDXUTDialog@@A ; pGameUI
	call	?OnRender@CDXUTDialog@@QAEJM@Z		; CDXUTDialog::OnRender
$LN12@Present:

; 326  : 			if(pSpawnScreen) pSpawnScreen->Draw();

	cmp	DWORD PTR ?pSpawnScreen@@3PAVCSpawnScreen@@A, 0 ; pSpawnScreen
	je	SHORT $LN11@Present
	mov	ecx, DWORD PTR ?pSpawnScreen@@3PAVCSpawnScreen@@A ; pSpawnScreen
	call	?Draw@CSpawnScreen@@QAEXXZ		; CSpawnScreen::Draw
$LN11@Present:

; 327  : 			if(pChatWindow) pChatWindow->Draw();

	cmp	DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A, 0 ; pChatWindow
	je	SHORT $LN10@Present
	mov	ecx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	call	?Draw@CChatWindow@@QAEXXZ		; CChatWindow::Draw
$LN10@Present:

; 328  : 			if(pCmdWindow) pCmdWindow->Draw();

	cmp	DWORD PTR ?pCmdWindow@@3PAVCCmdWindow@@A, 0 ; pCmdWindow
	je	SHORT $LN9@Present
	mov	ecx, DWORD PTR ?pCmdWindow@@3PAVCCmdWindow@@A ; pCmdWindow
	call	?Draw@CCmdWindow@@QAEXXZ		; CCmdWindow::Draw
$LN9@Present:

; 329  : 			if(pDeathWindow) pDeathWindow->Draw();		

	cmp	DWORD PTR ?pDeathWindow@@3PAVCDeathWindow@@A, 0 ; pDeathWindow
	je	SHORT $LN8@Present
	mov	ecx, DWORD PTR ?pDeathWindow@@3PAVCDeathWindow@@A ; pDeathWindow
	call	?Draw@CDeathWindow@@QAEXXZ		; CDeathWindow::Draw
$LN8@Present:

; 330  : 		}
; 331  : 
; 332  : #ifndef _DEBUG
; 333  : 		if(tSettings.bDebug)
; 334  : 			GameDebugDrawDebugScreens();
; 335  : #else
; 336  : 			GameDebugDrawDebugScreens();

	call	?GameDebugDrawDebugScreens@@YAXXZ	; GameDebugDrawDebugScreens
	jmp	$LN5@Present
$LN40@Present:

; 337  : #endif
; 338  : 		
; 339  : 	} 
; 340  : 	else if (pGame->IsMenuActive())

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsMenuActive@CGame@@QAEHXZ		; CGame::IsMenuActive
	test	eax, eax
	je	$LN5@Present

; 341  : 	{
; 342  : 		if (pNetGame && (*(int*)0xBA6774 != 0) && GetAsyncKeyState(VK_RBUTTON)&1)

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	$LN5@Present
	cmp	DWORD PTR ds:12216180, 0
	je	$LN5@Present
	mov	esi, esp
	push	2
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 1
	je	$LN5@Present

; 343  : 		{
; 344  : 			// ty to Racer_S for this
; 345  : 			float mapX, mapY;
; 346  : 			for(int i=0; i<(0xAF*0x28); i+=0x28) {

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@Present
$LN3@Present:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _i$4[ebp], eax
$LN4@Present:
	cmp	DWORD PTR _i$4[ebp], 7000		; 00001b58H
	jge	SHORT $LN2@Present

; 347  : 				if (*(short*)(0xBA873D + i) == 4611) {

	mov	eax, DWORD PTR _i$4[ebp]
	movsx	ecx, WORD PTR [eax+12224317]
	cmp	ecx, 4611				; 00001203H
	jne	SHORT $LN1@Present

; 348  : 					float* pos = (float*)(0xBA86F8 + 0x28 + i);

	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 12224288				; 00ba8720H
	mov	DWORD PTR _pos$3[ebp], eax

; 349  : 					mapX = *pos;

	mov	eax, DWORD PTR _pos$3[ebp]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _mapX$6[ebp], xmm0

; 350  : 					mapY = *(pos+1);

	mov	eax, DWORD PTR _pos$3[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR _mapY$5[ebp], xmm0
$LN1@Present:

; 351  : 				}
; 352  : 			}

	jmp	SHORT $LN3@Present
$LN2@Present:

; 353  : 			RakNet::BitStream bsSend;

	lea	ecx, DWORD PTR _bsSend$2[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 354  : 			bsSend.Write(mapX);

	push	ecx
	movss	xmm0, DWORD PTR _mapX$6[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _bsSend$2[ebp]
	call	??$Write@M@BitStream@RakNet@@QAEXM@Z	; RakNet::BitStream::Write<float>

; 355  : 			bsSend.Write(mapY);

	push	ecx
	movss	xmm0, DWORD PTR _mapY$5[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _bsSend$2[ebp]
	call	??$Write@M@BitStream@RakNet@@QAEXM@Z	; RakNet::BitStream::Write<float>

; 356  : 			bsSend.Write(FindGroundZForCoord(mapX, mapY)+2.0f);

	mov	esi, esp
	push	ecx
	movss	xmm0, DWORD PTR _mapY$5[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _mapX$6[ebp]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _FindGroundZForCoord
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	DWORD PTR tv695[ebp]
	movss	xmm0, DWORD PTR tv695[ebp]
	addss	xmm0, DWORD PTR __real@40000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _bsSend$2[ebp]
	call	??$Write@M@BitStream@RakNet@@QAEXM@Z	; RakNet::BitStream::Write<float>

; 357  : 
; 358  : 			pNetGame->GetRakClient()->RPC(RPC_AdminMapTeleport,&bsSend,HIGH_PRIORITY,RELIABLE,0,false);

	mov	ecx, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	call	?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ ; CNetGame::GetRakClient
	mov	DWORD PTR tv465[ebp], eax
	mov	esi, esp
	push	0
	push	0
	push	2
	push	1
	lea	eax, DWORD PTR _bsSend$2[ebp]
	push	eax
	push	OFFSET ??_C@_02IGCIGBLK@dl?$AA@
	mov	ecx, DWORD PTR tv465[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv465[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 359  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSend$2[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN5@Present:

; 360  : 	}
; 361  : 
; 362  : 	DoCheatDataStoring();

	call	?DoCheatDataStoring@@YAXXZ		; DoCheatDataStoring

; 363  : 
; 364  : 	return pD3DDevice->Present(pSourceRect, pDestRect, hDestWindowOverride, pDirtyRegion);

	mov	esi, esp
	mov	eax, DWORD PTR _pDirtyRegion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hDestWindowOverride$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDestRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSourceRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+68]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 365  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN65@Present
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1440				; 000005a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN65@Present:
	DD	11					; 0000000bH
	DD	$LN64@Present
$LN64@Present:
	DD	-48					; ffffffd0H
	DD	28					; 0000001cH
	DD	$LN52@Present
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN53@Present
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN54@Present
	DD	-100					; ffffff9cH
	DD	16					; 00000010H
	DD	$LN55@Present
	DD	-220					; ffffff24H
	DD	64					; 00000040H
	DD	$LN56@Present
	DD	-240					; ffffff10H
	DD	12					; 0000000cH
	DD	$LN57@Present
	DD	-504					; fffffe08H
	DD	255					; 000000ffH
	DD	$LN58@Present
	DD	-612					; fffffd9cH
	DD	64					; 00000040H
	DD	$LN59@Present
	DD	-632					; fffffd88H
	DD	12					; 0000000cH
	DD	$LN60@Present
	DD	-896					; fffffc80H
	DD	255					; 000000ffH
	DD	$LN61@Present
	DD	-1240					; fffffb28H
	DD	273					; 00000111H
	DD	$LN62@Present
$LN62@Present:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN61@Present:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN60@Present:
	DB	118					; 00000076H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN59@Present:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN58@Present:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN57@Present:
	DB	118					; 00000076H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN56@Present:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN55@Present:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN54@Present:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN53@Present:
	DB	112					; 00000070H
	DB	70					; 00000046H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN52@Present:
	DB	115					; 00000073H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z$0:
	lea	ecx, DWORD PTR _sFileName$24[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z$1:
	lea	ecx, DWORD PTR _bsSend$2[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1444]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Present@IDirect3DDevice9Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z ENDP ; IDirect3DDevice9Hook::Present
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?Reset@IDirect3DDevice9Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = 8						; size = 4
_pPresentationParameters$ = 12				; size = 4
?Reset@IDirect3DDevice9Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z PROC ; IDirect3DDevice9Hook::Reset, COMDAT

; 448  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 449  : 	d3d9DestroyDeviceObjects();

	call	?d3d9DestroyDeviceObjects@@YAXXZ	; d3d9DestroyDeviceObjects

; 450  : 	
; 451  : 	/*
; 452  : 	// Done through ALT+ENTER now
; 453  : 	if (tSettings.bWindowedMode) {
; 454  : 		pPresentationParameters->Windowed = 1;
; 455  : 		pPresentationParameters->Flags = 0;
; 456  : 		SetWindowPos(pPresentationParameters->hDeviceWindow, HWND_NOTOPMOST, 0, 0, pPresentationParameters->BackBufferWidth, pPresentationParameters->BackBufferHeight, SWP_SHOWWINDOW);
; 457  : 	}
; 458  : 	*/
; 459  : 
; 460  : 	HRESULT hr = pD3DDevice->Reset(pPresentationParameters);

	mov	esi, esp
	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 461  : 
; 462  : 	if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@Reset

; 463  : 	{			
; 464  : 		d3d9RestoreDeviceObjects();

	call	?d3d9RestoreDeviceObjects@@YAXXZ	; d3d9RestoreDeviceObjects
$LN1@Reset:

; 465  : 	}
; 466  : 
; 467  : 	return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 468  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Reset@IDirect3DDevice9Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z ENDP ; IDirect3DDevice9Hook::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetNumberOfSwapChains@IDirect3DDevice9Hook@@UAGIXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumberOfSwapChains@IDirect3DDevice9Hook@@UAGIXZ PROC ; IDirect3DDevice9Hook::GetNumberOfSwapChains, COMDAT

; 443  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 444  : 	return pD3DDevice->GetNumberOfSwapChains();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 445  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumberOfSwapChains@IDirect3DDevice9Hook@@UAGIXZ ENDP ; IDirect3DDevice9Hook::GetNumberOfSwapChains
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetSwapChain@IDirect3DDevice9Hook@@UAGJIPAPAUIDirect3DSwapChain9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iSwapChain$ = 12					; size = 4
_pSwapChain$ = 16					; size = 4
?GetSwapChain@IDirect3DDevice9Hook@@UAGJIPAPAUIDirect3DSwapChain9@@@Z PROC ; IDirect3DDevice9Hook::GetSwapChain, COMDAT

; 438  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 439  : 	return pD3DDevice->GetSwapChain(iSwapChain, pSwapChain);

	mov	esi, esp
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 440  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetSwapChain@IDirect3DDevice9Hook@@UAGJIPAPAUIDirect3DSwapChain9@@@Z ENDP ; IDirect3DDevice9Hook::GetSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?CreateAdditionalSwapChain@IDirect3DDevice9Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pPresentationParameters$ = 12				; size = 4
_pSwapChain$ = 16					; size = 4
?CreateAdditionalSwapChain@IDirect3DDevice9Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain9@@@Z PROC ; IDirect3DDevice9Hook::CreateAdditionalSwapChain, COMDAT

; 433  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 434  : 	return pD3DDevice->CreateAdditionalSwapChain(pPresentationParameters, pSwapChain);

	mov	esi, esp
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPresentationParameters$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 435  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateAdditionalSwapChain@IDirect3DDevice9Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain9@@@Z ENDP ; IDirect3DDevice9Hook::CreateAdditionalSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?ShowCursor@IDirect3DDevice9Hook@@UAGHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bShow$ = 12						; size = 4
?ShowCursor@IDirect3DDevice9Hook@@UAGHH@Z PROC		; IDirect3DDevice9Hook::ShowCursor, COMDAT

; 428  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 429  : 	return pD3DDevice->ShowCursor(bShow);

	mov	esi, esp
	mov	eax, DWORD PTR _bShow$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+48]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 430  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ShowCursor@IDirect3DDevice9Hook@@UAGHH@Z ENDP		; IDirect3DDevice9Hook::ShowCursor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetCursorPosition@IDirect3DDevice9Hook@@UAGXHHK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_X$ = 12						; size = 4
_Y$ = 16						; size = 4
_Flags$ = 20						; size = 4
?SetCursorPosition@IDirect3DDevice9Hook@@UAGXHHK@Z PROC	; IDirect3DDevice9Hook::SetCursorPosition, COMDAT

; 423  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 424  : 	pD3DDevice->SetCursorPosition(X, Y, Flags);

	mov	esi, esp
	mov	eax, DWORD PTR _Flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _X$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 425  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetCursorPosition@IDirect3DDevice9Hook@@UAGXHHK@Z ENDP	; IDirect3DDevice9Hook::SetCursorPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?SetCursorProperties@IDirect3DDevice9Hook@@UAGJIIPAUIDirect3DSurface9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_XHotSpot$ = 12						; size = 4
_YHotSpot$ = 16						; size = 4
_pCursorBitmap$ = 20					; size = 4
?SetCursorProperties@IDirect3DDevice9Hook@@UAGJIIPAUIDirect3DSurface9@@@Z PROC ; IDirect3DDevice9Hook::SetCursorProperties, COMDAT

; 418  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 419  : 	return pD3DDevice->SetCursorProperties(XHotSpot, YHotSpot, pCursorBitmap);

	mov	esi, esp
	mov	eax, DWORD PTR _pCursorBitmap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _YHotSpot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _XHotSpot$[ebp]
	push	edx
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 420  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetCursorProperties@IDirect3DDevice9Hook@@UAGJIIPAUIDirect3DSurface9@@@Z ENDP ; IDirect3DDevice9Hook::SetCursorProperties
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetCreationParameters@IDirect3DDevice9Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pParameters$ = 12					; size = 4
?GetCreationParameters@IDirect3DDevice9Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z PROC ; IDirect3DDevice9Hook::GetCreationParameters, COMDAT

; 413  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 414  : 	return pD3DDevice->GetCreationParameters(pParameters);

	mov	esi, esp
	mov	eax, DWORD PTR _pParameters$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 415  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCreationParameters@IDirect3DDevice9Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z ENDP ; IDirect3DDevice9Hook::GetCreationParameters
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetDisplayMode@IDirect3DDevice9Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iSwapChain$ = 12					; size = 4
_pMode$ = 16						; size = 4
?GetDisplayMode@IDirect3DDevice9Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z PROC ; IDirect3DDevice9Hook::GetDisplayMode, COMDAT

; 408  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 409  : 	return pD3DDevice->GetDisplayMode(iSwapChain, pMode);

	mov	esi, esp
	mov	eax, DWORD PTR _pMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 410  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetDisplayMode@IDirect3DDevice9Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z ENDP ; IDirect3DDevice9Hook::GetDisplayMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetDeviceCaps@IDirect3DDevice9Hook@@UAGJPAU_D3DCAPS9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pCaps$ = 12						; size = 4
?GetDeviceCaps@IDirect3DDevice9Hook@@UAGJPAU_D3DCAPS9@@@Z PROC ; IDirect3DDevice9Hook::GetDeviceCaps, COMDAT

; 403  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 404  : 	return pD3DDevice->GetDeviceCaps(pCaps);

	mov	esi, esp
	mov	eax, DWORD PTR _pCaps$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 405  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDeviceCaps@IDirect3DDevice9Hook@@UAGJPAU_D3DCAPS9@@@Z ENDP ; IDirect3DDevice9Hook::GetDeviceCaps
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetDirect3D@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3D9@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppD3D9$ = 12						; size = 4
?GetDirect3D@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3D9@@@Z PROC ; IDirect3DDevice9Hook::GetDirect3D, COMDAT

; 398  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 399  : 	return pD3DDevice->GetDirect3D(ppD3D9);

	mov	esi, esp
	mov	eax, DWORD PTR _ppD3D9$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 400  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDirect3D@IDirect3DDevice9Hook@@UAGJPAPAUIDirect3D9@@@Z ENDP ; IDirect3DDevice9Hook::GetDirect3D
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?EvictManagedResources@IDirect3DDevice9Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?EvictManagedResources@IDirect3DDevice9Hook@@UAGJXZ PROC ; IDirect3DDevice9Hook::EvictManagedResources, COMDAT

; 393  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 394  : 	return pD3DDevice->EvictManagedResources();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 395  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EvictManagedResources@IDirect3DDevice9Hook@@UAGJXZ ENDP ; IDirect3DDevice9Hook::EvictManagedResources
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?GetAvailableTextureMem@IDirect3DDevice9Hook@@UAGIXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetAvailableTextureMem@IDirect3DDevice9Hook@@UAGIXZ PROC ; IDirect3DDevice9Hook::GetAvailableTextureMem, COMDAT

; 388  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 389  : 	return pD3DDevice->GetAvailableTextureMem();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 390  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAvailableTextureMem@IDirect3DDevice9Hook@@UAGIXZ ENDP ; IDirect3DDevice9Hook::GetAvailableTextureMem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?TestCooperativeLevel@IDirect3DDevice9Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?TestCooperativeLevel@IDirect3DDevice9Hook@@UAGJXZ PROC	; IDirect3DDevice9Hook::TestCooperativeLevel, COMDAT

; 383  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 384  : 	return pD3DDevice->TestCooperativeLevel();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 385  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?TestCooperativeLevel@IDirect3DDevice9Hook@@UAGJXZ ENDP	; IDirect3DDevice9Hook::TestCooperativeLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?Release@IDirect3DDevice9Hook@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@IDirect3DDevice9Hook@@UAGKXZ PROC		; IDirect3DDevice9Hook::Release, COMDAT

; 378  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 379  : 	return pD3DDevice->Release();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 380  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@IDirect3DDevice9Hook@@UAGKXZ ENDP		; IDirect3DDevice9Hook::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?AddRef@IDirect3DDevice9Hook@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@IDirect3DDevice9Hook@@UAGKXZ PROC		; IDirect3DDevice9Hook::AddRef, COMDAT

; 373  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 374  : 	return pD3DDevice->AddRef();

	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 375  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@IDirect3DDevice9Hook@@UAGKXZ ENDP		; IDirect3DDevice9Hook::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3dhook\idirect3ddevice9hook.cpp
;	COMDAT ?QueryInterface@IDirect3DDevice9Hook@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppvObj$ = 16						; size = 4
?QueryInterface@IDirect3DDevice9Hook@@UAGJABU_GUID@@PAPAX@Z PROC ; IDirect3DDevice9Hook::QueryInterface, COMDAT

; 368  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 369  : 	return pD3DDevice->QueryInterface(riid, ppvObj);

	mov	esi, esp
	mov	eax, DWORD PTR _ppvObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice9@@A ; pD3DDevice
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 370  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@IDirect3DDevice9Hook@@UAGJABU_GUID@@PAPAX@Z ENDP ; IDirect3DDevice9Hook::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\include\d3dx9math.inl
;	COMDAT ??0D3DXMATRIX@@QAE@ABU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mat$ = 8						; size = 4
??0D3DXMATRIX@@QAE@ABU_D3DMATRIX@@@Z PROC		; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 757  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 758  :     memcpy(&_11, &mat, sizeof(D3DXMATRIX));

	push	64					; 00000040H
	mov	eax, DWORD PTR _mat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 759  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0D3DXMATRIX@@QAE@ABU_D3DMATRIX@@@Z ENDP		; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\include\d3dx9math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 315  :     D3DXMATRIX() {};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\include\d3dx9math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 165  :     D3DXVECTOR3() {};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT

; 556  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 557  :     return _hypot(_X, _Y);

	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	__hypot
	add	esp, 16					; 00000010H

; 558  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
END
