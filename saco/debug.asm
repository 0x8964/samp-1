; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\game\debug.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?iGameDebugType@@3HA				; iGameDebugType
PUBLIC	?dwDebugEntity1@@3KA				; dwDebugEntity1
PUBLIC	?dwDebugEntity2@@3KA				; dwDebugEntity2
PUBLIC	?debug_draw_top@@3HA				; debug_draw_top
PUBLIC	?screen_buf@@3PAPADA				; screen_buf
PUBLIC	?taskInfosById@@3PAUtTaskInfo@@A		; taskInfosById
PUBLIC	??_C@_0O@EAHEMPAN@AutoAnimation?$AA@		; `string'
PUBLIC	??_C@_06DEFDHEHD@GHands?$AA@			; `string'
PUBLIC	??_C@_05KIHIELMB@Fight?$AA@			; `string'
PUBLIC	??_C@_06GAJNONNF@UseGun?$AA@			; `string'
PUBLIC	??_C@_0L@OAMBNCBF@TakeDamage?$AA@		; `string'
PUBLIC	??_C@_0P@HKGKDLL@KillActorMaybe?$AA@		; `string'
PUBLIC	??_C@_0P@OPGEEPIE@DriveByFreeAim?$AA@		; `string'
PUBLIC	??_C@_0M@EIEENOKF@ActorOnFoot?$AA@		; `string'
PUBLIC	??_C@_07LMFNGHCB@StayPut?$AA@			; `string'
PUBLIC	??_C@_09EJCMBCFH@WastedDie?$AA@			; `string'
PUBLIC	??_C@_06FCOLCBPL@Wasted?$AA@			; `string'
PUBLIC	??_C@_0N@OGLKDCL@FallShotDown?$AA@		; `string'
PUBLIC	??_C@_05MDLLMOPO@Tired?$AA@			; `string'
PUBLIC	??_C@_07KLBPLDHC@SitDown?$AA@			; `string'
PUBLIC	??_C@_07HHAJGFJI@SitIdle?$AA@			; `string'
PUBLIC	??_C@_08DBMBPJIF@SunBathe?$AA@			; `string'
PUBLIC	??_C@_0M@DHFLIDFM@PedAttrRel1?$AA@		; `string'
PUBLIC	??_C@_0BC@ICLGFHEB@InterestingRandom?$AA@	; `string'
PUBLIC	??_C@_0O@HKKCPKEF@TriggerLookAt?$AA@		; `string'
PUBLIC	??_C@_0L@GFIIIEKH@PhoneInOut?$AA@		; `string'
PUBLIC	??_C@_07MBGGCIJE@Goggles?$AA@			; `string'
PUBLIC	??_C@_04CHNDMAJJ@Swim?$AA@			; `string'
PUBLIC	??_C@_0O@DCMFJAHJ@FallParachute?$AA@		; `string'
PUBLIC	??_C@_0M@BMHGNAJP@PedAttrRel2?$AA@		; `string'
PUBLIC	??_C@_0M@FGNOBNO@PedAttrRel3?$AA@		; `string'
PUBLIC	??_C@_0P@FFMJLPLF@EnterCarDriver?$AA@		; `string'
PUBLIC	??_C@_0BC@BGMPAOCJ@EnterCarPassenger?$AA@	; `string'
PUBLIC	??_C@_08MFIOKJJN@LeaveCar?$AA@			; `string'
PUBLIC	??_C@_08DLMHHNNA@DriveCar?$AA@			; `string'
PUBLIC	??_C@_0N@HHLOAPKI@DriveToPoint?$AA@		; `string'
PUBLIC	??_C@_0BC@OIHNMDH@EnterAnyCarDriver?$AA@	; `string'
PUBLIC	??_C@_0BF@CLMKJFGP@EnterAnyCarPassenger?$AA@	; `string'
PUBLIC	??_C@_0BE@KLCFFIHL@JumpActorForDriveBy?$AA@	; `string'
PUBLIC	??_C@_0BF@FCMGGCLJ@WaterTurretSomething?$AA@	; `string'
PUBLIC	??_C@_0O@HPDKEIOB@TreatAccident?$AA@		; `string'
PUBLIC	??_C@_09CMNLFFHJ@FleePoint?$AA@			; `string'
PUBLIC	??_C@_0L@CMBFNLDE@FleeEntity?$AA@		; `string'
PUBLIC	??_C@_0P@OJKOHCBA@SmartFleePoint?$AA@		; `string'
PUBLIC	??_C@_0BA@BILOHHOP@SmartFleeEntity?$AA@		; `string'
PUBLIC	??_C@_08CJBOFNLG@GangsRel?$AA@			; `string'
PUBLIC	??_C@_0O@CMGMNPIE@HassleVehicle?$AA@		; `string'
PUBLIC	??_C@_0L@LKLDIHJA@StareAtPed?$AA@		; `string'
PUBLIC	??_C@_0M@FPENONFG@SignalAtPed?$AA@		; `string'
PUBLIC	??_C@_0L@BANFJPIN@PassObject?$AA@		; `string'
PUBLIC	??_C@_06LPNHOKKB@Prozzy?$AA@			; `string'
PUBLIC	??_C@_0M@GJJJPHHE@FollowActor?$AA@		; `string'
PUBLIC	??_C@_0M@FGENIEG@AchvHeading?$AA@		; `string'
PUBLIC	??_C@_09BHIDAOCP@GoToPoint?$AA@			; `string'
PUBLIC	??_C@_0M@LCMEECPN@AvoidOthPed?$AA@		; `string'
PUBLIC	??_C@_0M@HOECFELN@AvoidEntity?$AA@		; `string'
PUBLIC	??_C@_0O@PHNNAGAA@GoToAttractor?$AA@		; `string'
PUBLIC	??_C@_0O@JCDJCBNP@RotateToActor?$AA@		; `string'
PUBLIC	??_C@_08MPEJDFMK@OpenDoor?$AA@			; `string'
PUBLIC	??_C@_0L@BLKIPOBB@InvDisturb?$AA@		; `string'
PUBLIC	??_C@_0M@NLNALDDI@ExecutePath?$AA@		; `string'
PUBLIC	??_C@_08HPGBKPJD@BeInShop?$AA@			; `string'
PUBLIC	??_C@_0L@OBNJJJNI@SitInChair?$AA@		; `string'
PUBLIC	??_C@_0P@EHINGJOE@TakeDamageFall?$AA@		; `string'
PUBLIC	??_C@_04OFHBCDIC@Fall?$AA@			; `string'
PUBLIC	??_C@_04BIEPDJCB@Jump?$AA@			; `string'
PUBLIC	??_C@_07NNGNGFJK@Jetpack?$AA@			; `string'
PUBLIC	??_C@_0N@PJLFJKKP@GreetPartner?$AA@		; `string'
PUBLIC	??_C@_0M@EDNEJAIE@CommandTask?$AA@		; `string'
PUBLIC	??_C@_0L@BFMJJGDC@BeInCouple?$AA@		; `string'
PUBLIC	??_C@_06FOAADBGI@OnFoot?$AA@			; `string'
PUBLIC	??_C@_0L@EJJNGNLG@ShowFinger?$AA@		; `string'
PUBLIC	??_C@_0N@DBPMFCGC@InitialState?$AA@		; `string'
PUBLIC	??_C@_0BA@CIALCOMP@ShowFingerNoPed?$AA@		; `string'
PUBLIC	??_C@_0L@CKCJONAI@InvDeadPed?$AA@		; `string'
PUBLIC	??_C@_0N@NIFACLPK@WalkThruDoor?$AA@		; `string'
PUBLIC	??_C@_0BA@BHHJNMHO@DriveCarSpecial?$AA@		; `string'
PUBLIC	??_C@_0BF@PHGNMMCL@InitialStateInternal?$AA@	; `string'
PUBLIC	??_C@_07LCLDMJDL@PedResp?$AA@			; `string'
PUBLIC	??_C@_0M@IPDFENKG@BailFromCar?$AA@		; `string'
PUBLIC	??_C@_0L@FCKANNFO@ThreatResp?$AA@		; `string'
PUBLIC	??_C@_06PBKMMHEL@Crouch?$AA@			; `string'
PUBLIC	??_C@_0BG@IOHOLION@GoToPointWithinRadius?$AA@	; `string'
PUBLIC	??_C@_0O@BAHHJMBL@WalkAnimation?$AA@		; `string'
PUBLIC	?taskInfosByVTbl@@3PAUtTaskInfo@@A		; taskInfosByVTbl
PUBLIC	??_C@_0BA@LIHNKICN@ScriptAnimation?$AA@		; `string'
PUBLIC	??_C@_0N@FIMADIPO@PedAnimation?$AA@		; `string'
PUBLIC	??_C@_0M@IBCGOFHD@HitFromBack?$AA@		; `string'
PUBLIC	??_C@_0M@HKOFAADA@HitFromLeft?$AA@		; `string'
PUBLIC	??_C@_0N@DMFMNKMF@HitFromRight?$AA@		; `string'
PUBLIC	??_C@_0BC@OKNKHMIG@HitByGunFromFront?$AA@	; `string'
PUBLIC	??_C@_0BB@OMBECEJC@HitByGunFromRear?$AA@	; `string'
PUBLIC	??_C@_0BB@GANBLMHC@HitByGunFromLeft?$AA@	; `string'
PUBLIC	??_C@_0BC@KEJEMOMF@HitByGunFromRight?$AA@	; `string'
PUBLIC	??_C@_0N@HCBCGIIG@HitFromFront?$AA@		; `string'
PUBLIC	??_C@_0O@NBOCEOOB@HitFromBehind?$AA@		; `string'
PUBLIC	??_C@_07GPBECKHN@HitWall?$AA@			; `string'
PUBLIC	??_C@_06LKNLPPOL@Absiel?$AA@			; `string'
PUBLIC	??_C@_09KNIFEBAM@WalkInSeq?$AA@			; `string'
PUBLIC	??_C@_05MBNCCLPN@Cover?$AA@			; `string'
PUBLIC	??_C@_0M@OFEBNODP@ScratchHead?$AA@		; `string'
PUBLIC	??_C@_06MCNAOJLP@UseATM?$AA@			; `string'
PUBLIC	??_C@_09MGIJJICC@LookAbout?$AA@			; `string'
PUBLIC	??_C@_07CPOKJLOH@HandsUp?$AA@			; `string'
PUBLIC	??_C@_04NKFKOIHC@Chat?$AA@			; `string'
PUBLIC	?sync_inited@@3HA				; sync_inited
PUBLIC	?pv@@3PAPAVCVehicle@@A				; pv
PUBLIC	?pActor@@3PAVCPlayerPed@@A			; pActor
PUBLIC	?pPlayer@@3PAVCPlayerPed@@A			; pPlayer
PUBLIC	?w1@@3GA					; w1
PUBLIC	?w2@@3GA					; w2
PUBLIC	?w3@@3GA					; w3
PUBLIC	?bOffFrame@@3HA					; bOffFrame
PUBLIC	?bSelVehicleInit@@3HA				; bSelVehicleInit
PUBLIC	?pVehicle@@3PAVCVehicle@@A			; pVehicle
PUBLIC	?iSelection@@3HA				; iSelection
PUBLIC	?pControls@@3PAU_GTA_CONTROLSET@@A		; pControls
PUBLIC	?pCam@@3PAVCCamera@@A				; pCam
PUBLIC	?sz2@@3PADA					; sz2
_BSS	SEGMENT
?iGameDebugType@@3HA DD 01H DUP (?)			; iGameDebugType
?dwDebugEntity1@@3KA DD 01H DUP (?)			; dwDebugEntity1
?dwDebugEntity2@@3KA DD 01H DUP (?)			; dwDebugEntity2
?debug_draw_top@@3HA DD 01H DUP (?)			; debug_draw_top
?screen_buf@@3PAPADA DD 023H DUP (?)			; screen_buf
?sync_inited@@3HA DD 01H DUP (?)			; sync_inited
?pv@@3PAPAVCVehicle@@A DD 02H DUP (?)			; pv
?pActor@@3PAVCPlayerPed@@A DD 01H DUP (?)		; pActor
?pPlayer@@3PAVCPlayerPed@@A DD 01H DUP (?)		; pPlayer
?w1@@3GA DW	01H DUP (?)				; w1
	ALIGN	4

?w2@@3GA DW	01H DUP (?)				; w2
	ALIGN	4

?w3@@3GA DW	01H DUP (?)				; w3
	ALIGN	4

?bOffFrame@@3HA DD 01H DUP (?)				; bOffFrame
?bSelVehicleInit@@3HA DD 01H DUP (?)			; bSelVehicleInit
?pVehicle@@3PAVCVehicle@@A DD 01H DUP (?)		; pVehicle
?pControls@@3PAU_GTA_CONTROLSET@@A DD 01H DUP (?)	; pControls
?pCam@@3PAVCCamera@@A DD 01H DUP (?)			; pCam
?sz2@@3PADA DB	0100H DUP (?)				; sz2
_BSS	ENDS
CONST	SEGMENT
_get_active_interior DW 077eH
	DB	'v', 00H
	ORG $+14
CONST	ENDS
;	COMDAT ??_C@_04NKFKOIHC@Chat?$AA@
CONST	SEGMENT
??_C@_04NKFKOIHC@Chat?$AA@ DB 'Chat', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPOKJLOH@HandsUp?$AA@
CONST	SEGMENT
??_C@_07CPOKJLOH@HandsUp?$AA@ DB 'HandsUp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MGIJJICC@LookAbout?$AA@
CONST	SEGMENT
??_C@_09MGIJJICC@LookAbout?$AA@ DB 'LookAbout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MCNAOJLP@UseATM?$AA@
CONST	SEGMENT
??_C@_06MCNAOJLP@UseATM?$AA@ DB 'UseATM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OFEBNODP@ScratchHead?$AA@
CONST	SEGMENT
??_C@_0M@OFEBNODP@ScratchHead?$AA@ DB 'ScratchHead', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MBNCCLPN@Cover?$AA@
CONST	SEGMENT
??_C@_05MBNCCLPN@Cover?$AA@ DB 'Cover', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KNIFEBAM@WalkInSeq?$AA@
CONST	SEGMENT
??_C@_09KNIFEBAM@WalkInSeq?$AA@ DB 'WalkInSeq', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LKNLPPOL@Absiel?$AA@
CONST	SEGMENT
??_C@_06LKNLPPOL@Absiel?$AA@ DB 'Absiel', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GPBECKHN@HitWall?$AA@
CONST	SEGMENT
??_C@_07GPBECKHN@HitWall?$AA@ DB 'HitWall', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NBOCEOOB@HitFromBehind?$AA@
CONST	SEGMENT
??_C@_0O@NBOCEOOB@HitFromBehind?$AA@ DB 'HitFromBehind', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HCBCGIIG@HitFromFront?$AA@
CONST	SEGMENT
??_C@_0N@HCBCGIIG@HitFromFront?$AA@ DB 'HitFromFront', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KEJEMOMF@HitByGunFromRight?$AA@
CONST	SEGMENT
??_C@_0BC@KEJEMOMF@HitByGunFromRight?$AA@ DB 'HitByGunFromRight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GANBLMHC@HitByGunFromLeft?$AA@
CONST	SEGMENT
??_C@_0BB@GANBLMHC@HitByGunFromLeft?$AA@ DB 'HitByGunFromLeft', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OMBECEJC@HitByGunFromRear?$AA@
CONST	SEGMENT
??_C@_0BB@OMBECEJC@HitByGunFromRear?$AA@ DB 'HitByGunFromRear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OKNKHMIG@HitByGunFromFront?$AA@
CONST	SEGMENT
??_C@_0BC@OKNKHMIG@HitByGunFromFront?$AA@ DB 'HitByGunFromFront', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DMFMNKMF@HitFromRight?$AA@
CONST	SEGMENT
??_C@_0N@DMFMNKMF@HitFromRight?$AA@ DB 'HitFromRight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HKOFAADA@HitFromLeft?$AA@
CONST	SEGMENT
??_C@_0M@HKOFAADA@HitFromLeft?$AA@ DB 'HitFromLeft', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IBCGOFHD@HitFromBack?$AA@
CONST	SEGMENT
??_C@_0M@IBCGOFHD@HitFromBack?$AA@ DB 'HitFromBack', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FIMADIPO@PedAnimation?$AA@
CONST	SEGMENT
??_C@_0N@FIMADIPO@PedAnimation?$AA@ DB 'PedAnimation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LIHNKICN@ScriptAnimation?$AA@
CONST	SEGMENT
??_C@_0BA@LIHNKICN@ScriptAnimation?$AA@ DB 'ScriptAnimation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BAHHJMBL@WalkAnimation?$AA@
CONST	SEGMENT
??_C@_0O@BAHHJMBL@WalkAnimation?$AA@ DB 'WalkAnimation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IOHOLION@GoToPointWithinRadius?$AA@
CONST	SEGMENT
??_C@_0BG@IOHOLION@GoToPointWithinRadius?$AA@ DB 'GoToPointWithinRadius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06PBKMMHEL@Crouch?$AA@
CONST	SEGMENT
??_C@_06PBKMMHEL@Crouch?$AA@ DB 'Crouch', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FCKANNFO@ThreatResp?$AA@
CONST	SEGMENT
??_C@_0L@FCKANNFO@ThreatResp?$AA@ DB 'ThreatResp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IPDFENKG@BailFromCar?$AA@
CONST	SEGMENT
??_C@_0M@IPDFENKG@BailFromCar?$AA@ DB 'BailFromCar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LCLDMJDL@PedResp?$AA@
CONST	SEGMENT
??_C@_07LCLDMJDL@PedResp?$AA@ DB 'PedResp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHGNMMCL@InitialStateInternal?$AA@
CONST	SEGMENT
??_C@_0BF@PHGNMMCL@InitialStateInternal?$AA@ DB 'InitialStateInternal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BHHJNMHO@DriveCarSpecial?$AA@
CONST	SEGMENT
??_C@_0BA@BHHJNMHO@DriveCarSpecial?$AA@ DB 'DriveCarSpecial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NIFACLPK@WalkThruDoor?$AA@
CONST	SEGMENT
??_C@_0N@NIFACLPK@WalkThruDoor?$AA@ DB 'WalkThruDoor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKCJONAI@InvDeadPed?$AA@
CONST	SEGMENT
??_C@_0L@CKCJONAI@InvDeadPed?$AA@ DB 'InvDeadPed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CIALCOMP@ShowFingerNoPed?$AA@
CONST	SEGMENT
??_C@_0BA@CIALCOMP@ShowFingerNoPed?$AA@ DB 'ShowFingerNoPed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DBPMFCGC@InitialState?$AA@
CONST	SEGMENT
??_C@_0N@DBPMFCGC@InitialState?$AA@ DB 'InitialState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EJJNGNLG@ShowFinger?$AA@
CONST	SEGMENT
??_C@_0L@EJJNGNLG@ShowFinger?$AA@ DB 'ShowFinger', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FOAADBGI@OnFoot?$AA@
CONST	SEGMENT
??_C@_06FOAADBGI@OnFoot?$AA@ DB 'OnFoot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BFMJJGDC@BeInCouple?$AA@
CONST	SEGMENT
??_C@_0L@BFMJJGDC@BeInCouple?$AA@ DB 'BeInCouple', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EDNEJAIE@CommandTask?$AA@
CONST	SEGMENT
??_C@_0M@EDNEJAIE@CommandTask?$AA@ DB 'CommandTask', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PJLFJKKP@GreetPartner?$AA@
CONST	SEGMENT
??_C@_0N@PJLFJKKP@GreetPartner?$AA@ DB 'GreetPartner', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NNGNGFJK@Jetpack?$AA@
CONST	SEGMENT
??_C@_07NNGNGFJK@Jetpack?$AA@ DB 'Jetpack', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BIEPDJCB@Jump?$AA@
CONST	SEGMENT
??_C@_04BIEPDJCB@Jump?$AA@ DB 'Jump', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OFHBCDIC@Fall?$AA@
CONST	SEGMENT
??_C@_04OFHBCDIC@Fall?$AA@ DB 'Fall', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EHINGJOE@TakeDamageFall?$AA@
CONST	SEGMENT
??_C@_0P@EHINGJOE@TakeDamageFall?$AA@ DB 'TakeDamageFall', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OBNJJJNI@SitInChair?$AA@
CONST	SEGMENT
??_C@_0L@OBNJJJNI@SitInChair?$AA@ DB 'SitInChair', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HPGBKPJD@BeInShop?$AA@
CONST	SEGMENT
??_C@_08HPGBKPJD@BeInShop?$AA@ DB 'BeInShop', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NLNALDDI@ExecutePath?$AA@
CONST	SEGMENT
??_C@_0M@NLNALDDI@ExecutePath?$AA@ DB 'ExecutePath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BLKIPOBB@InvDisturb?$AA@
CONST	SEGMENT
??_C@_0L@BLKIPOBB@InvDisturb?$AA@ DB 'InvDisturb', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MPEJDFMK@OpenDoor?$AA@
CONST	SEGMENT
??_C@_08MPEJDFMK@OpenDoor?$AA@ DB 'OpenDoor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JCDJCBNP@RotateToActor?$AA@
CONST	SEGMENT
??_C@_0O@JCDJCBNP@RotateToActor?$AA@ DB 'RotateToActor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PHNNAGAA@GoToAttractor?$AA@
CONST	SEGMENT
??_C@_0O@PHNNAGAA@GoToAttractor?$AA@ DB 'GoToAttractor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HOECFELN@AvoidEntity?$AA@
CONST	SEGMENT
??_C@_0M@HOECFELN@AvoidEntity?$AA@ DB 'AvoidEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LCMEECPN@AvoidOthPed?$AA@
CONST	SEGMENT
??_C@_0M@LCMEECPN@AvoidOthPed?$AA@ DB 'AvoidOthPed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHIDAOCP@GoToPoint?$AA@
CONST	SEGMENT
??_C@_09BHIDAOCP@GoToPoint?$AA@ DB 'GoToPoint', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FGENIEG@AchvHeading?$AA@
CONST	SEGMENT
??_C@_0M@FGENIEG@AchvHeading?$AA@ DB 'AchvHeading', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GJJJPHHE@FollowActor?$AA@
CONST	SEGMENT
??_C@_0M@GJJJPHHE@FollowActor?$AA@ DB 'FollowActor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LPNHOKKB@Prozzy?$AA@
CONST	SEGMENT
??_C@_06LPNHOKKB@Prozzy?$AA@ DB 'Prozzy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BANFJPIN@PassObject?$AA@
CONST	SEGMENT
??_C@_0L@BANFJPIN@PassObject?$AA@ DB 'PassObject', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FPENONFG@SignalAtPed?$AA@
CONST	SEGMENT
??_C@_0M@FPENONFG@SignalAtPed?$AA@ DB 'SignalAtPed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LKLDIHJA@StareAtPed?$AA@
CONST	SEGMENT
??_C@_0L@LKLDIHJA@StareAtPed?$AA@ DB 'StareAtPed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CMGMNPIE@HassleVehicle?$AA@
CONST	SEGMENT
??_C@_0O@CMGMNPIE@HassleVehicle?$AA@ DB 'HassleVehicle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CJBOFNLG@GangsRel?$AA@
CONST	SEGMENT
??_C@_08CJBOFNLG@GangsRel?$AA@ DB 'GangsRel', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BILOHHOP@SmartFleeEntity?$AA@
CONST	SEGMENT
??_C@_0BA@BILOHHOP@SmartFleeEntity?$AA@ DB 'SmartFleeEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OJKOHCBA@SmartFleePoint?$AA@
CONST	SEGMENT
??_C@_0P@OJKOHCBA@SmartFleePoint?$AA@ DB 'SmartFleePoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CMBFNLDE@FleeEntity?$AA@
CONST	SEGMENT
??_C@_0L@CMBFNLDE@FleeEntity?$AA@ DB 'FleeEntity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMNLFFHJ@FleePoint?$AA@
CONST	SEGMENT
??_C@_09CMNLFFHJ@FleePoint?$AA@ DB 'FleePoint', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HPDKEIOB@TreatAccident?$AA@
CONST	SEGMENT
??_C@_0O@HPDKEIOB@TreatAccident?$AA@ DB 'TreatAccident', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FCMGGCLJ@WaterTurretSomething?$AA@
CONST	SEGMENT
??_C@_0BF@FCMGGCLJ@WaterTurretSomething?$AA@ DB 'WaterTurretSomething', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KLCFFIHL@JumpActorForDriveBy?$AA@
CONST	SEGMENT
??_C@_0BE@KLCFFIHL@JumpActorForDriveBy?$AA@ DB 'JumpActorForDriveBy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CLMKJFGP@EnterAnyCarPassenger?$AA@
CONST	SEGMENT
??_C@_0BF@CLMKJFGP@EnterAnyCarPassenger?$AA@ DB 'EnterAnyCarPassenger', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OIHNMDH@EnterAnyCarDriver?$AA@
CONST	SEGMENT
??_C@_0BC@OIHNMDH@EnterAnyCarDriver?$AA@ DB 'EnterAnyCarDriver', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HHLOAPKI@DriveToPoint?$AA@
CONST	SEGMENT
??_C@_0N@HHLOAPKI@DriveToPoint?$AA@ DB 'DriveToPoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DLMHHNNA@DriveCar?$AA@
CONST	SEGMENT
??_C@_08DLMHHNNA@DriveCar?$AA@ DB 'DriveCar', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MFIOKJJN@LeaveCar?$AA@
CONST	SEGMENT
??_C@_08MFIOKJJN@LeaveCar?$AA@ DB 'LeaveCar', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BGMPAOCJ@EnterCarPassenger?$AA@
CONST	SEGMENT
??_C@_0BC@BGMPAOCJ@EnterCarPassenger?$AA@ DB 'EnterCarPassenger', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FFMJLPLF@EnterCarDriver?$AA@
CONST	SEGMENT
??_C@_0P@FFMJLPLF@EnterCarDriver?$AA@ DB 'EnterCarDriver', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FGNOBNO@PedAttrRel3?$AA@
CONST	SEGMENT
??_C@_0M@FGNOBNO@PedAttrRel3?$AA@ DB 'PedAttrRel3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BMHGNAJP@PedAttrRel2?$AA@
CONST	SEGMENT
??_C@_0M@BMHGNAJP@PedAttrRel2?$AA@ DB 'PedAttrRel2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DCMFJAHJ@FallParachute?$AA@
CONST	SEGMENT
??_C@_0O@DCMFJAHJ@FallParachute?$AA@ DB 'FallParachute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CHNDMAJJ@Swim?$AA@
CONST	SEGMENT
??_C@_04CHNDMAJJ@Swim?$AA@ DB 'Swim', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MBGGCIJE@Goggles?$AA@
CONST	SEGMENT
??_C@_07MBGGCIJE@Goggles?$AA@ DB 'Goggles', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GFIIIEKH@PhoneInOut?$AA@
CONST	SEGMENT
??_C@_0L@GFIIIEKH@PhoneInOut?$AA@ DB 'PhoneInOut', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HKKCPKEF@TriggerLookAt?$AA@
CONST	SEGMENT
??_C@_0O@HKKCPKEF@TriggerLookAt?$AA@ DB 'TriggerLookAt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ICLGFHEB@InterestingRandom?$AA@
CONST	SEGMENT
??_C@_0BC@ICLGFHEB@InterestingRandom?$AA@ DB 'InterestingRandom', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHFLIDFM@PedAttrRel1?$AA@
CONST	SEGMENT
??_C@_0M@DHFLIDFM@PedAttrRel1?$AA@ DB 'PedAttrRel1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DBMBPJIF@SunBathe?$AA@
CONST	SEGMENT
??_C@_08DBMBPJIF@SunBathe?$AA@ DB 'SunBathe', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HHAJGFJI@SitIdle?$AA@
CONST	SEGMENT
??_C@_07HHAJGFJI@SitIdle?$AA@ DB 'SitIdle', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KLBPLDHC@SitDown?$AA@
CONST	SEGMENT
??_C@_07KLBPLDHC@SitDown?$AA@ DB 'SitDown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MDLLMOPO@Tired?$AA@
CONST	SEGMENT
??_C@_05MDLLMOPO@Tired?$AA@ DB 'Tired', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OGLKDCL@FallShotDown?$AA@
CONST	SEGMENT
??_C@_0N@OGLKDCL@FallShotDown?$AA@ DB 'FallShotDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FCOLCBPL@Wasted?$AA@
CONST	SEGMENT
??_C@_06FCOLCBPL@Wasted?$AA@ DB 'Wasted', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EJCMBCFH@WastedDie?$AA@
CONST	SEGMENT
??_C@_09EJCMBCFH@WastedDie?$AA@ DB 'WastedDie', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LMFNGHCB@StayPut?$AA@
CONST	SEGMENT
??_C@_07LMFNGHCB@StayPut?$AA@ DB 'StayPut', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EIEENOKF@ActorOnFoot?$AA@
CONST	SEGMENT
??_C@_0M@EIEENOKF@ActorOnFoot?$AA@ DB 'ActorOnFoot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OPGEEPIE@DriveByFreeAim?$AA@
CONST	SEGMENT
??_C@_0P@OPGEEPIE@DriveByFreeAim?$AA@ DB 'DriveByFreeAim', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKGKDLL@KillActorMaybe?$AA@
CONST	SEGMENT
??_C@_0P@HKGKDLL@KillActorMaybe?$AA@ DB 'KillActorMaybe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OAMBNCBF@TakeDamage?$AA@
CONST	SEGMENT
??_C@_0L@OAMBNCBF@TakeDamage?$AA@ DB 'TakeDamage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GAJNONNF@UseGun?$AA@
CONST	SEGMENT
??_C@_06GAJNONNF@UseGun?$AA@ DB 'UseGun', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KIHIELMB@Fight?$AA@
CONST	SEGMENT
??_C@_05KIHIELMB@Fight?$AA@ DB 'Fight', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DEFDHEHD@GHands?$AA@
CONST	SEGMENT
??_C@_06DEFDHEHD@GHands?$AA@ DB 'GHands', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EAHEMPAN@AutoAnimation?$AA@
CONST	SEGMENT
??_C@_0O@EAHEMPAN@AutoAnimation?$AA@ DB 'AutoAnimation', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?taskInfosById@@3PAUtTaskInfo@@A DD 0191H		; taskInfosById
	DD	FLAT:??_C@_0O@EAHEMPAN@AutoAnimation?$AA@
	DD	01aaH
	DD	FLAT:??_C@_06DEFDHEHD@GHands?$AA@
	DD	03f8H
	DD	FLAT:??_C@_05KIHIELMB@Fight?$AA@
	DD	03f9H
	DD	FLAT:??_C@_06GAJNONNF@UseGun?$AA@
	DD	03f0H
	DD	FLAT:??_C@_0L@OAMBNCBF@TakeDamage?$AA@
	DD	03e8H
	DD	FLAT:??_C@_0P@HKGKDLL@KillActorMaybe?$AA@
	DD	03feH
	DD	FLAT:??_C@_0P@OPGEEPIE@DriveByFreeAim?$AA@
	DD	0cbH
	DD	FLAT:??_C@_0M@EIEENOKF@ActorOnFoot?$AA@
	DD	0ccH
	DD	FLAT:??_C@_07LMFNGHCB@StayPut?$AA@
	DD	0d4H
	DD	FLAT:??_C@_09EJCMBCFH@WastedDie?$AA@
	DD	0d9H
	DD	FLAT:??_C@_06FCOLCBPL@Wasted?$AA@
	DD	0daH
	DD	FLAT:??_C@_0N@OGLKDCL@FallShotDown?$AA@
	DD	0dbH
	DD	FLAT:??_C@_05MDLLMOPO@Tired?$AA@
	DD	0dfH
	DD	FLAT:??_C@_07KLBPLDHC@SitDown?$AA@
	DD	0ddH
	DD	FLAT:??_C@_07HHAJGFJI@SitIdle?$AA@
	DD	0e7H
	DD	FLAT:??_C@_08DBMBPJIF@SunBathe?$AA@
	DD	0e9H
	DD	FLAT:??_C@_0M@DHFLIDFM@PedAttrRel1?$AA@
	DD	0ebH
	DD	FLAT:??_C@_0BC@ICLGFHEB@InterestingRandom?$AA@
	DD	010dH
	DD	FLAT:??_C@_0O@HKKCPKEF@TriggerLookAt?$AA@
	DD	0640H
	DD	FLAT:??_C@_0L@GFIIIEKH@PhoneInOut?$AA@
	DD	0644H
	DD	FLAT:??_C@_07MBGGCIJE@Goggles?$AA@
	DD	010cH
	DD	FLAT:??_C@_04CHNDMAJJ@Swim?$AA@
	DD	011cH
	DD	FLAT:??_C@_0O@DCMFJAHJ@FallParachute?$AA@
	DD	0103H
	DD	FLAT:??_C@_0M@BMHGNAJP@PedAttrRel2?$AA@
	DD	0104H
	DD	FLAT:??_C@_0M@FGNOBNO@PedAttrRel3?$AA@
	DD	02c9H
	DD	FLAT:??_C@_0P@FFMJLPLF@EnterCarDriver?$AA@
	DD	02c8H
	DD	FLAT:??_C@_0BC@BGMPAOCJ@EnterCarPassenger?$AA@
	DD	02c0H
	DD	FLAT:??_C@_08MFIOKJJN@LeaveCar?$AA@
	DD	02c5H
	DD	FLAT:??_C@_08DLMHHNNA@DriveCar?$AA@
	DD	02c6H
	DD	FLAT:??_C@_0N@HHLOAPKI@DriveToPoint?$AA@
	DD	02b8H
	DD	FLAT:??_C@_0BC@OIHNMDH@EnterAnyCarDriver?$AA@
	DD	02bcH
	DD	FLAT:??_C@_0BF@CLMKJFGP@EnterAnyCarPassenger?$AA@
	DD	01f8H
	DD	FLAT:??_C@_0BE@KLCFFIHL@JumpActorForDriveBy?$AA@
	DD	06dH
	DD	FLAT:??_C@_0BF@FCMGGCLJ@WaterTurretSomething?$AA@
	DD	06eH
	DD	FLAT:??_C@_0O@HPDKEIOB@TreatAccident?$AA@
	DD	038cH
	DD	FLAT:??_C@_09CMNLFFHJ@FleePoint?$AA@
	DD	038dH
	DD	FLAT:??_C@_0L@CMBFNLDE@FleeEntity?$AA@
	DD	038eH
	DD	FLAT:??_C@_0P@OJKOHCBA@SmartFleePoint?$AA@
	DD	038fH
	DD	FLAT:??_C@_0BA@BILOHHOP@SmartFleeEntity?$AA@
	DD	04b1H
	DD	FLAT:??_C@_08CJBOFNLG@GangsRel?$AA@
	DD	04b5H
	DD	FLAT:??_C@_0O@CMGMNPIE@HassleVehicle?$AA@
	DD	0101H
	DD	FLAT:??_C@_0L@LKLDIHJA@StareAtPed?$AA@
	DD	04baH
	DD	FLAT:??_C@_0M@FPENONFG@SignalAtPed?$AA@
	DD	04bbH
	DD	FLAT:??_C@_0L@BANFJPIN@PassObject?$AA@
	DD	051dH
	DD	FLAT:??_C@_06LPNHOKKB@Prozzy?$AA@
	DD	038bH
	DD	FLAT:??_C@_0M@GJJJPHHE@FollowActor?$AA@
	DD	0386H
	DD	FLAT:??_C@_0M@FGENIEG@AchvHeading?$AA@
	DD	0387H
	DD	FLAT:??_C@_09BHIDAOCP@GoToPoint?$AA@
	DD	0395H
	DD	FLAT:??_C@_0M@LCMEECPN@AvoidOthPed?$AA@
	DD	03abH
	DD	FLAT:??_C@_0M@HOECFELN@AvoidEntity?$AA@
	DD	0393H
	DD	FLAT:??_C@_0O@PHNNAGAA@GoToAttractor?$AA@
	DD	0398H
	DD	FLAT:??_C@_0O@JCDJCBNP@RotateToActor?$AA@
	DD	03a4H
	DD	FLAT:??_C@_08MPEJDFMK@OpenDoor?$AA@
	DD	03a7H
	DD	FLAT:??_C@_0L@BLKIPOBB@InvDisturb?$AA@
	DD	0389H
	DD	FLAT:??_C@_0M@NLNALDDI@ExecutePath?$AA@
	DD	057cH
	DD	FLAT:??_C@_08HPGBKPJD@BeInShop?$AA@
	DD	0580H
	DD	FLAT:??_C@_0L@OBNJJJNI@SitInChair?$AA@
	DD	0d0H
	DD	FLAT:??_C@_0P@EHINGJOE@TakeDamageFall?$AA@
	DD	0f0H
	DD	FLAT:??_C@_04OFHBCDIC@Fall?$AA@
	DD	0d3H
	DD	FLAT:??_C@_04BIEPDJCB@Jump?$AA@
	DD	0517H
	DD	FLAT:??_C@_07NNGNGFJK@Jetpack?$AA@
	DD	04b3H
	DD	FLAT:??_C@_0N@PJLFJKKP@GreetPartner?$AA@
	DD	04b4H
	DD	FLAT:??_C@_0M@EDNEJAIE@CommandTask?$AA@
	DD	04b9H
	DD	FLAT:??_C@_0L@BFMJJGDC@BeInCouple?$AA@
	DD	00H
	DD	FLAT:??_C@_06FOAADBGI@OnFoot?$AA@
	DD	012eH
	DD	FLAT:??_C@_0L@EJJNGNLG@ShowFinger?$AA@
	DD	0131H
	DD	FLAT:??_C@_0N@DBPMFCGC@InitialState?$AA@
	DD	0132H
	DD	FLAT:??_C@_0BA@CIALCOMP@ShowFingerNoPed?$AA@
	DD	0258H
	DD	FLAT:??_C@_0L@CKCJONAI@InvDeadPed?$AA@
	DD	0c9H
	DD	FLAT:??_C@_0N@NIFACLPK@WalkThruDoor?$AA@
	DD	02cfH
	DD	FLAT:??_C@_0BA@BHHJNMHO@DriveCarSpecial?$AA@
	DD	0caH
	DD	FLAT:??_C@_0BF@PHGNMMCL@InitialStateInternal?$AA@
	DD	02d9H
	DD	FLAT:??_C@_07LCLDMJDL@PedResp?$AA@
	DD	02caH
	DD	FLAT:??_C@_0M@IPDFENKG@BailFromCar?$AA@
	DD	0259H
	DD	FLAT:??_C@_0L@FCKANNFO@ThreatResp?$AA@
	DD	019fH
	DD	FLAT:??_C@_06PBKMMHEL@Crouch?$AA@
	DD	0f4H
	DD	FLAT:??_C@_0BG@IOHOLION@GoToPointWithinRadius?$AA@
	DD	03a6H
	DD	FLAT:??_C@_0O@BAHHJMBL@WalkAnimation?$AA@
?taskInfosByVTbl@@3PAUtTaskInfo@@A DD 086d528H		; taskInfosByVTbl
	DD	FLAT:??_C@_0BA@LIHNKICN@ScriptAnimation?$AA@
	DD	086d570H
	DD	FLAT:??_C@_0N@FIMADIPO@PedAnimation?$AA@
	DD	086db70H
	DD	FLAT:??_C@_0M@IBCGOFHD@HitFromBack?$AA@
	DD	086dba4H
	DD	FLAT:??_C@_0M@HKOFAADA@HitFromLeft?$AA@
	DD	086dbd8H
	DD	FLAT:??_C@_0N@DMFMNKMF@HitFromRight?$AA@
	DD	086dc10H
	DD	FLAT:??_C@_0BC@OKNKHMIG@HitByGunFromFront?$AA@
	DD	086dc4cH
	DD	FLAT:??_C@_0BB@OMBECEJC@HitByGunFromRear?$AA@
	DD	086dc88H
	DD	FLAT:??_C@_0BB@GANBLMHC@HitByGunFromLeft?$AA@
	DD	086dcc4H
	DD	FLAT:??_C@_0BC@KEJEMOMF@HitByGunFromRight?$AA@
	DD	086e5ecH
	DD	FLAT:??_C@_0N@HCBCGIIG@HitFromFront?$AA@
	DD	086f168H
	DD	FLAT:??_C@_0O@NBOCEOOB@HitFromBehind?$AA@
	DD	086f1a0H
	DD	FLAT:??_C@_07GPBECKHN@HitWall?$AA@
	DD	086f45cH
	DD	FLAT:??_C@_06LKNLPPOL@Absiel?$AA@
	DD	086fdd4H
	DD	FLAT:??_C@_09KNIFEBAM@WalkInSeq?$AA@
	DD	085a0d0H
	DD	FLAT:??_C@_05MBNCCLPN@Cover?$AA@
	DD	085a100H
	DD	FLAT:??_C@_0M@OFEBNODP@ScratchHead?$AA@
	DD	085a134H
	DD	FLAT:??_C@_06MCNAOJLP@UseATM?$AA@
	DD	085a164H
	DD	FLAT:??_C@_09MGIJJICC@LookAbout?$AA@
	DD	085a29cH
	DD	FLAT:??_C@_07CPOKJLOH@HandsUp?$AA@
	DD	086c78cH
	DD	FLAT:??_C@_04NKFKOIHC@Chat?$AA@
?iSelection@@3HA DD 0190H				; iSelection
_DATA	ENDS
PUBLIC	_atan2f
PUBLIC	?atan2@@YAMMM@Z					; atan2
PUBLIC	?GameDebugEntity@@YAXKKH@Z			; GameDebugEntity
PUBLIC	?GameDebugScreensOff@@YAXXZ			; GameDebugScreensOff
PUBLIC	?GameDebugDrawDebugScreens@@YAXXZ		; GameDebugDrawDebugScreens
PUBLIC	?GameDebugInitTextScreen@@YAXXZ			; GameDebugInitTextScreen
PUBLIC	?GameDebugAddMessage@@YAXPADZZ			; GameDebugAddMessage
PUBLIC	?GameDrawDebugTextInfo@@YAXXZ			; GameDrawDebugTextInfo
PUBLIC	?GetCamera@CGame@@QAEPAVCCamera@@XZ		; CGame::GetCamera
PUBLIC	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ	; CGame::FindPlayerPed
PUBLIC	?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z	; CVehiclePool::GetAt
PUBLIC	?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ; CNetGame::GetVehiclePool
PUBLIC	?GameDebugDrawNextLine@@YAXPADK@Z		; GameDebugDrawNextLine
PUBLIC	?GetNextTaskFromTask@@YAPAKPAK@Z		; GetNextTaskFromTask
PUBLIC	?GetTaskTypeFromTask@@YAHPAK@Z			; GetTaskTypeFromTask
PUBLIC	?GetTaskNameFromTask@@YAPBDPAK@Z		; GetTaskNameFromTask
PUBLIC	?PrintInfoForTask@@YAXPADPAK@Z			; PrintInfoForTask
PUBLIC	?GameDebugDrawTaskInfo@@YAXXZ			; GameDebugDrawTaskInfo
PUBLIC	?GameDebugDrawActorInfo@@YAXXZ			; GameDebugDrawActorInfo
PUBLIC	?GameDebugDrawVehicleInfo@@YAXXZ		; GameDebugDrawVehicleInfo
PUBLIC	?GameDrawMemoryInfo@@YAXXZ			; GameDrawMemoryInfo
PUBLIC	?GameDrawMemoryInfoAscii@@YAXXZ			; GameDrawMemoryInfoAscii
PUBLIC	?GameDoVehicleSyncTest@@YAXXZ			; GameDoVehicleSyncTest
PUBLIC	?GameBuildRecreateVehicle@@YAXXZ		; GameBuildRecreateVehicle
PUBLIC	?GameBuildSelectVehicle@@YAXXZ			; GameBuildSelectVehicle
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_04KHKKIIL@Null?$AA@			; `string'
PUBLIC	??_C@_07NBCGADJA@Unknown?$AA@			; `string'
PUBLIC	??_C@_0CI@JIMOIMPB@?$CFs?3?5S?3?50x?$CF08X?5?5VT?3?50x?$CF08X?5?5T?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0CI@PAHKAOAD@PlayerPed?5?$CFu?5?$CIstruct?3?50x?$CFX?0?5vtbl@ ; `string'
PUBLIC	??_C@_0BP@PPABNIIN@Displaying?5Ped?5Intelligence?4?4?4?$AA@ ; `string'
PUBLIC	??_C@_0CD@MBIJLLFG@Ped?3?5struct?3?50x?$CF08X?0?5?5vtbl?3?50x?$CF0@ ; `string'
PUBLIC	??_C@_0M@LPBINLDN@Basic?5Tasks?$AA@		; `string'
PUBLIC	??_C@_06KGFFMMMJ@Damage?$AA@			; `string'
PUBLIC	??_C@_0L@OKOHOIDI@SwimWasted?$AA@		; `string'
PUBLIC	??_C@_06PMAGBHAK@Action?$AA@			; `string'
PUBLIC	??_C@_0P@JPMLMGAP@Extended?5Tasks?$AA@		; `string'
PUBLIC	??_C@_04JAAIOLBK@Unk1?$AA@			; `string'
PUBLIC	??_C@_04LLCFLINJ@Unk2?$AA@			; `string'
PUBLIC	??_C@_04KCDOIJJI@Unk3?$AA@			; `string'
PUBLIC	??_C@_04ONHPBPFP@Unk4?$AA@			; `string'
PUBLIC	??_C@_0CD@CHOLJEF@PlayerPed?5?$CFu?5?$CIentity?5offset?3?50x?$CF@ ; `string'
PUBLIC	??_C@_0L@MAGNHDBP@vtbl?3?50x?$CFX?$AA@		; `string'
PUBLIC	??_C@_0DA@FPDOIGPH@0xB6F178?$DN?$CFf?50xB7CB5C?$DN?$CFf?50x863AC0@ ; `string'
PUBLIC	??_C@_0BF@BCGNJFNE@right?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0BC@KAHBFMAI@up?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0N@HMGFLGFF@at?3?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0O@MGLLNPGK@pos?3?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0P@BGLHMAIP@Move?3?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0P@CBAJGAMA@Turn?3?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0BE@BJINGMPL@Control?5Flags?3?50x?$CFX?$AA@ ; `string'
PUBLIC	??_C@_0BA@LEJCHDAE@Model?5Index?3?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_08FCEAOEPG@RW?3?50x?$CFX?$AA@		; `string'
PUBLIC	??_C@_0P@BGIDMEHG@StateFlags?3?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0P@DCAACFHL@Immunities?3?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0CB@DFJNDHJC@Vehicle?3?50x?$CFX?5Intelligence?3?50x?$CFX@ ; `string'
PUBLIC	??_C@_0DI@DMJLOAJG@MovRot1?3?5?$CFf?5MovRot2?3?5?$CFf?5ToRot?3?5?$CF@ ; `string'
PUBLIC	??_C@_0L@LJGDGHKC@Health?3?5?$CFf?$AA@		; `string'
PUBLIC	??_C@_0L@LDOIEKIB@Action?3?5?$CFu?$AA@		; `string'
PUBLIC	??_C@_0M@EOEDCPEO@PedType?3?5?$CFu?$AA@		; `string'
PUBLIC	??_C@_0BM@LPCFBHDB@PedStatPrim?3?5?$CFd?5PedStat?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0DI@DPHJDNNP@FightVtbl?3?50x?$CFX?5?5?5FightStruct?3?50@ ; `string'
PUBLIC	??_C@_0CD@CIEEFKFD@Weap?3?5?$CFu?5Sta?3?5?$CFu?5Clip?3?5?$CFu?5Ammo?3?5@ ; `string'
PUBLIC	??_C@_0CD@OCNLNLON@Target?3?5?$CFu?5Jetpack?3?5?$CFu?5AnimSet?3?5@ ; `string'
PUBLIC	??_C@_0BE@NJCKDND@Cam1?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0BE@FOAIPIFH@Cam2?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0CJ@IPNFIEPH@Campos?3?5?$CFf?5?$CFf?5?$CFf?5PosFromPlayer?3?5@ ; `string'
PUBLIC	??_C@_0BN@LLNIMKFJ@Cam?5Extended?5Zoom?5Values?3?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0DE@KIHJBFJM@CamMode?3?5?$CFu?5FarClip?3?5?$CFf?5HudScale@ ; `string'
PUBLIC	??_C@_0CE@NDANOPOF@dwWeaponUsed?3?5?$CFu?5pdwDamageEnt?3?50@ ; `string'
PUBLIC	??_C@_0BM@GOACJBGF@Current?5Player?5Interior?3?5?$CFu?$AA@ ; `string'
PUBLIC	??_C@_0BM@IAOFKPP@Analog1LR?3?5?$CFd?5Analog1UD?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0L@EDOEMJIO@Vehicle?5?$CFu?$AA@		; `string'
PUBLIC	??_C@_0L@HKCFHJCM@addr?3?50x?$CFX?$AA@		; `string'
PUBLIC	??_C@_0P@BFKMGGDA@Roll?3?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0BE@FLACJMED@Direction?3?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0BA@OMDLEHDM@Scale?3?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0BD@IHJBFCIH@Position?3?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0BC@ELIOFMOJ@Z?5Rot?3?5?$CFf?5degrees?$AA@ ; `string'
PUBLIC	??_C@_0BB@ONCBOICF@Renderware?3?50x?$CFX?$AA@	; `string'
PUBLIC	??_C@_0BE@CONFDHBF@dwUnkModelRel?3?50x?$CFX?$AA@ ; `string'
PUBLIC	??_C@_0N@CFHAMOMH@Driver?3?50x?$CFX?$AA@	; `string'
PUBLIC	??_C@_09BDJPIOEM@mat?3?50x?$CFX?$AA@		; `string'
PUBLIC	??_C@_0BE@OMMGIPBO@RadioPed?3?50x?$CFX?50x?$CFX?$AA@ ; `string'
PUBLIC	??_C@_0M@GNLDKGKH@Flags?3?50x?$CFX?$AA@		; `string'
PUBLIC	??_C@_0L@PGCKOINJ@Steer1?3?5?$CFf?$AA@		; `string'
PUBLIC	??_C@_0L@HALOJKHH@Steer2?3?5?$CFf?$AA@		; `string'
PUBLIC	??_C@_09LGLNAKHO@Accel?3?5?$CFf?$AA@		; `string'
PUBLIC	??_C@_09NDCEMKKH@Brake?3?5?$CFf?$AA@		; `string'
PUBLIC	??_C@_09GILBAEO@Hydra?3?5?$CFu?$AA@		; `string'
PUBLIC	??_C@_0L@NLBOLNAM@Color1?3?5?$CFu?$AA@		; `string'
PUBLIC	??_C@_0L@FNIKMPKC@Color2?3?5?$CFu?$AA@		; `string'
PUBLIC	??_C@_0DC@OBCAGOGM@Siren?5On?3?5?$CFu?0?5Horn?3?5?$CFd?5?$CFd?5?$CFd?5?$CFd?0@ ; `string'
PUBLIC	??_C@_0CD@MLBGGBJB@164?3?$CFu?5165?3?$CFu?5166?3?$CFu?5167?3?$CFu?5168?3@ ; `string'
PUBLIC	??_C@_0CM@DPKFGDOB@Displaying?5512?5Bytes?5From?5Addres@ ; `string'
PUBLIC	??_C@_0FG@LPFNPBJC@?$CF?43u?3?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF@ ; `string'
PUBLIC	??_C@_0DG@BDGMIIPL@?$CF?43u?3?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc@ ; `string'
PUBLIC	??_C@_0P@JLKJPJHJ@Vehicle?5Select?$AA@		; `string'
PUBLIC	??_C@_07MNBIJLFM@TYPE_?$CFd?$AA@		; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3cf5c28f
PUBLIC	__real@3f800000
PUBLIC	__real@40490fdb
PUBLIC	__real@40a00000
PUBLIC	__real@43340000
PUBLIC	__real@43fa0000
PUBLIC	__real@43fb0000
PUBLIC	__real@c0800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp__IsBadReadPtr@8:PROC
EXTRN	__itoa:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_sprintf:PROC
EXTRN	_vsprintf:PROC
EXTRN	_atan2:PROC
EXTRN	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z:PROC	; CEntity::GetMatrix
EXTRN	?SetMatrix@CEntity@@QAEXU_MATRIX4X4@@@Z:PROC	; CEntity::SetMatrix
EXTRN	?SetMoveSpeedVector@CEntity@@QAEXU_VECTOR@@@Z:PROC ; CEntity::SetMoveSpeedVector
EXTRN	?SetTurnSpeedVector@CEntity@@QAEXU_VECTOR@@@Z:PROC ; CEntity::SetTurnSpeedVector
EXTRN	?GetKeys@CPlayerPed@@QAEGPAG0@Z:PROC		; CPlayerPed::GetKeys
EXTRN	?PutDirectlyInVehicle@CPlayerPed@@QAEXHH@Z:PROC	; CPlayerPed::PutDirectlyInVehicle
EXTRN	?TogglePlayerControllable@CPlayerPed@@QAEXH@Z:PROC ; CPlayerPed::TogglePlayerControllable
EXTRN	?IsInJetpackMode@CPlayerPed@@QAEHXZ:PROC	; CPlayerPed::IsInJetpackMode
EXTRN	??0CPlayerPed@@QAE@XZ:PROC			; CPlayerPed::CPlayerPed
EXTRN	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ:PROC	; ScriptCommand
EXTRN	?SetBehindPlayer@CCamera@@QAEXXZ:PROC		; CCamera::SetBehindPlayer
EXTRN	?SetPosition@CCamera@@QAEXMMMMMM@Z:PROC		; CCamera::SetPosition
EXTRN	?LookAtPoint@CCamera@@QAEXMMMH@Z:PROC		; CCamera::LookAtPoint
EXTRN	?Restore@CCamera@@QAEXXZ:PROC			; CCamera::Restore
EXTRN	?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z:PROC ; CGame::NewVehicle
EXTRN	?DisplayHud@CGame@@QAEXH@Z:PROC			; CGame::DisplayHud
EXTRN	?DisplayGameText@CGame@@QAEXPADHH@Z:PROC	; CGame::DisplayGameText
EXTRN	?RenderText@CFontRender@@QAEXPADUtagRECT@@K@Z:PROC ; CFontRender::RenderText
EXTRN	?GamePool_Ped_GetAt@@YGPAU_PED_TYPE@@H@Z:PROC	; GamePool_Ped_GetAt
EXTRN	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ:PROC ; GamePool_FindPlayerPed
EXTRN	?Game_PedStatPrim@@YAHH@Z:PROC			; Game_PedStatPrim
EXTRN	?Game_PedStat@@YAHH@Z:PROC			; Game_PedStat
EXTRN	?GameGetInternalKeys@@YAPAU_GTA_CONTROLSET@@XZ:PROC ; GameGetInternalKeys
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?pNetGame@@3PAVCNetGame@@A:DWORD		; pNetGame
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	?pDefaultFont@@3PAVCFontRender@@A:DWORD		; pDefaultFont
EXTRN	?pcaInternalAim@@3PAU_CAMERA_AIM@@A:DWORD	; pcaInternalAim
EXTRN	?pbyteCameraMode@@3PAEA:DWORD			; pbyteCameraMode
EXTRN	?fFarClip@@3MA:DWORD				; fFarClip
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0800000
CONST	SEGMENT
__real@c0800000 DD 0c0800000r			; -4
CONST	ENDS
;	COMDAT __real@43fb0000
CONST	SEGMENT
__real@43fb0000 DD 043fb0000r			; 502
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3cf5c28f
CONST	SEGMENT
__real@3cf5c28f DD 03cf5c28fr			; 0.03
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_07MNBIJLFM@TYPE_?$CFd?$AA@
CONST	SEGMENT
??_C@_07MNBIJLFM@TYPE_?$CFd?$AA@ DB 'TYPE_%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JLKJPJHJ@Vehicle?5Select?$AA@
CONST	SEGMENT
??_C@_0P@JLKJPJHJ@Vehicle?5Select?$AA@ DB 'Vehicle Select', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BDGMIIPL@?$CF?43u?3?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc@
CONST	SEGMENT
??_C@_0DG@BDGMIIPL@?$CF?43u?3?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc@ DB '%'
	DB	'.3u: %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@LPFNPBJC@?$CF?43u?3?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF@
CONST	SEGMENT
??_C@_0FG@LPFNPBJC@?$CF?43u?3?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF@ DB '%'
	DB	'.3u: %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %'
	DB	'.2X %.2X %.2X %.2X %.2X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@DPKFGDOB@Displaying?5512?5Bytes?5From?5Addres@
CONST	SEGMENT
??_C@_0CM@DPKFGDOB@Displaying?5512?5Bytes?5From?5Addres@ DB 'Displaying 5'
	DB	'12 Bytes From Address 0x%X + %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MLBGGBJB@164?3?$CFu?5165?3?$CFu?5166?3?$CFu?5167?3?$CFu?5168?3@
CONST	SEGMENT
??_C@_0CD@MLBGGBJB@164?3?$CFu?5165?3?$CFu?5166?3?$CFu?5167?3?$CFu?5168?3@ DB '1'
	DB	'64:%u 165:%u 166:%u 167:%u 168:%u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@OBCAGOGM@Siren?5On?3?5?$CFu?0?5Horn?3?5?$CFd?5?$CFd?5?$CFd?5?$CFd?0@
CONST	SEGMENT
??_C@_0DC@OBCAGOGM@Siren?5On?3?5?$CFu?0?5Horn?3?5?$CFd?5?$CFd?5?$CFd?5?$CFd?0@ DB 'S'
	DB	'iren On: %u, Horn: %d %d %d %d, Landing Gear: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FNIKMPKC@Color2?3?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0L@FNIKMPKC@Color2?3?5?$CFu?$AA@ DB 'Color2: %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NLBOLNAM@Color1?3?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0L@NLBOLNAM@Color1?3?5?$CFu?$AA@ DB 'Color1: %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GILBAEO@Hydra?3?5?$CFu?$AA@
CONST	SEGMENT
??_C@_09GILBAEO@Hydra?3?5?$CFu?$AA@ DB 'Hydra: %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NDCEMKKH@Brake?3?5?$CFf?$AA@
CONST	SEGMENT
??_C@_09NDCEMKKH@Brake?3?5?$CFf?$AA@ DB 'Brake: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LGLNAKHO@Accel?3?5?$CFf?$AA@
CONST	SEGMENT
??_C@_09LGLNAKHO@Accel?3?5?$CFf?$AA@ DB 'Accel: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HALOJKHH@Steer2?3?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0L@HALOJKHH@Steer2?3?5?$CFf?$AA@ DB 'Steer2: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PGCKOINJ@Steer1?3?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0L@PGCKOINJ@Steer1?3?5?$CFf?$AA@ DB 'Steer1: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNLDKGKH@Flags?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0M@GNLDKGKH@Flags?3?50x?$CFX?$AA@ DB 'Flags: 0x%X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OMMGIPBO@RadioPed?3?50x?$CFX?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0BE@OMMGIPBO@RadioPed?3?50x?$CFX?50x?$CFX?$AA@ DB 'RadioPed: 0x%X 0'
	DB	'x%X', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09BDJPIOEM@mat?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_09BDJPIOEM@mat?3?50x?$CFX?$AA@ DB 'mat: 0x%X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CFHAMOMH@Driver?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0N@CFHAMOMH@Driver?3?50x?$CFX?$AA@ DB 'Driver: 0x%X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CONFDHBF@dwUnkModelRel?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0BE@CONFDHBF@dwUnkModelRel?3?50x?$CFX?$AA@ DB 'dwUnkModelRel: 0x%X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ONCBOICF@Renderware?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0BB@ONCBOICF@Renderware?3?50x?$CFX?$AA@ DB 'Renderware: 0x%X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ELIOFMOJ@Z?5Rot?3?5?$CFf?5degrees?$AA@
CONST	SEGMENT
??_C@_0BC@ELIOFMOJ@Z?5Rot?3?5?$CFf?5degrees?$AA@ DB 'Z Rot: %f degrees', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IHJBFCIH@Position?3?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BD@IHJBFCIH@Position?3?5?$CFf?5?$CFf?5?$CFf?$AA@ DB 'Position: %f '
	DB	'%f %f', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OMDLEHDM@Scale?3?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BA@OMDLEHDM@Scale?3?5?$CFf?5?$CFf?5?$CFf?$AA@ DB 'Scale: %f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FLACJMED@Direction?3?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BE@FLACJMED@Direction?3?5?$CFf?5?$CFf?5?$CFf?$AA@ DB 'Direction: %'
	DB	'f %f %f', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BFKMGGDA@Roll?3?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0P@BFKMGGDA@Roll?3?5?$CFf?5?$CFf?5?$CFf?$AA@ DB 'Roll: %f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HKCFHJCM@addr?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0L@HKCFHJCM@addr?3?50x?$CFX?$AA@ DB 'addr: 0x%X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EDOEMJIO@Vehicle?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0L@EDOEMJIO@Vehicle?5?$CFu?$AA@ DB 'Vehicle %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IAOFKPP@Analog1LR?3?5?$CFd?5Analog1UD?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BM@IAOFKPP@Analog1LR?3?5?$CFd?5Analog1UD?3?5?$CFd?$AA@ DB 'Analog1'
	DB	'LR: %d Analog1UD: %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GOACJBGF@Current?5Player?5Interior?3?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BM@GOACJBGF@Current?5Player?5Interior?3?5?$CFu?$AA@ DB 'Current Pl'
	DB	'ayer Interior: %u', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NDANOPOF@dwWeaponUsed?3?5?$CFu?5pdwDamageEnt?3?50@
CONST	SEGMENT
??_C@_0CE@NDANOPOF@dwWeaponUsed?3?5?$CFu?5pdwDamageEnt?3?50@ DB 'dwWeapon'
	DB	'Used: %u pdwDamageEnt: 0x%X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@KIHJBFJM@CamMode?3?5?$CFu?5FarClip?3?5?$CFf?5HudScale@
CONST	SEGMENT
??_C@_0DE@KIHJBFJM@CamMode?3?5?$CFu?5FarClip?3?5?$CFf?5HudScale@ DB 'CamM'
	DB	'ode: %u FarClip: %f HudScaleX: %f HudScaleY: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LLNIMKFJ@Cam?5Extended?5Zoom?5Values?3?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BN@LLNIMKFJ@Cam?5Extended?5Zoom?5Values?3?5?$CFf?$AA@ DB 'Cam Exte'
	DB	'nded Zoom Values: %f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IPNFIEPH@Campos?3?5?$CFf?5?$CFf?5?$CFf?5PosFromPlayer?3?5@
CONST	SEGMENT
??_C@_0CJ@IPNFIEPH@Campos?3?5?$CFf?5?$CFf?5?$CFf?5PosFromPlayer?3?5@ DB 'C'
	DB	'ampos: %f %f %f PosFromPlayer: %f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FOAIPIFH@Cam2?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BE@FOAIPIFH@Cam2?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@ DB 'Cam2'
	DB	': %f %f %f = %f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NJCKDND@Cam1?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BE@NJCKDND@Cam1?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@ DB 'Cam1:'
	DB	' %f %f %f = %f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OCNLNLON@Target?3?5?$CFu?5Jetpack?3?5?$CFu?5AnimSet?3?5@
CONST	SEGMENT
??_C@_0CD@OCNLNLON@Target?3?5?$CFu?5Jetpack?3?5?$CFu?5AnimSet?3?5@ DB 'Ta'
	DB	'rget: %u Jetpack: %u AnimSet: %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CIEEFKFD@Weap?3?5?$CFu?5Sta?3?5?$CFu?5Clip?3?5?$CFu?5Ammo?3?5@
CONST	SEGMENT
??_C@_0CD@CIEEFKFD@Weap?3?5?$CFu?5Sta?3?5?$CFu?5Clip?3?5?$CFu?5Ammo?3?5@ DB 'W'
	DB	'eap: %u Sta: %u Clip: %u Ammo: %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@DPHJDNNP@FightVtbl?3?50x?$CFX?5?5?5FightStruct?3?50@
CONST	SEGMENT
??_C@_0DI@DPHJDNNP@FightVtbl?3?50x?$CFX?5?5?5FightStruct?3?50@ DB 'FightV'
	DB	'tbl: 0x%X   FightStruct: 0x%X   PlayerInfoAim: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LPCFBHDB@PedStatPrim?3?5?$CFd?5PedStat?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BM@LPCFBHDB@PedStatPrim?3?5?$CFd?5PedStat?3?5?$CFd?$AA@ DB 'PedSta'
	DB	'tPrim: %d PedStat: %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EOEDCPEO@PedType?3?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0M@EOEDCPEO@PedType?3?5?$CFu?$AA@ DB 'PedType: %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LDOIEKIB@Action?3?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0L@LDOIEKIB@Action?3?5?$CFu?$AA@ DB 'Action: %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LJGDGHKC@Health?3?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0L@LJGDGHKC@Health?3?5?$CFf?$AA@ DB 'Health: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@DMJLOAJG@MovRot1?3?5?$CFf?5MovRot2?3?5?$CFf?5ToRot?3?5?$CF@
CONST	SEGMENT
??_C@_0DI@DMJLOAJG@MovRot1?3?5?$CFf?5MovRot2?3?5?$CFf?5ToRot?3?5?$CF@ DB 'M'
	DB	'ovRot1: %f MovRot2: %f ToRot: %f ActRot: %f CamAdj: %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DFJNDHJC@Vehicle?3?50x?$CFX?5Intelligence?3?50x?$CFX@
CONST	SEGMENT
??_C@_0CB@DFJNDHJC@Vehicle?3?50x?$CFX?5Intelligence?3?50x?$CFX@ DB 'Vehic'
	DB	'le: 0x%X Intelligence: 0x%X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DCAACFHL@Immunities?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@DCAACFHL@Immunities?3?5?$CFs?$AA@ DB 'Immunities: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BGIDMEHG@StateFlags?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@BGIDMEHG@StateFlags?3?5?$CFs?$AA@ DB 'StateFlags: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCEAOEPG@RW?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_08FCEAOEPG@RW?3?50x?$CFX?$AA@ DB 'RW: 0x%X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LEJCHDAE@Model?5Index?3?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BA@LEJCHDAE@Model?5Index?3?5?$CFu?$AA@ DB 'Model Index: %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BJINGMPL@Control?5Flags?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0BE@BJINGMPL@Control?5Flags?3?50x?$CFX?$AA@ DB 'Control Flags: 0x%X'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CBAJGAMA@Turn?3?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0P@CBAJGAMA@Turn?3?5?$CFf?5?$CFf?5?$CFf?$AA@ DB 'Turn: %f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BGLHMAIP@Move?3?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0P@BGLHMAIP@Move?3?5?$CFf?5?$CFf?5?$CFf?$AA@ DB 'Move: %f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MGLLNPGK@pos?3?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0O@MGLLNPGK@pos?3?5?$CFf?5?$CFf?5?$CFf?$AA@ DB 'pos: %f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HMGFLGFF@at?3?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0N@HMGFLGFF@at?3?5?$CFf?5?$CFf?5?$CFf?$AA@ DB 'at: %f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KAHBFMAI@up?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BC@KAHBFMAI@up?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@ DB 'up: %f'
	DB	' %f %f = %f', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BCGNJFNE@right?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BF@BCGNJFNE@right?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@ DB 'rig'
	DB	'ht: %f %f %f = %f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FPDOIGPH@0xB6F178?$DN?$CFf?50xB7CB5C?$DN?$CFf?50x863AC0@
CONST	SEGMENT
??_C@_0DA@FPDOIGPH@0xB6F178?$DN?$CFf?50xB7CB5C?$DN?$CFf?50x863AC0@ DB '0x'
	DB	'B6F178=%f 0xB7CB5C=%f 0x863AC0=%f 0x858FE8=%f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MAGNHDBP@vtbl?3?50x?$CFX?$AA@
CONST	SEGMENT
??_C@_0L@MAGNHDBP@vtbl?3?50x?$CFX?$AA@ DB 'vtbl: 0x%X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CHOLJEF@PlayerPed?5?$CFu?5?$CIentity?5offset?3?50x?$CF@
CONST	SEGMENT
??_C@_0CD@CHOLJEF@PlayerPed?5?$CFu?5?$CIentity?5offset?3?50x?$CF@ DB 'Pla'
	DB	'yerPed %u (entity offset: 0x%X)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04ONHPBPFP@Unk4?$AA@
CONST	SEGMENT
??_C@_04ONHPBPFP@Unk4?$AA@ DB 'Unk4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KCDOIJJI@Unk3?$AA@
CONST	SEGMENT
??_C@_04KCDOIJJI@Unk3?$AA@ DB 'Unk3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LLCFLINJ@Unk2?$AA@
CONST	SEGMENT
??_C@_04LLCFLINJ@Unk2?$AA@ DB 'Unk2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JAAIOLBK@Unk1?$AA@
CONST	SEGMENT
??_C@_04JAAIOLBK@Unk1?$AA@ DB 'Unk1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JPMLMGAP@Extended?5Tasks?$AA@
CONST	SEGMENT
??_C@_0P@JPMLMGAP@Extended?5Tasks?$AA@ DB 'Extended Tasks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06PMAGBHAK@Action?$AA@
CONST	SEGMENT
??_C@_06PMAGBHAK@Action?$AA@ DB 'Action', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OKOHOIDI@SwimWasted?$AA@
CONST	SEGMENT
??_C@_0L@OKOHOIDI@SwimWasted?$AA@ DB 'SwimWasted', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06KGFFMMMJ@Damage?$AA@
CONST	SEGMENT
??_C@_06KGFFMMMJ@Damage?$AA@ DB 'Damage', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LPBINLDN@Basic?5Tasks?$AA@
CONST	SEGMENT
??_C@_0M@LPBINLDN@Basic?5Tasks?$AA@ DB 'Basic Tasks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MBIJLLFG@Ped?3?5struct?3?50x?$CF08X?0?5?5vtbl?3?50x?$CF0@
CONST	SEGMENT
??_C@_0CD@MBIJLLFG@Ped?3?5struct?3?50x?$CF08X?0?5?5vtbl?3?50x?$CF0@ DB 'P'
	DB	'ed: struct: 0x%08X,  vtbl: 0x%08X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PPABNIIN@Displaying?5Ped?5Intelligence?4?4?4?$AA@
CONST	SEGMENT
??_C@_0BP@PPABNIIN@Displaying?5Ped?5Intelligence?4?4?4?$AA@ DB 'Displayin'
	DB	'g Ped Intelligence...', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PAHKAOAD@PlayerPed?5?$CFu?5?$CIstruct?3?50x?$CFX?0?5vtbl@
CONST	SEGMENT
??_C@_0CI@PAHKAOAD@PlayerPed?5?$CFu?5?$CIstruct?3?50x?$CFX?0?5vtbl@ DB 'P'
	DB	'layerPed %u (struct: 0x%X, vtbl: 0x%X)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JIMOIMPB@?$CFs?3?5S?3?50x?$CF08X?5?5VT?3?50x?$CF08X?5?5T?3?5?$CFs@
CONST	SEGMENT
??_C@_0CI@JIMOIMPB@?$CFs?3?5S?3?50x?$CF08X?5?5VT?3?50x?$CF08X?5?5T?3?5?$CFs@ DB '%'
	DB	's: S: 0x%08X  VT: 0x%08X  T: %s (0x%x)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NBCGADJA@Unknown?$AA@
CONST	SEGMENT
??_C@_07NBCGADJA@Unknown?$AA@ DB 'Unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KHKKIIL@Null?$AA@
CONST	SEGMENT
??_C@_04KHKKIIL@Null?$AA@ DB 'Null', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0
__ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameBuildSelectVehicle@@YAXXZ
_TEXT	SEGMENT
tv201 = -452						; size = 4
$T1 = -444						; size = 4
$T2 = -432						; size = 4
_pTestVehicle$3 = -228					; size = 4
_blank$4 = -216						; size = 9
_matPlayer$5 = -196					; size = 64
_pPlayer$6 = -124					; size = 4
_mat$7 = -112						; size = 64
_vecMove$8 = -40					; size = 12
_vecTurn$9 = -20					; size = 12
__$ArrayPad$ = -4					; size = 4
?GameBuildSelectVehicle@@YAXXZ PROC			; GameBuildSelectVehicle, COMDAT

; 889  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-452]
	mov	ecx, 113				; 00000071H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 890  : 	if(!bSelVehicleInit) {

	cmp	DWORD PTR ?bSelVehicleInit@@3HA, 0	; bSelVehicleInit
	jne	$LN11@GameBuildS

; 891  : 		pControls = GameGetInternalKeys();

	call	?GameGetInternalKeys@@YAPAU_GTA_CONTROLSET@@XZ ; GameGetInternalKeys
	mov	DWORD PTR ?pControls@@3PAU_GTA_CONTROLSET@@A, eax ; pControls

; 892  : 		pCam = pGame->GetCamera();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	DWORD PTR ?pCam@@3PAVCCamera@@A, eax	; pCam

; 893  : 		pCam->SetPosition(-4.0f,-4.0f,502.0f,0.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43fb0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c0800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c0800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?pCam@@3PAVCCamera@@A	; pCam
	call	?SetPosition@CCamera@@QAEXMMMMMM@Z	; CCamera::SetPosition

; 894  : 		pCam->LookAtPoint(5.0f,5.0f,500.0f,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@43fa0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?pCam@@3PAVCCamera@@A	; pCam
	call	?LookAtPoint@CCamera@@QAEXMMMH@Z	; CCamera::LookAtPoint

; 895  : 		pGame->FindPlayerPed()->TogglePlayerControllable(0);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	ecx, eax
	call	?TogglePlayerControllable@CPlayerPed@@QAEXH@Z ; CPlayerPed::TogglePlayerControllable

; 896  : 		pGame->DisplayGameText("Vehicle Select",4000,6);

	push	6
	push	4000					; 00000fa0H
	push	OFFSET ??_C@_0P@JLKJPJHJ@Vehicle?5Select?$AA@
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayGameText@CGame@@QAEXPADHH@Z	; CGame::DisplayGameText

; 897  : 		GameBuildRecreateVehicle();

	call	?GameBuildRecreateVehicle@@YAXXZ	; GameBuildRecreateVehicle

; 898  : 		bSelVehicleInit = TRUE;

	mov	DWORD PTR ?bSelVehicleInit@@3HA, 1	; bSelVehicleInit
$LN11@GameBuildS:

; 899  : 	}
; 900  : 
; 901  : 	pGame->DisplayHud(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 902  : 
; 903  : 	if(pVehicle && pVehicle->m_pEntity) {

	cmp	DWORD PTR ?pVehicle@@3PAVCVehicle@@A, 0	; pVehicle
	je	$LN10@GameBuildS
	mov	eax, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	cmp	DWORD PTR [eax+4], 0
	je	$LN10@GameBuildS

; 904  : 		VECTOR vecTurn = { 0.0f, 0.0f, 0.03f };

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _vecTurn$9[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _vecTurn$9[ebp+4], xmm0
	movss	xmm0, DWORD PTR __real@3cf5c28f
	movss	DWORD PTR _vecTurn$9[ebp+8], xmm0

; 905  : 		VECTOR vecMove = { 0.0f, 0.0f, 0.0f };

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _vecMove$8[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _vecMove$8[ebp+4], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _vecMove$8[ebp+8], xmm0

; 906  : 		pVehicle->SetTurnSpeedVector(vecTurn);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vecTurn$9[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vecTurn$9[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vecTurn$9[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	call	?SetTurnSpeedVector@CEntity@@QAEXU_VECTOR@@@Z ; CEntity::SetTurnSpeedVector

; 907  : 		pVehicle->SetMoveSpeedVector(vecMove);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vecMove$8[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vecMove$8[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vecMove$8[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	call	?SetMoveSpeedVector@CEntity@@QAEXU_VECTOR@@@Z ; CEntity::SetMoveSpeedVector

; 908  : 
; 909  : 		MATRIX4X4 mat;
; 910  : 		pVehicle->GetMatrix(&mat);

	lea	eax, DWORD PTR _mat$7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	call	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z ; CEntity::GetMatrix

; 911  : 		mat.pos.X = 5.0f;

	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _mat$7[ebp+48], xmm0

; 912  : 		mat.pos.Y = 5.0f;

	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _mat$7[ebp+52], xmm0

; 913  : 		mat.pos.Z = 500.0f;

	movss	xmm0, DWORD PTR __real@43fa0000
	movss	DWORD PTR _mat$7[ebp+56], xmm0

; 914  : 		pVehicle->SetMatrix(mat);

	sub	esp, 64					; 00000040H
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR _mat$7[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	call	?SetMatrix@CEntity@@QAEXU_MATRIX4X4@@@Z	; CEntity::SetMatrix
$LN10@GameBuildS:

; 915  : 	}
; 916  : 
; 917  : 	if(pControls->wKeys1[14] && !pControls->wKeys2[14]) {

	mov	eax, 2
	imul	ecx, eax, 14
	mov	edx, DWORD PTR ?pControls@@3PAU_GTA_CONTROLSET@@A ; pControls
	movzx	eax, WORD PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN9@GameBuildS
	mov	eax, 2
	imul	ecx, eax, 14
	mov	edx, DWORD PTR ?pControls@@3PAU_GTA_CONTROLSET@@A ; pControls
	movzx	eax, WORD PTR [edx+ecx+48]
	test	eax, eax
	jne	SHORT $LN9@GameBuildS

; 918  : 		iSelection--;

	mov	eax, DWORD PTR ?iSelection@@3HA		; iSelection
	sub	eax, 1
	mov	DWORD PTR ?iSelection@@3HA, eax		; iSelection

; 919  : 		if(iSelection==538) iSelection-=2; // trains

	cmp	DWORD PTR ?iSelection@@3HA, 538		; iSelection, 0000021aH
	jne	SHORT $LN8@GameBuildS
	mov	eax, DWORD PTR ?iSelection@@3HA		; iSelection
	sub	eax, 2
	mov	DWORD PTR ?iSelection@@3HA, eax		; iSelection
$LN8@GameBuildS:

; 920  : 		if(iSelection==399) iSelection=611;

	cmp	DWORD PTR ?iSelection@@3HA, 399		; iSelection, 0000018fH
	jne	SHORT $LN7@GameBuildS
	mov	DWORD PTR ?iSelection@@3HA, 611		; iSelection, 00000263H
$LN7@GameBuildS:

; 921  : 		GameBuildRecreateVehicle();

	call	?GameBuildRecreateVehicle@@YAXXZ	; GameBuildRecreateVehicle

; 922  : 		return;

	jmp	$LN12@GameBuildS
$LN9@GameBuildS:

; 923  : 	}
; 924  : 	
; 925  : 	if(pControls->wKeys1[16] && !pControls->wKeys2[16]) {

	mov	eax, 2
	shl	eax, 4
	mov	ecx, DWORD PTR ?pControls@@3PAU_GTA_CONTROLSET@@A ; pControls
	movzx	edx, WORD PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN6@GameBuildS
	mov	eax, 2
	shl	eax, 4
	mov	ecx, DWORD PTR ?pControls@@3PAU_GTA_CONTROLSET@@A ; pControls
	movzx	edx, WORD PTR [ecx+eax+48]
	test	edx, edx
	jne	SHORT $LN6@GameBuildS

; 926  : 		iSelection++;

	mov	eax, DWORD PTR ?iSelection@@3HA		; iSelection
	add	eax, 1
	mov	DWORD PTR ?iSelection@@3HA, eax		; iSelection

; 927  : 		if(iSelection==537) iSelection+=2;  // trains

	cmp	DWORD PTR ?iSelection@@3HA, 537		; iSelection, 00000219H
	jne	SHORT $LN5@GameBuildS
	mov	eax, DWORD PTR ?iSelection@@3HA		; iSelection
	add	eax, 2
	mov	DWORD PTR ?iSelection@@3HA, eax		; iSelection
$LN5@GameBuildS:

; 928  : 		if(iSelection==612) iSelection=400;

	cmp	DWORD PTR ?iSelection@@3HA, 612		; iSelection, 00000264H
	jne	SHORT $LN4@GameBuildS
	mov	DWORD PTR ?iSelection@@3HA, 400		; iSelection, 00000190H
$LN4@GameBuildS:

; 929  : 		GameBuildRecreateVehicle();

	call	?GameBuildRecreateVehicle@@YAXXZ	; GameBuildRecreateVehicle

; 930  : 		return;

	jmp	$LN12@GameBuildS
$LN6@GameBuildS:

; 931  : 	}
; 932  : 		
; 933  : 	if(pControls->wKeys1[15] && !pControls->wKeys2[15]) {

	mov	eax, 2
	imul	ecx, eax, 15
	mov	edx, DWORD PTR ?pControls@@3PAU_GTA_CONTROLSET@@A ; pControls
	movzx	eax, WORD PTR [edx+ecx]
	test	eax, eax
	je	$LN3@GameBuildS
	mov	eax, 2
	imul	ecx, eax, 15
	mov	edx, DWORD PTR ?pControls@@3PAU_GTA_CONTROLSET@@A ; pControls
	movzx	eax, WORD PTR [edx+ecx+48]
	test	eax, eax
	jne	$LN3@GameBuildS

; 934  : 
; 935  : 		delete pVehicle;

	mov	eax, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN14@GameBuildS
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv201[ebp], eax
	jmp	SHORT $LN15@GameBuildS
$LN14@GameBuildS:
	mov	DWORD PTR tv201[ebp], 0
$LN15@GameBuildS:

; 936  : 		pVehicle = NULL;

	mov	DWORD PTR ?pVehicle@@3PAVCVehicle@@A, 0	; pVehicle

; 937  : 
; 938  : 		pCam->SetBehindPlayer();

	mov	ecx, DWORD PTR ?pCam@@3PAVCCamera@@A	; pCam
	call	?SetBehindPlayer@CCamera@@QAEXXZ	; CCamera::SetBehindPlayer

; 939  : 		GameDebugEntity(0,0,0);

	push	0
	push	0
	push	0
	call	?GameDebugEntity@@YAXKKH@Z		; GameDebugEntity
	add	esp, 12					; 0000000cH

; 940  : 
; 941  : 		// place this vehicle near the player.
; 942  : 		CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$6[ebp], eax

; 943  : 
; 944  : 		if(pPlayer) 

	cmp	DWORD PTR _pPlayer$6[ebp], 0
	je	$LN1@GameBuildS

; 945  : 		{
; 946  : 			MATRIX4X4 matPlayer;
; 947  : 			pPlayer->GetMatrix(&matPlayer);

	lea	eax, DWORD PTR _matPlayer$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$6[ebp]
	call	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z ; CEntity::GetMatrix

; 948  : 			CHAR blank[9] = "";

	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _blank$4[ebp], al
	xor	eax, eax
	mov	DWORD PTR _blank$4[ebp+1], eax
	mov	DWORD PTR _blank$4[ebp+5], eax

; 949  : 			sprintf(blank, "TYPE_%d", iSelection);

	mov	eax, DWORD PTR ?iSelection@@3HA		; iSelection
	push	eax
	push	OFFSET ??_C@_07MNBIJLFM@TYPE_?$CFd?$AA@
	lea	ecx, DWORD PTR _blank$4[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 950  : 			CVehicle *pTestVehicle = pGame->NewVehicle(iSelection,
; 951  : 				(matPlayer.pos.X - 5.0f), (matPlayer.pos.Y - 5.0f),
; 952  : 				matPlayer.pos.Z+1.0f,0.0f,(PCHAR)blank);

	lea	eax, DWORD PTR _blank$4[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _matPlayer$5[ebp+56]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _matPlayer$5[ebp+52]
	subss	xmm0, DWORD PTR __real@40a00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _matPlayer$5[ebp+48]
	subss	xmm0, DWORD PTR __real@40a00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?iSelection@@3HA		; iSelection
	push	ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z ; CGame::NewVehicle
	mov	DWORD PTR _pTestVehicle$3[ebp], eax

; 953  : 
; 954  : 			pTestVehicle->Add();

	mov	eax, DWORD PTR _pTestVehicle$3[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pTestVehicle$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 955  : 			pPlayer->PutDirectlyInVehicle(pTestVehicle->m_dwGTAId,0);

	push	0
	mov	eax, DWORD PTR _pTestVehicle$3[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _pPlayer$6[ebp]
	call	?PutDirectlyInVehicle@CPlayerPed@@QAEXHH@Z ; CPlayerPed::PutDirectlyInVehicle

; 956  : 			if(iSelection == 464) {

	cmp	DWORD PTR ?iSelection@@3HA, 464		; iSelection, 000001d0H
	jne	SHORT $LN1@GameBuildS

; 957  : 				pPlayer->Remove();

	mov	eax, DWORD PTR _pPlayer$6[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pPlayer$6[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@GameBuildS:

; 958  : 			}
; 959  : 		}
; 960  : 
; 961  : 		pCam->Restore();

	mov	ecx, DWORD PTR ?pCam@@3PAVCCamera@@A	; pCam
	call	?Restore@CCamera@@QAEXXZ		; CCamera::Restore

; 962  : 		pCam->SetBehindPlayer();	

	mov	ecx, DWORD PTR ?pCam@@3PAVCCamera@@A	; pCam
	call	?SetBehindPlayer@CCamera@@QAEXXZ	; CCamera::SetBehindPlayer

; 963  : 		pGame->FindPlayerPed()->TogglePlayerControllable(1);

	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	ecx, eax
	call	?TogglePlayerControllable@CPlayerPed@@QAEXH@Z ; CPlayerPed::TogglePlayerControllable

; 964  : 		pGame->DisplayHud(TRUE);

	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 965  : 		bSelVehicleInit=FALSE;

	mov	DWORD PTR ?bSelVehicleInit@@3HA, 0	; bSelVehicleInit
$LN3@GameBuildS:
$LN12@GameBuildS:

; 966  : 
; 967  : 		return;
; 968  : 	}
; 969  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@GameBuildS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 452				; 000001c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN22@GameBuildS:
	DD	5
	DD	$LN21@GameBuildS
$LN21@GameBuildS:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN16@GameBuildS
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN17@GameBuildS
	DD	-112					; ffffff90H
	DD	64					; 00000040H
	DD	$LN18@GameBuildS
	DD	-196					; ffffff3cH
	DD	64					; 00000040H
	DD	$LN19@GameBuildS
	DD	-216					; ffffff28H
	DD	9
	DD	$LN20@GameBuildS
$LN20@GameBuildS:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN19@GameBuildS:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN18@GameBuildS:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN17@GameBuildS:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN16@GameBuildS:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	84					; 00000054H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
?GameBuildSelectVehicle@@YAXXZ ENDP			; GameBuildSelectVehicle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameBuildRecreateVehicle@@YAXXZ
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_blank$ = -8						; size = 2
?GameBuildRecreateVehicle@@YAXXZ PROC			; GameBuildRecreateVehicle, COMDAT

; 880  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 881  : 	if(pVehicle) delete pVehicle;

	cmp	DWORD PTR ?pVehicle@@3PAVCVehicle@@A, 0	; pVehicle
	je	SHORT $LN5@GameBuildR
	mov	eax, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@GameBuildR
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@GameBuildR
$LN4@GameBuildR:
	mov	DWORD PTR tv75[ebp], 0
$LN5@GameBuildR:

; 882  : 
; 883  : 	CHAR blank[2] = "";

	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _blank$[ebp], al
	xor	eax, eax
	mov	BYTE PTR _blank$[ebp+1], al

; 884  : 	pVehicle = pGame->NewVehicle(iSelection,5.0f,5.0f,500.0f,0.0f,(PCHAR)blank);

	lea	eax, DWORD PTR _blank$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43fa0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?iSelection@@3HA		; iSelection
	push	ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z ; CGame::NewVehicle
	mov	DWORD PTR ?pVehicle@@3PAVCVehicle@@A, eax ; pVehicle

; 885  : 	pVehicle->Add();

	mov	eax, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR ?pVehicle@@3PAVCVehicle@@A ; pVehicle
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 886  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GameBuildR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@GameBuildR:
	DD	1
	DD	$LN7@GameBuildR
$LN7@GameBuildR:
	DD	-8					; fffffff8H
	DD	2
	DD	$LN6@GameBuildR
$LN6@GameBuildR:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
?GameBuildRecreateVehicle@@YAXXZ ENDP			; GameBuildRecreateVehicle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDoVehicleSyncTest@@YAXXZ
_TEXT	SEGMENT
?GameDoVehicleSyncTest@@YAXXZ PROC			; GameDoVehicleSyncTest, COMDAT

; 798  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 799  : 	/*
; 800  : 	if(!sync_inited) {
; 801  : 
; 802  : 		pv[0] = pNetGame->GetVehiclePool()->GetAt(1);
; 803  : 		pv[1] = pNetGame->GetVehiclePool()->GetAt(2);
; 804  : 		pActor = pGame->NewPlayer(3,190,1655.105f,-1044.467f,23.61058f,0.0f);
; 805  : 
; 806  : 		pActor->PutDirectlyInVehicle(pv[1]->m_dwGTAId);
; 807  : 		pGame->FindPlayerPed()->PutDirectlyInVehicle(pv[0]->m_dwGTAId);
; 808  : 
; 809  : 		//ScriptCommand(&create_actor,24,0,1655.105f,-1044.467f,23.61058f,&iActor);
; 810  : 		//ScriptCommand(&put_actor_in_car,iActor,pv[1]->m_dwGTAId);
; 811  : 		sync_inited++;
; 812  : 		return;
; 813  : 	}
; 814  : 
; 815  : 	if(bDebugUpdate) {
; 816  : 
; 817  : 		MATRIX4X4 matV;
; 818  : 
; 819  : 		pv[1]->GetMatrix(&matV);
; 820  : 
; 821  : 		matV.right.X = DebugSync.vecRoll.X;
; 822  : 		matV.right.Y = DebugSync.vecRoll.Y;
; 823  : 		matV.right.Z = DebugSync.vecRoll.Z;
; 824  : 		matV.up.X = DebugSync.vecDirection.X;
; 825  : 		matV.up.Y = DebugSync.vecDirection.Y;
; 826  : 		matV.up.Z = DebugSync.vecDirection.Z;
; 827  : 		matV.pos.X = DebugSync.vecPos.X;
; 828  : 		matV.pos.Y = DebugSync.vecPos.Y;
; 829  : 		matV.pos.Z = DebugSync.vecPos.Z;
; 830  : 
; 831  : 		matV.pos.X -= 5.0f;
; 832  : 		matV.pos.Y -= 5.0f;
; 833  : 
; 834  : 		pv[1]->m_pVehicle->byteFlags = pv[0]->m_pVehicle->byteFlags;
; 835  : 
; 836  : 		pv[1]->SetMatrixAndSpeedForUpdate(matV,DebugSync.vecMoveSpeed);
; 837  : 		pActor->SetKeys(DebugSync.wKeys,DebugSync.lrAnalog,DebugSync.udAnalog);
; 838  : 
; 839  : 		bDebugUpdate = FALSE;
; 840  : 	}
; 841  : 
; 842  : 	/*
; 843  : 	pv[1]->m_pVehicle->steer_angle1=pv[0]->m_pVehicle->steer_angle1;
; 844  : 	pv[1]->m_pVehicle->accelerator_pedal=pv[0]->m_pVehicle->accelerator_pedal;
; 845  : 	pv[1]->m_pVehicle->brake_pedal=pv[0]->m_pVehicle->brake_pedal;
; 846  : 	pv[1]->m_pVehicle->flags=pv[0]->m_pVehicle->flags;*/
; 847  : 
; 848  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GameDoVehicleSyncTest@@YAXXZ ENDP			; GameDoVehicleSyncTest
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDrawMemoryInfoAscii@@YAXXZ
_TEXT	SEGMENT
_y$ = -1064						; size = 4
_x$ = -1052						; size = 4
_memory_data$ = -1040					; size = 512
_line_buffer$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
?GameDrawMemoryInfoAscii@@YAXXZ PROC			; GameDrawMemoryInfoAscii, COMDAT

; 743  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1260				; 000004ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1260]
	mov	ecx, 315				; 0000013bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 744  : 
; 745  : 	CHAR line_buffer[512];
; 746  : 	BYTE memory_data[512];
; 747  : 	int x=0,y=0;

	mov	DWORD PTR _x$[ebp], 0
	mov	DWORD PTR _y$[ebp], 0

; 748  : 	
; 749  : 	// init position for drawing
; 750  : 	debug_draw_top = 20;

	mov	DWORD PTR ?debug_draw_top@@3HA, 20	; debug_draw_top, 00000014H

; 751  : 
; 752  : 	sprintf(line_buffer,"Displaying 512 Bytes From Address 0x%X + %u",dwDebugEntity1,dwDebugEntity2);

	mov	eax, DWORD PTR ?dwDebugEntity2@@3KA	; dwDebugEntity2
	push	eax
	mov	ecx, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	push	ecx
	push	OFFSET ??_C@_0CM@DPKFGDOB@Displaying?5512?5Bytes?5From?5Addres@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 753  : 	GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(255,255,10,10));

	push	-62966					; ffff0a0aH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 754  : 
; 755  : 	if(IsBadReadPtr((PVOID)(dwDebugEntity1+dwDebugEntity2),512)) return;

	mov	esi, esp
	push	512					; 00000200H
	mov	eax, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	add	eax, DWORD PTR ?dwDebugEntity2@@3KA	; dwDebugEntity2
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@GameDrawMe
	jmp	$LN4@GameDrawMe
$LN3@GameDrawMe:

; 756  : 	memcpy(memory_data,(PVOID)(dwDebugEntity1+dwDebugEntity2),512);

	push	512					; 00000200H
	mov	eax, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	add	eax, DWORD PTR ?dwDebugEntity2@@3KA	; dwDebugEntity2
	push	eax
	lea	ecx, DWORD PTR _memory_data$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@GameDrawMe:

; 757  : 
; 758  : 	while(x!=32)

	cmp	DWORD PTR _x$[ebp], 32			; 00000020H
	je	$LN4@GameDrawMe

; 759  : 	{
; 760  : 		sprintf(line_buffer,"%.3u: %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c",
; 761  : 			((x*16)+dwDebugEntity2),
; 762  : 			memory_data[y],
; 763  : 			memory_data[y+1],
; 764  : 			memory_data[y+2],
; 765  : 			memory_data[y+3],
; 766  : 			memory_data[y+4],
; 767  : 			memory_data[y+5],
; 768  : 			memory_data[y+6],
; 769  : 			memory_data[y+7],
; 770  : 			memory_data[y+8],
; 771  : 			memory_data[y+9],
; 772  : 			memory_data[y+10],
; 773  : 			memory_data[y+11],
; 774  : 			memory_data[y+12],
; 775  : 			memory_data[y+13],
; 776  : 			memory_data[y+14],
; 777  : 			memory_data[y+15]	
; 778  : 			);

	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+15]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+14]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+13]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+12]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+11]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+10]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+9]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+8]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+7]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+6]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+5]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+4]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+3]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+2]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+1]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR ?dwDebugEntity2@@3KA	; dwDebugEntity2
	push	edx
	push	OFFSET ??_C@_0DG@BDGMIIPL@?$CF?43u?3?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc?5?$CFc@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 76					; 0000004cH

; 779  : 
; 780  : 		y+=16;

	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _y$[ebp], eax

; 781  : 
; 782  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 783  : 
; 784  : 		x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 785  : 	}

	jmp	$LN2@GameDrawMe
$LN4@GameDrawMe:

; 786  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GameDrawMe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1260				; 000004ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@GameDrawMe:
	DD	2
	DD	$LN8@GameDrawMe
$LN8@GameDrawMe:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN6@GameDrawMe
	DD	-1040					; fffffbf0H
	DD	512					; 00000200H
	DD	$LN7@GameDrawMe
$LN7@GameDrawMe:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN6@GameDrawMe:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?GameDrawMemoryInfoAscii@@YAXXZ ENDP			; GameDrawMemoryInfoAscii
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDrawMemoryInfo@@YAXXZ
_TEXT	SEGMENT
_y$ = -1064						; size = 4
_x$ = -1052						; size = 4
_memory_data$ = -1040					; size = 512
_line_buffer$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
?GameDrawMemoryInfo@@YAXXZ PROC				; GameDrawMemoryInfo, COMDAT

; 695  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1260				; 000004ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1260]
	mov	ecx, 315				; 0000013bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 696  : 
; 697  : 	CHAR line_buffer[512];
; 698  : 	BYTE memory_data[512];
; 699  : 	int x=0,y=0;

	mov	DWORD PTR _x$[ebp], 0
	mov	DWORD PTR _y$[ebp], 0

; 700  : 	
; 701  : 	// init position for drawing
; 702  : 	debug_draw_top = 20;

	mov	DWORD PTR ?debug_draw_top@@3HA, 20	; debug_draw_top, 00000014H

; 703  : 
; 704  : 	sprintf(line_buffer,"Displaying 512 Bytes From Address 0x%X + %u",dwDebugEntity1,dwDebugEntity2);

	mov	eax, DWORD PTR ?dwDebugEntity2@@3KA	; dwDebugEntity2
	push	eax
	mov	ecx, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	push	ecx
	push	OFFSET ??_C@_0CM@DPKFGDOB@Displaying?5512?5Bytes?5From?5Addres@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 705  : 	GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(255,255,10,10));

	push	-62966					; ffff0a0aH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 706  : 
; 707  : 	if(IsBadReadPtr((PVOID)(dwDebugEntity1+dwDebugEntity2),512)) return;

	mov	esi, esp
	push	512					; 00000200H
	mov	eax, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	add	eax, DWORD PTR ?dwDebugEntity2@@3KA	; dwDebugEntity2
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@GameDrawMe
	jmp	$LN4@GameDrawMe
$LN3@GameDrawMe:

; 708  : 	memcpy(memory_data,(PVOID)(dwDebugEntity1+dwDebugEntity2),512);

	push	512					; 00000200H
	mov	eax, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	add	eax, DWORD PTR ?dwDebugEntity2@@3KA	; dwDebugEntity2
	push	eax
	lea	ecx, DWORD PTR _memory_data$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@GameDrawMe:

; 709  : 
; 710  : 	while(x!=32)

	cmp	DWORD PTR _x$[ebp], 32			; 00000020H
	je	$LN4@GameDrawMe

; 711  : 	{
; 712  : 		sprintf(line_buffer,"%.3u: %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X",
; 713  : 			((x*16)+dwDebugEntity2),
; 714  : 			memory_data[y],
; 715  : 			memory_data[y+1],
; 716  : 			memory_data[y+2],
; 717  : 			memory_data[y+3],
; 718  : 			memory_data[y+4],
; 719  : 			memory_data[y+5],
; 720  : 			memory_data[y+6],
; 721  : 			memory_data[y+7],
; 722  : 			memory_data[y+8],
; 723  : 			memory_data[y+9],
; 724  : 			memory_data[y+10],
; 725  : 			memory_data[y+11],
; 726  : 			memory_data[y+12],
; 727  : 			memory_data[y+13],
; 728  : 			memory_data[y+14],
; 729  : 			memory_data[y+15]	
; 730  : 			);

	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+15]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+14]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+13]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+12]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+11]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+10]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+9]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+8]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+7]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+6]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+5]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+4]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax+3]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	movzx	eax, BYTE PTR _memory_data$[ebp+edx+2]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	movzx	edx, BYTE PTR _memory_data$[ebp+ecx+1]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movzx	ecx, BYTE PTR _memory_data$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR ?dwDebugEntity2@@3KA	; dwDebugEntity2
	push	edx
	push	OFFSET ??_C@_0FG@LPFNPBJC@?$CF?43u?3?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF?42X?5?$CF@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 76					; 0000004cH

; 731  : 
; 732  : 		y+=16;

	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _y$[ebp], eax

; 733  : 
; 734  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 735  : 
; 736  : 		x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 737  : 	}

	jmp	$LN2@GameDrawMe
$LN4@GameDrawMe:

; 738  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GameDrawMe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1260				; 000004ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@GameDrawMe:
	DD	2
	DD	$LN8@GameDrawMe
$LN8@GameDrawMe:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN6@GameDrawMe
	DD	-1040					; fffffbf0H
	DD	512					; 00000200H
	DD	$LN7@GameDrawMe
$LN7@GameDrawMe:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN6@GameDrawMe:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?GameDrawMemoryInfo@@YAXXZ ENDP				; GameDrawMemoryInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugDrawVehicleInfo@@YAXXZ
_TEXT	SEGMENT
tv535 = -1080						; size = 4
_byte168$1 = -877					; size = 1
_byte167$2 = -865					; size = 1
_byte166$3 = -853					; size = 1
_byte165$4 = -841					; size = 1
_byte164$5 = -829					; size = 1
_s$6 = -820						; size = 256
_fZRot1$7 = -556					; size = 4
_pVehicle$8 = -544					; size = 4
_vehicle$ = -532					; size = 4
_line_buffer$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
?GameDebugDrawVehicleInfo@@YAXXZ PROC			; GameDebugDrawVehicleInfo, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1080				; 00000438H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1080]
	mov	ecx, 270				; 0000010eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 498  : 	CHAR line_buffer[512];
; 499  : 	VEHICLE_TYPE *vehicle=0;

	mov	DWORD PTR _vehicle$[ebp], 0

; 500  : 	
; 501  : 	// init position for drawing
; 502  : 	debug_draw_top = 50;

	mov	DWORD PTR ?debug_draw_top@@3HA, 50	; debug_draw_top, 00000032H

; 503  : 
; 504  : 	if(iGameDebugType != 3)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 3	; iGameDebugType
	je	SHORT $LN4@GameDebugD

; 505  : 	{
; 506  : 		CVehicle *pVehicle = pNetGame->GetVehiclePool()->GetAt((BYTE)dwDebugEntity1);

	movzx	ax, BYTE PTR ?dwDebugEntity1@@3KA
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	call	?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ; CNetGame::GetVehiclePool
	mov	ecx, eax
	call	?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z ; CVehiclePool::GetAt
	mov	DWORD PTR _pVehicle$8[ebp], eax

; 507  : 		if(pVehicle) {

	cmp	DWORD PTR _pVehicle$8[ebp], 0
	je	SHORT $LN3@GameDebugD

; 508  : 			vehicle = pVehicle->m_pVehicle;

	mov	eax, DWORD PTR _pVehicle$8[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _vehicle$[ebp], ecx
$LN3@GameDebugD:

; 509  : 		}
; 510  : 	}
; 511  : 	else

	jmp	SHORT $LN2@GameDebugD
$LN4@GameDebugD:

; 512  : 	{
; 513  : 		// get player's vehicle
; 514  : 		vehicle = (VEHICLE_TYPE *)GamePool_FindPlayerPed()->pVehicle;

	call	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ ; GamePool_FindPlayerPed
	mov	eax, DWORD PTR [eax+1420]
	mov	DWORD PTR _vehicle$[ebp], eax
$LN2@GameDebugD:

; 515  : 	} 
; 516  : 
; 517  : 	if(vehicle)

	cmp	DWORD PTR _vehicle$[ebp], 0
	je	$LN1@GameDebugD

; 518  : 	{
; 519  : 		sprintf(line_buffer,"Vehicle %u",dwDebugEntity1);

	mov	eax, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	push	eax
	push	OFFSET ??_C@_0L@EDOEMJIO@Vehicle?5?$CFu?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 520  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(255,255,90,90));

	push	-42406					; ffff5a5aH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 521  : 		
; 522  : 		sprintf(line_buffer,"addr: 0x%X",vehicle);

	mov	eax, DWORD PTR _vehicle$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@HKCFHJCM@addr?3?50x?$CFX?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 523  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 524  : 
; 525  : 		sprintf(line_buffer,"vtbl: 0x%X",vehicle->entity.vtable);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0L@MAGNHDBP@vtbl?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 526  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 527  : 
; 528  : 		sprintf(line_buffer,"Roll: %f %f %f",
; 529  : 			vehicle->entity.mat->right.X,vehicle->entity.mat->right.Y,vehicle->entity.mat->right.Z);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cvtss2sd xmm0, DWORD PTR [ecx+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _vehicle$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cvtss2sd xmm0, DWORD PTR [eax+4]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _vehicle$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cvtss2sd xmm0, DWORD PTR [edx]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0P@BFKMGGDA@Roll?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 530  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 531  : 		
; 532  : 		sprintf(line_buffer,"Direction: %f %f %f",
; 533  : 			vehicle->entity.mat->up.X,vehicle->entity.mat->up.Y,vehicle->entity.mat->up.Z);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cvtss2sd xmm0, DWORD PTR [ecx+24]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _vehicle$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cvtss2sd xmm0, DWORD PTR [eax+20]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _vehicle$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cvtss2sd xmm0, DWORD PTR [edx+16]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BE@FLACJMED@Direction?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 534  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 535  : 
; 536  : 		sprintf(line_buffer,"Scale: %f %f %f",
; 537  : 			vehicle->entity.mat->at.X,vehicle->entity.mat->at.Y,vehicle->entity.mat->at.Z);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cvtss2sd xmm0, DWORD PTR [ecx+40]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _vehicle$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cvtss2sd xmm0, DWORD PTR [eax+36]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _vehicle$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cvtss2sd xmm0, DWORD PTR [edx+32]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BA@OMDLEHDM@Scale?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 538  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 539  : 		
; 540  : 		sprintf(line_buffer,"Position: %f %f %f",
; 541  : 			vehicle->entity.mat->pos.X,vehicle->entity.mat->pos.Y,vehicle->entity.mat->pos.Z);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cvtss2sd xmm0, DWORD PTR [ecx+56]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _vehicle$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cvtss2sd xmm0, DWORD PTR [eax+52]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _vehicle$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cvtss2sd xmm0, DWORD PTR [edx+48]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BD@IHJBFCIH@Position?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 542  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 543  : 		
; 544  : 		float fZRot1 = atan2(-vehicle->entity.mat->up.X, vehicle->entity.mat->up.Y) * 180.0f/3.1415926536f;

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+20]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _vehicle$[ebp]
	mov	eax, DWORD PTR [edx+20]
	movss	xmm0, DWORD PTR [eax+16]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8
	fstp	DWORD PTR tv535[ebp]
	movss	xmm0, DWORD PTR tv535[ebp]
	mulss	xmm0, DWORD PTR __real@43340000
	divss	xmm0, DWORD PTR __real@40490fdb
	movss	DWORD PTR _fZRot1$7[ebp], xmm0

; 545  : 		
; 546  : 		sprintf(line_buffer,"Z Rot: %f degrees", fZRot1);

	cvtss2sd xmm0, DWORD PTR _fZRot1$7[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BC@ELIOFMOJ@Z?5Rot?3?5?$CFf?5degrees?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 547  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 548  : 
; 549  : 		sprintf(line_buffer,"Move: %f %f %f",
; 550  : 			vehicle->entity.vecMoveSpeed.X,vehicle->entity.vecMoveSpeed.Y,vehicle->entity.vecMoveSpeed.Z);

	mov	eax, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+76]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+72]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+68]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0P@BGLHMAIP@Move?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 551  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 552  : 
; 553  : 		sprintf(line_buffer,"Turn: %f %f %f",
; 554  : 			vehicle->entity.vecTurnSpeed.X,vehicle->entity.vecTurnSpeed.Y,vehicle->entity.vecTurnSpeed.Z);

	mov	eax, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+88]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+84]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+80]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0P@CBAJGAMA@Turn?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 555  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 556  : 		
; 557  : 		sprintf(line_buffer,"Control Flags: 0x%X",vehicle->entity.nControlFlags);

	mov	eax, DWORD PTR _vehicle$[ebp]
	movzx	ecx, BYTE PTR [eax+54]
	push	ecx
	push	OFFSET ??_C@_0BE@BJINGMPL@Control?5Flags?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 558  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 559  : 
; 560  : 		sprintf(line_buffer,"Model Index: %u",vehicle->entity.nModelIndex);

	mov	eax, DWORD PTR _vehicle$[ebp]
	movzx	ecx, WORD PTR [eax+34]
	push	ecx
	push	OFFSET ??_C@_0BA@LEJCHDAE@Model?5Index?3?5?$CFu?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 561  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 562  : 		
; 563  : 		sprintf(line_buffer,"Renderware: 0x%X",vehicle->entity.pdwRenderWare);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	OFFSET ??_C@_0BB@ONCBOICF@Renderware?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 564  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 565  : 
; 566  : 		sprintf(line_buffer,"dwUnkModelRel: 0x%X",vehicle->entity.dwUnkModelRel);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	push	ecx
	push	OFFSET ??_C@_0BE@CONFDHBF@dwUnkModelRel?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 567  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 568  : 
; 569  : 		char s[256];
; 570  : 
; 571  : 		_itoa(vehicle->entity.byteImmunities,s,2);

	push	2
	lea	eax, DWORD PTR _s$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _vehicle$[ebp]
	movzx	edx, BYTE PTR [ecx+66]
	push	edx
	call	__itoa
	add	esp, 12					; 0000000cH

; 572  : 		sprintf(line_buffer,"Immunities: %s",s);

	lea	eax, DWORD PTR _s$6[ebp]
	push	eax
	push	OFFSET ??_C@_0P@DCAACFHL@Immunities?3?5?$CFs?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 573  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 574  : 		
; 575  : 		sprintf(line_buffer,"Driver: 0x%X",vehicle->pDriver);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+1120]
	push	ecx
	push	OFFSET ??_C@_0N@CFHAMOMH@Driver?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 576  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 577  : 		
; 578  : 		sprintf(line_buffer,"Health: %f",vehicle->fHealth);

	mov	eax, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1216]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0L@LJGDGHKC@Health?3?5?$CFf?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 579  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 580  : 			
; 581  : 		sprintf(line_buffer,"mat: 0x%X",vehicle->entity.mat);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	OFFSET ??_C@_09BDJPIOEM@mat?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 582  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 583  : 
; 584  : 		sprintf(line_buffer,"RadioPed: 0x%X 0x%X",*(PDWORD)0xB6B98C,*(PDWORD)0xB6B99C);

	mov	eax, DWORD PTR ds:11975068
	push	eax
	mov	ecx, DWORD PTR ds:11975052
	push	ecx
	push	OFFSET ??_C@_0BE@OMMGIPBO@RadioPed?3?50x?$CFX?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 585  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 586  : 
; 587  : 		sprintf(line_buffer,"Flags: 0x%X",vehicle->byteFlags);

	mov	eax, DWORD PTR _vehicle$[ebp]
	movzx	ecx, BYTE PTR [eax+1064]
	push	ecx
	push	OFFSET ??_C@_0M@GNLDKGKH@Flags?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 588  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 589  : 
; 590  : 		sprintf(line_buffer,"Steer1: %f",vehicle->fSteerAngle1);

	mov	eax, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1172]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0L@PGCKOINJ@Steer1?3?5?$CFf?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 591  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 592  : 		
; 593  : 		sprintf(line_buffer,"Steer2: %f",vehicle->fSteerAngle2);

	mov	eax, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1176]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0L@HALOJKHH@Steer2?3?5?$CFf?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 594  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 595  : 				
; 596  : 		sprintf(line_buffer,"Accel: %f",vehicle->fAcceleratorPedal);

	mov	eax, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1180]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09LGLNAKHO@Accel?3?5?$CFf?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 597  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 598  : 
; 599  : 		sprintf(line_buffer,"Brake: %f",vehicle->fBrakePedal);

	mov	eax, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1184]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09NDCEMKKH@Brake?3?5?$CFf?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 600  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 601  : 		
; 602  : 		sprintf(line_buffer,"Hydra: %u",vehicle->dwHydraThrusters);

	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	ecx, DWORD PTR [eax+2156]
	push	ecx
	push	OFFSET ??_C@_09GILBAEO@Hydra?3?5?$CFu?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 603  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 604  : 
; 605  : 		sprintf(line_buffer,"Color1: %u",vehicle->byteColor1);

	mov	eax, DWORD PTR _vehicle$[ebp]
	movzx	ecx, BYTE PTR [eax+1076]
	push	ecx
	push	OFFSET ??_C@_0L@NLBOLNAM@Color1?3?5?$CFu?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 606  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 607  : 		
; 608  : 		sprintf(line_buffer,"Color2: %u",vehicle->byteColor2);

	mov	eax, DWORD PTR _vehicle$[ebp]
	movzx	ecx, BYTE PTR [eax+1077]
	push	ecx
	push	OFFSET ??_C@_0L@FNIKMPKC@Color2?3?5?$CFu?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 609  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 610  : 
; 611  : 		sprintf(line_buffer,"Siren On: %u, Horn: %d %d %d %d, Landing Gear: %f", vehicle->bSirenOn, vehicle->byteHorn, 
; 612  : 			vehicle->iHornLevel, vehicle->byteHorn2, vehicle->iSirenLevel, vehicle->fPlaneLandingGear);

	mov	eax, DWORD PTR _vehicle$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+2508]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _vehicle$[ebp]
	mov	edx, DWORD PTR [ecx+692]
	push	edx
	mov	eax, DWORD PTR _vehicle$[ebp]
	movzx	ecx, BYTE PTR [eax+1300]
	push	ecx
	mov	edx, DWORD PTR _vehicle$[ebp]
	mov	eax, DWORD PTR [edx+688]
	push	eax
	mov	ecx, DWORD PTR _vehicle$[ebp]
	movzx	edx, BYTE PTR [ecx+502]
	push	edx
	mov	eax, DWORD PTR _vehicle$[ebp]
	mov	cl, BYTE PTR [eax+1069]
	shr	cl, 7
	and	cl, 1
	movzx	edx, cl
	push	edx
	push	OFFSET ??_C@_0DC@OBCAGOGM@Siren?5On?3?5?$CFu?0?5Horn?3?5?$CFd?5?$CFd?5?$CFd?5?$CFd?0@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 36					; 00000024H

; 613  : 
; 614  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 615  : 
; 616  : 		BYTE byte164;
; 617  : 		BYTE byte165;
; 618  : 		BYTE byte166;
; 619  : 		BYTE byte167;
; 620  : 		BYTE byte168;
; 621  : 
; 622  : 		_asm mov eax, vehicle

	mov	eax, DWORD PTR _vehicle$[ebp]

; 623  : 		_asm lea edx, [eax+312]

	lea	edx, DWORD PTR [eax+312]

; 624  : 
; 625  : 		_asm mov al, [edx+164]

	mov	al, BYTE PTR [edx+164]

; 626  : 		_asm mov byte164, al

	mov	BYTE PTR _byte164$5[ebp], al

; 627  : 		_asm mov al, [edx+165]

	mov	al, BYTE PTR [edx+165]

; 628  : 		_asm mov byte165, al

	mov	BYTE PTR _byte165$4[ebp], al

; 629  : 		_asm mov al, [edx+166]

	mov	al, BYTE PTR [edx+166]

; 630  : 		_asm mov byte166, al

	mov	BYTE PTR _byte166$3[ebp], al

; 631  : 		_asm mov al, [edx+167]

	mov	al, BYTE PTR [edx+167]

; 632  : 		_asm mov byte167, al

	mov	BYTE PTR _byte167$2[ebp], al

; 633  : 		_asm mov al, [edx+168]

	mov	al, BYTE PTR [edx+168]

; 634  : 		_asm mov byte168, al

	mov	BYTE PTR _byte168$1[ebp], al

; 635  : 
; 636  : 			sprintf(line_buffer,"164:%u 165:%u 166:%u 167:%u 168:%u",byte164,byte165,byte166,byte167,byte168);

	movzx	eax, BYTE PTR _byte168$1[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byte167$2[ebp]
	push	ecx
	movzx	edx, BYTE PTR _byte166$3[ebp]
	push	edx
	movzx	eax, BYTE PTR _byte165$4[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byte164$5[ebp]
	push	ecx
	push	OFFSET ??_C@_0CD@MLBGGBJB@164?3?$CFu?5165?3?$CFu?5166?3?$CFu?5167?3?$CFu?5168?3@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 28					; 0000001cH

; 637  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8
$LN1@GameDebugD:

; 638  : 	}	
; 639  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GameDebugD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1080				; 00000438H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@GameDebugD:
	DD	2
	DD	$LN9@GameDebugD
$LN9@GameDebugD:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN7@GameDebugD
	DD	-820					; fffffcccH
	DD	256					; 00000100H
	DD	$LN8@GameDebugD
$LN8@GameDebugD:
	DB	115					; 00000073H
	DB	0
$LN7@GameDebugD:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?GameDebugDrawVehicleInfo@@YAXXZ ENDP			; GameDebugDrawVehicleInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugDrawActorInfo@@YAXXZ
_TEXT	SEGMENT
_ud$1 = -916						; size = 2
_lr$2 = -904						; size = 2
_dwRet$3 = -892						; size = 4
_camMode3$4 = -880					; size = 4
_camMode2$5 = -868					; size = 2
_camExZoom$6 = -856					; size = 4
_Weapon$7 = -844					; size = 4
_dwAnimSet$8 = -832					; size = 4
_fAimZ$9 = -820						; size = 4
_dwPlayerInfo$10 = -808					; size = 4
_s$ = -796						; size = 256
_actor$ = -532						; size = 4
_line_buffer$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
?GameDebugDrawActorInfo@@YAXXZ PROC			; GameDebugDrawActorInfo, COMDAT

; 309  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1112				; 00000458H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1112]
	mov	ecx, 278				; 00000116H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 310  : 
; 311  : 	CHAR line_buffer[512];
; 312  : 	PED_TYPE *actor=0;

	mov	DWORD PTR _actor$[ebp], 0

; 313  : 	CHAR s[256];
; 314  : 
; 315  : 	// init position for drawing
; 316  : 	debug_draw_top = 50;

	mov	DWORD PTR ?debug_draw_top@@3HA, 50	; debug_draw_top, 00000032H

; 317  : 
; 318  : 	if(dwDebugEntity1 != 0) {

	cmp	DWORD PTR ?dwDebugEntity1@@3KA, 0	; dwDebugEntity1
	je	SHORT $LN4@GameDebugD

; 319  : 		actor = GamePool_Ped_GetAt((dwDebugEntity1 << 8) + 1);

	mov	eax, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	shl	eax, 8
	add	eax, 1
	push	eax
	call	?GamePool_Ped_GetAt@@YGPAU_PED_TYPE@@H@Z ; GamePool_Ped_GetAt
	mov	DWORD PTR _actor$[ebp], eax

; 320  : 	}
; 321  : 	else {

	jmp	SHORT $LN3@GameDebugD
$LN4@GameDebugD:

; 322  : 		actor = GamePool_FindPlayerPed();

	call	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ ; GamePool_FindPlayerPed
	mov	DWORD PTR _actor$[ebp], eax
$LN3@GameDebugD:

; 323  : 	}
; 324  : 
; 325  : 	if(actor)

	cmp	DWORD PTR _actor$[ebp], 0
	je	$LN2@GameDebugD

; 326  : 	{		
; 327  : 
; 328  : 		sprintf(line_buffer,"PlayerPed %u (entity offset: 0x%X)",dwDebugEntity1,actor);

	mov	eax, DWORD PTR _actor$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	push	ecx
	push	OFFSET ??_C@_0CD@CHOLJEF@PlayerPed?5?$CFu?5?$CIentity?5offset?3?50x?$CF@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 329  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(255,90,90,255));

	push	-10855681				; ff5a5affH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 330  : 
; 331  : 		sprintf(line_buffer,"vtbl: 0x%X",actor->entity.vtable);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0L@MAGNHDBP@vtbl?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 332  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 333  : 
; 334  : 		sprintf(line_buffer,"0xB6F178=%f 0xB7CB5C=%f 0x863AC0=%f 0x858FE8=%f",
; 335  : 			*(float *)0xB6F178,*(float *)0xB7CB5C,*(float *)0x863AC0,*(float *)0x858FE8);

	cvtss2sd xmm0, DWORD PTR ds:8753128
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR ds:8796864
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR ds:12045148
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR ds:11989368
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0DA@FPDOIGPH@0xB6F178?$DN?$CFf?50xB7CB5C?$DN?$CFf?50x863AC0@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 40					; 00000028H

; 336  :         GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 337  : 
; 338  : 		sprintf(line_buffer,"right: %f %f %f = %f",
; 339  : 			actor->entity.mat->right.X,actor->entity.mat->right.Y,actor->entity.mat->right.Z,
; 340  : 			(actor->entity.mat->right.X * actor->entity.mat->right.X) +
; 341  : 			(actor->entity.mat->right.Y * actor->entity.mat->right.Y) + 
; 342  : 			(actor->entity.mat->right.Z * actor->entity.mat->right.Z));

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	movss	xmm1, DWORD PTR [eax+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cvtss2sd xmm0, DWORD PTR [ecx+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cvtss2sd xmm0, DWORD PTR [eax+4]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cvtss2sd xmm0, DWORD PTR [edx]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BF@BCGNJFNE@right?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 40					; 00000028H

; 343  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 344  : 		
; 345  : 		sprintf(line_buffer,"up: %f %f %f = %f",
; 346  : 			actor->entity.mat->up.X,actor->entity.mat->up.Y,actor->entity.mat->up.Z,
; 347  : 			(actor->entity.mat->up.X * actor->entity.mat->up.X) +
; 348  : 			(actor->entity.mat->up.Y * actor->entity.mat->up.Y) + 
; 349  : 			(actor->entity.mat->up.Z * actor->entity.mat->up.Z));

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	movss	xmm0, DWORD PTR [ecx+16]
	mulss	xmm0, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	movss	xmm1, DWORD PTR [edx+20]
	mulss	xmm1, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	movss	xmm1, DWORD PTR [eax+24]
	mulss	xmm1, DWORD PTR [edx+24]
	addss	xmm0, xmm1
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cvtss2sd xmm0, DWORD PTR [ecx+24]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cvtss2sd xmm0, DWORD PTR [eax+20]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cvtss2sd xmm0, DWORD PTR [edx+16]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BC@KAHBFMAI@up?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 40					; 00000028H

; 350  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 351  : 
; 352  : 		sprintf(line_buffer,"at: %f %f %f",
; 353  : 			actor->entity.mat->at.X,actor->entity.mat->at.Y,actor->entity.mat->at.Z);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cvtss2sd xmm0, DWORD PTR [ecx+40]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cvtss2sd xmm0, DWORD PTR [eax+36]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cvtss2sd xmm0, DWORD PTR [edx+32]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0N@HMGFLGFF@at?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 354  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 355  : 		
; 356  : 		sprintf(line_buffer,"pos: %f %f %f",
; 357  : 			actor->entity.mat->pos.X,actor->entity.mat->pos.Y,actor->entity.mat->pos.Z);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cvtss2sd xmm0, DWORD PTR [ecx+56]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cvtss2sd xmm0, DWORD PTR [eax+52]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cvtss2sd xmm0, DWORD PTR [edx+48]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0O@MGLLNPGK@pos?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 358  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 359  : 			
; 360  : 		sprintf(line_buffer,"Move: %f %f %f",
; 361  : 			actor->entity.vecMoveSpeed.X,actor->entity.vecMoveSpeed.Y,actor->entity.vecMoveSpeed.Z);

	mov	eax, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+76]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+72]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+68]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0P@BGLHMAIP@Move?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 362  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 363  : 
; 364  : 		sprintf(line_buffer,"Turn: %f %f %f",
; 365  : 			actor->entity.vecTurnSpeed.X,actor->entity.vecTurnSpeed.Y,actor->entity.vecTurnSpeed.Z);

	mov	eax, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+88]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+84]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+80]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0P@CBAJGAMA@Turn?3?5?$CFf?5?$CFf?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 32					; 00000020H

; 366  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 367  : 		
; 368  : 		sprintf(line_buffer,"Control Flags: 0x%X",actor->entity.nControlFlags);

	mov	eax, DWORD PTR _actor$[ebp]
	movzx	ecx, BYTE PTR [eax+54]
	push	ecx
	push	OFFSET ??_C@_0BE@BJINGMPL@Control?5Flags?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 369  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 370  : 
; 371  : 		sprintf(line_buffer,"Model Index: %u",actor->entity.nModelIndex);

	mov	eax, DWORD PTR _actor$[ebp]
	movzx	ecx, WORD PTR [eax+34]
	push	ecx
	push	OFFSET ??_C@_0BA@LEJCHDAE@Model?5Index?3?5?$CFu?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 372  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 373  : 
; 374  : 		sprintf(line_buffer,"RW: 0x%X",actor->entity.pdwRenderWare);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	OFFSET ??_C@_08FCEAOEPG@RW?3?50x?$CFX?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 375  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 376  : 		
; 377  : 		_itoa(actor->dwStateFlags,s,2);

	push	2
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+1132]
	push	edx
	call	__itoa
	add	esp, 12					; 0000000cH

; 378  : 		sprintf(line_buffer,"StateFlags: %s",s);

	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	push	OFFSET ??_C@_0P@BGIDMEHG@StateFlags?3?5?$CFs?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 379  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 380  : 		
; 381  : 		_itoa(actor->entity.byteImmunities,s,2);

	push	2
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _actor$[ebp]
	movzx	edx, BYTE PTR [ecx+66]
	push	edx
	call	__itoa
	add	esp, 12					; 0000000cH

; 382  : 		sprintf(line_buffer,"Immunities: %s",s);

	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	push	OFFSET ??_C@_0P@DCAACFHL@Immunities?3?5?$CFs?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 383  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 384  : 
; 385  : 		sprintf(line_buffer,"Vehicle: 0x%X Intelligence: 0x%X",actor->pVehicle,actor->Tasks);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	push	ecx
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+1420]
	push	eax
	push	OFFSET ??_C@_0CB@DFJNDHJC@Vehicle?3?50x?$CFX?5Intelligence?3?50x?$CFX@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 386  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 387  : 
; 388  : 		sprintf(line_buffer,"MovRot1: %f MovRot2: %f ToRot: %f ActRot: %f CamAdj: %f",
; 389  : 			actor->fMoveRot1,actor->fMoveRot2,actor->fRotation1,actor->fRotation2,actor->fRotCamAdjust);

	mov	eax, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1380]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+1372]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+1368]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1364]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+1360]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0DI@DMJLOAJG@MovRot1?3?5?$CFf?5MovRot2?3?5?$CFf?5ToRot?3?5?$CF@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 48					; 00000030H

; 390  :         GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 391  : 
; 392  : 		sprintf(line_buffer,"Health: %f",actor->fHealth);

	mov	eax, DWORD PTR _actor$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1344]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0L@LJGDGHKC@Health?3?5?$CFf?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 393  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 394  : 
; 395  : 		sprintf(line_buffer,"Action: %u",actor->dwAction);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1328]
	push	ecx
	push	OFFSET ??_C@_0L@LDOIEKIB@Action?3?5?$CFu?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 396  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 397  : 
; 398  : 		sprintf(line_buffer,"PedType: %u",actor->dwPedType);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1432]
	push	ecx
	push	OFFSET ??_C@_0M@EOEDCPEO@PedType?3?5?$CFu?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 399  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 400  : 
; 401  : 		sprintf(line_buffer,"PedStatPrim: %d PedStat: %d",
; 402  : 			Game_PedStatPrim(actor->entity.nModelIndex),
; 403  : 			Game_PedStat(actor->entity.nModelIndex));

	mov	eax, DWORD PTR _actor$[ebp]
	movzx	ecx, WORD PTR [eax+34]
	push	ecx
	call	?Game_PedStat@@YAHH@Z			; Game_PedStat
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _actor$[ebp]
	movzx	eax, WORD PTR [edx+34]
	push	eax
	call	?Game_PedStatPrim@@YAHH@Z		; Game_PedStatPrim
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BM@LPCFBHDB@PedStatPrim?3?5?$CFd?5PedStat?3?5?$CFd?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 404  : 
; 405  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 406  : 
; 407  : 		/*
; 408  : 		sprintf(line_buffer,"Crouch: 0x%X Fighting: 0x%X PedTask: 0x%X",
; 409  : 			actor->Tasks->pdwCrouching,
; 410  : 			actor->Tasks->pdwFighting,
; 411  : 			actor->Tasks->pdwPed);
; 412  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));*/
; 413  : 
; 414  : 		DWORD dwPlayerInfo = actor->dwPlayerInfoOffset;

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1152]
	mov	DWORD PTR _dwPlayerInfo$10[ebp], ecx

; 415  : 		float fAimZ;
; 416  : 		DWORD dwAnimSet;
; 417  : 
; 418  : 		_asm mov eax, dwPlayerInfo

	mov	eax, DWORD PTR _dwPlayerInfo$10[ebp]

; 419  : 		_asm mov ebx, [eax+84]

	mov	ebx, DWORD PTR [eax+84]

; 420  : 		_asm mov fAimZ, ebx

	mov	DWORD PTR _fAimZ$9[ebp], ebx

; 421  : 
; 422  : 		_asm mov eax, actor

	mov	eax, DWORD PTR _actor$[ebp]

; 423  : 		_asm mov ebx, [eax+1236]

	mov	ebx, DWORD PTR [eax+1236]

; 424  : 		_asm mov dwAnimSet, ebx

	mov	DWORD PTR _dwAnimSet$8[ebp], ebx

; 425  : 
; 426  : 		if(actor->Tasks->pdwFighting) {

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN1@GameDebugD

; 427  : 			sprintf(line_buffer,"FightVtbl: 0x%X   FightStruct: 0x%X   PlayerInfoAim: %f",
; 428  : 				*actor->Tasks->pdwFighting,actor->Tasks->pdwFighting,fAimZ);

	cvtss2sd xmm0, DWORD PTR _fAimZ$9[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET ??_C@_0DI@DPHJDNNP@FightVtbl?3?50x?$CFX?5?5?5FightStruct?3?50@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 24					; 00000018H

; 429  : 			GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8
$LN1@GameDebugD:

; 430  : 		}
; 431  : 
; 432  : 		WEAPON_SLOT_TYPE * Weapon = &actor->WeaponSlots[actor->byteCurWeaponSlot];

	mov	eax, DWORD PTR _actor$[ebp]
	movzx	ecx, BYTE PTR [eax+1816]
	imul	edx, ecx, 28
	mov	eax, DWORD PTR _actor$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1440]
	mov	DWORD PTR _Weapon$7[ebp], ecx

; 433  : 		sprintf(line_buffer,"Weap: %u Sta: %u Clip: %u Ammo: %u",
; 434  : 			Weapon->dwType, Weapon->dwState, Weapon->dwAmmoInClip, Weapon->dwAmmo );

	mov	eax, DWORD PTR _Weapon$7[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _Weapon$7[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _Weapon$7[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _Weapon$7[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0CD@CIEEFKFD@Weap?3?5?$CFu?5Sta?3?5?$CFu?5Clip?3?5?$CFu?5Ammo?3?5@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 435  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 436  : 
; 437  : 		sprintf(line_buffer,"Target: %u Jetpack: %u AnimSet: %u",actor->pTarget,pGame->FindPlayerPed()->IsInJetpackMode(),dwAnimSet);

	mov	eax, DWORD PTR _dwAnimSet$8[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	ecx, eax
	call	?IsInJetpackMode@CPlayerPed@@QAEHXZ	; CPlayerPed::IsInJetpackMode
	push	eax
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+1948]
	push	edx
	push	OFFSET ??_C@_0CD@OCNLNLON@Target?3?5?$CFu?5Jetpack?3?5?$CFu?5AnimSet?3?5@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 438  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 439  : 
; 440  : 		sprintf(line_buffer,"Cam1: %f %f %f = %f",
; 441  : 			pcaInternalAim->f1x,pcaInternalAim->f1y,pcaInternalAim->f1z,
; 442  : 			(pcaInternalAim->f1x * pcaInternalAim->f1x) +
; 443  : 			(pcaInternalAim->f1y * pcaInternalAim->f1y) + 
; 444  : 			(pcaInternalAim->f1z * pcaInternalAim->f1z)
; 445  : 			);

	mov	eax, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	mov	ecx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	mov	eax, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [eax+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [ecx+4]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [edx]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BE@NJCKDND@Cam1?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 40					; 00000028H

; 446  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 447  : 	
; 448  : 		sprintf(line_buffer,"Cam2: %f %f %f = %f",
; 449  : 			pcaInternalAim->f2x,pcaInternalAim->f2y,pcaInternalAim->f2z,
; 450  : 			(pcaInternalAim->f2x * pcaInternalAim->f2x) +
; 451  : 			(pcaInternalAim->f2y * pcaInternalAim->f2y) + 
; 452  : 			(pcaInternalAim->f2z * pcaInternalAim->f2z)
; 453  : 			);

	mov	eax, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	mov	ecx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm0, DWORD PTR [eax+36]
	mulss	xmm0, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	mov	eax, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm1, DWORD PTR [edx+40]
	mulss	xmm1, DWORD PTR [eax+40]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm1, DWORD PTR [ecx+44]
	mulss	xmm1, DWORD PTR [edx+44]
	addss	xmm0, xmm1
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [eax+44]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [ecx+40]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [edx+36]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BE@FOAIPIFH@Cam2?3?5?$CFf?5?$CFf?5?$CFf?5?$DN?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 40					; 00000028H

; 454  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 455  : 
; 456  : 		sprintf(line_buffer,"Campos: %f %f %f PosFromPlayer: %f %f %f",
; 457  : 			pcaInternalAim->pos1x,
; 458  : 			pcaInternalAim->pos1y,
; 459  : 			pcaInternalAim->pos1z,
; 460  : 			(pcaInternalAim->pos1x - actor->entity.mat->pos.X),
; 461  : 			(pcaInternalAim->pos1y - actor->entity.mat->pos.Y),
; 462  : 			(pcaInternalAim->pos1z - actor->entity.mat->pos.Z));			

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm0, DWORD PTR [edx+20]
	subss	xmm0, DWORD PTR [ecx+56]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm0, DWORD PTR [edx+16]
	subss	xmm0, DWORD PTR [ecx+52]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	movss	xmm0, DWORD PTR [edx+12]
	subss	xmm0, DWORD PTR [ecx+48]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [eax+20]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [ecx+16]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR ?pcaInternalAim@@3PAU_CAMERA_AIM@@A ; pcaInternalAim
	cvtss2sd xmm0, DWORD PTR [edx+12]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0CJ@IPNFIEPH@Campos?3?5?$CFf?5?$CFf?5?$CFf?5PosFromPlayer?3?5@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 56					; 00000038H

; 463  : 
; 464  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 465  : 
; 466  : 		float camExZoom = *(float*)0xB6F250;

	movss	xmm0, DWORD PTR ds:11989584
	movss	DWORD PTR _camExZoom$6[ebp], xmm0

; 467  : 
; 468  : 		sprintf(line_buffer,"Cam Extended Zoom Values: %f", camExZoom);

	cvtss2sd xmm0, DWORD PTR _camExZoom$6[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BN@LLNIMKFJ@Cam?5Extended?5Zoom?5Values?3?5?$CFf?$AA@
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 469  : 			
; 470  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 471  : 
; 472  : 		//DWORD cam = *(PDWORD)0xB6F028;
; 473  : 		WORD camMode2 = *(WORD*)0xB6F858;

	mov	ax, WORD PTR ds:11991128
	mov	WORD PTR _camMode2$5[ebp], ax

; 474  : 		DWORD camMode3 = *(DWORD*)0xB6F1C4;

	mov	eax, DWORD PTR ds:11989444
	mov	DWORD PTR _camMode3$4[ebp], eax

; 475  : 
; 476  : 		sprintf(line_buffer,"CamMode: %u FarClip: %f HudScaleX: %f HudScaleY: %f",*pbyteCameraMode,fFarClip,*(float *)0x859520,*(float *)0x859524);

	cvtss2sd xmm0, DWORD PTR ds:8754468
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR ds:8754464
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR ?fFarClip@@3MA
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?pbyteCameraMode@@3PAEA	; pbyteCameraMode
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0DE@KIHJBFJM@CamMode?3?5?$CFu?5FarClip?3?5?$CFf?5HudScale@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 36					; 00000024H

; 477  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 478  : 
; 479  : 		sprintf(line_buffer,"dwWeaponUsed: %u pdwDamageEnt: 0x%X",actor->dwWeaponUsed,actor->pdwDamageEntity);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1892]
	push	ecx
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+1888]
	push	eax
	push	OFFSET ??_C@_0CE@NDANOPOF@dwWeaponUsed?3?5?$CFu?5pdwDamageEnt?3?50@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 480  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 481  : 
; 482  : 		DWORD dwRet;
; 483  : 		ScriptCommand(&get_active_interior,&dwRet);

	lea	eax, DWORD PTR _dwRet$3[ebp]
	push	eax
	push	OFFSET _get_active_interior
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 484  : 		sprintf(line_buffer,"Current Player Interior: %u",dwRet);

	mov	eax, DWORD PTR _dwRet$3[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@GOACJBGF@Current?5Player?5Interior?3?5?$CFu?$AA@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 485  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 486  : 
; 487  : 		WORD lr,ud;
; 488  : 		pGame->FindPlayerPed()->GetKeys(&lr,&ud);

	lea	eax, DWORD PTR _ud$1[ebp]
	push	eax
	lea	ecx, DWORD PTR _lr$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	ecx, eax
	call	?GetKeys@CPlayerPed@@QAEGPAG0@Z		; CPlayerPed::GetKeys

; 489  : 		sprintf(line_buffer,"Analog1LR: %d Analog1UD: %d",lr,ud);

	movzx	eax, WORD PTR _ud$1[ebp]
	push	eax
	movzx	ecx, WORD PTR _lr$2[ebp]
	push	ecx
	push	OFFSET ??_C@_0BM@IAOFKPP@Analog1LR?3?5?$CFd?5Analog1UD?3?5?$CFd?$AA@
	lea	edx, DWORD PTR _line_buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 490  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(150,255,255,255));

	push	-1761607681				; 96ffffffH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8
$LN2@GameDebugD:

; 491  : 	}
; 492  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@GameDebugD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1112				; 00000458H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@GameDebugD:
	DD	5
	DD	$LN12@GameDebugD
$LN12@GameDebugD:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN7@GameDebugD
	DD	-796					; fffffce4H
	DD	256					; 00000100H
	DD	$LN8@GameDebugD
	DD	-892					; fffffc84H
	DD	4
	DD	$LN9@GameDebugD
	DD	-904					; fffffc78H
	DD	2
	DD	$LN10@GameDebugD
	DD	-916					; fffffc6cH
	DD	2
	DD	$LN11@GameDebugD
$LN11@GameDebugD:
	DB	117					; 00000075H
	DB	100					; 00000064H
	DB	0
$LN10@GameDebugD:
	DB	108					; 0000006cH
	DB	114					; 00000072H
	DB	0
$LN9@GameDebugD:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN8@GameDebugD:
	DB	115					; 00000073H
	DB	0
$LN7@GameDebugD:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?GameDebugDrawActorInfo@@YAXXZ ENDP			; GameDebugDrawActorInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugDrawTaskInfo@@YAXXZ
_TEXT	SEGMENT
tv93 = -744						; size = 4
_line_buffer$ = -544					; size = 512
_player$ = -24						; size = 4
_actor$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?GameDebugDrawTaskInfo@@YAXXZ PROC			; GameDebugDrawTaskInfo, COMDAT

; 255  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 744				; 000002e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-744]
	mov	ecx, 186				; 000000baH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 256  : 	PED_TYPE *actor=0;

	mov	DWORD PTR _actor$[ebp], 0

; 257  : 	PED_TYPE *player=0;

	mov	DWORD PTR _player$[ebp], 0

; 258  : 
; 259  : 	player = GamePool_FindPlayerPed();

	call	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ ; GamePool_FindPlayerPed
	mov	DWORD PTR _player$[ebp], eax

; 260  : 
; 261  : 	if(player && player->pTarget) {

	cmp	DWORD PTR _player$[ebp], 0
	je	SHORT $LN5@GameDebugD
	mov	eax, DWORD PTR _player$[ebp]
	cmp	DWORD PTR [eax+1948], 0
	je	SHORT $LN5@GameDebugD

; 262  : 		dwDebugEntity1 = (DWORD)player->pTarget;

	mov	eax, DWORD PTR _player$[ebp]
	mov	ecx, DWORD PTR [eax+1948]
	mov	DWORD PTR ?dwDebugEntity1@@3KA, ecx	; dwDebugEntity1
$LN5@GameDebugD:

; 263  : 	}
; 264  : 
; 265  : 	if(dwDebugEntity1 != 0) {

	cmp	DWORD PTR ?dwDebugEntity1@@3KA, 0	; dwDebugEntity1
	je	SHORT $LN4@GameDebugD

; 266  : 		actor = (PED_TYPE *)dwDebugEntity1;

	mov	eax, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	mov	DWORD PTR _actor$[ebp], eax

; 267  : 	} else {

	jmp	SHORT $LN3@GameDebugD
$LN4@GameDebugD:

; 268  : 		actor = player;

	mov	eax, DWORD PTR _player$[ebp]
	mov	DWORD PTR _actor$[ebp], eax
$LN3@GameDebugD:

; 269  : 	}	
; 270  : 
; 271  : 	if (!actor || !actor->Tasks) {

	cmp	DWORD PTR _actor$[ebp], 0
	je	SHORT $LN1@GameDebugD
	mov	eax, DWORD PTR _actor$[ebp]
	cmp	DWORD PTR [eax+1148], 0
	jne	SHORT $LN2@GameDebugD
$LN1@GameDebugD:

; 272  : 		dwDebugEntity1 = 0;

	mov	DWORD PTR ?dwDebugEntity1@@3KA, 0	; dwDebugEntity1

; 273  : 		return;

	jmp	$LN6@GameDebugD
$LN2@GameDebugD:

; 274  : 	}
; 275  : 
; 276  : 	CHAR line_buffer[512];
; 277  : 
; 278  : 	// init position for drawing
; 279  : 	debug_draw_top = 50;

	mov	DWORD PTR ?debug_draw_top@@3HA, 50	; debug_draw_top, 00000032H

; 280  : 
; 281  : 	sprintf(line_buffer,"PlayerPed %u (struct: 0x%X, vtbl: 0x%X)",dwDebugEntity1,actor,actor->entity.vtable);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _actor$[ebp]
	push	edx
	mov	eax, DWORD PTR ?dwDebugEntity1@@3KA	; dwDebugEntity1
	push	eax
	push	OFFSET ??_C@_0CI@PAHKAOAD@PlayerPed?5?$CFu?5?$CIstruct?3?50x?$CFX?0?5vtbl@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 20					; 00000014H

; 282  : 	GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(255,90,90,255));

	push	-10855681				; ff5a5affH
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 283  : 
; 284  : 	GameDebugDrawNextLine("Displaying Ped Intelligence...",D3DCOLOR_ARGB(255,90,90,255));

	push	-10855681				; ff5a5affH
	push	OFFSET ??_C@_0BP@PPABNIIN@Displaying?5Ped?5Intelligence?4?4?4?$AA@
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 285  : 	GameDebugDrawNextLine("",D3DCOLOR_ARGB(255,255,255,255));

	push	-1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 286  : 
; 287  : 	sprintf(line_buffer, "Ped: struct: 0x%08X,  vtbl: 0x%08X", 
; 288  : 		actor->Tasks->pdwPed, actor->Tasks->pdwPed?*(actor->Tasks->pdwPed):0);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN8@GameDebugD
	mov	edx, DWORD PTR _actor$[ebp]
	mov	eax, DWORD PTR [edx+1148]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv93[ebp], edx
	jmp	SHORT $LN9@GameDebugD
$LN8@GameDebugD:
	mov	DWORD PTR tv93[ebp], 0
$LN9@GameDebugD:
	mov	eax, DWORD PTR tv93[ebp]
	push	eax
	mov	ecx, DWORD PTR _actor$[ebp]
	mov	edx, DWORD PTR [ecx+1148]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET ??_C@_0CD@MBIJLLFG@Ped?3?5struct?3?50x?$CF08X?0?5?5vtbl?3?50x?$CF0@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 289  : 	GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(255,255,255,255));

	push	-1
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 290  : 
; 291  : 	GameDebugDrawNextLine("",D3DCOLOR_ARGB(255,255,255,255));

	push	-1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 292  : 	GameDebugDrawNextLine("Basic Tasks",D3DCOLOR_ARGB(255,255,90,90));

	push	-42406					; ffff5a5aH
	push	OFFSET ??_C@_0M@LPBINLDN@Basic?5Tasks?$AA@
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 293  : 	PrintInfoForTask("Damage",actor->Tasks->pdwDamage);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET ??_C@_06KGFFMMMJ@Damage?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 294  : 	PrintInfoForTask("Fall",actor->Tasks->pdwFallEnterExit);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET ??_C@_04OFHBCDIC@Fall?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 295  : 	PrintInfoForTask("SwimWasted",actor->Tasks->pdwSwimWasted);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	OFFSET ??_C@_0L@OKOHOIDI@SwimWasted?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 296  : 	PrintInfoForTask("Jump",actor->Tasks->pdwJumpJetPack);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	OFFSET ??_C@_04BIEPDJCB@Jump?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 297  : 	PrintInfoForTask("Action",actor->Tasks->pdwAction);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	push	OFFSET ??_C@_06PMAGBHAK@Action?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 298  : 	GameDebugDrawNextLine("",D3DCOLOR_ARGB(255,255,255,255));

	push	-1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 299  : 	GameDebugDrawNextLine("Extended Tasks",D3DCOLOR_ARGB(255,255,90,90));

	push	-42406					; ffff5a5aH
	push	OFFSET ??_C@_0P@JPMLMGAP@Extended?5Tasks?$AA@
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 300  : 	PrintInfoForTask("Crouch",actor->Tasks->pdwCrouching);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	push	OFFSET ??_C@_06PBKMMHEL@Crouch?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 301  : 	PrintInfoForTask("Fight",actor->Tasks->pdwFighting);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	push	OFFSET ??_C@_05KIHIELMB@Fight?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 302  : 	PrintInfoForTask("Unk1",actor->Tasks->pdwExtUnk1);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	push	OFFSET ??_C@_04JAAIOLBK@Unk1?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 303  : 	PrintInfoForTask("Unk2",actor->Tasks->pdwExtUnk2);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	push	OFFSET ??_C@_04LLCFLINJ@Unk2?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 304  : 	PrintInfoForTask("Unk3",actor->Tasks->pdwExtUnk3);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	push	OFFSET ??_C@_04KCDOIJJI@Unk3?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8

; 305  : 	PrintInfoForTask("Unk4",actor->Tasks->pdwExtUnk4);

	mov	eax, DWORD PTR _actor$[ebp]
	mov	ecx, DWORD PTR [eax+1148]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	push	OFFSET ??_C@_04ONHPBPFP@Unk4?$AA@
	call	?PrintInfoForTask@@YAXPADPAK@Z		; PrintInfoForTask
	add	esp, 8
$LN6@GameDebugD:

; 306  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@GameDebugD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 744				; 000002e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@GameDebugD:
	DD	1
	DD	$LN11@GameDebugD
$LN11@GameDebugD:
	DD	-544					; fffffde0H
	DD	512					; 00000200H
	DD	$LN10@GameDebugD
$LN10@GameDebugD:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?GameDebugDrawTaskInfo@@YAXXZ ENDP			; GameDebugDrawTaskInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?PrintInfoForTask@@YAXPADPAK@Z
_TEXT	SEGMENT
tv90 = -720						; size = 4
tv72 = -720						; size = 4
_line_buffer$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_task$ = 12						; size = 4
?PrintInfoForTask@@YAXPADPAK@Z PROC			; PrintInfoForTask, COMDAT

; 238  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 720				; 000002d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-720]
	mov	ecx, 180				; 000000b4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 239  : 	CHAR line_buffer[512];
; 240  : 
; 241  : 	sprintf( line_buffer, "%s: S: 0x%08X  VT: 0x%08X  T: %s (0x%x)", 
; 242  : 		name,task,task?*task:0,GetTaskNameFromTask(task),GetTaskTypeFromTask(task));

	cmp	DWORD PTR _task$[ebp], 0
	je	SHORT $LN5@PrintInfoF
	mov	eax, DWORD PTR _task$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	jmp	SHORT $LN6@PrintInfoF
$LN5@PrintInfoF:
	mov	DWORD PTR tv72[ebp], 0
$LN6@PrintInfoF:
	mov	edx, DWORD PTR _task$[ebp]
	push	edx
	call	?GetTaskTypeFromTask@@YAHPAK@Z		; GetTaskTypeFromTask
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _task$[ebp]
	push	eax
	call	?GetTaskNameFromTask@@YAPBDPAK@Z	; GetTaskNameFromTask
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	push	ecx
	mov	edx, DWORD PTR _task$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	push	OFFSET ??_C@_0CI@JIMOIMPB@?$CFs?3?5S?3?50x?$CF08X?5?5VT?3?50x?$CF08X?5?5T?3?5?$CFs@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 28					; 0000001cH

; 243  : 	GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(255,255,255,255));

	push	-1
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8
$LN2@PrintInfoF:

; 244  : 
; 245  : 	while(task = GetNextTaskFromTask(task)) {

	mov	eax, DWORD PTR _task$[ebp]
	push	eax
	call	?GetNextTaskFromTask@@YAPAKPAK@Z	; GetNextTaskFromTask
	add	esp, 4
	mov	DWORD PTR _task$[ebp], eax
	cmp	DWORD PTR _task$[ebp], 0
	je	SHORT $LN3@PrintInfoF

; 246  : 		sprintf( line_buffer, "%s: S: 0x%08X  VT: 0x%08X  T: %s (0x%x)", 
; 247  : 			name,task,task?*task:0,GetTaskNameFromTask(task),GetTaskTypeFromTask(task));

	cmp	DWORD PTR _task$[ebp], 0
	je	SHORT $LN7@PrintInfoF
	mov	eax, DWORD PTR _task$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv90[ebp], ecx
	jmp	SHORT $LN8@PrintInfoF
$LN7@PrintInfoF:
	mov	DWORD PTR tv90[ebp], 0
$LN8@PrintInfoF:
	mov	edx, DWORD PTR _task$[ebp]
	push	edx
	call	?GetTaskTypeFromTask@@YAHPAK@Z		; GetTaskTypeFromTask
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _task$[ebp]
	push	eax
	call	?GetTaskNameFromTask@@YAPBDPAK@Z	; GetTaskNameFromTask
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	edx, DWORD PTR _task$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	push	OFFSET ??_C@_0CI@JIMOIMPB@?$CFs?3?5S?3?50x?$CF08X?5?5VT?3?50x?$CF08X?5?5T?3?5?$CFs@
	lea	ecx, DWORD PTR _line_buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 28					; 0000001cH

; 248  : 		GameDebugDrawNextLine(line_buffer,D3DCOLOR_ARGB(255,255,255,255));

	push	-1
	lea	eax, DWORD PTR _line_buffer$[ebp]
	push	eax
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 249  : 	}

	jmp	$LN2@PrintInfoF
$LN3@PrintInfoF:

; 250  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@PrintInfoF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 720				; 000002d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@PrintInfoF:
	DD	1
	DD	$LN10@PrintInfoF
$LN10@PrintInfoF:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN9@PrintInfoF
$LN9@PrintInfoF:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?PrintInfoForTask@@YAXPADPAK@Z ENDP			; PrintInfoForTask
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GetTaskNameFromTask@@YAPBDPAK@Z
_TEXT	SEGMENT
_i$1 = -44						; size = 4
_type$ = -32						; size = 4
_i$2 = -20						; size = 4
_vtbl$ = -8						; size = 4
_task$ = 8						; size = 4
?GetTaskNameFromTask@@YAPBDPAK@Z PROC			; GetTaskNameFromTask, COMDAT

; 214  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 215  : 	if (task == NULL)

	cmp	DWORD PTR _task$[ebp], 0
	jne	SHORT $LN9@GetTaskNam

; 216  : 		return "Null";

	mov	eax, OFFSET ??_C@_04KHKKIIL@Null?$AA@
	jmp	$LN10@GetTaskNam
$LN9@GetTaskNam:

; 217  : 
; 218  : 	unsigned int vtbl = task[0];

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _task$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _vtbl$[ebp], eax

; 219  : 	for(int i=0; i<sizeof(taskInfosByVTbl)/sizeof(tTaskInfo); i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN8@GetTaskNam
$LN7@GetTaskNam:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN8@GetTaskNam:
	cmp	DWORD PTR _i$2[ebp], 20			; 00000014H
	jae	SHORT $LN6@GetTaskNam

; 220  : 	{
; 221  : 		if (taskInfosByVTbl[i].id == vtbl)

	mov	eax, DWORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR ?taskInfosByVTbl@@3PAUtTaskInfo@@A[eax*8]
	cmp	ecx, DWORD PTR _vtbl$[ebp]
	jne	SHORT $LN5@GetTaskNam

; 222  : 			return taskInfosByVTbl[i].name;

	mov	eax, DWORD PTR _i$2[ebp]
	mov	eax, DWORD PTR ?taskInfosByVTbl@@3PAUtTaskInfo@@A[eax*8+4]
	jmp	SHORT $LN10@GetTaskNam
$LN5@GetTaskNam:

; 223  : 	}

	jmp	SHORT $LN7@GetTaskNam
$LN6@GetTaskNam:

; 224  : 
; 225  : 	unsigned int type = (unsigned)GetTaskTypeFromTask(task);

	mov	eax, DWORD PTR _task$[ebp]
	push	eax
	call	?GetTaskTypeFromTask@@YAHPAK@Z		; GetTaskTypeFromTask
	add	esp, 4
	mov	DWORD PTR _type$[ebp], eax

; 226  : 	for(int i=0; i<sizeof(taskInfosById)/sizeof(tTaskInfo); i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@GetTaskNam
$LN3@GetTaskNam:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@GetTaskNam:
	cmp	DWORD PTR _i$1[ebp], 78			; 0000004eH
	jae	SHORT $LN2@GetTaskNam

; 227  : 	{
; 228  : 		if (taskInfosById[i].id == type)

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?taskInfosById@@3PAUtTaskInfo@@A[eax*8]
	cmp	ecx, DWORD PTR _type$[ebp]
	jne	SHORT $LN1@GetTaskNam

; 229  : 			return taskInfosById[i].name;

	mov	eax, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR ?taskInfosById@@3PAUtTaskInfo@@A[eax*8+4]
	jmp	SHORT $LN10@GetTaskNam
$LN1@GetTaskNam:

; 230  : 	}

	jmp	SHORT $LN3@GetTaskNam
$LN2@GetTaskNam:

; 231  : 
; 232  : 	return "Unknown";

	mov	eax, OFFSET ??_C@_07NBCGADJA@Unknown?$AA@
$LN10@GetTaskNam:

; 233  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTaskNameFromTask@@YAPBDPAK@Z ENDP			; GetTaskNameFromTask
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GetTaskTypeFromTask@@YAHPAK@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_task$ = 8						; size = 4
?GetTaskTypeFromTask@@YAHPAK@Z PROC			; GetTaskTypeFromTask, COMDAT

; 83   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 84   : 	int i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 85   : 
; 86   : 	if(!task || *task < 0x800000 || *task > 0x900000) return 0;

	cmp	DWORD PTR _task$[ebp], 0
	je	SHORT $LN1@GetTaskTyp
	mov	eax, DWORD PTR _task$[ebp]
	cmp	DWORD PTR [eax], 8388608		; 00800000H
	jb	SHORT $LN1@GetTaskTyp
	mov	eax, DWORD PTR _task$[ebp]
	cmp	DWORD PTR [eax], 9437184		; 00900000H
	jbe	SHORT $LN2@GetTaskTyp
$LN1@GetTaskTyp:
	xor	eax, eax
	jmp	SHORT $LN3@GetTaskTyp
$LN2@GetTaskTyp:

; 87   : 
; 88   : 	_asm mov edx, task

	mov	edx, DWORD PTR _task$[ebp]

; 89   : 	_asm mov ebx, [edx]

	mov	ebx, DWORD PTR [edx]

; 90   : 	_asm mov edx, [ebx+16]

	mov	edx, DWORD PTR [ebx+16]

; 91   : 	_asm mov ecx, task

	mov	ecx, DWORD PTR _task$[ebp]

; 92   : 	_asm call edx

	call	edx

; 93   : 	_asm mov i, eax

	mov	DWORD PTR _i$[ebp], eax

; 94   : 
; 95   : 	return i;

	mov	eax, DWORD PTR _i$[ebp]
$LN3@GetTaskTyp:

; 96   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTaskTypeFromTask@@YAHPAK@Z ENDP			; GetTaskTypeFromTask
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GetNextTaskFromTask@@YAPAKPAK@Z
_TEXT	SEGMENT
_ret_task$ = -8						; size = 4
_task$ = 8						; size = 4
?GetNextTaskFromTask@@YAPAKPAK@Z PROC			; GetNextTaskFromTask, COMDAT

; 64   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   : 	DWORD *ret_task=NULL;

	mov	DWORD PTR _ret_task$[ebp], 0

; 66   : 
; 67   : 	if(!task || *task < 0x800000 || *task > 0x900000) return NULL;

	cmp	DWORD PTR _task$[ebp], 0
	je	SHORT $LN1@GetNextTas
	mov	eax, DWORD PTR _task$[ebp]
	cmp	DWORD PTR [eax], 8388608		; 00800000H
	jb	SHORT $LN1@GetNextTas
	mov	eax, DWORD PTR _task$[ebp]
	cmp	DWORD PTR [eax], 9437184		; 00900000H
	jbe	SHORT $LN2@GetNextTas
$LN1@GetNextTas:
	xor	eax, eax
	jmp	SHORT $LN3@GetNextTas
$LN2@GetNextTas:

; 68   : 	
; 69   : 	_asm mov edx, task

	mov	edx, DWORD PTR _task$[ebp]

; 70   : 	_asm mov ebx, [edx]

	mov	ebx, DWORD PTR [edx]

; 71   : 	_asm mov edx, [ebx+8]

	mov	edx, DWORD PTR [ebx+8]

; 72   : 	_asm mov ecx, task

	mov	ecx, DWORD PTR _task$[ebp]

; 73   : 	_asm call edx

	call	edx

; 74   : 	_asm mov ret_task, eax

	mov	DWORD PTR _ret_task$[ebp], eax

; 75   : 
; 76   : 	return ret_task;

	mov	eax, DWORD PTR _ret_task$[ebp]
$LN3@GetNextTas:

; 77   : 
; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextTaskFromTask@@YAPAKPAK@Z ENDP			; GetNextTaskFromTask
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugDrawNextLine@@YAXPADK@Z
_TEXT	SEGMENT
_rect$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_szText$ = 8						; size = 4
_dwColor$ = 12						; size = 4
?GameDebugDrawNextLine@@YAXPADK@Z PROC			; GameDebugDrawNextLine, COMDAT

; 50   : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 51   : 	RECT rect;
; 52   : 	rect.top		= debug_draw_top;

	mov	eax, DWORD PTR ?debug_draw_top@@3HA	; debug_draw_top
	mov	DWORD PTR _rect$[ebp+4], eax

; 53   : 	rect.left		= 30;

	mov	DWORD PTR _rect$[ebp], 30		; 0000001eH

; 54   : 	//rect.bottom		= debug_draw_top+16;
; 55   : 	//rect.right		= 600;
; 56   : 
; 57   : 	pDefaultFont->RenderText(szText,rect,dwColor);

	mov	eax, DWORD PTR _dwColor$[ebp]
	push	eax
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _szText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pDefaultFont@@3PAVCFontRender@@A ; pDefaultFont
	call	?RenderText@CFontRender@@QAEXPADUtagRECT@@K@Z ; CFontRender::RenderText

; 58   : 	debug_draw_top+=16;

	mov	eax, DWORD PTR ?debug_draw_top@@3HA	; debug_draw_top
	add	eax, 16					; 00000010H
	mov	DWORD PTR ?debug_draw_top@@3HA, eax	; debug_draw_top

; 59   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GameDebugD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@GameDebugD:
	DD	1
	DD	$LN4@GameDebugD
$LN4@GameDebugD:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@GameDebugD
$LN3@GameDebugD:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?GameDebugDrawNextLine@@YAXPADK@Z ENDP			; GameDebugDrawNextLine
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\netgame.h
;	COMDAT ?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ PROC	; CNetGame::GetVehiclePool, COMDAT
; _this$ = ecx

; 97   : 	CVehiclePool * GetVehiclePool() { return m_pVehiclePool; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ENDP	; CNetGame::GetVehiclePool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\vehiclepool.h
;	COMDAT ?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_VehicleID$ = 8						; size = 2
?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z PROC		; CVehiclePool::GetAt, COMDAT
; _this$ = ecx

; 58   : 	CVehicle* GetAt(VEHICLEID VehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		if(VehicleID >= MAX_VEHICLES || !m_bVehicleSlotState[VehicleID]) { return NULL; }

	movzx	eax, WORD PTR _VehicleID$[ebp]
	cmp	eax, 702				; 000002beH
	jge	SHORT $LN1@GetAt
	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jne	SHORT $LN2@GetAt
$LN1@GetAt:
	xor	eax, eax
	jmp	SHORT $LN3@GetAt
$LN2@GetAt:

; 60   : 		return m_pVehicles[VehicleID];

	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2808]
$LN3@GetAt:

; 61   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z ENDP		; CVehiclePool::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.h
;	COMDAT ?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ PROC		; CGame::FindPlayerPed, COMDAT
; _this$ = ecx

; 142  : 	CPlayerPed  *FindPlayerPed() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		if(m_pGamePlayer==NULL)	m_pGamePlayer = new CPlayerPed();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@FindPlayer
	push	70					; 00000046H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@FindPlayer
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CPlayerPed@@QAE@XZ			; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@FindPlayer
$LN4@FindPlayer:
	mov	DWORD PTR tv74[ebp], 0
$LN5@FindPlayer:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@FindPlayer:

; 144  : 		return m_pGamePlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 145  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ENDP		; CGame::FindPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.h
;	COMDAT ?GetCamera@CGame@@QAEPAVCCamera@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCamera@CGame@@QAEPAVCCamera@@XZ PROC		; CGame::GetCamera, COMDAT
; _this$ = ecx

; 135  : 	CCamera     *GetCamera() {	return m_pGameCamera; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCamera@CGame@@QAEPAVCCamera@@XZ ENDP		; CGame::GetCamera
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDrawDebugTextInfo@@YAXXZ
_TEXT	SEGMENT
_x$ = -8						; size = 4
?GameDrawDebugTextInfo@@YAXXZ PROC			; GameDrawDebugTextInfo, COMDAT

; 682  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 683  : 	int x=0;

	mov	DWORD PTR _x$[ebp], 0
$LN2@GameDrawDe:

; 684  : 
; 685  : 	while(x!=NUM_SCREEN_LINES)

	cmp	DWORD PTR _x$[ebp], 35			; 00000023H
	je	SHORT $LN3@GameDrawDe

; 686  : 	{
; 687  : 		GameDebugDrawNextLine(screen_buf[x],D3DCOLOR_ARGB(255,255,255,255));

	push	-1
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR ?screen_buf@@3PAPADA[eax*4]
	push	ecx
	call	?GameDebugDrawNextLine@@YAXPADK@Z	; GameDebugDrawNextLine
	add	esp, 8

; 688  : 		x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 689  : 	}

	jmp	SHORT $LN2@GameDrawDe
$LN3@GameDrawDe:

; 690  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameDrawDebugTextInfo@@YAXXZ ENDP			; GameDrawDebugTextInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugAddMessage@@YAXPADZZ
_TEXT	SEGMENT
_args$ = -544						; size = 4
_x$ = -532						; size = 4
_tmp_buf$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
_szFormat$ = 8						; size = 4
?GameDebugAddMessage@@YAXPADZZ PROC			; GameDebugAddMessage, COMDAT

; 657  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 740				; 000002e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-740]
	mov	ecx, 185				; 000000b9H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 658  : 	char tmp_buf[512];
; 659  : 	int x=0;

	mov	DWORD PTR _x$[ebp], 0

; 660  : 
; 661  : 	// free the last message
; 662  : 	free(screen_buf[0]);

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?screen_buf@@3PAPADA[ecx]
	push	edx
	call	_free
	add	esp, 4
$LN2@GameDebugA:

; 663  : 	// shift the rest down
; 664  : 	while(x!=(NUM_SCREEN_LINES - 1)) {

	cmp	DWORD PTR _x$[ebp], 34			; 00000022H
	je	SHORT $LN1@GameDebugA

; 665  : 		screen_buf[x] = screen_buf[x + 1];

	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	edx, DWORD PTR ?screen_buf@@3PAPADA[ecx*4+4]
	mov	DWORD PTR ?screen_buf@@3PAPADA[eax*4], edx

; 666  : 		x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 667  : 	}

	jmp	SHORT $LN2@GameDebugA
$LN1@GameDebugA:

; 668  : 
; 669  : 	va_list args;
; 670  : 	va_start(args, szFormat);

	lea	eax, DWORD PTR _szFormat$[ebp+4]
	mov	DWORD PTR _args$[ebp], eax

; 671  : 	vsprintf(tmp_buf, szFormat, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szFormat$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmp_buf$[ebp]
	push	edx
	call	_vsprintf
	add	esp, 12					; 0000000cH

; 672  : 	va_end(args);

	mov	DWORD PTR _args$[ebp], 0

; 673  : 
; 674  : 	// move in the new line
; 675  : 	screen_buf[NUM_SCREEN_LINES - 1] = (PCHAR)malloc(256);

	push	256					; 00000100H
	call	_malloc
	add	esp, 4
	mov	ecx, 4
	imul	edx, ecx, 34
	mov	DWORD PTR ?screen_buf@@3PAPADA[edx], eax

; 676  : 	strcpy(screen_buf[NUM_SCREEN_LINES - 1],tmp_buf);	

	lea	eax, DWORD PTR _tmp_buf$[ebp]
	push	eax
	mov	ecx, 4
	imul	edx, ecx, 34
	mov	eax, DWORD PTR ?screen_buf@@3PAPADA[edx]
	push	eax
	call	_strcpy
	add	esp, 8

; 677  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GameDebugA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 740				; 000002e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@GameDebugA:
	DD	1
	DD	$LN6@GameDebugA
$LN6@GameDebugA:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN5@GameDebugA
$LN5@GameDebugA:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?GameDebugAddMessage@@YAXPADZZ ENDP			; GameDebugAddMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugInitTextScreen@@YAXXZ
_TEXT	SEGMENT
_x$ = -8						; size = 4
?GameDebugInitTextScreen@@YAXXZ PROC			; GameDebugInitTextScreen, COMDAT

; 644  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 645  : 	int x=0;

	mov	DWORD PTR _x$[ebp], 0
$LN2@GameDebugI:

; 646  : 	while(x != NUM_SCREEN_LINES)

	cmp	DWORD PTR _x$[ebp], 35			; 00000023H
	je	SHORT $LN3@GameDebugI

; 647  : 	{
; 648  : 		screen_buf[x] = (PCHAR)malloc(256);

	push	256					; 00000100H
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR ?screen_buf@@3PAPADA[ecx*4], eax

; 649  : 		memset(screen_buf[x],0,256);

	push	256					; 00000100H
	push	0
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR ?screen_buf@@3PAPADA[eax*4]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 650  : 		x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 651  : 	}

	jmp	SHORT $LN2@GameDebugI
$LN3@GameDebugI:

; 652  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameDebugInitTextScreen@@YAXXZ ENDP			; GameDebugInitTextScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugDrawDebugScreens@@YAXXZ
_TEXT	SEGMENT
?GameDebugDrawDebugScreens@@YAXXZ PROC			; GameDebugDrawDebugScreens, COMDAT

; 974  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 975  : 	if(!iGameDebugType) return;

	cmp	DWORD PTR ?iGameDebugType@@3HA, 0	; iGameDebugType
	jne	SHORT $LN10@GameDebugD
	jmp	$LN11@GameDebugD
$LN10@GameDebugD:

; 976  : 
; 977  : 	//if(pCmdWindow->isEnabled()) return;
; 978  : 
; 979  : #ifdef _DEBUG
; 980  : 
; 981  : 	if(iGameDebugType==1)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 1	; iGameDebugType
	jne	SHORT $LN9@GameDebugD

; 982  : 	{
; 983  : 		GameDebugDrawActorInfo();

	call	?GameDebugDrawActorInfo@@YAXXZ		; GameDebugDrawActorInfo

; 984  : 		return;

	jmp	SHORT $LN11@GameDebugD
$LN9@GameDebugD:

; 985  : 	}
; 986  : 	
; 987  : 	if(iGameDebugType==2 || iGameDebugType==3)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 2	; iGameDebugType
	je	SHORT $LN7@GameDebugD
	cmp	DWORD PTR ?iGameDebugType@@3HA, 3	; iGameDebugType
	jne	SHORT $LN8@GameDebugD
$LN7@GameDebugD:

; 988  : 	{
; 989  : 		GameDebugDrawVehicleInfo();

	call	?GameDebugDrawVehicleInfo@@YAXXZ	; GameDebugDrawVehicleInfo

; 990  : 		return;

	jmp	SHORT $LN11@GameDebugD
$LN8@GameDebugD:

; 991  : 	}
; 992  : 
; 993  : 	if(iGameDebugType==5)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 5	; iGameDebugType
	jne	SHORT $LN6@GameDebugD

; 994  : 	{
; 995  : 		GameDrawMemoryInfo();

	call	?GameDrawMemoryInfo@@YAXXZ		; GameDrawMemoryInfo

; 996  : 		return;

	jmp	SHORT $LN11@GameDebugD
$LN6@GameDebugD:

; 997  : 	}
; 998  : 
; 999  : 	if(iGameDebugType==15)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 15	; iGameDebugType, 0000000fH
	jne	SHORT $LN5@GameDebugD

; 1000 : 	{
; 1001 : 		GameDrawMemoryInfoAscii();

	call	?GameDrawMemoryInfoAscii@@YAXXZ		; GameDrawMemoryInfoAscii

; 1002 : 		return;

	jmp	SHORT $LN11@GameDebugD
$LN5@GameDebugD:

; 1003 : 	}
; 1004 : 
; 1005 : 	if(iGameDebugType==6)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 6	; iGameDebugType
	jne	SHORT $LN4@GameDebugD

; 1006 : 	{
; 1007 : 		GameDrawDebugTextInfo();

	call	?GameDrawDebugTextInfo@@YAXXZ		; GameDrawDebugTextInfo

; 1008 : 		return;

	jmp	SHORT $LN11@GameDebugD
$LN4@GameDebugD:

; 1009 : 	}
; 1010 : 
; 1011 : 	if(iGameDebugType==7)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 7	; iGameDebugType
	jne	SHORT $LN3@GameDebugD

; 1012 : 	{
; 1013 : 		GameDoVehicleSyncTest();

	call	?GameDoVehicleSyncTest@@YAXXZ		; GameDoVehicleSyncTest

; 1014 : 		return;

	jmp	SHORT $LN11@GameDebugD
$LN3@GameDebugD:

; 1015 : 	}
; 1016 : 
; 1017 : 	if (iGameDebugType==8)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 8	; iGameDebugType
	jne	SHORT $LN2@GameDebugD

; 1018 : 	{
; 1019 : 		GameDebugDrawTaskInfo();

	call	?GameDebugDrawTaskInfo@@YAXXZ		; GameDebugDrawTaskInfo

; 1020 : 		return;

	jmp	SHORT $LN11@GameDebugD
$LN2@GameDebugD:

; 1021 : 	}
; 1022 : 
; 1023 : #endif //_DEBUG
; 1024 : 
; 1025 : 	if(iGameDebugType==10)

	cmp	DWORD PTR ?iGameDebugType@@3HA, 10	; iGameDebugType, 0000000aH
	jne	SHORT $LN11@GameDebugD

; 1026 : 	{
; 1027 : 		GameBuildSelectVehicle();

	call	?GameBuildSelectVehicle@@YAXXZ		; GameBuildSelectVehicle
$LN11@GameDebugD:

; 1028 : 		return;
; 1029 : 	}
; 1030 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameDebugDrawDebugScreens@@YAXXZ ENDP			; GameDebugDrawDebugScreens
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugScreensOff@@YAXXZ
_TEXT	SEGMENT
?GameDebugScreensOff@@YAXXZ PROC			; GameDebugScreensOff, COMDAT

; 866  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 867  : 	iGameDebugType=0;

	mov	DWORD PTR ?iGameDebugType@@3HA, 0	; iGameDebugType

; 868  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GameDebugScreensOff@@YAXXZ ENDP			; GameDebugScreensOff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\debug.cpp
;	COMDAT ?GameDebugEntity@@YAXKKH@Z
_TEXT	SEGMENT
_dwEnt1$ = 8						; size = 4
_dwEnt2$ = 12						; size = 4
_type$ = 16						; size = 4
?GameDebugEntity@@YAXKKH@Z PROC				; GameDebugEntity, COMDAT

; 856  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 857  : 	iGameDebugType=type;

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR ?iGameDebugType@@3HA, eax	; iGameDebugType

; 858  : 	dwDebugEntity1=dwEnt1;

	mov	eax, DWORD PTR _dwEnt1$[ebp]
	mov	DWORD PTR ?dwDebugEntity1@@3KA, eax	; dwDebugEntity1

; 859  : 	dwDebugEntity2=dwEnt2;

	mov	eax, DWORD PTR _dwEnt2$[ebp]
	mov	DWORD PTR ?dwDebugEntity2@@3KA, eax	; dwDebugEntity2

; 860  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GameDebugEntity@@YAXKKH@Z ENDP				; GameDebugEntity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
;	COMDAT ?atan2@@YAMMM@Z
_TEXT	SEGMENT
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
?atan2@@YAMMM@Z PROC					; atan2, COMDAT

; 1044 :         {return (atan2f(_Y, _X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __Y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_atan2f
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?atan2@@YAMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -196						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 648  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 649  :     return (float)atan2(_Y, _X);

	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR __Y$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR tv74[ebp]
	fld	DWORD PTR tv74[ebp]

; 650  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_atan2f	ENDP
_TEXT	ENDS
END
