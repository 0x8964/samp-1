; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\game\menu.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_remove_panel DW 08daH
	DB	'i', 00H
	ORG $+14
	ORG $+2
_create_panel DW 08d4H
	DB	'sfffiiiiv', 00H
	ORG $+6
	ORG $+2
_set_panel_column_data DW 08dbH
	DB	'iisssssssssssss', 00H
	ORG $+2
_set_panel_column_width DW 09dbH
	DB	'iii', 00H
	ORG $+12
	ORG $+2
_set_panel_row_enable DW 08d9H
	DB	'iii', 00H
	ORG $+12
	ORG $+2
_get_panel_active_row DW 08d7H
	DB	'iv', 00H
	ORG $+13
CONST	ENDS
PUBLIC	??0CMenu@@QAE@PADMMEMMPAUMENU_INT@@@Z		; CMenu::CMenu
PUBLIC	?AddMenuItem@CMenu@@QAEXEEPAD@Z			; CMenu::AddMenuItem
PUBLIC	?SetColumnTitle@CMenu@@QAEXEPAD@Z		; CMenu::SetColumnTitle
PUBLIC	?Show@CMenu@@QAEXXZ				; CMenu::Show
PUBLIC	?Hide@CMenu@@QAEXXZ				; CMenu::Hide
PUBLIC	?GetMenuItem@CMenu@@QAEPADEE@Z			; CMenu::GetMenuItem
PUBLIC	?GetMenuTitle@CMenu@@QAEPADXZ			; CMenu::GetMenuTitle
PUBLIC	?GetMenuHeader@CMenu@@QAEPADE@Z			; CMenu::GetMenuHeader
PUBLIC	?MS@CMenu@@QAEPADEE@Z				; CMenu::MS
PUBLIC	?GetSelectedRow@CMenu@@QAEEXZ			; CMenu::GetSelectedRow
PUBLIC	??_C@_07JEDJMJPP@SAMPHED?$AA@			; `string'
PUBLIC	??_C@_05FAECCOPD@DUMMY?$AA@			; `string'
PUBLIC	??_C@_07OGHHIEKJ@SAMPRW1?$AA@			; `string'
PUBLIC	??_C@_07MNFKNHGK@SAMPRW2?$AA@			; `string'
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ:PROC	; ScriptCommand
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?g_szMenuItems@@3PAY11CA@DA:BYTE		; g_szMenuItems
EXTRN	__fltused:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_07MNFKNHGK@SAMPRW2?$AA@
CONST	SEGMENT
??_C@_07MNFKNHGK@SAMPRW2?$AA@ DB 'SAMPRW2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OGHHIEKJ@SAMPRW1?$AA@
CONST	SEGMENT
??_C@_07OGHHIEKJ@SAMPRW1?$AA@ DB 'SAMPRW1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FAECCOPD@DUMMY?$AA@
CONST	SEGMENT
??_C@_05FAECCOPD@DUMMY?$AA@ DB 'DUMMY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JEDJMJPP@SAMPHED?$AA@
CONST	SEGMENT
??_C@_07JEDJMJPP@SAMPHED?$AA@ DB 'SAMPHED', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?GetSelectedRow@CMenu@@QAEEXZ
_TEXT	SEGMENT
_dwRetVal$ = -20					; size = 4
_this$ = -8						; size = 4
?GetSelectedRow@CMenu@@QAEEXZ PROC			; CMenu::GetSelectedRow, COMDAT
; _this$ = ecx

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 	if (!m_MenuInteraction.bMenu) return 0xFF;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+882], 0
	jne	SHORT $LN1@GetSelecte
	or	al, 255					; 000000ffH
	jmp	SHORT $LN2@GetSelecte
$LN1@GetSelecte:

; 103  : 	DWORD dwRetVal;
; 104  : 	ScriptCommand(&get_panel_active_row, m_dwPanel, &dwRetVal);

	lea	eax, DWORD PTR _dwRetVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+948]
	push	edx
	push	OFFSET _get_panel_active_row
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 105  : 	return (BYTE)dwRetVal;

	mov	al, BYTE PTR _dwRetVal$[ebp]
$LN2@GetSelecte:

; 106  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetSelecte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetSelecte:
	DD	1
	DD	$LN5@GetSelecte
$LN5@GetSelecte:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@GetSelecte
$LN4@GetSelecte:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?GetSelectedRow@CMenu@@QAEEXZ ENDP			; CMenu::GetSelectedRow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?MS@CMenu@@QAEPADEE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteRow$ = 8						; size = 1
_byteColumn$ = 12					; size = 1
?MS@CMenu@@QAEPADEE@Z PROC				; CMenu::MS, COMDAT
; _this$ = ecx

; 95   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 	if (m_charItems[byteRow][byteColumn][0]) return g_szMenuItems[byteRow][byteColumn];

	movzx	eax, BYTE PTR _byteRow$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+33]
	movzx	eax, BYTE PTR _byteColumn$[ebp]
	shl	eax, 5
	add	edx, eax
	mov	ecx, 1
	imul	eax, ecx, 0
	movsx	ecx, BYTE PTR [edx+eax]
	test	ecx, ecx
	je	SHORT $LN1@MS
	movzx	eax, BYTE PTR _byteRow$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _byteColumn$[ebp]
	shl	ecx, 5
	lea	eax, DWORD PTR ?g_szMenuItems@@3PAY11CA@DA[eax+ecx]
	jmp	SHORT $LN2@MS
$LN1@MS:

; 97   : 	return "DUMMY";

	mov	eax, OFFSET ??_C@_05FAECCOPD@DUMMY?$AA@
$LN2@MS:

; 98   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?MS@CMenu@@QAEPADEE@Z ENDP				; CMenu::MS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?GetMenuHeader@CMenu@@QAEPADE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteColumn$ = 8					; size = 1
?GetMenuHeader@CMenu@@QAEPADE@Z PROC			; CMenu::GetMenuHeader, COMDAT
; _this$ = ecx

; 90   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 91   : 	return m_charHeader[byteColumn];

	movzx	eax, BYTE PTR _byteColumn$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+801]

; 92   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetMenuHeader@CMenu@@QAEPADE@Z ENDP			; CMenu::GetMenuHeader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?GetMenuTitle@CMenu@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMenuTitle@CMenu@@QAEPADXZ PROC			; CMenu::GetMenuTitle, COMDAT
; _this$ = ecx

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 	return m_charTitle;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1

; 87   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMenuTitle@CMenu@@QAEPADXZ ENDP			; CMenu::GetMenuTitle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?GetMenuItem@CMenu@@QAEPADEE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteColumn$ = 8					; size = 1
_byteRow$ = 12						; size = 1
?GetMenuItem@CMenu@@QAEPADEE@Z PROC			; CMenu::GetMenuItem, COMDAT
; _this$ = ecx

; 80   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 81   : 	return m_charItems[byteRow][byteColumn];

	movzx	eax, BYTE PTR _byteRow$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+33]
	movzx	edx, BYTE PTR _byteColumn$[ebp]
	shl	edx, 5
	add	eax, edx

; 82   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMenuItem@CMenu@@QAEPADEE@Z ENDP			; CMenu::GetMenuItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?Hide@CMenu@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Hide@CMenu@@QAEXXZ PROC				; CMenu::Hide, COMDAT
; _this$ = ecx

; 75   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 	ScriptCommand(&remove_panel, m_dwPanel);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+948]
	push	ecx
	push	OFFSET _remove_panel
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 77   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Hide@CMenu@@QAEXXZ ENDP				; CMenu::Hide
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?Show@CMenu@@QAEXXZ
_TEXT	SEGMENT
tv281 = -220						; size = 4
tv198 = -220						; size = 4
tv128 = -220						; size = 4
_i$1 = -17						; size = 1
_this$ = -8						; size = 4
?Show@CMenu@@QAEXXZ PROC				; CMenu::Show, COMDAT
; _this$ = ecx

; 51   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 52   : 	ScriptCommand(&create_panel, m_charTitle[0] ? "SAMPHED" : "DUMMY", m_fXPos, m_fYPos, (m_fCol1Width + m_fCol2Width) / m_byteColumns, m_byteColumns, m_MenuInteraction.bMenu, 1, 1, &m_dwPanel);

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+ecx+1]
	test	eax, eax
	je	SHORT $LN7@Show
	mov	DWORD PTR tv128[ebp], OFFSET ??_C@_07JEDJMJPP@SAMPHED?$AA@
	jmp	SHORT $LN8@Show
$LN7@Show:
	mov	DWORD PTR tv128[ebp], OFFSET ??_C@_05FAECCOPD@DUMMY?$AA@
$LN8@Show:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 948				; 000003b4H
	push	ecx
	push	1
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+882]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+881]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+873]
	addss	xmm0, DWORD PTR [ecx+877]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+881]
	cvtsi2ss xmm1, eax
	divss	xmm0, xmm1
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+869]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+865]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR tv128[ebp]
	push	eax
	push	OFFSET _create_panel
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 52					; 00000034H

; 53   : 	ScriptCommand(&set_panel_column_data, m_dwPanel, 0, m_charHeader[0][0] ? "SAMPRW1" : "DUMMY"
; 54   : 					, MS(0,0), MS(1,0), MS(2,0)
; 55   : 					, MS(3,0), MS(4,0), MS(5,0)
; 56   : 					, MS(6,0), MS(7,0), MS(8,0)
; 57   : 					, MS(9,0), MS(10,0), MS(11,0));

	mov	eax, 32					; 00000020H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+801]
	mov	ecx, 1
	imul	edx, ecx, 0
	movsx	eax, BYTE PTR [eax+edx]
	test	eax, eax
	je	SHORT $LN9@Show
	mov	DWORD PTR tv198[ebp], OFFSET ??_C@_07OGHHIEKJ@SAMPRW1?$AA@
	jmp	SHORT $LN10@Show
$LN9@Show:
	mov	DWORD PTR tv198[ebp], OFFSET ??_C@_05FAECCOPD@DUMMY?$AA@
$LN10@Show:
	push	0
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	mov	ecx, DWORD PTR tv198[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+948]
	push	eax
	push	OFFSET _set_panel_column_data
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 64					; 00000040H

; 58   : 	ScriptCommand(&set_panel_column_width, m_dwPanel, 0, (int)m_fCol1Width);	

	mov	eax, DWORD PTR _this$[ebp]
	cvttss2si ecx, DWORD PTR [eax+873]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+948]
	push	eax
	push	OFFSET _set_panel_column_width
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 16					; 00000010H

; 59   : 	if (m_byteColumns == 2)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+881]
	cmp	ecx, 2
	jne	$LN4@Show

; 60   : 	{
; 61   : 		ScriptCommand(&set_panel_column_data, m_dwPanel, 1, m_charHeader[1][0] ? "SAMPRW2" : "DUMMY"
; 62   : 					, MS(0,1), MS(1,1), MS(2,1)
; 63   : 					, MS(3,1), MS(4,1), MS(5,1)
; 64   : 					, MS(6,1), MS(7,1), MS(8,1)
; 65   : 					, MS(9,1), MS(10,1), MS(11,1));

	mov	eax, 32					; 00000020H
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+801]
	mov	eax, 1
	imul	ecx, eax, 0
	movsx	edx, BYTE PTR [edx+ecx]
	test	edx, edx
	je	SHORT $LN11@Show
	mov	DWORD PTR tv281[ebp], OFFSET ??_C@_07MNFKNHGK@SAMPRW2?$AA@
	jmp	SHORT $LN12@Show
$LN11@Show:
	mov	DWORD PTR tv281[ebp], OFFSET ??_C@_05FAECCOPD@DUMMY?$AA@
$LN12@Show:
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MS@CMenu@@QAEPADEE@Z			; CMenu::MS
	push	eax
	mov	eax, DWORD PTR tv281[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+948]
	push	edx
	push	OFFSET _set_panel_column_data
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 64					; 00000040H

; 66   : 		ScriptCommand(&set_panel_column_width, m_dwPanel, 1, (int)m_fCol1Width);

	mov	eax, DWORD PTR _this$[ebp]
	cvttss2si ecx, DWORD PTR [eax+873]
	push	ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+948]
	push	eax
	push	OFFSET _set_panel_column_width
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 16					; 00000010H
$LN4@Show:

; 67   : 	}
; 68   : 	for (BYTE i = 0; i < MAX_MENU_ITEMS; i++)

	mov	BYTE PTR _i$1[ebp], 0
	jmp	SHORT $LN3@Show
$LN2@Show:
	mov	al, BYTE PTR _i$1[ebp]
	add	al, 1
	mov	BYTE PTR _i$1[ebp], al
$LN3@Show:
	movzx	eax, BYTE PTR _i$1[ebp]
	cmp	eax, 12					; 0000000cH
	jge	SHORT $LN1@Show

; 69   : 	{
; 70   : 		ScriptCommand(&set_panel_row_enable, m_dwPanel, i, m_MenuInteraction.bRow[i]);

	movzx	eax, BYTE PTR _i$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+886]
	push	edx
	movzx	eax, BYTE PTR _i$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+948]
	push	edx
	push	OFFSET _set_panel_row_enable
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 16					; 00000010H

; 71   : 	}

	jmp	SHORT $LN2@Show
$LN1@Show:

; 72   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Show@CMenu@@QAEXXZ ENDP				; CMenu::Show
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?SetColumnTitle@CMenu@@QAEXEPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteColumn$ = 8					; size = 1
_pText$ = 12						; size = 4
?SetColumnTitle@CMenu@@QAEXEPAD@Z PROC			; CMenu::SetColumnTitle, COMDAT
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 	strcpy(m_charHeader[byteColumn], pText);

	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byteColumn$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+801]
	push	eax
	call	_strcpy
	add	esp, 8

; 48   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetColumnTitle@CMenu@@QAEXEPAD@Z ENDP			; CMenu::SetColumnTitle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ?AddMenuItem@CMenu@@QAEXEEPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteColumn$ = 8					; size = 1
_byteRow$ = 12						; size = 1
_pText$ = 16						; size = 4
?AddMenuItem@CMenu@@QAEXEEPAD@Z PROC			; CMenu::AddMenuItem, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 	strcpy(m_charItems[byteRow][byteColumn], pText);

	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byteRow$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+33]
	movzx	ecx, BYTE PTR _byteColumn$[ebp]
	shl	ecx, 5
	add	eax, ecx
	push	eax
	call	_strcpy
	add	esp, 8

; 43   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AddMenuItem@CMenu@@QAEXEEPAD@Z ENDP			; CMenu::AddMenuItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\menu.cpp
;	COMDAT ??0CMenu@@QAE@PADMMEMMPAUMENU_INT@@@Z
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_this$ = -8						; size = 4
_pTitle$ = 8						; size = 4
_fX$ = 12						; size = 4
_fY$ = 16						; size = 4
_byteColumns$ = 20					; size = 1
_fCol1Width$ = 24					; size = 4
_fCol2Width$ = 28					; size = 4
_MenuInteraction$ = 32					; size = 4
??0CMenu@@QAE@PADMMEMMPAUMENU_INT@@@Z PROC		; CMenu::CMenu, COMDAT
; _this$ = ecx

; 17   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 18   : 	for (int i = 0; i < MAX_MENU_ITEMS; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN5@CMenu
$LN4@CMenu:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN5@CMenu:
	cmp	DWORD PTR _i$1[ebp], 12			; 0000000cH
	jge	SHORT $LN3@CMenu

; 19   : 	{
; 20   : 		m_charItems[i][0][0] = '\0';

	mov	eax, DWORD PTR _i$1[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+33]
	mov	eax, 32					; 00000020H
	imul	ecx, eax, 0
	add	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 0
	mov	BYTE PTR [edx+ecx], 0

; 21   : 		m_charItems[i][1][0] = '\0';

	mov	eax, DWORD PTR _i$1[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+33]
	mov	eax, 32					; 00000020H
	shl	eax, 0
	add	edx, eax
	mov	ecx, 1
	imul	eax, ecx, 0
	mov	BYTE PTR [edx+eax], 0

; 22   : 	}

	jmp	SHORT $LN4@CMenu
$LN3@CMenu:

; 23   : 	m_charHeader[0][0] = '\0';

	mov	eax, 32					; 00000020H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+801]
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	BYTE PTR [eax+edx], 0

; 24   : 	m_charHeader[1][0] = '\0';

	mov	eax, 32					; 00000020H
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+801]
	mov	eax, 1
	imul	ecx, eax, 0
	mov	BYTE PTR [edx+ecx], 0

; 25   : 	m_charTitle[0] = '\0';

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+1], 0

; 26   : 	strcpy(m_charTitle, pTitle);

	mov	eax, DWORD PTR _pTitle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	push	ecx
	call	_strcpy
	add	esp, 8

; 27   : 	
; 28   : 	m_fXPos = fX;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _fX$[ebp]
	movss	DWORD PTR [eax+865], xmm0

; 29   : 	m_fYPos = fY;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _fY$[ebp]
	movss	DWORD PTR [eax+869], xmm0

; 30   : 	m_fCol1Width = fCol1Width;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _fCol1Width$[ebp]
	movss	DWORD PTR [eax+873], xmm0

; 31   : 	m_fCol2Width = fCol2Width;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _fCol2Width$[ebp]
	movss	DWORD PTR [eax+877], xmm0

; 32   : 
; 33   : 	if (byteColumns == 2) m_byteColumns = 2;

	movzx	eax, BYTE PTR _byteColumns$[ebp]
	cmp	eax, 2
	jne	SHORT $LN2@CMenu
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+881], 2
	jmp	SHORT $LN1@CMenu
$LN2@CMenu:

; 34   : 	else m_byteColumns = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+881], 1
$LN1@CMenu:

; 35   : 	memcpy(&m_MenuInteraction, MenuInteraction, sizeof (MENU_INT));

	push	64					; 00000040H
	mov	eax, DWORD PTR _MenuInteraction$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 882				; 00000372H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 36   : 	
; 37   : 	m_dwPanel = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+948], 0

; 38   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
??0CMenu@@QAE@PADMMEMMPAUMENU_INT@@@Z ENDP		; CMenu::CMenu
_TEXT	ENDS
END
