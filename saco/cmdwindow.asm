; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\cmdwindow.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?SetLocation@CDXUTControl@@QAEXHH@Z		; CDXUTControl::SetLocation
PUBLIC	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
PUBLIC	?GetAt@?$CGrowableArray@PAVCDXUTElement@@@@QAEAAPAVCDXUTElement@@H@Z ; CGrowableArray<CDXUTElement *>::GetAt
PUBLIC	?GetBuffer@CUniBuffer@@QAEPBDXZ			; CUniBuffer::GetBuffer
PUBLIC	?GetText@CDXUTEditBox@@QAEPBDXZ			; CDXUTEditBox::GetText
PUBLIC	?SetCaretColor@CDXUTEditBox@@QAEXK@Z		; CDXUTEditBox::SetCaretColor
PUBLIC	?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ ; CNetGame::GetRakClient
PUBLIC	?GetChatWindowBottom@CChatWindow@@QAEJXZ	; CChatWindow::GetChatWindowBottom
PUBLIC	?Draw@CCmdWindow@@QAEXXZ			; CCmdWindow::Draw
PUBLIC	?Enable@CCmdWindow@@QAEXXZ			; CCmdWindow::Enable
PUBLIC	?Disable@CCmdWindow@@QAEXXZ			; CCmdWindow::Disable
PUBLIC	?MsgProc@CCmdWindow@@QAEHIKK@Z			; CCmdWindow::MsgProc
PUBLIC	?ProcessInput@CCmdWindow@@QAEXXZ		; CCmdWindow::ProcessInput
PUBLIC	?RecallUp@CCmdWindow@@QAEXXZ			; CCmdWindow::RecallUp
PUBLIC	?RecallDown@CCmdWindow@@QAEXXZ			; CCmdWindow::RecallDown
PUBLIC	?GetCmdHandler@CCmdWindow@@QAEP6AXPAD@Z0@Z	; CCmdWindow::GetCmdHandler
PUBLIC	?AddDefaultCmdProc@CCmdWindow@@QAEXP6AXPAD@Z@Z	; CCmdWindow::AddDefaultCmdProc
PUBLIC	?AddCmdProc@CCmdWindow@@QAEXPADP6AX0@Z@Z	; CCmdWindow::AddCmdProc
PUBLIC	?AddToRecallBuffer@CCmdWindow@@QAEXPAD@Z	; CCmdWindow::AddToRecallBuffer
PUBLIC	?SendToServer@CCmdWindow@@QAEXPAD@Z		; CCmdWindow::SendToServer
PUBLIC	?ResetDialogControls@CCmdWindow@@QAEXPAVCDXUTDialog@@@Z ; CCmdWindow::ResetDialogControls
PUBLIC	??0CCmdWindow@@QAE@PAUIDirect3DDevice9@@@Z	; CCmdWindow::CCmdWindow
PUBLIC	??1CCmdWindow@@QAE@XZ				; CCmdWindow::~CCmdWindow
PUBLIC	??$Write@H@BitStream@RakNet@@QAEXH@Z		; RakNet::BitStream::Write<int>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0BL@LEBADKHI@I?5don?8t?5know?5that?5command?4?$AA@ ; `string'
PUBLIC	??_C@_02NAHCMGDM@dj?$AA@			; `string'
PUBLIC	??_C@_1FK@FIMIDMPE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAs?$AAa?$AAc?$AAo?$AA?2?$AAd?$AA3?$AAd?$AA9?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ ; `string'
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAm?$AA_?$AAn?$AAS?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_strncpy:PROC
EXTRN	_stricmp:PROC
EXTRN	__wassert:PROC
EXTRN	?Init@DXUTBlendColor@@QAEXKKK@Z:PROC		; DXUTBlendColor::Init
EXTRN	?AddEditBox@CDXUTDialog@@QAEJHPBDHHHH_NPAPAVCDXUTEditBox@@@Z:PROC ; CDXUTDialog::AddEditBox
EXTRN	?SetText@CDXUTEditBox@@QAEXPBD_N@Z:PROC		; CDXUTEditBox::SetText
EXTRN	?ToggleKeyInputsDisabled@CGame@@QAEXH@Z:PROC	; CGame::ToggleKeyInputsDisabled
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?Write@BitStream@RakNet@@QAEXPBDH@Z:PROC	; RakNet::BitStream::Write
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z:PROC	; RakNet::BitStream::WriteBits
EXTRN	?AddDebugMessage@CChatWindow@@QAAXPADZZ:PROC	; CChatWindow::AddDebugMessage
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	?pNetGame@@3PAVCNetGame@@A:DWORD		; pNetGame
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAm?$AA_?$AAn?$AAS?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAm?$AA_?$AAn?$AAS?$AAi?$AAz?$AAe?$AA?$AA@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@FIMIDMPE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAs?$AAa?$AAc?$AAo?$AA?2?$AAd?$AA3?$AAd?$AA9?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
CONST	SEGMENT
??_C@_1FK@FIMIDMPE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAs?$AAa?$AAc?$AAo?$AA?2?$AAd?$AA3?$AAd?$AA9?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 's', 00H, 'a', 00H, 'c', 00H
	DB	'o', 00H, '\', 00H, 'd', 00H, '3', 00H, 'd', 00H, '9', 00H, '\'
	DB	00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	'\', 00H, 'd', 00H, 'x', 00H, 'u', 00H, 't', 00H, 'm', 00H, 'i'
	DB	00H, 's', 00H, 'c', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02NAHCMGDM@dj?$AA@
CONST	SEGMENT
??_C@_02NAHCMGDM@dj?$AA@ DB 'dj', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LEBADKHI@I?5don?8t?5know?5that?5command?4?$AA@
CONST	SEGMENT
??_C@_0BL@LEBADKHI@I?5don?8t?5know?5that?5command?4?$AA@ DB 'I don''t kno'
	DB	'w that command.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendToServer@CCmdWindow@@QAEXPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendToServer@CCmdWindow@@QAEXPAD@Z$0
__ehfuncinfo$?SendToServer@CCmdWindow@@QAEXPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendToServer@CCmdWindow@@QAEXPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@H@BitStream@RakNet@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Write@H@BitStream@RakNet@@QAEXH@Z PROC		; RakNet::BitStream::Write<int>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@H@BitStream@RakNet@@QAEXH@Z ENDP		; RakNet::BitStream::Write<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ??1CCmdWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CCmdWindow@@QAE@XZ PROC				; CCmdWindow::~CCmdWindow, COMDAT
; _this$ = ecx

; 38   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 39   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCmdWindow@@QAE@XZ ENDP				; CCmdWindow::~CCmdWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ??0CCmdWindow@@QAE@PAUIDirect3DDevice9@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pD3DDevice$ = 8					; size = 4
??0CCmdWindow@@QAE@PAUIDirect3DDevice9@@@Z PROC		; CCmdWindow::CCmdWindow, COMDAT
; _this$ = ecx

; 22   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 23   : 	m_bEnabled				= FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1568], 0

; 24   : 	m_pD3DDevice			= pD3DDevice;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pD3DDevice$[ebp]
	mov	DWORD PTR [eax], ecx

; 25   : 	m_iCmdCount				= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+6312], 0

; 26   : 	m_iCurrentRecallAt		= -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1560], -1

; 27   : 	m_iTotalRecalls			= 0; // I'll be bahk.

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1564], 0

; 28   : 	m_pEditControl			= NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 29   : 
; 30   : 	memset(&m_szRecallBuffer[0],0,(MAX_CMD_INPUT+1)*MAX_RECALLS);

	push	1290					; 0000050aH
	push	0
	mov	eax, 129				; 00000081H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+141]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 31   :     memset(&m_szInputBuffer[0],0,(MAX_CMD_INPUT+1));

	push	129					; 00000081H
	push	0
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+12]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 32   : 	memset(&m_szCurBuffer[0],0,(MAX_CMD_INPUT+1));

	push	129					; 00000081H
	push	0
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1431]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 33   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CCmdWindow@@QAE@PAUIDirect3DDevice9@@@Z ENDP		; CCmdWindow::CCmdWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?ResetDialogControls@CCmdWindow@@QAEXPAVCDXUTDialog@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pGameUI$ = 8						; size = 4
?ResetDialogControls@CCmdWindow@@QAEXPAVCDXUTDialog@@@Z PROC ; CCmdWindow::ResetDialogControls, COMDAT
; _this$ = ecx

; 44   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 	m_pGameUI = pGameUI;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pGameUI$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 46   : 
; 47   : 	if(pGameUI) {

	cmp	DWORD PTR _pGameUI$[ebp], 0
	je	$LN2@ResetDialo

; 48   : 		pGameUI->AddEditBox(IDC_CMDEDIT,"",5,175,420,35,true,&m_pEditControl);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	push	1
	push	35					; 00000023H
	push	420					; 000001a4H
	push	175					; 000000afH
	push	5
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	1
	mov	ecx, DWORD PTR _pGameUI$[ebp]
	call	?AddEditBox@CDXUTDialog@@QAEJHPBDHHHH_NPAPAVCDXUTEditBox@@@Z ; CDXUTDialog::AddEditBox

; 49   : 		m_pEditControl->GetElement(0)->TextureColor.Init(D3DCOLOR_ARGB( 170, 20, 20, 20 ));

	push	0
	push	-931102592				; c8808080H
	push	-1441524716				; aa141414H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 50   : 		m_pEditControl->GetElement(1)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));

	push	0
	push	-931102592				; c8808080H
	push	-939524096				; c8000000H
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 51   : 		m_pEditControl->GetElement(2)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));

	push	0
	push	-931102592				; c8808080H
	push	-939524096				; c8000000H
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 52   : 		m_pEditControl->GetElement(3)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));

	push	0
	push	-931102592				; c8808080H
	push	-939524096				; c8000000H
	push	3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 53   : 		m_pEditControl->GetElement(4)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));

	push	0
	push	-931102592				; c8808080H
	push	-939524096				; c8000000H
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 54   : 		m_pEditControl->GetElement(5)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));

	push	0
	push	-931102592				; c8808080H
	push	-939524096				; c8000000H
	push	5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 55   : 		m_pEditControl->GetElement(6)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));

	push	0
	push	-931102592				; c8808080H
	push	-939524096				; c8000000H
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 56   : 		m_pEditControl->GetElement(7)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));

	push	0
	push	-931102592				; c8808080H
	push	-939524096				; c8000000H
	push	7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 57   : 		m_pEditControl->GetElement(8)->TextureColor.Init(D3DCOLOR_ARGB( 200, 0, 0, 0 ));

	push	0
	push	-931102592				; c8808080H
	push	-939524096				; c8000000H
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?Init@DXUTBlendColor@@QAEXKKK@Z		; DXUTBlendColor::Init

; 58   : 		m_pEditControl->SetTextColor(D3DCOLOR_ARGB( 255, 255, 255, 255 ));

	mov	esi, esp
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 59   : 		m_pEditControl->SetCaretColor(D3DCOLOR_ARGB( 255, 150, 150, 150 ));

	push	-6908266				; ff969696H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?SetCaretColor@CDXUTEditBox@@QAEXK@Z	; CDXUTEditBox::SetCaretColor

; 60   : 		m_pEditControl->SetEnabled(false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 61   : 		m_pEditControl->SetVisible(false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ResetDialo:

; 62   : 	}
; 63   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ResetDialogControls@CCmdWindow@@QAEXPAVCDXUTDialog@@@Z ENDP ; CCmdWindow::ResetDialogControls
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?SendToServer@CCmdWindow@@QAEXPAD@Z
_TEXT	SEGMENT
tv78 = -520						; size = 4
_iStrlen$ = -320					; size = 4
_bsParams$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_szServerCommand$ = 8					; size = 4
?SendToServer@CCmdWindow@@QAEXPAD@Z PROC		; CCmdWindow::SendToServer, COMDAT
; _this$ = ecx

; 271  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendToServer@CCmdWindow@@QAEXPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 508				; 000001fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-520]
	mov	ecx, 127				; 0000007fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 272  : 	if(!pNetGame) return;

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	jne	SHORT $LN1@SendToServ
	jmp	$LN2@SendToServ
$LN1@SendToServ:

; 273  : 
; 274  : 	RakNet::BitStream bsParams;

	lea	ecx, DWORD PTR _bsParams$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 275  : 	int iStrlen = strlen(szServerCommand);

	mov	eax, DWORD PTR _szServerCommand$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _iStrlen$[ebp], eax

; 276  : 
; 277  : 	//pChatWindow->AddDebugMessage("SendToServer(%s,%u)",szServerCommand,iStrlen);
; 278  : 
; 279  : 	bsParams.Write(iStrlen);

	mov	eax, DWORD PTR _iStrlen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsParams$[ebp]
	call	??$Write@H@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::Write<int>

; 280  : 	bsParams.Write(szServerCommand, iStrlen);

	mov	eax, DWORD PTR _iStrlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szServerCommand$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _bsParams$[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDH@Z	; RakNet::BitStream::Write

; 281  : 	pNetGame->GetRakClient()->RPC(RPC_ServerCommand, &bsParams, HIGH_PRIORITY, RELIABLE, 0, false);

	mov	ecx, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	call	?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ ; CNetGame::GetRakClient
	mov	DWORD PTR tv78[ebp], eax
	mov	esi, esp
	push	0
	push	0
	push	2
	push	1
	lea	eax, DWORD PTR _bsParams$[ebp]
	push	eax
	push	OFFSET ??_C@_02NAHCMGDM@dj?$AA@
	mov	ecx, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 282  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsParams$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN2@SendToServ:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@SendToServ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 520				; 00000208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN8@SendToServ:
	DD	1
	DD	$LN7@SendToServ
$LN7@SendToServ:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN5@SendToServ
$LN5@SendToServ:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendToServer@CCmdWindow@@QAEXPAD@Z$0:
	lea	ecx, DWORD PTR _bsParams$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendToServer@CCmdWindow@@QAEXPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-524]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendToServer@CCmdWindow@@QAEXPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendToServer@CCmdWindow@@QAEXPAD@Z ENDP		; CCmdWindow::SendToServer
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?AddToRecallBuffer@CCmdWindow@@QAEXPAD@Z
_TEXT	SEGMENT
_x$ = -20						; size = 4
_this$ = -8						; size = 4
_szCmdInput$ = 8					; size = 4
?AddToRecallBuffer@CCmdWindow@@QAEXPAD@Z PROC		; CCmdWindow::AddToRecallBuffer, COMDAT
; _this$ = ecx

; 94   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 	// Move all the existing recalls up 1
; 96   :     int x=MAX_RECALLS-1;

	mov	DWORD PTR _x$[ebp], 9
$LN3@AddToRecal:

; 97   : 	while(x) {

	cmp	DWORD PTR _x$[ebp], 0
	je	SHORT $LN2@AddToRecal

; 98   : 		strcpy(m_szRecallBuffer[x],m_szRecallBuffer[x-1]);

	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	imul	ecx, eax, 129
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+141]
	push	eax
	imul	ecx, DWORD PTR _x$[ebp], 129
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+141]
	push	eax
	call	_strcpy
	add	esp, 8

; 99   : 		x--;

	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 100  : 	}

	jmp	SHORT $LN3@AddToRecal
$LN2@AddToRecal:

; 101  : 	// Copy this into the first recall slot
; 102  :     strcpy(m_szRecallBuffer[0],szCmdInput);

	mov	eax, DWORD PTR _szCmdInput$[ebp]
	push	eax
	mov	ecx, 129				; 00000081H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+141]
	push	ecx
	call	_strcpy
	add	esp, 8

; 103  : 	if(m_iTotalRecalls < MAX_RECALLS) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1564], 10		; 0000000aH
	jge	SHORT $LN4@AddToRecal

; 104  : 		m_iTotalRecalls++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1564]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1564], ecx
$LN4@AddToRecal:

; 105  : 	}
; 106  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddToRecallBuffer@CCmdWindow@@QAEXPAD@Z ENDP		; CCmdWindow::AddToRecallBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?AddCmdProc@CCmdWindow@@QAEXPADP6AX0@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szCmdName$ = 8						; size = 4
_cmdHandler$ = 12					; size = 4
?AddCmdProc@CCmdWindow@@QAEXPADP6AX0@Z@Z PROC		; CCmdWindow::AddCmdProc, COMDAT
; _this$ = ecx

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 250  : 	if(m_iCmdCount < MAX_CMDS && (strlen(szCmdName) < MAX_CMD_STRLEN)) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+6312], 128		; 00000080H
	jge	SHORT $LN2@AddCmdProc
	mov	eax, DWORD PTR _szCmdName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 32					; 00000020H
	jae	SHORT $LN2@AddCmdProc

; 251  : 		m_pCmds[m_iCmdCount] = cmdHandler;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+6312]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _cmdHandler$[ebp]
	mov	DWORD PTR [edx+ecx*4+1576], eax

; 252  : 		strcpy(m_szCmdNames[m_iCmdCount],szCmdName);

	mov	eax, DWORD PTR _szCmdName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	edx, DWORD PTR [ecx+6312], 33
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+2088]
	push	ecx
	call	_strcpy
	add	esp, 8

; 253  : 		m_iCmdCount++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+6312]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+6312], ecx
$LN2@AddCmdProc:

; 254  : 	}
; 255  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddCmdProc@CCmdWindow@@QAEXPADP6AX0@Z@Z ENDP		; CCmdWindow::AddCmdProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?AddDefaultCmdProc@CCmdWindow@@QAEXP6AXPAD@Z@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cmdDefault$ = 8					; size = 4
?AddDefaultCmdProc@CCmdWindow@@QAEXP6AXPAD@Z@Z PROC	; CCmdWindow::AddDefaultCmdProc, COMDAT
; _this$ = ecx

; 242  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 	m_pDefaultCmd = cmdDefault;	

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cmdDefault$[ebp]
	mov	DWORD PTR [eax+1572], ecx

; 244  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?AddDefaultCmdProc@CCmdWindow@@QAEXP6AXPAD@Z@Z ENDP	; CCmdWindow::AddDefaultCmdProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?GetCmdHandler@CCmdWindow@@QAEP6AXPAD@Z0@Z
_TEXT	SEGMENT
_x$ = -20						; size = 4
_this$ = -8						; size = 4
_szCmdName$ = 8						; size = 4
?GetCmdHandler@CCmdWindow@@QAEP6AXPAD@Z0@Z PROC		; CCmdWindow::GetCmdHandler, COMDAT
; _this$ = ecx

; 228  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 229  : 	int x=0;

	mov	DWORD PTR _x$[ebp], 0
$LN3@GetCmdHand:

; 230  : 	while(x!=m_iCmdCount) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	cmp	ecx, DWORD PTR [eax+6312]
	je	SHORT $LN2@GetCmdHand

; 231  : 		if(!stricmp(szCmdName,m_szCmdNames[x])) {

	imul	eax, DWORD PTR _x$[ebp], 33
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2088]
	push	edx
	mov	eax, DWORD PTR _szCmdName$[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@GetCmdHand

; 232  : 			return m_pCmds[x];

	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+1576]
	jmp	SHORT $LN4@GetCmdHand
$LN1@GetCmdHand:

; 233  : 		}
; 234  : 		x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 235  : 	}

	jmp	SHORT $LN3@GetCmdHand
$LN2@GetCmdHand:

; 236  : 	return NULL;

	xor	eax, eax
$LN4@GetCmdHand:

; 237  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetCmdHandler@CCmdWindow@@QAEP6AXPAD@Z0@Z ENDP		; CCmdWindow::GetCmdHandler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?RecallDown@CCmdWindow@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?RecallDown@CCmdWindow@@QAEXXZ PROC			; CCmdWindow::RecallDown, COMDAT
; _this$ = ecx

; 128  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 129  : 	m_iCurrentRecallAt--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1560]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1560], ecx

; 130  : 	if(m_iCurrentRecallAt >= 0) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1560], 0
	jl	SHORT $LN3@RecallDown

; 131  : 		m_pEditControl->SetText(m_szRecallBuffer[m_iCurrentRecallAt]);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+1560], 129
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+141]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?SetText@CDXUTEditBox@@QAEXPBD_N@Z	; CDXUTEditBox::SetText

; 132  : 		//pChatWindow->AddDebugMessage("RecallAt: %d",m_iCurrentRecallAt);
; 133  : 	} else {

	jmp	SHORT $LN4@RecallDown
$LN3@RecallDown:

; 134  : 		if(m_iCurrentRecallAt == -1) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1560], -1
	jne	SHORT $LN1@RecallDown

; 135  : 			m_pEditControl->SetText(m_szCurBuffer);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1431				; 00000597H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?SetText@CDXUTEditBox@@QAEXPBD_N@Z	; CDXUTEditBox::SetText
$LN1@RecallDown:

; 136  : 			//pChatWindow->AddDebugMessage("RecallAt: -cur-");
; 137  : 		}
; 138  : 		m_iCurrentRecallAt = -1;		

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1560], -1
$LN4@RecallDown:

; 139  : 	}	
; 140  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RecallDown@CCmdWindow@@QAEXXZ ENDP			; CCmdWindow::RecallDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?RecallUp@CCmdWindow@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?RecallUp@CCmdWindow@@QAEXXZ PROC			; CCmdWindow::RecallUp, COMDAT
; _this$ = ecx

; 111  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 	if(m_iCurrentRecallAt >= (m_iTotalRecalls - 1)) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1564]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1560], ecx
	jl	SHORT $LN2@RecallUp
	jmp	SHORT $LN3@RecallUp
$LN2@RecallUp:

; 113  : 
; 114  : 	if(m_iCurrentRecallAt == -1) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1560], -1
	jne	SHORT $LN1@RecallUp

; 115  : 		// Save the current buffer incase we want to return to it.
; 116  : 		strncpy(m_szCurBuffer,m_pEditControl->GetText(),MAX_CMD_INPUT);

	push	128					; 00000080H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetText@CDXUTEditBox@@QAEPBDXZ		; CDXUTEditBox::GetText
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1431				; 00000597H
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 117  : 		m_szCurBuffer[MAX_CMD_INPUT] = '\0';

	mov	eax, 1
	shl	eax, 7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax+1431], 0
$LN1@RecallUp:

; 118  : 	}
; 119  : 
; 120  : 	m_iCurrentRecallAt++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1560]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1560], ecx

; 121  : 	m_pEditControl->SetText(m_szRecallBuffer[m_iCurrentRecallAt]);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+1560], 129
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+141]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?SetText@CDXUTEditBox@@QAEXPBD_N@Z	; CDXUTEditBox::SetText
$LN3@RecallUp:

; 122  : 	//pChatWindow->AddDebugMessage("RecallAt: %d",m_iCurrentRecallAt);	
; 123  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RecallUp@CCmdWindow@@QAEXXZ ENDP			; CCmdWindow::RecallUp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?ProcessInput@CCmdWindow@@QAEXXZ
_TEXT	SEGMENT
_szCopiedBuffer$1 = -176				; size = 129
_cmdHandler$ = -36					; size = 4
_szCmdEndPos$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?ProcessInput@CCmdWindow@@QAEXXZ PROC			; CCmdWindow::ProcessInput, COMDAT
; _this$ = ecx

; 151  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 152  : 	PCHAR szCmdEndPos;
; 153  : 	CMDPROC cmdHandler;
; 154  : 
; 155  : 	if(!m_pEditControl) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN19@ProcessInp
	jmp	$LN20@ProcessInp
$LN19@ProcessInp:

; 156  : 
; 157  : 	strncpy(m_szInputBuffer,m_pEditControl->GetText(),MAX_CMD_INPUT);

	push	128					; 00000080H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetText@CDXUTEditBox@@QAEPBDXZ		; CDXUTEditBox::GetText
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 158  : 	m_szInputBuffer[MAX_CMD_INPUT] = '\0';

	mov	eax, 1
	shl	eax, 7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax+12], 0

; 159  :     
; 160  : 	// don't process 0 length input
; 161  : 	if(!strlen(m_szInputBuffer)) {

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN18@ProcessInp

; 162  : 		if(m_bEnabled) Disable();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1568], 0
	je	SHORT $LN17@ProcessInp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Disable@CCmdWindow@@QAEXXZ		; CCmdWindow::Disable
$LN17@ProcessInp:

; 163  : 		return;

	jmp	$LN20@ProcessInp
$LN18@ProcessInp:

; 164  : 	}
; 165  : 
; 166  :     // remember this command for later use in the recalls.	
; 167  :     AddToRecallBuffer(m_szInputBuffer);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToRecallBuffer@CCmdWindow@@QAEXPAD@Z ; CCmdWindow::AddToRecallBuffer

; 168  : 	m_iCurrentRecallAt = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1560], -1

; 169  : 
; 170  : 	if(*m_szInputBuffer != CMD_CHARACTER) { 

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+ecx+12]
	cmp	eax, 47					; 0000002fH
	je	SHORT $LN16@ProcessInp

; 171  : 		// chat type message	
; 172  : 		if(m_pDefaultCmd) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1572], 0
	je	SHORT $LN15@ProcessInp

; 173  : 			m_pDefaultCmd(m_szInputBuffer);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1572]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@ProcessInp:

; 174  : 		}
; 175  : 	}
; 176  : 	else 

	jmp	$LN14@ProcessInp
$LN16@ProcessInp:

; 177  : 	{// possible valid command
; 178  : 		// find the end of the name
; 179  : 		szCmdEndPos = m_szInputBuffer + 1;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 13					; 0000000dH
	mov	DWORD PTR _szCmdEndPos$[ebp], eax
$LN13@ProcessInp:

; 180  : 		while(*szCmdEndPos && *szCmdEndPos != ' ') szCmdEndPos++;

	mov	eax, DWORD PTR _szCmdEndPos$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@ProcessInp
	mov	eax, DWORD PTR _szCmdEndPos$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN12@ProcessInp
	mov	eax, DWORD PTR _szCmdEndPos$[ebp]
	add	eax, 1
	mov	DWORD PTR _szCmdEndPos$[ebp], eax
	jmp	SHORT $LN13@ProcessInp
$LN12@ProcessInp:

; 181  : 		if(*szCmdEndPos == '\0') {

	mov	eax, DWORD PTR _szCmdEndPos$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN11@ProcessInp

; 182  : 			// Possible command with no params.
; 183  : 			cmdHandler = GetCmdHandler(m_szInputBuffer + 1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 13					; 0000000dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCmdHandler@CCmdWindow@@QAEP6AXPAD@Z0@Z ; CCmdWindow::GetCmdHandler
	mov	DWORD PTR _cmdHandler$[ebp], eax

; 184  : 			// If valid then call it.
; 185  : 			if(cmdHandler) {

	cmp	DWORD PTR _cmdHandler$[ebp], 0
	je	SHORT $LN10@ProcessInp

; 186  : 				cmdHandler("");

	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	DWORD PTR _cmdHandler$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 187  : 			}
; 188  : 			else {

	jmp	SHORT $LN9@ProcessInp
$LN10@ProcessInp:

; 189  : 				if (pNetGame) {

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	SHORT $LN8@ProcessInp

; 190  : 					SendToServer(m_szInputBuffer);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendToServer@CCmdWindow@@QAEXPAD@Z	; CCmdWindow::SendToServer

; 191  : 				}
; 192  : 				else {

	jmp	SHORT $LN9@ProcessInp
$LN8@ProcessInp:

; 193  : 					pChatWindow->AddDebugMessage("I don't know that command.");

	push	OFFSET ??_C@_0BL@LEBADKHI@I?5don?8t?5know?5that?5command?4?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8
$LN9@ProcessInp:

; 194  : 				}
; 195  : 			}
; 196  : 		}
; 197  : 		else {

	jmp	SHORT $LN14@ProcessInp
$LN11@ProcessInp:

; 198  : 			char szCopiedBuffer[MAX_CMD_INPUT+1];
; 199  : 			strcpy(szCopiedBuffer, m_szInputBuffer);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _szCopiedBuffer$1[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 200  : 
; 201  : 			*szCmdEndPos='\0'; // null terminate it

	mov	eax, DWORD PTR _szCmdEndPos$[ebp]
	mov	BYTE PTR [eax], 0

; 202  : 			szCmdEndPos++; // rest is the parameters.

	mov	eax, DWORD PTR _szCmdEndPos$[ebp]
	add	eax, 1
	mov	DWORD PTR _szCmdEndPos$[ebp], eax

; 203  : 			cmdHandler = GetCmdHandler(m_szInputBuffer + 1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 13					; 0000000dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCmdHandler@CCmdWindow@@QAEP6AXPAD@Z0@Z ; CCmdWindow::GetCmdHandler
	mov	DWORD PTR _cmdHandler$[ebp], eax

; 204  : 			// If valid then call it with the param string.
; 205  : 			if(cmdHandler) {

	cmp	DWORD PTR _cmdHandler$[ebp], 0
	je	SHORT $LN5@ProcessInp

; 206  : 				cmdHandler(szCmdEndPos);

	mov	esi, esp
	mov	eax, DWORD PTR _szCmdEndPos$[ebp]
	push	eax
	call	DWORD PTR _cmdHandler$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 207  : 			}
; 208  : 			else {

	jmp	SHORT $LN14@ProcessInp
$LN5@ProcessInp:

; 209  : 				if (pNetGame) {

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	SHORT $LN3@ProcessInp

; 210  : 					SendToServer(szCopiedBuffer);

	lea	eax, DWORD PTR _szCopiedBuffer$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendToServer@CCmdWindow@@QAEXPAD@Z	; CCmdWindow::SendToServer

; 211  : 				}
; 212  : 				else {

	jmp	SHORT $LN14@ProcessInp
$LN3@ProcessInp:

; 213  : 					pChatWindow->AddDebugMessage("I don't know that command.");

	push	OFFSET ??_C@_0BL@LEBADKHI@I?5don?8t?5know?5that?5command?4?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8
$LN14@ProcessInp:

; 214  : 				}
; 215  : 			}
; 216  : 		}
; 217  : 	}
; 218  : 
; 219  : 	*m_szInputBuffer ='\0';	

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+12], 0

; 220  : 	m_pEditControl->SetText("",false);

	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?SetText@CDXUTEditBox@@QAEXPBD_N@Z	; CDXUTEditBox::SetText

; 221  : 
; 222  : 	if(m_bEnabled) Disable();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1568], 0
	je	SHORT $LN20@ProcessInp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Disable@CCmdWindow@@QAEXXZ		; CCmdWindow::Disable
$LN20@ProcessInp:

; 223  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@ProcessInp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN24@ProcessInp:
	DD	1
	DD	$LN23@ProcessInp
$LN23@ProcessInp:
	DD	-176					; ffffff50H
	DD	129					; 00000081H
	DD	$LN22@ProcessInp
$LN22@ProcessInp:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?ProcessInput@CCmdWindow@@QAEXXZ ENDP			; CCmdWindow::ProcessInput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?MsgProc@CCmdWindow@@QAEHIKK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?MsgProc@CCmdWindow@@QAEHIKK@Z PROC			; CCmdWindow::MsgProc, COMDAT
; _this$ = ecx

; 260  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 261  : 	if(m_bEnabled && m_pEditControl) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1568], 0
	je	SHORT $LN1@MsgProc
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@MsgProc

; 262  : 		m_pEditControl->MsgProc(uMsg,wParam,lParam);

	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 263  : 		m_pEditControl->HandleKeyboard(uMsg,wParam,lParam);

	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@MsgProc:

; 264  : 	}
; 265  : 	return 0;

	xor	eax, eax

; 266  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MsgProc@CCmdWindow@@QAEHIKK@Z ENDP			; CCmdWindow::MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?Disable@CCmdWindow@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Disable@CCmdWindow@@QAEXXZ PROC			; CCmdWindow::Disable, COMDAT
; _this$ = ecx

; 82   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   : 	m_bEnabled = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1568], 0

; 84   : 	if(m_pEditControl) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@Disable

; 85   : 		m_pEditControl->SetEnabled(false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 86   : 		m_pEditControl->SetVisible(false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Disable:

; 87   : 	}
; 88   : 	pGame->ToggleKeyInputsDisabled(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?ToggleKeyInputsDisabled@CGame@@QAEXH@Z	; CGame::ToggleKeyInputsDisabled

; 89   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Disable@CCmdWindow@@QAEXXZ ENDP			; CCmdWindow::Disable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?Enable@CCmdWindow@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Enable@CCmdWindow@@QAEXXZ PROC				; CCmdWindow::Enable, COMDAT
; _this$ = ecx

; 68   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 69   : 	m_bEnabled = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1568], 1

; 70   : 	if(m_pEditControl) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@Enable

; 71   : 		m_pEditControl->SetEnabled(true);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 72   : 		m_pEditControl->SetVisible(true);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 73   : 		m_pEditControl->SetLocation(20,pChatWindow->GetChatWindowBottom());

	mov	ecx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	call	?GetChatWindowBottom@CChatWindow@@QAEJXZ ; CChatWindow::GetChatWindowBottom
	push	eax
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?SetLocation@CDXUTControl@@QAEXHH@Z	; CDXUTControl::SetLocation
$LN1@Enable:

; 74   : 	}
; 75   : 	pGame->ToggleKeyInputsDisabled(TRUE);

	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?ToggleKeyInputsDisabled@CGame@@QAEXH@Z	; CGame::ToggleKeyInputsDisabled

; 76   : 	
; 77   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Enable@CCmdWindow@@QAEXXZ ENDP				; CCmdWindow::Enable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\cmdwindow.cpp
;	COMDAT ?Draw@CCmdWindow@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Draw@CCmdWindow@@QAEXXZ PROC				; CCmdWindow::Draw, COMDAT
; _this$ = ecx

; 145  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 146  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Draw@CCmdWindow@@QAEXXZ ENDP				; CCmdWindow::Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\chatwindow.h
;	COMDAT ?GetChatWindowBottom@CChatWindow@@QAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetChatWindowBottom@CChatWindow@@QAEJXZ PROC		; CChatWindow::GetChatWindowBottom, COMDAT
; _this$ = ecx

; 92   : 	LONG GetChatWindowBottom() { return m_lChatWindowBottom; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8324]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetChatWindowBottom@CChatWindow@@QAEJXZ ENDP		; CChatWindow::GetChatWindowBottom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\netgame.h
;	COMDAT ?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ PROC ; CNetGame::GetRakClient, COMDAT
; _this$ = ecx

; 103  : 	RakClientInterface * GetRakClient() { return m_pRakClient; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRakClient@CNetGame@@QAEPAVRakClientInterface@@XZ ENDP ; CNetGame::GetRakClient
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutgui.h
;	COMDAT ?SetCaretColor@CDXUTEditBox@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Color$ = 8						; size = 4
?SetCaretColor@CDXUTEditBox@@QAEXK@Z PROC		; CDXUTEditBox::SetCaretColor, COMDAT
; _this$ = ecx

; 853  :     void SetCaretColor( D3DCOLOR Color ) { m_CaretColor = Color; }  // Caret color

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [eax+304], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCaretColor@CDXUTEditBox@@QAEXK@Z ENDP		; CDXUTEditBox::SetCaretColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutgui.h
;	COMDAT ?GetText@CDXUTEditBox@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetText@CDXUTEditBox@@QAEPBDXZ PROC			; CDXUTEditBox::GetText, COMDAT
; _this$ = ecx

; 846  :     LPCTSTR GetText() { return m_Buffer.GetBuffer(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 77					; 0000004dH
	call	?GetBuffer@CUniBuffer@@QAEPBDXZ		; CUniBuffer::GetBuffer
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@CDXUTEditBox@@QAEPBDXZ ENDP			; CDXUTEditBox::GetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutgui.h
;	COMDAT ?GetBuffer@CUniBuffer@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetBuffer@CUniBuffer@@QAEPBDXZ PROC			; CUniBuffer::GetBuffer, COMDAT
; _this$ = ecx

; 776  :     const TCHAR* GetBuffer() { return m_pwszBuffer; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBuffer@CUniBuffer@@QAEPBDXZ ENDP			; CUniBuffer::GetBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutmisc.h
;	COMDAT ?GetAt@?$CGrowableArray@PAVCDXUTElement@@@@QAEAAPAVCDXUTElement@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nIndex$ = 8						; size = 4
?GetAt@?$CGrowableArray@PAVCDXUTElement@@@@QAEAAPAVCDXUTElement@@H@Z PROC ; CGrowableArray<CDXUTElement *>::GetAt, COMDAT
; _this$ = ecx

; 33   :     TYPE&   GetAt( int nIndex ) { assert( nIndex >= 0 && nIndex < m_nSize ); return m_pData[nIndex]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _nIndex$[ebp], 0
	jl	SHORT $LN3@GetAt
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jl	SHORT $LN4@GetAt
$LN3@GetAt:
	push	33					; 00000021H
	push	OFFSET ??_C@_1FK@FIMIDMPE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAs?$AAa?$AAc?$AAo?$AA?2?$AAd?$AA3?$AAd?$AA9?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@
	push	OFFSET ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAm?$AA_?$AAn?$AAS?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@GetAt:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@?$CGrowableArray@PAVCDXUTElement@@@@QAEAAPAVCDXUTElement@@H@Z ENDP ; CGrowableArray<CDXUTElement *>::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutgui.h
;	COMDAT ?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iElement$ = 8						; size = 4
?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z PROC	; CDXUTControl::GetElement, COMDAT
; _this$ = ecx

; 398  :     CDXUTElement* GetElement( UINT iElement ) { return m_Elements.GetAt( iElement ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _iElement$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?GetAt@?$CGrowableArray@PAVCDXUTElement@@@@QAEAAPAVCDXUTElement@@H@Z ; CGrowableArray<CDXUTElement *>::GetAt
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetElement@CDXUTControl@@QAEPAVCDXUTElement@@I@Z ENDP	; CDXUTControl::GetElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\d3d9\common\dxutgui.h
;	COMDAT ?SetLocation@CDXUTControl@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetLocation@CDXUTControl@@QAEXHH@Z PROC		; CDXUTControl::SetLocation, COMDAT
; _this$ = ecx

; 388  :     void SetLocation( int x, int y ) { m_x = x; m_y = y; UpdateRects(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetLocation@CDXUTControl@@QAEXHH@Z ENDP		; CDXUTControl::SetLocation
_TEXT	ENDS
END
