; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\game\vehicle.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?dwLastCreatedVehicleID@@3KA			; dwLastCreatedVehicleID
PUBLIC	?dwNumVehicles@@3KA				; dwNumVehicles
_BSS	SEGMENT
?dwLastCreatedVehicleID@@3KA DD 01H DUP (?)		; dwLastCreatedVehicleID
?dwNumVehicles@@3KA DD 01H DUP (?)			; dwNumVehicles
_BSS	ENDS
CONST	SEGMENT
_create_car DW	0a5H
	DB	'ifffv', 00H
	ORG $+10
	ORG $+2
_set_car_color DW 0229H
	DB	'iii', 00H
	ORG $+12
	ORG $+2
_destroy_car DW	0a6H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_set_car_z_angle DW 0175H
	DB	'if', 00H
	ORG $+13
	ORG $+2
_tie_marker_to_car DW 0161H
	DB	'iiiv', 00H
	ORG $+11
	ORG $+2
_disable_marker DW 0164H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_set_marker_color DW 0165H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_show_on_radar DW 0168H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_has_car_sunk DW 02bfH
	DB	'i', 00H
	ORG $+14
	ORG $+2
_is_car_wrecked DW 0119H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_set_car_immunities DW 02acH
	DB	'iiiiii', 00H
	ORG $+9
	ORG $+2
_remove_actor_from_car_and_put_at DW 0362H
	DB	'ifff', 00H
	ORG $+11
	ORG $+2
_create_train DW 06d8H
	DB	'ifffiv', 00H
	ORG $+9
	ORG $+2
_car_gas_tank_explosion DW 09c4H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_lock_car DW	0519H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_set_car_hydraulics DW 07ffH
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_toggle_car_tires_vulnerable DW 053fH
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_link_vehicle_to_interior DW 0840H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_put_trailer_on_cab DW 0893H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_detach_trailer_from_cab DW 07acH
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_set_car_numberplate DW 0674H
	DB	'is', 00H
	ORG $+13
CONST	ENDS
PUBLIC	??0CEntity@@QAE@XZ				; CEntity::CEntity
PUBLIC	??1CEntity@@UAE@XZ				; CEntity::~CEntity
PUBLIC	??_GCEntity@@UAEPAXI@Z				; CEntity::`scalar deleting destructor'
PUBLIC	??0CVehicle@@QAE@HMMMMPAD@Z			; CVehicle::CVehicle
PUBLIC	??1CVehicle@@UAE@XZ				; CVehicle::~CVehicle
PUBLIC	?Add@CVehicle@@UAEXXZ				; CVehicle::Add
PUBLIC	?Remove@CVehicle@@UAEXXZ			; CVehicle::Remove
PUBLIC	?ResetPointers@CVehicle@@QAEXXZ			; CVehicle::ResetPointers
PUBLIC	?ProcessMarkers@CVehicle@@QAEXXZ		; CVehicle::ProcessMarkers
PUBLIC	?SetLockedState@CVehicle@@QAEXH@Z		; CVehicle::SetLockedState
PUBLIC	?GetVehicleSubtype@CVehicle@@QAEIXZ		; CVehicle::GetVehicleSubtype
PUBLIC	?GetHealth@CVehicle@@QAEMXZ			; CVehicle::GetHealth
PUBLIC	?SetHealth@CVehicle@@QAEXM@Z			; CVehicle::SetHealth
PUBLIC	?SetColor@CVehicle@@QAEXHH@Z			; CVehicle::SetColor
PUBLIC	?HasSunk@CVehicle@@QAEHXZ			; CVehicle::HasSunk
PUBLIC	?IsWrecked@CVehicle@@QAEHXZ			; CVehicle::IsWrecked
PUBLIC	?IsDriverLocalPlayer@CVehicle@@QAEHXZ		; CVehicle::IsDriverLocalPlayer
PUBLIC	?IsATrainPart@CVehicle@@QAEHXZ			; CVehicle::IsATrainPart
PUBLIC	?HasTurret@CVehicle@@QAEHXZ			; CVehicle::HasTurret
PUBLIC	?SetHydraThrusters@CVehicle@@QAEXK@Z		; CVehicle::SetHydraThrusters
PUBLIC	?GetHydraThrusters@CVehicle@@QAEKXZ		; CVehicle::GetHydraThrusters
PUBLIC	?SetTankRot@CVehicle@@QAEXMM@Z			; CVehicle::SetTankRot
PUBLIC	?GetTankRotX@CVehicle@@QAEMXZ			; CVehicle::GetTankRotX
PUBLIC	?GetTankRotY@CVehicle@@QAEMXZ			; CVehicle::GetTankRotY
PUBLIC	?GetTrainSpeed@CVehicle@@QAEMXZ			; CVehicle::GetTrainSpeed
PUBLIC	?SetTrainSpeed@CVehicle@@QAEXM@Z		; CVehicle::SetTrainSpeed
PUBLIC	?GetPassengersMax@CVehicle@@QAEIXZ		; CVehicle::GetPassengersMax
PUBLIC	?SetSirenOn@CVehicle@@QAEXH@Z			; CVehicle::SetSirenOn
PUBLIC	?IsSirenOn@CVehicle@@QAEHXZ			; CVehicle::IsSirenOn
PUBLIC	?SetLandingGearState@CVehicle@@QAEXW4eLandingGearState@@@Z ; CVehicle::SetLandingGearState
PUBLIC	?GetLandingGearState@CVehicle@@QAE?AW4eLandingGearState@@XZ ; CVehicle::GetLandingGearState
PUBLIC	?SetInvulnerable@CVehicle@@QAEXH@Z		; CVehicle::SetInvulnerable
PUBLIC	?SetEngineState@CVehicle@@QAEXH@Z		; CVehicle::SetEngineState
PUBLIC	?SetDoorState@CVehicle@@QAEXH@Z			; CVehicle::SetDoorState
PUBLIC	?LinkToInterior@CVehicle@@QAEXH@Z		; CVehicle::LinkToInterior
PUBLIC	?SetWheelPopped@CVehicle@@QAEXKK@Z		; CVehicle::SetWheelPopped
PUBLIC	?GetWheelPopped@CVehicle@@QAEEK@Z		; CVehicle::GetWheelPopped
PUBLIC	?AttachTrailer@CVehicle@@QAEXXZ			; CVehicle::AttachTrailer
PUBLIC	?DetachTrailer@CVehicle@@QAEXXZ			; CVehicle::DetachTrailer
PUBLIC	?SetTrailer@CVehicle@@QAEXPAV1@@Z		; CVehicle::SetTrailer
PUBLIC	?GetTrailer@CVehicle@@QAEPAV1@XZ		; CVehicle::GetTrailer
PUBLIC	?IsRCVehicle@CVehicle@@QAEHXZ			; CVehicle::IsRCVehicle
PUBLIC	?IsOccupied@CVehicle@@QAEHXZ			; CVehicle::IsOccupied
PUBLIC	?Recreate@CVehicle@@QAEXXZ			; CVehicle::Recreate
PUBLIC	?UpdateLastDrivenTime@CVehicle@@QAEHXZ		; CVehicle::UpdateLastDrivenTime
PUBLIC	?ProcessEngineAudio@CVehicle@@QAEXE@Z		; CVehicle::ProcessEngineAudio
PUBLIC	?RemoveEveryoneFromVehicle@CVehicle@@QAEXXZ	; CVehicle::RemoveEveryoneFromVehicle
PUBLIC	?SetHornState@CVehicle@@QAEXE@Z			; CVehicle::SetHornState
PUBLIC	?HasADriver@CVehicle@@QAEHXZ			; CVehicle::HasADriver
PUBLIC	?VerifyInstance@CVehicle@@QAEHXZ		; CVehicle::VerifyInstance
PUBLIC	??_GCVehicle@@UAEPAXI@Z				; CVehicle::`scalar deleting destructor'
PUBLIC	?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z	; CVehiclePool::GetAt
PUBLIC	?GetSlotState@CVehiclePool@@QAEHG@Z		; CVehiclePool::GetSlotState
PUBLIC	?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ; CNetGame::GetVehiclePool
PUBLIC	??_7CEntity@@6B@				; CEntity::`vftable'
PUBLIC	??_7CVehicle@@6B@				; CVehicle::`vftable'
PUBLIC	??_R4CEntity@@6B@				; CEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEntity@@@8				; CEntity `RTTI Type Descriptor'
PUBLIC	??_R3CEntity@@8					; CEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEntity@@8					; CEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEntity@@8			; CEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CVehicle@@6B@				; CVehicle::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCVehicle@@@8				; CVehicle `RTTI Type Descriptor'
PUBLIC	??_R3CVehicle@@8				; CVehicle::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CVehicle@@8				; CVehicle::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CVehicle@@8			; CVehicle::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@43480000
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?Add@CEntity@@UAEXXZ:PROC			; CEntity::Add
EXTRN	?Remove@CEntity@@UAEXXZ:PROC			; CEntity::Remove
EXTRN	?IsAdded@CEntity@@QAEHXZ:PROC			; CEntity::IsAdded
EXTRN	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z:PROC	; CEntity::GetMatrix
EXTRN	?SetMatrix@CEntity@@QAEXU_MATRIX4X4@@@Z:PROC	; CEntity::SetMatrix
EXTRN	?GetModelIndex@CEntity@@QAEIXZ:PROC		; CEntity::GetModelIndex
EXTRN	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ:PROC ; CEntity::GetDistanceFromLocalPlayerPed
EXTRN	??_ECEntity@@UAEPAXI@Z:PROC			; CEntity::`vector deleting destructor'
EXTRN	??_ECVehicle@@UAEPAXI@Z:PROC			; CVehicle::`vector deleting destructor'
EXTRN	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ:PROC	; ScriptCommand
EXTRN	?RequestModel@CGame@@QAEXH@Z:PROC		; CGame::RequestModel
EXTRN	?LoadRequestedModels@CGame@@QAEXXZ:PROC		; CGame::LoadRequestedModels
EXTRN	?IsModelLoaded@CGame@@QAEHH@Z:PROC		; CGame::IsModelLoaded
EXTRN	?RemoveModel@CGame@@QAEXH@Z:PROC		; CGame::RemoveModel
EXTRN	?FindIDFromGtaPtr@CVehiclePool@@QAEGPAU_VEHICLE_TYPE@@@Z:PROC ; CVehiclePool::FindIDFromGtaPtr
EXTRN	?GamePool_Ped_GetIndex@@YGHPAU_PED_TYPE@@@Z:PROC ; GamePool_Ped_GetIndex
EXTRN	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z:PROC ; GamePool_Vehicle_GetAt
EXTRN	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ:PROC ; GamePool_FindPlayerPed
EXTRN	?GamePrepareTrain@@YGXPAU_VEHICLE_TYPE@@@Z:PROC	; GamePrepareTrain
EXTRN	?GameStoreLocalPlayerKeys@@YAXXZ:PROC		; GameStoreLocalPlayerKeys
EXTRN	?GameSetLocalPlayerKeys@@YAXXZ:PROC		; GameSetLocalPlayerKeys
EXTRN	?GameSetRemotePlayerKeys@@YAXH@Z:PROC		; GameSetRemotePlayerKeys
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	?pNetGame@@3PAVCNetGame@@A:DWORD		; pNetGame
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@CVehicle@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CVehicle@@8 DD FLAT:??_R0?AVCVehicle@@@8	; CVehicle::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CVehicle@@8
rdata$r	ENDS
;	COMDAT ??_R2CVehicle@@8
rdata$r	SEGMENT
??_R2CVehicle@@8 DD FLAT:??_R1A@?0A@EA@CVehicle@@8	; CVehicle::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CVehicle@@8
rdata$r	SEGMENT
??_R3CVehicle@@8 DD 00H					; CVehicle::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CVehicle@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCVehicle@@@8
data$r	SEGMENT
??_R0?AVCVehicle@@@8 DD FLAT:??_7type_info@@6B@		; CVehicle `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCVehicle@@', 00H
data$r	ENDS
;	COMDAT ??_R4CVehicle@@6B@
rdata$r	SEGMENT
??_R4CVehicle@@6B@ DD 00H				; CVehicle::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCVehicle@@@8
	DD	FLAT:??_R3CVehicle@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEntity@@8 DD FLAT:??_R0?AVCEntity@@@8	; CEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2CEntity@@8
rdata$r	SEGMENT
??_R2CEntity@@8 DD FLAT:??_R1A@?0A@EA@CEntity@@8	; CEntity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEntity@@8
rdata$r	SEGMENT
??_R3CEntity@@8 DD 00H					; CEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEntity@@@8
data$r	SEGMENT
??_R0?AVCEntity@@@8 DD FLAT:??_7type_info@@6B@		; CEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEntity@@', 00H
data$r	ENDS
;	COMDAT ??_R4CEntity@@6B@
rdata$r	SEGMENT
??_R4CEntity@@6B@ DD 00H				; CEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEntity@@@8
	DD	FLAT:??_R3CEntity@@8
rdata$r	ENDS
;	COMDAT ??_7CVehicle@@6B@
CONST	SEGMENT
??_7CVehicle@@6B@ DD FLAT:??_R4CVehicle@@6B@		; CVehicle::`vftable'
	DD	FLAT:??_ECVehicle@@UAEPAXI@Z
	DD	FLAT:?Add@CVehicle@@UAEXXZ
	DD	FLAT:?Remove@CVehicle@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CEntity@@6B@
CONST	SEGMENT
??_7CEntity@@6B@ DD FLAT:??_R4CEntity@@6B@		; CEntity::`vftable'
	DD	FLAT:??_ECEntity@@UAEPAXI@Z
	DD	FLAT:?Add@CEntity@@UAEXXZ
	DD	FLAT:?Remove@CEntity@@UAEXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CVehicle@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CVehicle@@UAE@XZ$0
__ehfuncinfo$??1CVehicle@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CVehicle@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CVehicle@@QAE@HMMMMPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CVehicle@@QAE@HMMMMPAD@Z$0
__ehfuncinfo$??0CVehicle@@QAE@HMMMMPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CVehicle@@QAE@HMMMMPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\netgame.h
;	COMDAT ?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ PROC	; CNetGame::GetVehiclePool, COMDAT
; _this$ = ecx

; 97   : 	CVehiclePool * GetVehiclePool() { return m_pVehiclePool; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ENDP	; CNetGame::GetVehiclePool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\vehiclepool.h
;	COMDAT ?GetSlotState@CVehiclePool@@QAEHG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_VehicleID$ = 8						; size = 2
?GetSlotState@CVehiclePool@@QAEHG@Z PROC		; CVehiclePool::GetSlotState, COMDAT
; _this$ = ecx

; 64   : 	BOOL GetSlotState(VEHICLEID VehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 		if(VehicleID >= MAX_VEHICLES) { return FALSE; }

	movzx	eax, WORD PTR _VehicleID$[ebp]
	cmp	eax, 702				; 000002beH
	jl	SHORT $LN1@GetSlotSta
	xor	eax, eax
	jmp	SHORT $LN2@GetSlotSta
$LN1@GetSlotSta:

; 66   : 		return m_bVehicleSlotState[VehicleID];

	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
$LN2@GetSlotSta:

; 67   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSlotState@CVehiclePool@@QAEHG@Z ENDP		; CVehiclePool::GetSlotState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\net\vehiclepool.h
;	COMDAT ?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_VehicleID$ = 8						; size = 2
?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z PROC		; CVehiclePool::GetAt, COMDAT
; _this$ = ecx

; 58   : 	CVehicle* GetAt(VEHICLEID VehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		if(VehicleID >= MAX_VEHICLES || !m_bVehicleSlotState[VehicleID]) { return NULL; }

	movzx	eax, WORD PTR _VehicleID$[ebp]
	cmp	eax, 702				; 000002beH
	jge	SHORT $LN1@GetAt
	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jne	SHORT $LN2@GetAt
$LN1@GetAt:
	xor	eax, eax
	jmp	SHORT $LN3@GetAt
$LN2@GetAt:

; 60   : 		return m_pVehicles[VehicleID];

	movzx	eax, WORD PTR _VehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+2808]
$LN3@GetAt:

; 61   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z ENDP		; CVehiclePool::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCVehicle@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCVehicle@@UAEPAXI@Z PROC				; CVehicle::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CVehicle@@UAE@XZ			; CVehicle::~CVehicle
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCVehicle@@UAEPAXI@Z ENDP				; CVehicle::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?VerifyInstance@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?VerifyInstance@CVehicle@@QAEHXZ PROC			; CVehicle::VerifyInstance, COMDAT
; _this$ = ecx

; 764  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 765  : 	if(GamePool_Vehicle_GetAt(m_dwGTAId)) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	test	eax, eax
	je	SHORT $LN1@VerifyInst

; 766  : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN2@VerifyInst
$LN1@VerifyInst:

; 767  : 	}
; 768  : 	return FALSE;

	xor	eax, eax
$LN2@VerifyInst:

; 769  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?VerifyInstance@CVehicle@@QAEHXZ ENDP			; CVehicle::VerifyInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?HasADriver@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?HasADriver@CVehicle@@QAEHXZ PROC			; CVehicle::HasADriver, COMDAT
; _this$ = ecx

; 725  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 726  : 	if(!m_pVehicle) return FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@HasADriver
	xor	eax, eax
	jmp	SHORT $LN4@HasADriver
$LN3@HasADriver:

; 727  : 	if(!GamePool_Vehicle_GetAt(m_dwGTAId)) return FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	test	eax, eax
	jne	SHORT $LN2@HasADriver
	xor	eax, eax
	jmp	SHORT $LN4@HasADriver
$LN2@HasADriver:

; 728  : 
; 729  : 	if(m_pVehicle->pDriver && IN_VEHICLE(m_pVehicle->pDriver)) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx+1120], 0
	je	SHORT $LN1@HasADriver
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+1120]
	mov	eax, DWORD PTR [edx+1132]
	and	eax, 256				; 00000100H
	shr	eax, 8
	test	eax, eax
	je	SHORT $LN1@HasADriver

; 730  : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN4@HasADriver
$LN1@HasADriver:

; 731  : 	}
; 732  : 
; 733  : 	return FALSE;

	xor	eax, eax
$LN4@HasADriver:

; 734  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?HasADriver@CVehicle@@QAEHXZ ENDP			; CVehicle::HasADriver
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetHornState@CVehicle@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteState$ = 8						; size = 1
?SetHornState@CVehicle@@QAEXE@Z PROC			; CVehicle::SetHornState, COMDAT
; _this$ = ecx

; 708  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 709  : 	if(!m_pVehicle) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@SetHornSta
	jmp	SHORT $LN4@SetHornSta
$LN3@SetHornSta:

; 710  : 	if(!GamePool_Vehicle_GetAt(m_dwGTAId)) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	test	eax, eax
	jne	SHORT $LN2@SetHornSta
	jmp	SHORT $LN4@SetHornSta
$LN2@SetHornSta:

; 711  : 
; 712  : 	if( GetVehicleSubtype() != VEHICLE_SUBTYPE_BOAT &&
; 713  : 		GetVehicleSubtype() != VEHICLE_SUBTYPE_PLANE &&
; 714  : 		GetVehicleSubtype() != VEHICLE_SUBTYPE_HELI )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVehicleSubtype@CVehicle@@QAEIXZ	; CVehicle::GetVehicleSubtype
	cmp	eax, 4
	je	SHORT $LN4@SetHornSta
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVehicleSubtype@CVehicle@@QAEIXZ	; CVehicle::GetVehicleSubtype
	cmp	eax, 5
	je	SHORT $LN4@SetHornSta
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVehicleSubtype@CVehicle@@QAEIXZ	; CVehicle::GetVehicleSubtype
	cmp	eax, 3
	je	SHORT $LN4@SetHornSta

; 715  : 	{
; 716  : 	
; 717  : 		m_pVehicle->byteHorn = byteState;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	dl, BYTE PTR _byteState$[ebp]
	mov	BYTE PTR [ecx+502], dl

; 718  : 		m_pVehicle->byteHorn2 = byteState;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	dl, BYTE PTR _byteState$[ebp]
	mov	BYTE PTR [ecx+1300], dl
$LN4@SetHornSta:

; 719  : 	}
; 720  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHornState@CVehicle@@QAEXE@Z ENDP			; CVehicle::SetHornState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?RemoveEveryoneFromVehicle@CVehicle@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -68						; size = 4
_iPlayerID$ = -56					; size = 4
_fPosZ$ = -44						; size = 4
_fPosY$ = -32						; size = 4
_fPosX$ = -20						; size = 4
_this$ = -8						; size = 4
?RemoveEveryoneFromVehicle@CVehicle@@QAEXXZ PROC	; CVehicle::RemoveEveryoneFromVehicle, COMDAT
; _this$ = ecx

; 739  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 740  : 	if (!m_pVehicle) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN7@RemoveEver
	jmp	$LN8@RemoveEver
$LN7@RemoveEver:

; 741  : 	if (!GamePool_Vehicle_GetAt(m_dwGTAId)) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	test	eax, eax
	jne	SHORT $LN6@RemoveEver
	jmp	$LN8@RemoveEver
$LN6@RemoveEver:

; 742  : 
; 743  : 	float fPosX = m_pVehicle->entity.mat->pos.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+20]
	movss	xmm0, DWORD PTR [edx+48]
	movss	DWORD PTR _fPosX$[ebp], xmm0

; 744  : 	float fPosY = m_pVehicle->entity.mat->pos.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+20]
	movss	xmm0, DWORD PTR [edx+52]
	movss	DWORD PTR _fPosY$[ebp], xmm0

; 745  : 	float fPosZ = m_pVehicle->entity.mat->pos.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+20]
	movss	xmm0, DWORD PTR [edx+56]
	movss	DWORD PTR _fPosZ$[ebp], xmm0

; 746  : 
; 747  : 	int iPlayerID = 0;

	mov	DWORD PTR _iPlayerID$[ebp], 0

; 748  : 	if (m_pVehicle->pDriver) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx+1120], 0
	je	SHORT $LN5@RemoveEver

; 749  : 		iPlayerID = GamePool_Ped_GetIndex( m_pVehicle->pDriver );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+1120]
	push	edx
	call	?GamePool_Ped_GetIndex@@YGHPAU_PED_TYPE@@@Z ; GamePool_Ped_GetIndex
	mov	DWORD PTR _iPlayerID$[ebp], eax

; 750  : 		ScriptCommand( &remove_actor_from_car_and_put_at, iPlayerID, fPosX, fPosY, fPosZ + 2 );

	movss	xmm0, DWORD PTR _fPosZ$[ebp]
	addss	xmm0, DWORD PTR __real@40000000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fPosY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fPosX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _iPlayerID$[ebp]
	push	eax
	push	OFFSET _remove_actor_from_car_and_put_at
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 32					; 00000020H
$LN5@RemoveEver:

; 751  : 	}
; 752  : 
; 753  : 	for (int i = 0; i < 7; i++) {

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@RemoveEver
$LN3@RemoveEver:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@RemoveEver:
	cmp	DWORD PTR _i$1[ebp], 7
	jge	SHORT $LN2@RemoveEver

; 754  : 		if (m_pVehicle->pPassengers[i] != NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$1[ebp]
	cmp	DWORD PTR [ecx+edx*4+1124], 0
	je	SHORT $LN1@RemoveEver

; 755  : 			iPlayerID = GamePool_Ped_GetIndex( m_pVehicle->pPassengers[i] );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR [ecx+edx*4+1124]
	push	eax
	call	?GamePool_Ped_GetIndex@@YGHPAU_PED_TYPE@@@Z ; GamePool_Ped_GetIndex
	mov	DWORD PTR _iPlayerID$[ebp], eax

; 756  : 			ScriptCommand( &remove_actor_from_car_and_put_at, iPlayerID, fPosX, fPosY, fPosZ + 2 );

	movss	xmm0, DWORD PTR _fPosZ$[ebp]
	addss	xmm0, DWORD PTR __real@40000000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fPosY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fPosX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _iPlayerID$[ebp]
	push	eax
	push	OFFSET _remove_actor_from_car_and_put_at
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 32					; 00000020H
$LN1@RemoveEver:

; 757  : 		}
; 758  : 	}

	jmp	$LN3@RemoveEver
$LN2@RemoveEver:
$LN8@RemoveEver:

; 759  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveEveryoneFromVehicle@CVehicle@@QAEXXZ ENDP	; CVehicle::RemoveEveryoneFromVehicle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?ProcessEngineAudio@CVehicle@@QAEXE@Z
_TEXT	SEGMENT
_dwVehicle$ = -20					; size = 4
_this$ = -8						; size = 4
_byteDriverID$ = 8					; size = 1
?ProcessEngineAudio@CVehicle@@QAEXE@Z PROC		; CVehicle::ProcessEngineAudio, COMDAT
; _this$ = ecx

; 185  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : 	DWORD dwVehicle = (DWORD)m_pVehicle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _dwVehicle$[ebp], ecx

; 187  : 
; 188  : 	if(byteDriverID != 0) {

	movzx	eax, BYTE PTR _byteDriverID$[ebp]
	test	eax, eax
	je	SHORT $LN3@ProcessEng

; 189  : 		// We need to context switch the keys
; 190  : 		GameStoreLocalPlayerKeys();

	call	?GameStoreLocalPlayerKeys@@YAXXZ	; GameStoreLocalPlayerKeys

; 191  : 		GameSetRemotePlayerKeys(byteDriverID);

	movzx	eax, BYTE PTR _byteDriverID$[ebp]
	push	eax
	call	?GameSetRemotePlayerKeys@@YAXH@Z	; GameSetRemotePlayerKeys
	add	esp, 4
$LN3@ProcessEng:

; 192  : 	}
; 193  : 
; 194  : 	if(m_pVehicle && IsAdded()) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@ProcessEng
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAdded@CEntity@@QAEHXZ		; CEntity::IsAdded
	test	eax, eax
	je	SHORT $LN2@ProcessEng

; 195  : 		_asm mov esi, dwVehicle

	mov	esi, DWORD PTR _dwVehicle$[ebp]

; 196  : 		_asm lea ecx, [esi+312]

	lea	ecx, DWORD PTR [esi+312]

; 197  : 		_asm mov edx, 0x502280

	mov	edx, 5251712				; 00502280H

; 198  : 		_asm call edx

	call	edx
$LN2@ProcessEng:

; 199  : 	}
; 200  : 
; 201  : 	if(byteDriverID != 0) {

	movzx	eax, BYTE PTR _byteDriverID$[ebp]
	test	eax, eax
	je	SHORT $LN4@ProcessEng

; 202  : 		GameSetLocalPlayerKeys();

	call	?GameSetLocalPlayerKeys@@YAXXZ		; GameSetLocalPlayerKeys
$LN4@ProcessEng:

; 203  : 	}
; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ProcessEngineAudio@CVehicle@@QAEXE@Z ENDP		; CVehicle::ProcessEngineAudio
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?UpdateLastDrivenTime@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?UpdateLastDrivenTime@CVehicle@@QAEHXZ PROC		; CVehicle::UpdateLastDrivenTime, COMDAT
; _this$ = ecx

; 566  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 567  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@UpdateLast

; 568  : 		if(m_pVehicle->pDriver) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx+1120], 0
	je	SHORT $LN2@UpdateLast

; 569  : 			m_bHasBeenDriven = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+41], 1

; 570  : 			m_dwTimeSinceLastDriven = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+37], eax

; 571  : 			return TRUE;

	mov	eax, 1
	jmp	SHORT $LN3@UpdateLast
$LN2@UpdateLast:

; 572  : 		}
; 573  : 	}
; 574  : 	return FALSE;

	xor	eax, eax
$LN3@UpdateLast:

; 575  : 	// Tell the system this vehicle has been used so it can reset the timer to not be based on remaining delay
; 576  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateLastDrivenTime@CVehicle@@QAEHXZ ENDP		; CVehicle::UpdateLastDrivenTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?Recreate@CVehicle@@QAEXXZ
_TEXT	SEGMENT
_dwRetID$ = -132					; size = 4
_byteColor2$ = -117					; size = 1
_byteColor1$ = -105					; size = 1
_mat$ = -96						; size = 64
_uiType$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Recreate@CVehicle@@QAEXXZ PROC				; CVehicle::Recreate, COMDAT
; _this$ = ecx

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 231  : 	UINT		uiType;
; 232  : 	MATRIX4X4   mat;
; 233  : 	BYTE		byteColor1,byteColor2;
; 234  : 	DWORD		dwRetID;
; 235  : 
; 236  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN4@Recreate

; 237  : 		// Save the existing info.
; 238  : 		GetMatrix(&mat);

	lea	eax, DWORD PTR _mat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z ; CEntity::GetMatrix

; 239  : 		uiType = GetModelIndex();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetModelIndex@CEntity@@QAEIXZ		; CEntity::GetModelIndex
	mov	DWORD PTR _uiType$[ebp], eax

; 240  : 		byteColor1 = m_pVehicle->byteColor1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	dl, BYTE PTR [ecx+1076]
	mov	BYTE PTR _byteColor1$[ebp], dl

; 241  : 		byteColor2 = m_pVehicle->byteColor1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	dl, BYTE PTR [ecx+1076]
	mov	BYTE PTR _byteColor2$[ebp], dl

; 242  : 
; 243  : 		ScriptCommand(&destroy_car,m_dwGTAId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _destroy_car
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 244  : 
; 245  : 		if(!pGame->IsModelLoaded(uiType)) {

	mov	eax, DWORD PTR _uiType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN1@Recreate

; 246  : 			pGame->RequestModel(uiType);

	mov	eax, DWORD PTR _uiType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 247  : 			pGame->LoadRequestedModels();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?LoadRequestedModels@CGame@@QAEXXZ	; CGame::LoadRequestedModels
$LN2@Recreate:

; 248  : 			while(!pGame->IsModelLoaded(uiType)) Sleep(5);

	mov	eax, DWORD PTR _uiType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN1@Recreate
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@Recreate
$LN1@Recreate:

; 249  : 		}
; 250  : 
; 251  : 		ScriptCommand(&create_car,uiType,mat.pos.X,mat.pos.Y,mat.pos.Z,&dwRetID);

	lea	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	cvtss2sd xmm0, DWORD PTR _mat$[ebp+56]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _mat$[ebp+52]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _mat$[ebp+48]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _uiType$[ebp]
	push	ecx
	push	OFFSET _create_car
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 36					; 00000024H

; 252  : 		ScriptCommand(&car_gas_tank_explosion,dwRetID,0);

	push	0
	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	push	OFFSET _car_gas_tank_explosion
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 253  : 		
; 254  : 
; 255  : 		m_pVehicle = GamePool_Vehicle_GetAt(dwRetID);

	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 256  : 		m_pEntity = (ENTITY_TYPE *)m_pVehicle; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+4], edx

; 257  : 		m_dwGTAId = dwRetID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dwRetID$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 258  : 		dwLastCreatedVehicleID = dwRetID;

	mov	eax, DWORD PTR _dwRetID$[ebp]
	mov	DWORD PTR ?dwLastCreatedVehicleID@@3KA, eax ; dwLastCreatedVehicleID

; 259  : 		m_pVehicle->dwDoorsLocked = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+1272], 0

; 260  : 		m_bIsLocked = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 261  : 		//LinkToInterior(m_byteInterior);
; 262  : 
; 263  : 		SetMatrix(mat);

	sub	esp, 64					; 00000040H
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR _mat$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMatrix@CEntity@@QAEXU_MATRIX4X4@@@Z	; CEntity::SetMatrix

; 264  : 		SetColor(byteColor1,byteColor2);

	movzx	eax, BYTE PTR _byteColor2$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byteColor1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetColor@CVehicle@@QAEXHH@Z		; CVehicle::SetColor
$LN4@Recreate:

; 265  : 
; 266  : 		//pGame->RemoveModel(uiType);
; 267  : 	}
; 268  : 	
; 269  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Recreate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@Recreate:
	DD	2
	DD	$LN9@Recreate
$LN9@Recreate:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN7@Recreate
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN8@Recreate
$LN8@Recreate:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN7@Recreate:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
?Recreate@CVehicle@@QAEXXZ ENDP				; CVehicle::Recreate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?IsOccupied@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsOccupied@CVehicle@@QAEHXZ PROC			; CVehicle::IsOccupied, COMDAT
; _this$ = ecx

; 274  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 275  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN9@IsOccupied

; 276  : 		if(m_pVehicle->pDriver) return TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx+1120], 0
	je	SHORT $LN8@IsOccupied
	mov	eax, 1
	jmp	$LN10@IsOccupied
$LN8@IsOccupied:

; 277  : 		if(m_pVehicle->pPassengers[0]) return TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, 4
	imul	eax, edx, 0
	cmp	DWORD PTR [ecx+eax+1124], 0
	je	SHORT $LN7@IsOccupied
	mov	eax, 1
	jmp	$LN10@IsOccupied
$LN7@IsOccupied:

; 278  : 		if(m_pVehicle->pPassengers[1]) return TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, 4
	shl	edx, 0
	cmp	DWORD PTR [ecx+edx+1124], 0
	je	SHORT $LN6@IsOccupied
	mov	eax, 1
	jmp	$LN10@IsOccupied
$LN6@IsOccupied:

; 279  : 		if(m_pVehicle->pPassengers[2]) return TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, 4
	shl	edx, 1
	cmp	DWORD PTR [ecx+edx+1124], 0
	je	SHORT $LN5@IsOccupied
	mov	eax, 1
	jmp	SHORT $LN10@IsOccupied
$LN5@IsOccupied:

; 280  : 		if(m_pVehicle->pPassengers[3]) return TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, 4
	imul	eax, edx, 3
	cmp	DWORD PTR [ecx+eax+1124], 0
	je	SHORT $LN4@IsOccupied
	mov	eax, 1
	jmp	SHORT $LN10@IsOccupied
$LN4@IsOccupied:

; 281  : 		if(m_pVehicle->pPassengers[4]) return TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, 4
	shl	edx, 2
	cmp	DWORD PTR [ecx+edx+1124], 0
	je	SHORT $LN3@IsOccupied
	mov	eax, 1
	jmp	SHORT $LN10@IsOccupied
$LN3@IsOccupied:

; 282  : 		if(m_pVehicle->pPassengers[5]) return TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, 4
	imul	eax, edx, 5
	cmp	DWORD PTR [ecx+eax+1124], 0
	je	SHORT $LN2@IsOccupied
	mov	eax, 1
	jmp	SHORT $LN10@IsOccupied
$LN2@IsOccupied:

; 283  : 		if(m_pVehicle->pPassengers[6]) return TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, 4
	imul	eax, edx, 6
	cmp	DWORD PTR [ecx+eax+1124], 0
	je	SHORT $LN9@IsOccupied
	mov	eax, 1
	jmp	SHORT $LN10@IsOccupied
$LN9@IsOccupied:

; 284  : 	}
; 285  : 	return FALSE;

	xor	eax, eax
$LN10@IsOccupied:

; 286  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsOccupied@CVehicle@@QAEHXZ ENDP			; CVehicle::IsOccupied
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?IsRCVehicle@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsRCVehicle@CVehicle@@QAEHXZ PROC			; CVehicle::IsRCVehicle, COMDAT
; _this$ = ecx

; 687  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 688  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@IsRCVehicl

; 689  : 		if( m_pVehicle->entity.nModelIndex == 441 || 
; 690  : 			m_pVehicle->entity.nModelIndex == 464 ||
; 691  : 			m_pVehicle->entity.nModelIndex == 465 || 
; 692  : 			m_pVehicle->entity.nModelIndex == 594 ||
; 693  : 			m_pVehicle->entity.nModelIndex == 501 || 
; 694  : 			m_pVehicle->entity.nModelIndex == 564 )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+34]
	cmp	edx, 441				; 000001b9H
	je	SHORT $LN1@IsRCVehicl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+34]
	cmp	edx, 464				; 000001d0H
	je	SHORT $LN1@IsRCVehicl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+34]
	cmp	edx, 465				; 000001d1H
	je	SHORT $LN1@IsRCVehicl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+34]
	cmp	edx, 594				; 00000252H
	je	SHORT $LN1@IsRCVehicl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+34]
	cmp	edx, 501				; 000001f5H
	je	SHORT $LN1@IsRCVehicl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+34]
	cmp	edx, 564				; 00000234H
	jne	SHORT $LN3@IsRCVehicl
$LN1@IsRCVehicl:

; 695  : 		{
; 696  : 			return TRUE;

	mov	eax, 1
	jmp	SHORT $LN4@IsRCVehicl
$LN3@IsRCVehicl:

; 697  : 		}
; 698  : 	}
; 699  : 	return FALSE;

	xor	eax, eax
$LN4@IsRCVehicl:

; 700  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsRCVehicle@CVehicle@@QAEHXZ ENDP			; CVehicle::IsRCVehicle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetTrailer@CVehicle@@QAEPAV1@XZ
_TEXT	SEGMENT
_TrailerID$1 = -44					; size = 2
_pVehiclePool$2 = -32					; size = 4
_dwTrailerGTAPtr$ = -20					; size = 4
_this$ = -8						; size = 4
?GetTrailer@CVehicle@@QAEPAV1@XZ PROC			; CVehicle::GetTrailer, COMDAT
; _this$ = ecx

; 661  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 662  : 	if (!m_pVehicle) return NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@GetTrailer
	xor	eax, eax
	jmp	SHORT $LN4@GetTrailer
$LN3@GetTrailer:

; 663  : 
; 664  : 	// Try to find associated trailer
; 665  : 	DWORD dwTrailerGTAPtr = m_pVehicle->dwTrailer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+1224]
	mov	DWORD PTR _dwTrailerGTAPtr$[ebp], edx

; 666  : 
; 667  : 	if(pNetGame && dwTrailerGTAPtr) {

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	SHORT $LN2@GetTrailer
	cmp	DWORD PTR _dwTrailerGTAPtr$[ebp], 0
	je	SHORT $LN2@GetTrailer

; 668  : 		CVehiclePool* pVehiclePool = pNetGame->GetVehiclePool();

	mov	ecx, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	call	?GetVehiclePool@CNetGame@@QAEPAVCVehiclePool@@XZ ; CNetGame::GetVehiclePool
	mov	DWORD PTR _pVehiclePool$2[ebp], eax

; 669  : 		VEHICLEID TrailerID = (VEHICLEID)pVehiclePool->FindIDFromGtaPtr((VEHICLE_TYPE*)dwTrailerGTAPtr);

	mov	eax, DWORD PTR _dwTrailerGTAPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehiclePool$2[ebp]
	call	?FindIDFromGtaPtr@CVehiclePool@@QAEGPAU_VEHICLE_TYPE@@@Z ; CVehiclePool::FindIDFromGtaPtr
	mov	WORD PTR _TrailerID$1[ebp], ax

; 670  : 		if(TrailerID < MAX_VEHICLES && pVehiclePool->GetSlotState(TrailerID)) {

	movzx	eax, WORD PTR _TrailerID$1[ebp]
	cmp	eax, 702				; 000002beH
	jge	SHORT $LN2@GetTrailer
	movzx	eax, WORD PTR _TrailerID$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehiclePool$2[ebp]
	call	?GetSlotState@CVehiclePool@@QAEHG@Z	; CVehiclePool::GetSlotState
	test	eax, eax
	je	SHORT $LN2@GetTrailer

; 671  : 			return pVehiclePool->GetAt(TrailerID);

	movzx	eax, WORD PTR _TrailerID$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehiclePool$2[ebp]
	call	?GetAt@CVehiclePool@@QAEPAVCVehicle@@G@Z ; CVehiclePool::GetAt
	jmp	SHORT $LN4@GetTrailer
$LN2@GetTrailer:

; 672  : 		}
; 673  : 	}
; 674  : 
; 675  : 	return NULL;

	xor	eax, eax
$LN4@GetTrailer:

; 676  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTrailer@CVehicle@@QAEPAV1@XZ ENDP			; CVehicle::GetTrailer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetTrailer@CVehicle@@QAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pTrailer$ = 8						; size = 4
?SetTrailer@CVehicle@@QAEXPAV1@@Z PROC			; CVehicle::SetTrailer, COMDAT
; _this$ = ecx

; 654  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 655  : 	m_pTrailer = pTrailer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTrailer$[ebp]
	mov	DWORD PTR [eax+45], ecx

; 656  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTrailer@CVehicle@@QAEXPAV1@@Z ENDP			; CVehicle::SetTrailer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?DetachTrailer@CVehicle@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DetachTrailer@CVehicle@@QAEXXZ PROC			; CVehicle::DetachTrailer, COMDAT
; _this$ = ecx

; 646  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 647  : 	if (m_pTrailer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+45], 0
	je	SHORT $LN2@DetachTrai

; 648  : 		ScriptCommand(&detach_trailer_from_cab, m_pTrailer->m_dwGTAId, m_dwGTAId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+45]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _detach_trailer_from_cab
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH
$LN2@DetachTrai:

; 649  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DetachTrailer@CVehicle@@QAEXXZ ENDP			; CVehicle::DetachTrailer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?AttachTrailer@CVehicle@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?AttachTrailer@CVehicle@@QAEXXZ PROC			; CVehicle::AttachTrailer, COMDAT
; _this$ = ecx

; 638  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 639  : 	if (m_pTrailer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+45], 0
	je	SHORT $LN2@AttachTrai

; 640  : 		ScriptCommand(&put_trailer_on_cab, m_pTrailer->m_dwGTAId, m_dwGTAId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+45]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _put_trailer_on_cab
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH
$LN2@AttachTrai:

; 641  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AttachTrailer@CVehicle@@QAEXXZ ENDP			; CVehicle::AttachTrailer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetWheelPopped@CVehicle@@QAEEK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_wheelid$ = 8						; size = 4
?GetWheelPopped@CVehicle@@QAEEK@Z PROC			; CVehicle::GetWheelPopped, COMDAT
; _this$ = ecx

; 627  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 	if (GetVehicleSubtype() == VEHICLE_SUBTYPE_CAR)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVehicleSubtype@CVehicle@@QAEIXZ	; CVehicle::GetVehicleSubtype
	cmp	eax, 1
	jne	SHORT $LN3@GetWheelPo

; 629  : 		return m_pVehicle->bCarWheelPopped[wheelid];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _wheelid$[ebp]
	mov	al, BYTE PTR [ecx+edx+1445]
	jmp	SHORT $LN4@GetWheelPo
	jmp	SHORT $LN2@GetWheelPo
$LN3@GetWheelPo:

; 630  : 	else if (GetVehicleSubtype() == VEHICLE_SUBTYPE_BIKE)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVehicleSubtype@CVehicle@@QAEIXZ	; CVehicle::GetVehicleSubtype
	cmp	eax, 2
	jne	SHORT $LN2@GetWheelPo

; 631  : 		return m_pVehicle->bBikeWheelPopped[wheelid];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _wheelid$[ebp]
	mov	al, BYTE PTR [ecx+edx+1628]
	jmp	SHORT $LN4@GetWheelPo
$LN2@GetWheelPo:

; 632  : 	return 0;

	xor	al, al
$LN4@GetWheelPo:

; 633  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetWheelPopped@CVehicle@@QAEEK@Z ENDP			; CVehicle::GetWheelPopped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetWheelPopped@CVehicle@@QAEXKK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_wheelid$ = 8						; size = 4
_popped$ = 12						; size = 4
?SetWheelPopped@CVehicle@@QAEXKK@Z PROC			; CVehicle::SetWheelPopped, COMDAT
; _this$ = ecx

; 617  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 618  : 	if (GetVehicleSubtype() == VEHICLE_SUBTYPE_CAR)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVehicleSubtype@CVehicle@@QAEIXZ	; CVehicle::GetVehicleSubtype
	cmp	eax, 1
	jne	SHORT $LN3@SetWheelPo

; 619  : 		m_pVehicle->bCarWheelPopped[wheelid] = (BYTE)popped;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _wheelid$[ebp]
	mov	al, BYTE PTR _popped$[ebp]
	mov	BYTE PTR [ecx+edx+1445], al
	jmp	SHORT $LN4@SetWheelPo
$LN3@SetWheelPo:

; 620  : 	else if (GetVehicleSubtype() == VEHICLE_SUBTYPE_BIKE)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVehicleSubtype@CVehicle@@QAEIXZ	; CVehicle::GetVehicleSubtype
	cmp	eax, 2
	jne	SHORT $LN4@SetWheelPo

; 621  : 		m_pVehicle->bBikeWheelPopped[wheelid] = (BYTE)popped;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _wheelid$[ebp]
	mov	al, BYTE PTR _popped$[ebp]
	mov	BYTE PTR [ecx+edx+1628], al
$LN4@SetWheelPo:

; 622  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetWheelPopped@CVehicle@@QAEXKK@Z ENDP			; CVehicle::SetWheelPopped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?LinkToInterior@CVehicle@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iInterior$ = 8						; size = 4
?LinkToInterior@CVehicle@@QAEXH@Z PROC			; CVehicle::LinkToInterior, COMDAT
; _this$ = ecx

; 209  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 	if(GamePool_Vehicle_GetAt(m_dwGTAId)) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	test	eax, eax
	je	SHORT $LN2@LinkToInte

; 211  : 		ScriptCommand(&link_vehicle_to_interior, m_dwGTAId, iInterior);

	mov	eax, DWORD PTR _iInterior$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET _link_vehicle_to_interior
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH
$LN2@LinkToInte:

; 212  : 		//m_byteInterior = iInterior;
; 213  : 	}
; 214  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LinkToInterior@CVehicle@@QAEXH@Z ENDP			; CVehicle::LinkToInterior
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetDoorState@CVehicle@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iState$ = 8						; size = 4
?SetDoorState@CVehicle@@QAEXH@Z PROC			; CVehicle::SetDoorState, COMDAT
; _this$ = ecx

; 553  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 554  : 	if(iState) {

	cmp	DWORD PTR _iState$[ebp], 0
	je	SHORT $LN2@SetDoorSta

; 555  : 		m_pVehicle->dwDoorsLocked = 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+1272], 2

; 556  : 		m_bDoorsLocked = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 1

; 557  : 	} else {

	jmp	SHORT $LN3@SetDoorSta
$LN2@SetDoorSta:

; 558  : 		m_pVehicle->dwDoorsLocked = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+1272], 0

; 559  : 		m_bDoorsLocked = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN3@SetDoorSta:

; 560  : 	}
; 561  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDoorState@CVehicle@@QAEXH@Z ENDP			; CVehicle::SetDoorState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetEngineState@CVehicle@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bState$ = 8						; size = 4
?SetEngineState@CVehicle@@QAEXH@Z PROC			; CVehicle::SetEngineState, COMDAT
; _this$ = ecx

; 322  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 	if(!m_pVehicle) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@SetEngineS
	jmp	SHORT $LN4@SetEngineS
$LN3@SetEngineS:

; 324  : 
; 325  : 	if(!bState) {

	cmp	DWORD PTR _bState$[ebp], 0
	jne	SHORT $LN2@SetEngineS

; 326  : 		m_pVehicle->byteFlags &= 0xEF;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, BYTE PTR [ecx+1064]
	and	edx, 239				; 000000efH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx+1064], dl

; 327  : 	} else {

	jmp	SHORT $LN4@SetEngineS
$LN2@SetEngineS:

; 328  : 		m_pVehicle->byteFlags |= 0x10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, BYTE PTR [ecx+1064]
	or	edx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx+1064], dl
$LN4@SetEngineS:

; 329  : 	}
; 330  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetEngineState@CVehicle@@QAEXH@Z ENDP			; CVehicle::SetEngineState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetInvulnerable@CVehicle@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bInv$ = 8						; size = 4
?SetInvulnerable@CVehicle@@QAEXH@Z PROC			; CVehicle::SetInvulnerable, COMDAT
; _this$ = ecx

; 291  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 292  : 	if(!m_pVehicle) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN5@SetInvulne
	jmp	$LN6@SetInvulne
$LN5@SetInvulne:

; 293  : 	if(!GamePool_Vehicle_GetAt(m_dwGTAId)) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	test	eax, eax
	jne	SHORT $LN4@SetInvulne
	jmp	$LN6@SetInvulne
$LN4@SetInvulne:

; 294  : 
; 295  : 	if(bInv) {

	cmp	DWORD PTR _bInv$[ebp], 0
	je	SHORT $LN3@SetInvulne

; 296  : 		ScriptCommand(&set_car_immunities,m_dwGTAId,1,1,1,1,1);

	push	1
	push	1
	push	1
	push	1
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _set_car_immunities
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 28					; 0000001cH

; 297  : 		ScriptCommand(&toggle_car_tires_vulnerable,m_dwGTAId,0);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _toggle_car_tires_vulnerable
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 298  : 		m_bIsInvulnerable = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 1

; 299  : 	} else { 

	jmp	SHORT $LN6@SetInvulne
$LN3@SetInvulne:

; 300  : 		ScriptCommand(&set_car_immunities,m_dwGTAId,0,0,0,0,0);

	push	0
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _set_car_immunities
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 28					; 0000001cH

; 301  : 		if (pNetGame && pNetGame->m_bTirePopping)

	cmp	DWORD PTR ?pNetGame@@3PAVCNetGame@@A, 0	; pNetGame
	je	SHORT $LN1@SetInvulne
	mov	eax, DWORD PTR ?pNetGame@@3PAVCNetGame@@A ; pNetGame
	movzx	ecx, BYTE PTR [eax+60]
	test	ecx, ecx
	je	SHORT $LN1@SetInvulne

; 302  : 			ScriptCommand(&toggle_car_tires_vulnerable,m_dwGTAId,1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _toggle_car_tires_vulnerable
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH
$LN1@SetInvulne:

; 303  : 		m_bIsInvulnerable = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN6@SetInvulne:

; 304  : 	}
; 305  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetInvulnerable@CVehicle@@QAEXH@Z ENDP			; CVehicle::SetInvulnerable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetLandingGearState@CVehicle@@QAE?AW4eLandingGearState@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLandingGearState@CVehicle@@QAE?AW4eLandingGearState@@XZ PROC ; CVehicle::GetLandingGearState, COMDAT
; _this$ = ecx

; 472  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 473  : 	if (m_pVehicle->fPlaneLandingGear == 0.0f)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR [ecx+2508]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN4@GetLanding

; 474  : 		return LGS_UP;

	mov	eax, 1
	jmp	SHORT $LN1@GetLanding
	jmp	SHORT $LN1@GetLanding
$LN4@GetLanding:

; 475  : 	else if (m_pVehicle->fPlaneLandingGear == 1.0f)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR [ecx+2508]
	ucomiss	xmm0, DWORD PTR __real@3f800000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@GetLanding

; 476  : 		return LGS_DOWN;

	mov	eax, 2
	jmp	SHORT $LN1@GetLanding

; 477  : 	else

	jmp	SHORT $LN1@GetLanding
$LN2@GetLanding:

; 478  : 		return LGS_CHANGING;

	xor	eax, eax
$LN1@GetLanding:

; 479  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLandingGearState@CVehicle@@QAE?AW4eLandingGearState@@XZ ENDP ; CVehicle::GetLandingGearState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetLandingGearState@CVehicle@@QAEXW4eLandingGearState@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
?SetLandingGearState@CVehicle@@QAEXW4eLandingGearState@@@Z PROC ; CVehicle::SetLandingGearState, COMDAT
; _this$ = ecx

; 462  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 463  : 	if (state == LGS_UP) 

	cmp	DWORD PTR _state$[ebp], 1
	jne	SHORT $LN3@SetLanding

; 464  : 		m_pVehicle->fPlaneLandingGear = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+2508], xmm0
	jmp	SHORT $LN1@SetLanding
$LN3@SetLanding:

; 465  : 	else if (state == LGS_DOWN)

	cmp	DWORD PTR _state$[ebp], 2
	jne	SHORT $LN1@SetLanding

; 466  : 		m_pVehicle->fPlaneLandingGear = 1.0f;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+2508], xmm0
$LN1@SetLanding:

; 467  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLandingGearState@CVehicle@@QAEXW4eLandingGearState@@@Z ENDP ; CVehicle::SetLandingGearState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?IsSirenOn@CVehicle@@QAEHXZ
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
?IsSirenOn@CVehicle@@QAEHXZ PROC			; CVehicle::IsSirenOn, COMDAT
; _this$ = ecx

; 455  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 456  : 	return (m_pVehicle->bSirenOn == 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	dl, BYTE PTR [ecx+1069]
	shr	dl, 7
	and	dl, 1
	movzx	eax, dl
	cmp	eax, 1
	jne	SHORT $LN3@IsSirenOn
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@IsSirenOn
$LN3@IsSirenOn:
	mov	DWORD PTR tv70[ebp], 0
$LN4@IsSirenOn:
	mov	eax, DWORD PTR tv70[ebp]

; 457  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSirenOn@CVehicle@@QAEHXZ ENDP			; CVehicle::IsSirenOn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetSirenOn@CVehicle@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
?SetSirenOn@CVehicle@@QAEXH@Z PROC			; CVehicle::SetSirenOn, COMDAT
; _this$ = ecx

; 448  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 449  : 	m_pVehicle->bSirenOn = state;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	dl, BYTE PTR _state$[ebp]
	and	dl, 1
	shl	dl, 7
	mov	al, BYTE PTR [ecx+1069]
	and	al, 127					; 0000007fH
	or	al, dl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	BYTE PTR [edx+1069], al

; 450  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSirenOn@CVehicle@@QAEXH@Z ENDP			; CVehicle::SetSirenOn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetPassengersMax@CVehicle@@QAEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPassengersMax@CVehicle@@QAEIXZ PROC			; CVehicle::GetPassengersMax, COMDAT
; _this$ = ecx

; 484  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 485  : 	return 0;

	xor	eax, eax

; 486  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPassengersMax@CVehicle@@QAEIXZ ENDP			; CVehicle::GetPassengersMax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetTrainSpeed@CVehicle@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fSpeed$ = 8						; size = 4
?SetTrainSpeed@CVehicle@@QAEXM@Z PROC			; CVehicle::SetTrainSpeed, COMDAT
; _this$ = ecx

; 610  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 611  : 	m_pVehicle->fTrainSpeed = fSpeed;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR _fSpeed$[ebp]
	movss	DWORD PTR [ecx+1444], xmm0

; 612  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTrainSpeed@CVehicle@@QAEXM@Z ENDP			; CVehicle::SetTrainSpeed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetTrainSpeed@CVehicle@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTrainSpeed@CVehicle@@QAEMXZ PROC			; CVehicle::GetTrainSpeed, COMDAT
; _this$ = ecx

; 603  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 604  : 	return m_pVehicle->fTrainSpeed;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	fld	DWORD PTR [ecx+1444]

; 605  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTrainSpeed@CVehicle@@QAEMXZ ENDP			; CVehicle::GetTrainSpeed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetTankRotY@CVehicle@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTankRotY@CVehicle@@QAEMXZ PROC			; CVehicle::GetTankRotY, COMDAT
; _this$ = ecx

; 596  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 597  : 	return m_pVehicle->fTankRotY;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	fld	DWORD PTR [ecx+2384]

; 598  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTankRotY@CVehicle@@QAEMXZ ENDP			; CVehicle::GetTankRotY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetTankRotX@CVehicle@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTankRotX@CVehicle@@QAEMXZ PROC			; CVehicle::GetTankRotX, COMDAT
; _this$ = ecx

; 589  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 590  : 	return m_pVehicle->fTankRotX;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	fld	DWORD PTR [ecx+2380]

; 591  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTankRotX@CVehicle@@QAEMXZ ENDP			; CVehicle::GetTankRotX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetTankRot@CVehicle@@QAEXMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
?SetTankRot@CVehicle@@QAEXMM@Z PROC			; CVehicle::SetTankRot, COMDAT
; _this$ = ecx

; 581  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 582  : 	m_pVehicle->fTankRotX = X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR _X$[ebp]
	movss	DWORD PTR [ecx+2380], xmm0

; 583  : 	m_pVehicle->fTankRotY = Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR _Y$[ebp]
	movss	DWORD PTR [ecx+2384], xmm0

; 584  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetTankRot@CVehicle@@QAEXMM@Z ENDP			; CVehicle::SetTankRot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetHydraThrusters@CVehicle@@QAEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetHydraThrusters@CVehicle@@QAEKXZ PROC		; CVehicle::GetHydraThrusters, COMDAT
; _this$ = ecx

; 498  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 499  : 	if(m_pVehicle) return m_pVehicle->dwHydraThrusters;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@GetHydraTh
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [ecx+2156]
	jmp	SHORT $LN2@GetHydraTh
$LN1@GetHydraTh:

; 500  : 	return 0UL;

	xor	eax, eax
$LN2@GetHydraTh:

; 501  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHydraThrusters@CVehicle@@QAEKXZ ENDP		; CVehicle::GetHydraThrusters
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetHydraThrusters@CVehicle@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dwDirection$ = 8					; size = 4
?SetHydraThrusters@CVehicle@@QAEXK@Z PROC		; CVehicle::SetHydraThrusters, COMDAT
; _this$ = ecx

; 491  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 492  : 	if(m_pVehicle) m_pVehicle->dwHydraThrusters = dwDirection; // 0x00 - 0x80 // byte

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@SetHydraTh
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _dwDirection$[ebp]
	mov	DWORD PTR [ecx+2156], edx
$LN2@SetHydraTh:

; 493  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHydraThrusters@CVehicle@@QAEXK@Z ENDP		; CVehicle::SetHydraThrusters
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?HasTurret@CVehicle@@QAEHXZ
_TEXT	SEGMENT
tv74 = -220						; size = 4
_nModel$ = -20						; size = 4
_this$ = -8						; size = 4
?HasTurret@CVehicle@@QAEHXZ PROC			; CVehicle::HasTurret, COMDAT
; _this$ = ecx

; 436  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 437  : 	int nModel = GetModelIndex();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetModelIndex@CEntity@@QAEIXZ		; CEntity::GetModelIndex
	mov	DWORD PTR _nModel$[ebp], eax

; 438  : 	return (nModel == 432 ||	// Tank
; 439  : 			nModel == 564 ||	// RC Tank
; 440  : 			nModel == 407 ||	// Firetruck
; 441  : 			nModel == 601		// Swatvan
; 442  : 			);

	cmp	DWORD PTR _nModel$[ebp], 432		; 000001b0H
	je	SHORT $LN3@HasTurret
	cmp	DWORD PTR _nModel$[ebp], 564		; 00000234H
	je	SHORT $LN3@HasTurret
	cmp	DWORD PTR _nModel$[ebp], 407		; 00000197H
	je	SHORT $LN3@HasTurret
	cmp	DWORD PTR _nModel$[ebp], 601		; 00000259H
	je	SHORT $LN3@HasTurret
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN4@HasTurret
$LN3@HasTurret:
	mov	DWORD PTR tv74[ebp], 1
$LN4@HasTurret:
	mov	eax, DWORD PTR tv74[ebp]

; 443  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?HasTurret@CVehicle@@QAEHXZ ENDP			; CVehicle::HasTurret
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?IsATrainPart@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_nModel$ = -20						; size = 4
_this$ = -8						; size = 4
?IsATrainPart@CVehicle@@QAEHXZ PROC			; CVehicle::IsATrainPart, COMDAT
; _this$ = ecx

; 420  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 421  : 	int nModel;
; 422  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN6@IsATrainPa

; 423  : 		nModel = m_pVehicle->entity.nModelIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, WORD PTR [ecx+34]
	mov	DWORD PTR _nModel$[ebp], edx

; 424  : 		if(nModel == TRAIN_PASSENGER_LOCO) return TRUE;

	cmp	DWORD PTR _nModel$[ebp], 537		; 00000219H
	jne	SHORT $LN5@IsATrainPa
	mov	eax, 1
	jmp	SHORT $LN7@IsATrainPa
$LN5@IsATrainPa:

; 425  : 		if(nModel == TRAIN_PASSENGER) return TRUE;

	cmp	DWORD PTR _nModel$[ebp], 569		; 00000239H
	jne	SHORT $LN4@IsATrainPa
	mov	eax, 1
	jmp	SHORT $LN7@IsATrainPa
$LN4@IsATrainPa:

; 426  : 		if(nModel == TRAIN_FREIGHT_LOCO) return TRUE;

	cmp	DWORD PTR _nModel$[ebp], 538		; 0000021aH
	jne	SHORT $LN3@IsATrainPa
	mov	eax, 1
	jmp	SHORT $LN7@IsATrainPa
$LN3@IsATrainPa:

; 427  : 		if(nModel == TRAIN_FREIGHT) return TRUE;

	cmp	DWORD PTR _nModel$[ebp], 570		; 0000023aH
	jne	SHORT $LN2@IsATrainPa
	mov	eax, 1
	jmp	SHORT $LN7@IsATrainPa
$LN2@IsATrainPa:

; 428  : 		if(nModel == TRAIN_TRAM) return TRUE;

	cmp	DWORD PTR _nModel$[ebp], 449		; 000001c1H
	jne	SHORT $LN6@IsATrainPa
	mov	eax, 1
	jmp	SHORT $LN7@IsATrainPa
$LN6@IsATrainPa:

; 429  : 	}
; 430  : 	return FALSE;

	xor	eax, eax
$LN7@IsATrainPa:

; 431  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsATrainPart@CVehicle@@QAEHXZ ENDP			; CVehicle::IsATrainPart
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?IsDriverLocalPlayer@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsDriverLocalPlayer@CVehicle@@QAEHXZ PROC		; CVehicle::IsDriverLocalPlayer, COMDAT
; _this$ = ecx

; 408  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@IsDriverLo

; 410  : 		if((PED_TYPE *)m_pVehicle->pDriver == GamePool_FindPlayerPed()) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+16]
	call	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ ; GamePool_FindPlayerPed
	cmp	DWORD PTR [esi+1120], eax
	jne	SHORT $LN2@IsDriverLo

; 411  : 			return TRUE;

	mov	eax, 1
	jmp	SHORT $LN3@IsDriverLo
$LN2@IsDriverLo:

; 412  : 		}
; 413  : 	}
; 414  : 	return FALSE;

	xor	eax, eax
$LN3@IsDriverLo:

; 415  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDriverLocalPlayer@CVehicle@@QAEHXZ ENDP		; CVehicle::IsDriverLocalPlayer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?IsWrecked@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsWrecked@CVehicle@@QAEHXZ PROC			; CVehicle::IsWrecked, COMDAT
; _this$ = ecx

; 399  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 400  : 	if(!m_pVehicle) return FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN1@IsWrecked
	xor	eax, eax
	jmp	SHORT $LN2@IsWrecked
$LN1@IsWrecked:

; 401  : 
; 402  : 	return ScriptCommand(&is_car_wrecked,m_dwGTAId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _is_car_wrecked
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8
$LN2@IsWrecked:

; 403  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsWrecked@CVehicle@@QAEHXZ ENDP			; CVehicle::IsWrecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?HasSunk@CVehicle@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?HasSunk@CVehicle@@QAEHXZ PROC				; CVehicle::HasSunk, COMDAT
; _this$ = ecx

; 390  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 	if(!m_pVehicle) return FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN1@HasSunk
	xor	eax, eax
	jmp	SHORT $LN2@HasSunk
$LN1@HasSunk:

; 392  : 
; 393  : 	return ScriptCommand(&has_car_sunk,m_dwGTAId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _has_car_sunk
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8
$LN2@HasSunk:

; 394  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?HasSunk@CVehicle@@QAEHXZ ENDP				; CVehicle::HasSunk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetColor@CVehicle@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iColor1$ = 8						; size = 4
_iColor2$ = 12						; size = 4
?SetColor@CVehicle@@QAEXHH@Z PROC			; CVehicle::SetColor, COMDAT
; _this$ = ecx

; 351  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 352  : 	if(m_pVehicle)  {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@SetColor

; 353  : 		ScriptCommand(&set_car_color,m_dwGTAId,iColor1,iColor2);

	mov	eax, DWORD PTR _iColor2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iColor1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET _set_car_color
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 16					; 00000010H
$LN2@SetColor:

; 354  : 	}
; 355  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetColor@CVehicle@@QAEXHH@Z ENDP			; CVehicle::SetColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetHealth@CVehicle@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fHealth$ = 8						; size = 4
?SetHealth@CVehicle@@QAEXM@Z PROC			; CVehicle::SetHealth, COMDAT
; _this$ = ecx

; 342  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 343  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@SetHealth

; 344  : 		m_pVehicle->fHealth = fHealth;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR _fHealth$[ebp]
	movss	DWORD PTR [ecx+1216], xmm0
$LN1@SetHealth:

; 345  : 	}
; 346  : }	

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHealth@CVehicle@@QAEXM@Z ENDP			; CVehicle::SetHealth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetHealth@CVehicle@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetHealth@CVehicle@@QAEMXZ PROC			; CVehicle::GetHealth, COMDAT
; _this$ = ecx

; 334  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  : 	if(m_pVehicle) return m_pVehicle->fHealth;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@GetHealth
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	fld	DWORD PTR [ecx+1216]
	jmp	SHORT $LN1@GetHealth
	jmp	SHORT $LN1@GetHealth
$LN2@GetHealth:

; 336  : 	else return 0.0f;

	fldz
$LN1@GetHealth:

; 337  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHealth@CVehicle@@QAEMXZ ENDP			; CVehicle::GetHealth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?GetVehicleSubtype@CVehicle@@QAEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetVehicleSubtype@CVehicle@@QAEIXZ PROC		; CVehicle::GetVehicleSubtype, COMDAT
; _this$ = ecx

; 360  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 361  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN14@GetVehicle

; 362  : 		if(m_pVehicle->entity.vtable == 0x871120) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 8851744		; 00871120H
	jne	SHORT $LN13@GetVehicle

; 363  : 			return VEHICLE_SUBTYPE_CAR;

	mov	eax, 1
	jmp	$LN15@GetVehicle
	jmp	$LN14@GetVehicle
$LN13@GetVehicle:

; 364  : 		}
; 365  : 		else if(m_pVehicle->entity.vtable == 0x8721A0) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 8855968		; 008721a0H
	jne	SHORT $LN11@GetVehicle

; 366  : 			return VEHICLE_SUBTYPE_BOAT;

	mov	eax, 4
	jmp	SHORT $LN15@GetVehicle
	jmp	SHORT $LN14@GetVehicle
$LN11@GetVehicle:

; 367  : 		}
; 368  : 		else if(m_pVehicle->entity.vtable == 0x871360) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 8852320		; 00871360H
	jne	SHORT $LN9@GetVehicle

; 369  : 			return VEHICLE_SUBTYPE_BIKE;

	mov	eax, 2
	jmp	SHORT $LN15@GetVehicle
	jmp	SHORT $LN14@GetVehicle
$LN9@GetVehicle:

; 370  : 		}
; 371  : 		else if(m_pVehicle->entity.vtable == 0x871948) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 8853832		; 00871948H
	jne	SHORT $LN7@GetVehicle

; 372  : 			return VEHICLE_SUBTYPE_PLANE;

	mov	eax, 5
	jmp	SHORT $LN15@GetVehicle
	jmp	SHORT $LN14@GetVehicle
$LN7@GetVehicle:

; 373  : 		}
; 374  : 		else if(m_pVehicle->entity.vtable == 0x871680) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 8853120		; 00871680H
	jne	SHORT $LN5@GetVehicle

; 375  : 			return VEHICLE_SUBTYPE_HELI;

	mov	eax, 3
	jmp	SHORT $LN15@GetVehicle
	jmp	SHORT $LN14@GetVehicle
$LN5@GetVehicle:

; 376  : 		}
; 377  : 		else if(m_pVehicle->entity.vtable == 0x871528) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 8852776		; 00871528H
	jne	SHORT $LN3@GetVehicle

; 378  : 			return VEHICLE_SUBTYPE_PUSHBIKE;

	mov	eax, 6
	jmp	SHORT $LN15@GetVehicle
	jmp	SHORT $LN14@GetVehicle
$LN3@GetVehicle:

; 379  : 		}
; 380  : 		else if(m_pVehicle->entity.vtable == 0x872370) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx], 8856432		; 00872370H
	jne	SHORT $LN14@GetVehicle

; 381  : 			return VEHICLE_SUBTYPE_TRAIN;

	mov	eax, 7
	jmp	SHORT $LN15@GetVehicle
$LN14@GetVehicle:

; 382  : 		}
; 383  : 	}
; 384  : 	return 0;

	xor	eax, eax
$LN15@GetVehicle:

; 385  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVehicleSubtype@CVehicle@@QAEIXZ ENDP		; CVehicle::GetVehicleSubtype
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?SetLockedState@CVehicle@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iLocked$ = 8						; size = 4
?SetLockedState@CVehicle@@QAEXH@Z PROC			; CVehicle::SetLockedState, COMDAT
; _this$ = ecx

; 309  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 	if(!m_pVehicle) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@SetLockedS
	jmp	SHORT $LN4@SetLockedS
$LN3@SetLockedS:

; 311  : 
; 312  : 	if(iLocked) {

	cmp	DWORD PTR _iLocked$[ebp], 0
	je	SHORT $LN2@SetLockedS

; 313  : 		ScriptCommand(&lock_car,m_dwGTAId,1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _lock_car
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 314  : 	} else {

	jmp	SHORT $LN4@SetLockedS
$LN2@SetLockedS:

; 315  : 		ScriptCommand(&lock_car,m_dwGTAId,0);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _lock_car
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH
$LN4@SetLockedS:

; 316  : 	}
; 317  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLockedState@CVehicle@@QAEXH@Z ENDP			; CVehicle::SetLockedState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?ProcessMarkers@CVehicle@@QAEXXZ
_TEXT	SEGMENT
tv223 = -208						; size = 4
tv210 = -208						; size = 4
_this$ = -8						; size = 4
?ProcessMarkers@CVehicle@@QAEXXZ PROC			; CVehicle::ProcessMarkers, COMDAT
; _this$ = ecx

; 506  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 507  : 	if(!m_pVehicle) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN12@ProcessMar
	jmp	$LN13@ProcessMar
$LN12@ProcessMar:

; 508  : 
; 509  : 	if(m_byteObjectiveVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN11@ProcessMar

; 510  : 		// SHOW ALWAYS
; 511  : 		if(!m_bSpecialMarkerEnabled) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+33], 0
	jne	SHORT $LN10@ProcessMar

; 512  : 			if(m_dwMarkerID) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN9@ProcessMar

; 513  : 				ScriptCommand(&disable_marker, m_dwMarkerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET _disable_marker
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 514  : 				m_dwMarkerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN9@ProcessMar:

; 515  : 			}
; 516  : 			ScriptCommand(&tie_marker_to_car, m_dwGTAId, 1, 3, &m_dwMarkerID);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	3
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET _tie_marker_to_car
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 20					; 00000014H

; 517  : 			ScriptCommand(&set_marker_color,m_dwMarkerID,202);

	push	202					; 000000caH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET _set_marker_color
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 518  : 			ScriptCommand(&show_on_radar,m_dwMarkerID,3);

	push	3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET _show_on_radar
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 519  : 			m_bSpecialMarkerEnabled = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+33], 1
$LN10@ProcessMar:

; 520  : 		}
; 521  : 		return;

	jmp	$LN13@ProcessMar
$LN11@ProcessMar:

; 522  : 	}
; 523  : 
; 524  : 	// Disable the special marker if it has been deactivated
; 525  : 	if(!m_byteObjectiveVehicle && m_bSpecialMarkerEnabled) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	jne	SHORT $LN7@ProcessMar
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+33], 0
	je	SHORT $LN7@ProcessMar

; 526  : 		if(m_dwMarkerID) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN7@ProcessMar

; 527  : 			ScriptCommand(&disable_marker, m_dwMarkerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET _disable_marker
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 528  : 			m_bSpecialMarkerEnabled = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+33], 0

; 529  : 			m_dwMarkerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN7@ProcessMar:

; 530  : 		}
; 531  : 	}
; 532  : 
; 533  : 	// Add or remove car scanning markers.
; 534  : 	if(GetDistanceFromLocalPlayerPed() < CSCANNER_DISTANCE && !IsOccupied()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ ; CEntity::GetDistanceFromLocalPlayerPed
	fstp	DWORD PTR tv210[ebp]
	movss	xmm0, DWORD PTR __real@43480000
	comiss	xmm0, DWORD PTR tv210[ebp]
	jbe	SHORT $LN6@ProcessMar
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsOccupied@CVehicle@@QAEHXZ		; CVehicle::IsOccupied
	test	eax, eax
	jne	SHORT $LN6@ProcessMar

; 535  : 		// SHOW IT
; 536  : 		if(!m_dwMarkerID)  {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN5@ProcessMar

; 537  : 			ScriptCommand(&tie_marker_to_car, m_dwGTAId, 1, 2, &m_dwMarkerID);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	2
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET _tie_marker_to_car
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 20					; 00000014H

; 538  : 			ScriptCommand(&set_marker_color,m_dwMarkerID,200);

	push	200					; 000000c8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET _set_marker_color
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH
$LN5@ProcessMar:

; 539  : 		}	
; 540  : 	} 

	jmp	SHORT $LN1@ProcessMar
$LN6@ProcessMar:

; 541  : 	else if(IsOccupied() || GetDistanceFromLocalPlayerPed() >= CSCANNER_DISTANCE) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsOccupied@CVehicle@@QAEHXZ		; CVehicle::IsOccupied
	test	eax, eax
	jne	SHORT $LN2@ProcessMar
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDistanceFromLocalPlayerPed@CEntity@@QAEMXZ ; CEntity::GetDistanceFromLocalPlayerPed
	fstp	DWORD PTR tv223[ebp]
	movss	xmm0, DWORD PTR tv223[ebp]
	comiss	xmm0, DWORD PTR __real@43480000
	jb	SHORT $LN1@ProcessMar
$LN2@ProcessMar:

; 542  : 		// REMOVE IT	
; 543  : 		if(m_dwMarkerID) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@ProcessMar

; 544  : 			ScriptCommand(&disable_marker, m_dwMarkerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET _disable_marker
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 545  : 			m_dwMarkerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN1@ProcessMar:
$LN13@ProcessMar:

; 546  : 		}
; 547  : 	}
; 548  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ProcessMarkers@CVehicle@@QAEXXZ ENDP			; CVehicle::ProcessMarkers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?ResetPointers@CVehicle@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ResetPointers@CVehicle@@QAEXXZ PROC			; CVehicle::ResetPointers, COMDAT
; _this$ = ecx

; 221  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 222  : 	m_pVehicle = GamePool_Vehicle_GetAt(m_dwGTAId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax

; 223  : 	m_pEntity = (ENTITY_TYPE *)m_pVehicle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+4], edx

; 224  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ResetPointers@CVehicle@@QAEXXZ ENDP			; CVehicle::ResetPointers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?Remove@CVehicle@@UAEXXZ
_TEXT	SEGMENT
_pTrailer$1 = -20					; size = 4
_this$ = -8						; size = 4
?Remove@CVehicle@@UAEXXZ PROC				; CVehicle::Remove, COMDAT
; _this$ = ecx

; 171  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 172  : 	if (IsAdded()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAdded@CEntity@@QAEHXZ		; CEntity::IsAdded
	test	eax, eax
	je	SHORT $LN3@Remove

; 173  : 		// Process stuff for trailers
; 174  : 		CVehicle *pTrailer = this->GetTrailer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrailer@CVehicle@@QAEPAV1@XZ	; CVehicle::GetTrailer
	mov	DWORD PTR _pTrailer$1[ebp], eax

; 175  : 		if(pTrailer) pTrailer->Remove();

	cmp	DWORD PTR _pTrailer$1[ebp], 0
	je	SHORT $LN1@Remove
	mov	eax, DWORD PTR _pTrailer$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pTrailer$1[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Remove:

; 176  : 
; 177  : 		// Call underlying Remove
; 178  : 		CEntity::Remove();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Remove@CEntity@@UAEXXZ			; CEntity::Remove
$LN3@Remove:

; 179  : 	}
; 180  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Remove@CVehicle@@UAEXXZ ENDP				; CVehicle::Remove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ?Add@CVehicle@@UAEXXZ
_TEXT	SEGMENT
_pTrailer$1 = -20					; size = 4
_this$ = -8						; size = 4
?Add@CVehicle@@UAEXXZ PROC				; CVehicle::Add, COMDAT
; _this$ = ecx

; 156  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 	if (!IsAdded()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAdded@CEntity@@QAEHXZ		; CEntity::IsAdded
	test	eax, eax
	jne	SHORT $LN3@Add

; 158  : 		// Call underlying Add
; 159  : 		CEntity::Add();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@CEntity@@UAEXXZ			; CEntity::Add

; 160  : 
; 161  : 		// Process stuff for trailers
; 162  : 		CVehicle *pTrailer = this->GetTrailer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTrailer@CVehicle@@QAEPAV1@XZ	; CVehicle::GetTrailer
	mov	DWORD PTR _pTrailer$1[ebp], eax

; 163  : 		if(pTrailer) pTrailer->Add();

	cmp	DWORD PTR _pTrailer$1[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _pTrailer$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pTrailer$1[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Add:

; 164  : 	}
; 165  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Add@CVehicle@@UAEXXZ ENDP				; CVehicle::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ??1CVehicle@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CVehicle@@UAE@XZ PROC				; CVehicle::~CVehicle, COMDAT
; _this$ = ecx

; 140  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CVehicle@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CVehicle@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 141  : 	m_pVehicle = GamePool_Vehicle_GetAt(m_dwGTAId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax

; 142  : 	if(m_pVehicle) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@CVehicle

; 143  : 		if(m_dwMarkerID) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@CVehicle

; 144  : 			ScriptCommand(&disable_marker, m_dwMarkerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET _disable_marker
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 145  : 			m_dwMarkerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN1@CVehicle:

; 146  : 		}
; 147  : 		RemoveEveryoneFromVehicle();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveEveryoneFromVehicle@CVehicle@@QAEXXZ ; CVehicle::RemoveEveryoneFromVehicle

; 148  : 		ScriptCommand(&destroy_car,m_dwGTAId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _destroy_car
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8
$LN3@CVehicle:

; 149  : 	}
; 150  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CEntity@@UAE@XZ			; CEntity::~CEntity
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CVehicle@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CEntity@@UAE@XZ			; CEntity::~CEntity
__ehhandler$??1CVehicle@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CVehicle@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CVehicle@@UAE@XZ ENDP				; CVehicle::~CVehicle
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\vehicle.cpp
;	COMDAT ??0CVehicle@@QAE@HMMMMPAD@Z
_TEXT	SEGMENT
_dwDirection$2 = -44					; size = 4
_dwRetID$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_iType$ = 8						; size = 4
_fPosX$ = 12						; size = 4
_fPosY$ = 16						; size = 4
_fPosZ$ = 20						; size = 4
_fRotation$ = 24					; size = 4
_szNumberPlate$ = 28					; size = 4
??0CVehicle@@QAE@HMMMMPAD@Z PROC			; CVehicle::CVehicle, COMDAT
; _this$ = ecx

; 32   : {	

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CVehicle@@QAE@HMMMMPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CEntity@@QAE@XZ			; CEntity::CEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CVehicle@@6B@

; 33   : 	DWORD dwRetID=0;

	mov	DWORD PTR _dwRetID$[ebp], 0

; 34   : 
; 35   : 	m_pVehicle = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 36   : 	m_dwGTAId = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 37   : 	m_pTrailer = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+45], 0

; 38   : 
; 39   : 	if( (iType != TRAIN_PASSENGER_LOCO) &&
; 40   : 		(iType != TRAIN_FREIGHT_LOCO) &&
; 41   : 		(iType != TRAIN_PASSENGER) &&
; 42   : 		(iType != TRAIN_FREIGHT) &&
; 43   : 		(iType != TRAIN_TRAM)) {

	cmp	DWORD PTR _iType$[ebp], 537		; 00000219H
	je	$LN27@CVehicle
	cmp	DWORD PTR _iType$[ebp], 538		; 0000021aH
	je	$LN27@CVehicle
	cmp	DWORD PTR _iType$[ebp], 569		; 00000239H
	je	$LN27@CVehicle
	cmp	DWORD PTR _iType$[ebp], 570		; 0000023aH
	je	$LN27@CVehicle
	cmp	DWORD PTR _iType$[ebp], 449		; 000001c1H
	je	$LN27@CVehicle

; 44   : 
; 45   : 		// NORMAL VEHICLE
; 46   : 		if(!pGame->IsModelLoaded(iType)) {

	mov	eax, DWORD PTR _iType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN24@CVehicle

; 47   : 			pGame->RequestModel(iType);

	mov	eax, DWORD PTR _iType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 48   : 			pGame->LoadRequestedModels();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?LoadRequestedModels@CGame@@QAEXXZ	; CGame::LoadRequestedModels
$LN25@CVehicle:

; 49   : 			while(!pGame->IsModelLoaded(iType)) Sleep(5);

	mov	eax, DWORD PTR _iType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN24@CVehicle
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN25@CVehicle
$LN24@CVehicle:

; 50   : 		}
; 51   : 
; 52   : 		if (szNumberPlate && szNumberPlate[0]) 

	cmp	DWORD PTR _szNumberPlate$[ebp], 0
	je	SHORT $LN23@CVehicle
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _szNumberPlate$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN23@CVehicle

; 53   : 			ScriptCommand(&set_car_numberplate, iType, szNumberPlate);

	mov	eax, DWORD PTR _szNumberPlate$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iType$[ebp]
	push	ecx
	push	OFFSET _set_car_numberplate
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH
$LN23@CVehicle:

; 54   : 
; 55   : 		ScriptCommand(&create_car,iType,fPosX,fPosY,fPosZ+0.5f,&dwRetID);

	lea	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	movss	xmm0, DWORD PTR _fPosZ$[ebp]
	addss	xmm0, DWORD PTR __real@3f000000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fPosY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fPosX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _iType$[ebp]
	push	ecx
	push	OFFSET _create_car
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 36					; 00000024H

; 56   : 		ScriptCommand(&set_car_z_angle,dwRetID,fRotation);

	cvtss2sd xmm0, DWORD PTR _fRotation$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	push	OFFSET _set_car_z_angle
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 16					; 00000010H

; 57   : 		ScriptCommand(&car_gas_tank_explosion,dwRetID,0);

	push	0
	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	push	OFFSET _car_gas_tank_explosion
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 58   : 		ScriptCommand(&set_car_hydraulics,dwRetID,0);

	push	0
	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	push	OFFSET _set_car_hydraulics
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 59   : 		ScriptCommand(&toggle_car_tires_vulnerable,dwRetID,0);

	push	0
	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	push	OFFSET _toggle_car_tires_vulnerable
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 60   : 		
; 61   : 		//LinkToInterior(m_byteInterior);
; 62   : 
; 63   : 		m_pVehicle = GamePool_Vehicle_GetAt(dwRetID);

	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 64   : 		m_pEntity = (ENTITY_TYPE *)m_pVehicle; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+4], edx

; 65   : 		m_dwGTAId = dwRetID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dwRetID$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 66   : 		dwLastCreatedVehicleID = dwRetID;

	mov	eax, DWORD PTR _dwRetID$[ebp]
	mov	DWORD PTR ?dwLastCreatedVehicleID@@3KA, eax ; dwLastCreatedVehicleID

; 67   : 		m_pVehicle->dwDoorsLocked = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+1272], 0

; 68   : 		m_bIsLocked = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 69   : 		
; 70   : 		Remove(); // They'll be added manually during pool processing.

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Remove@CVehicle@@UAEXXZ		; CVehicle::Remove

; 71   : 		pGame->RemoveModel(iType);						

	mov	eax, DWORD PTR _iType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RemoveModel@CGame@@QAEXH@Z		; CGame::RemoveModel

; 72   : 	}
; 73   : 	else if( (iType == TRAIN_PASSENGER_LOCO) || 

	jmp	$LN2@CVehicle
$LN27@CVehicle:

; 74   : 		(iType == TRAIN_FREIGHT_LOCO) ||
; 75   : 		(iType == TRAIN_TRAM)) {

	cmp	DWORD PTR _iType$[ebp], 537		; 00000219H
	je	SHORT $LN20@CVehicle
	cmp	DWORD PTR _iType$[ebp], 538		; 0000021aH
	je	SHORT $LN20@CVehicle
	cmp	DWORD PTR _iType$[ebp], 449		; 000001c1H
	jne	$LN21@CVehicle
$LN20@CVehicle:

; 76   : 
; 77   : 		// TRAIN LOCOMOTIVES
; 78   : 
; 79   : 		if(iType == TRAIN_PASSENGER_LOCO) iType = 5;

	cmp	DWORD PTR _iType$[ebp], 537		; 00000219H
	jne	SHORT $LN19@CVehicle
	mov	DWORD PTR _iType$[ebp], 5
	jmp	SHORT $LN15@CVehicle
$LN19@CVehicle:

; 80   : 		else if(iType == TRAIN_FREIGHT_LOCO) iType = 3;

	cmp	DWORD PTR _iType$[ebp], 538		; 0000021aH
	jne	SHORT $LN17@CVehicle
	mov	DWORD PTR _iType$[ebp], 3
	jmp	SHORT $LN15@CVehicle
$LN17@CVehicle:

; 81   : 		else if(iType == TRAIN_TRAM) iType = 9;

	cmp	DWORD PTR _iType$[ebp], 449		; 000001c1H
	jne	SHORT $LN15@CVehicle
	mov	DWORD PTR _iType$[ebp], 9
$LN15@CVehicle:

; 82   : 
; 83   : 		DWORD dwDirection=0;

	mov	DWORD PTR _dwDirection$2[ebp], 0

; 84   : 		if(fRotation != 0.0f) {

	movss	xmm0, DWORD PTR _fRotation$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN14@CVehicle

; 85   : 			dwDirection = 1;

	mov	DWORD PTR _dwDirection$2[ebp], 1
$LN14@CVehicle:

; 86   : 		}
; 87   : 		pGame->RequestModel(TRAIN_PASSENGER_LOCO);

	push	537					; 00000219H
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 88   : 		pGame->RequestModel(TRAIN_PASSENGER);

	push	569					; 00000239H
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 89   : 		pGame->RequestModel(TRAIN_FREIGHT_LOCO);

	push	538					; 0000021aH
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 90   : 		pGame->RequestModel(TRAIN_FREIGHT);

	push	570					; 0000023aH
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 91   : 		pGame->RequestModel(TRAIN_TRAM);

	push	449					; 000001c1H
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 92   : 		pGame->LoadRequestedModels();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?LoadRequestedModels@CGame@@QAEXXZ	; CGame::LoadRequestedModels
$LN13@CVehicle:

; 93   : 		while(!pGame->IsModelLoaded(TRAIN_PASSENGER_LOCO)) Sleep(1);

	push	537					; 00000219H
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN12@CVehicle
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN13@CVehicle
$LN12@CVehicle:

; 94   : 		while(!pGame->IsModelLoaded(TRAIN_PASSENGER)) Sleep(1);

	push	569					; 00000239H
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN10@CVehicle
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN12@CVehicle
$LN10@CVehicle:

; 95   : 		while(!pGame->IsModelLoaded(TRAIN_FREIGHT_LOCO)) Sleep(1);

	push	538					; 0000021aH
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN8@CVehicle
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN10@CVehicle
$LN8@CVehicle:

; 96   : 		while(!pGame->IsModelLoaded(TRAIN_FREIGHT)) Sleep(1);

	push	570					; 0000023aH
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN6@CVehicle
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN8@CVehicle
$LN6@CVehicle:

; 97   : 		while(!pGame->IsModelLoaded(TRAIN_TRAM)) Sleep(1);

	push	449					; 000001c1H
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN4@CVehicle
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@CVehicle
$LN4@CVehicle:

; 98   : 	
; 99   : 		ScriptCommand(&create_train,iType,fPosX,fPosY,fPosZ,dwDirection,&dwRetID);

	lea	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwDirection$2[ebp]
	push	ecx
	cvtss2sd xmm0, DWORD PTR _fPosZ$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fPosY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fPosX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _iType$[ebp]
	push	edx
	push	OFFSET _create_train
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 40					; 00000028H

; 100  : 
; 101  : 		m_pVehicle = GamePool_Vehicle_GetAt(dwRetID);

	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 102  : 		m_pEntity = (ENTITY_TYPE *)m_pVehicle; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+4], edx

; 103  : 		m_dwGTAId = dwRetID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dwRetID$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 104  : 		dwLastCreatedVehicleID = dwRetID;

	mov	eax, DWORD PTR _dwRetID$[ebp]
	mov	DWORD PTR ?dwLastCreatedVehicleID@@3KA, eax ; dwLastCreatedVehicleID

; 105  : 
; 106  : 		GamePrepareTrain(m_pVehicle);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	?GamePrepareTrain@@YGXPAU_VEHICLE_TYPE@@@Z ; GamePrepareTrain

; 107  : 		//ScriptCommand(&set_train_flag, &dwRetID, 0);
; 108  : 
; 109  : 		//pGame->RemoveModel(TRAIN_PASSENGER_LOCO);
; 110  : 		//pGame->RemoveModel(TRAIN_PASSENGER);
; 111  : 		//pGame->RemoveModel(TRAIN_FREIGHT_LOCO);
; 112  : 		//pGame->RemoveModel(TRAIN_FREIGHT);
; 113  : 	}
; 114  : 	else if((iType == TRAIN_PASSENGER) ||

	jmp	SHORT $LN2@CVehicle
$LN21@CVehicle:

; 115  : 			(iType == TRAIN_FREIGHT) ) {

	cmp	DWORD PTR _iType$[ebp], 569		; 00000239H
	je	SHORT $LN1@CVehicle
	cmp	DWORD PTR _iType$[ebp], 570		; 0000023aH
	jne	SHORT $LN2@CVehicle
$LN1@CVehicle:

; 116  : 
; 117  : 		dwRetID = (((dwLastCreatedVehicleID >> 8) + 1) << 8) + 1; // holy shift

	mov	eax, DWORD PTR ?dwLastCreatedVehicleID@@3KA ; dwLastCreatedVehicleID
	shr	eax, 8
	add	eax, 1
	shl	eax, 8
	add	eax, 1
	mov	DWORD PTR _dwRetID$[ebp], eax

; 118  : 		m_pVehicle = GamePool_Vehicle_GetAt(dwRetID);

	mov	eax, DWORD PTR _dwRetID$[ebp]
	push	eax
	call	?GamePool_Vehicle_GetAt@@YGPAU_VEHICLE_TYPE@@H@Z ; GamePool_Vehicle_GetAt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 119  : 		m_pEntity = (ENTITY_TYPE *)m_pVehicle; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+4], edx

; 120  : 		m_dwGTAId = dwRetID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dwRetID$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 121  : 		///
; 122  : 		
; 123  : 		dwLastCreatedVehicleID = dwRetID;

	mov	eax, DWORD PTR _dwRetID$[ebp]
	mov	DWORD PTR ?dwLastCreatedVehicleID@@3KA, eax ; dwLastCreatedVehicleID
$LN2@CVehicle:

; 124  : 		//ScriptCommand(&set_train_flag, &dwRetID, 0);
; 125  : 	}
; 126  : 		
; 127  : 	m_bIsInvulnerable = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 128  : 	m_byteObjectiveVehicle = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 129  : 	m_bSpecialMarkerEnabled = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+33], 0

; 130  : 	m_dwMarkerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 131  : 	m_bHasBeenDriven = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+41], 0

; 132  : 	m_dwTimeSinceLastDriven = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+37], eax

; 133  : 	m_bDoorsLocked = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 134  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@CVehicle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN34@CVehicle:
	DD	1
	DD	$LN33@CVehicle
$LN33@CVehicle:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN31@CVehicle
$LN31@CVehicle:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CVehicle@@QAE@HMMMMPAD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CEntity@@UAE@XZ			; CEntity::~CEntity
__ehhandler$??0CVehicle@@QAE@HMMMMPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CVehicle@@QAE@HMMMMPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CVehicle@@QAE@HMMMMPAD@Z ENDP			; CVehicle::CVehicle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCEntity@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCEntity@@UAEPAXI@Z PROC				; CEntity::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CEntity@@UAE@XZ			; CEntity::~CEntity
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCEntity@@UAEPAXI@Z ENDP				; CEntity::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\entity.h
;	COMDAT ??1CEntity@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CEntity@@UAE@XZ PROC					; CEntity::~CEntity, COMDAT
; _this$ = ecx

; 20   : 	virtual ~CEntity() {};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEntity@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CEntity@@UAE@XZ ENDP					; CEntity::~CEntity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\entity.h
;	COMDAT ??0CEntity@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CEntity@@QAE@XZ PROC					; CEntity::CEntity, COMDAT
; _this$ = ecx

; 19   : 	CEntity() {};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEntity@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0CEntity@@QAE@XZ ENDP					; CEntity::CEntity
_TEXT	ENDS
END
