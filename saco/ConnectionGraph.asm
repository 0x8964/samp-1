; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\raknet\ConnectionGraph.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?length@?1??NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@2@0GPAVRakPeerInterface@@@Z@4HB DD 011H ; `ConnectionGraph::NotifyUserOfRemoteConnection'::`2'::length
_UNASSIGNED_PLAYER_ID DD 0ffffffffH
	DW	0ffffH
CONST	ENDS
PUBLIC	??4PlayerID@@QAEAAU0@ABU0@@Z			; PlayerID::operator=
PUBLIC	??0PluginInterface@@QAE@XZ			; PluginInterface::PluginInterface
PUBLIC	??0ConnectionGraph@@QAE@XZ			; ConnectionGraph::ConnectionGraph
PUBLIC	??1ConnectionGraph@@QAE@XZ			; ConnectionGraph::~ConnectionGraph
PUBLIC	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ	; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
PUBLIC	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ	; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
PUBLIC	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@UPlayerID@@E@Z ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
PUBLIC	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
PUBLIC	??9PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator!=
PUBLIC	??OPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator>
PUBLIC	??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator<
PUBLIC	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator=
PUBLIC	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z ; ConnectionGraph::PlayerIdAndGroupId::`vector deleting destructor'
PUBLIC	?SetPassword@ConnectionGraph@@QAEXPBD@Z		; ConnectionGraph::SetPassword
PUBLIC	?GetGraph@ConnectionGraph@@QAEPAV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@XZ ; ConnectionGraph::GetGraph
PUBLIC	?SetAutoAddNewConnections@ConnectionGraph@@QAEX_N@Z ; ConnectionGraph::SetAutoAddNewConnections
PUBLIC	?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z ; ConnectionGraph::RequestConnectionGraph
PUBLIC	?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z ; ConnectionGraph::AddNewConnection
PUBLIC	?SetGroupId@ConnectionGraph@@QAEXE@Z		; ConnectionGraph::SetGroupId
PUBLIC	?SubscribeToGroup@ConnectionGraph@@QAEXE@Z	; ConnectionGraph::SubscribeToGroup
PUBLIC	?UnsubscribeFromGroup@ConnectionGraph@@QAEXE@Z	; ConnectionGraph::UnsubscribeFromGroup
PUBLIC	?OnDisconnect@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z ; ConnectionGraph::OnDisconnect
PUBLIC	?Update@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z ; ConnectionGraph::Update
PUBLIC	?OnReceive@ConnectionGraph@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnReceive
PUBLIC	?OnCloseConnection@ConnectionGraph@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z ; ConnectionGraph::OnCloseConnection
PUBLIC	?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z ; ConnectionGraph::HandleDroppedConnection
PUBLIC	?OnNewIncomingConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnNewIncomingConnection
PUBLIC	?OnConnectionRequestAccepted@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnConnectionRequestAccepted
PUBLIC	?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnConnectionGraphRequest
PUBLIC	?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnConnectionGraphReply
PUBLIC	?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnConnectionGraphUpdate
PUBLIC	?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnNewConnection
PUBLIC	?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z ; ConnectionGraph::OnConnectionLost
PUBLIC	?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z ; ConnectionGraph::SerializeWeightedGraph
PUBLIC	?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z ; ConnectionGraph::DeserializeWeightedGraph
PUBLIC	??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABUPlayerID@@0@Z ; DataStructures::defaultOrderedListComparison<PlayerID,PlayerID>
PUBLIC	?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z ; ConnectionGraph::AddAndRelayConnection
PUBLIC	?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z ; ConnectionGraph::RemoveAndRelayConnection
PUBLIC	?RemoveParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z ; ConnectionGraph::RemoveParticipant
PUBLIC	?AddParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z ; ConnectionGraph::AddParticipant
PUBLIC	?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ; ConnectionGraph::BroadcastGraphUpdate
PUBLIC	?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z ; ConnectionGraph::NotifyUserOfRemoteConnection
PUBLIC	?IsNewRemoteConnection@ConnectionGraph@@IAE_NABUPlayerIdAndGroupId@1@0PAVRakPeerInterface@@@Z ; ConnectionGraph::IsNewRemoteConnection
PUBLIC	?DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z ; ConnectionGraph::DeserializeIgnoreList
PUBLIC	?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ; ConnectionGraph::SerializeIgnoreListAndBroadcast
PUBLIC	?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@SAXXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::IMPLEMENT_DEFAULT_COMPARISON
PUBLIC	??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
PUBLIC	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
PUBLIC	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
PUBLIC	?GetIndexFromKey@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIABUPlayerID@@PA_N@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
PUBLIC	??A?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::operator[]
PUBLIC	?RemoveAtIndex@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::RemoveAtIndex
PUBLIC	?Clear@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Clear
PUBLIC	?Size@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Size
PUBLIC	??0?$List@UPlayerID@@@DataStructures@@QAE@XZ	; DataStructures::List<PlayerID>::List<PlayerID>
PUBLIC	??1?$List@UPlayerID@@@DataStructures@@QAE@XZ	; DataStructures::List<PlayerID>::~List<PlayerID>
PUBLIC	??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::List<PlayerID>::operator[]
PUBLIC	?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@I@Z ; DataStructures::List<PlayerID>::Insert
PUBLIC	?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@@Z ; DataStructures::List<PlayerID>::Insert
PUBLIC	?RemoveAtIndex@?$List@UPlayerID@@@DataStructures@@QAEXI@Z ; DataStructures::List<PlayerID>::RemoveAtIndex
PUBLIC	?Del@?$List@UPlayerID@@@DataStructures@@QAEXI@Z	; DataStructures::List<PlayerID>::Del
PUBLIC	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ	; DataStructures::List<PlayerID>::Size
PUBLIC	?Clear@?$List@UPlayerID@@@DataStructures@@QAEX_N@Z ; DataStructures::List<PlayerID>::Clear
PUBLIC	?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::IMPLEMENT_DEFAULT_COMPARISON
PUBLIC	??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
PUBLIC	??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
PUBLIC	?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode
PUBLIC	?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveNode
PUBLIC	?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection
PUBLIC	?RemoveConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveConnection
PUBLIC	?HasConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::HasConnection
PUBLIC	?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear
PUBLIC	?GetNodeCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEIXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeCount
PUBLIC	?GetConnectionCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEII@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionCount
PUBLIC	?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionAtIndex
PUBLIC	?GetNodeAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeAtIndex
PUBLIC	?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra
PUBLIC	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
PUBLIC	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
PUBLIC	?Pop@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Pop
PUBLIC	?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SetNew
PUBLIC	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
PUBLIC	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
PUBLIC	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
PUBLIC	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear
PUBLIC	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
PUBLIC	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
PUBLIC	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
PUBLIC	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
PUBLIC	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
PUBLIC	?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex
PUBLIC	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear
PUBLIC	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size
PUBLIC	??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
PUBLIC	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
PUBLIC	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
PUBLIC	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
PUBLIC	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
PUBLIC	?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex
PUBLIC	?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
PUBLIC	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
PUBLIC	?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear
PUBLIC	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
PUBLIC	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
PUBLIC	??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::IMPLEMENT_DEFAULT_COMPARISON
PUBLIC	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear
PUBLIC	??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear
PUBLIC	??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>
PUBLIC	?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::IMPLEMENT_DEFAULT_COMPARISON
PUBLIC	??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
PUBLIC	??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
PUBLIC	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
PUBLIC	?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert
PUBLIC	?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Remove
PUBLIC	?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Clear
PUBLIC	??0?$List@E@DataStructures@@QAE@XZ		; DataStructures::List<unsigned char>::List<unsigned char>
PUBLIC	??1?$List@E@DataStructures@@QAE@XZ		; DataStructures::List<unsigned char>::~List<unsigned char>
PUBLIC	??A?$List@E@DataStructures@@QBEAAEI@Z		; DataStructures::List<unsigned char>::operator[]
PUBLIC	?Insert@?$List@E@DataStructures@@QAEXEI@Z	; DataStructures::List<unsigned char>::Insert
PUBLIC	?Insert@?$List@E@DataStructures@@QAEXE@Z	; DataStructures::List<unsigned char>::Insert
PUBLIC	?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z	; DataStructures::List<unsigned char>::RemoveAtIndex
PUBLIC	?Del@?$List@E@DataStructures@@QAEXI@Z		; DataStructures::List<unsigned char>::Del
PUBLIC	?Size@?$List@E@DataStructures@@QBEIXZ		; DataStructures::List<unsigned char>::Size
PUBLIC	?Clear@?$List@E@DataStructures@@QAEX_N@Z	; DataStructures::List<unsigned char>::Clear
PUBLIC	?GetWriteOffset@BitStream@RakNet@@QBEHXZ	; RakNet::BitStream::GetWriteOffset
PUBLIC	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>
PUBLIC	??$Write@I@BitStream@RakNet@@QAEXI@Z		; RakNet::BitStream::Write<unsigned int>
PUBLIC	??$Write@G@BitStream@RakNet@@QAEXG@Z		; RakNet::BitStream::Write<unsigned short>
PUBLIC	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>
PUBLIC	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z		; RakNet::BitStream::Read<unsigned int>
PUBLIC	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z		; RakNet::BitStream::Read<unsigned short>
PUBLIC	??$Write@E@BitStream@RakNet@@QAEXE@Z		; RakNet::BitStream::Write<unsigned char>
PUBLIC	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z		; RakNet::BitStream::Read<unsigned char>
PUBLIC	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::WriteCompressed<unsigned int>
PUBLIC	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>
PUBLIC	?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
PUBLIC	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set
PUBLIC	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
PUBLIC	?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete
PUBLIC	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
PUBLIC	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
PUBLIC	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear
PUBLIC	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
PUBLIC	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
PUBLIC	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
PUBLIC	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
PUBLIC	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
PUBLIC	?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex
PUBLIC	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear
PUBLIC	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size
PUBLIC	??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
PUBLIC	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
PUBLIC	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
PUBLIC	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
PUBLIC	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
PUBLIC	?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex
PUBLIC	?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
PUBLIC	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
PUBLIC	?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear
PUBLIC	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
PUBLIC	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
PUBLIC	??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::`scalar deleting destructor'
PUBLIC	??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Queue<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Push
PUBLIC	?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop
PUBLIC	?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
PUBLIC	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
PUBLIC	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
PUBLIC	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode
PUBLIC	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=
PUBLIC	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor'
PUBLIC	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
PUBLIC	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
PUBLIC	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode
PUBLIC	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=
PUBLIC	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor'
PUBLIC	??_7PluginInterface@@6B@			; PluginInterface::`vftable'
PUBLIC	??_7ConnectionGraph@@6B@			; ConnectionGraph::`vftable'
PUBLIC	?__LINE__Var@?1??SetPassword@ConnectionGraph@@QAEXPBD@Z@4JA ; `ConnectionGraph::SetPassword'::`2'::__LINE__Var
PUBLIC	??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@ ; `string'
PUBLIC	??_C@_1CK@OAIJMFJM@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAp?$AAa?$AAs?$AAs?$AAw?$AAo?$AAr?$AAd?$AA?$CJ?$AA?$DM?$AA2?$AA5?$AA6?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z@4JA ; `ConnectionGraph::HandleDroppedConnection'::`2'::__LINE__Var
PUBLIC	??_C@_19OLDIEKDA@?$AAp?$AAe?$AAe?$AAr?$AA?$AA@	; `string'
PUBLIC	?__LINE__Var@?1??DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z@4JA ; `ConnectionGraph::DeserializeIgnoreList'::`2'::__LINE__Var
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z@4JA ; `ConnectionGraph::DeserializeWeightedGraph'::`2'::__LINE__Var
PUBLIC	??_C@_1EI@CNBBGJFB@?$AAn?$AAo?$AAd?$AAe?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE?$AAR@ ; `string'
PUBLIC	??_C@_1FE@GDDODEON@?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_@ ; `string'
PUBLIC	?__LINE__Var@?1??AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@2@1GPAVRakPeerInterface@@@Z@4JA ; `ConnectionGraph::AddAndRelayConnection'::`2'::__LINE__Var
PUBLIC	??_C@_1EK@MGLCJFKJ@?$AAc?$AAo?$AAn?$AAn?$AA1?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE@ ; `string'
PUBLIC	??_C@_1EK@BMIIGCII@?$AAc?$AAo?$AAn?$AAn?$AA2?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE@ ; `string'
PUBLIC	??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@ ; `string'
PUBLIC	??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FC@PKHPOOLI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1CG@FNLJFNDG@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAt?$AAr?$AAu?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@ ; `string'
PUBLIC	??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@ ; `string'
PUBLIC	??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@ ; `string'
PUBLIC	??_R4PluginInterface@@6B@			; PluginInterface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluginInterface@@@8			; PluginInterface `RTTI Type Descriptor'
PUBLIC	??_R3PluginInterface@@8				; PluginInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluginInterface@@8				; PluginInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluginInterface@@8		; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ConnectionGraph@@6B@			; ConnectionGraph::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVConnectionGraph@@@8			; ConnectionGraph `RTTI Type Descriptor'
PUBLIC	??_R3ConnectionGraph@@8				; ConnectionGraph::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ConnectionGraph@@8				; ConnectionGraph::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ConnectionGraph@@8		; ConnectionGraph::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??8PlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator==
EXTRN	??9PlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator!=
EXTRN	??OPlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator>
EXTRN	??MPlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator<
EXTRN	?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnAttach
EXTRN	?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDetach
EXTRN	?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnInitialize
EXTRN	?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::Update
EXTRN	?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z:PROC ; PluginInterface::OnReceive
EXTRN	?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDisconnect
EXTRN	?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z:PROC ; PluginInterface::OnCloseConnection
EXTRN	?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketSend
EXTRN	?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketReceive
EXTRN	?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z:PROC ; PluginInterface::OnInternalPacket
EXTRN	__wassert:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	??0BitStream@RakNet@@QAE@PAEI_N@Z:PROC		; RakNet::BitStream::BitStream
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?IgnoreBits@BitStream@RakNet@@QAEXH@Z:PROC	; RakNet::BitStream::IgnoreBits
EXTRN	?SetWriteOffset@BitStream@RakNet@@QAEXH@Z:PROC	; RakNet::BitStream::SetWriteOffset
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z:PROC	; RakNet::BitStream::WriteBits
EXTRN	?AlignWriteToByteBoundary@BitStream@RakNet@@QAEXXZ:PROC ; RakNet::BitStream::AlignWriteToByteBoundary
EXTRN	?AlignReadToByteBoundary@BitStream@RakNet@@QAEXXZ:PROC ; RakNet::BitStream::AlignReadToByteBoundary
EXTRN	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z:PROC	; RakNet::BitStream::ReadBits
EXTRN	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z:PROC ; RakNet::BitStream::WriteCompressed
EXTRN	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z:PROC ; RakNet::BitStream::ReadCompressed
EXTRN	?Instance@StringCompressor@@SAPAV1@XZ:PROC	; StringCompressor::Instance
EXTRN	?EncodeString@StringCompressor@@QAEXPBDHPAVBitStream@RakNet@@H@Z:PROC ; StringCompressor::EncodeString
EXTRN	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z:PROC ; StringCompressor::DecodeString
EXTRN	?AllocPacket@@YAPAUPacket@@I@Z:PROC		; AllocPacket
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@ConnectionGraph@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ConnectionGraph@@8 DD FLAT:??_R0?AVConnectionGraph@@@8 ; ConnectionGraph::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ConnectionGraph@@8
rdata$r	ENDS
;	COMDAT ??_R2ConnectionGraph@@8
rdata$r	SEGMENT
??_R2ConnectionGraph@@8 DD FLAT:??_R1A@?0A@EA@ConnectionGraph@@8 ; ConnectionGraph::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R3ConnectionGraph@@8
rdata$r	SEGMENT
??_R3ConnectionGraph@@8 DD 00H				; ConnectionGraph::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ConnectionGraph@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVConnectionGraph@@@8
data$r	SEGMENT
??_R0?AVConnectionGraph@@@8 DD FLAT:??_7type_info@@6B@	; ConnectionGraph `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVConnectionGraph@@', 00H
data$r	ENDS
;	COMDAT ??_R4ConnectionGraph@@6B@
rdata$r	SEGMENT
??_R4ConnectionGraph@@6B@ DD 00H			; ConnectionGraph::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVConnectionGraph@@@8
	DD	FLAT:??_R3ConnectionGraph@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluginInterface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluginInterface@@8 DD FLAT:??_R0?AVPluginInterface@@@8 ; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R2PluginInterface@@8
rdata$r	SEGMENT
??_R2PluginInterface@@8 DD FLAT:??_R1A@?0A@EA@PluginInterface@@8 ; PluginInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PluginInterface@@8
rdata$r	SEGMENT
??_R3PluginInterface@@8 DD 00H				; PluginInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluginInterface@@@8
data$r	SEGMENT
??_R0?AVPluginInterface@@@8 DD FLAT:??_7type_info@@6B@	; PluginInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluginInterface@@', 00H
data$r	ENDS
;	COMDAT ??_R4PluginInterface@@6B@
rdata$r	SEGMENT
??_R4PluginInterface@@6B@ DD 00H			; PluginInterface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluginInterface@@@8
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@
CONST	SEGMENT
??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@ DB 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'h', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ DB 'n'
	DB	00H, 'e', 00H, 'w', 00H, '_', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
CONST	SEGMENT
??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'q', 00H, 'u', 00H, 'e', 00H, 'u', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, '=', 00H, '='
	DB	00H, 'f', 00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, '>', 00H, '=', 00H, 'n', 00H, 'u', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
CONST	SEGMENT
??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@FNLJFNDG@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAt?$AAr?$AAu?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@FNLJFNDG@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAt?$AAr?$AAu?$AAe?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, '=', 00H, '='
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@PKHPOOLI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr@
CONST	SEGMENT
??_C@_1FC@PKHPOOLI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	'd', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
CONST	SEGMENT
??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@BMIIGCII@?$AAc?$AAo?$AAn?$AAn?$AA2?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE@
CONST	SEGMENT
??_C@_1EK@BMIIGCII@?$AAc?$AAo?$AAn?$AAn?$AA2?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE@ DB 'c'
	DB	00H, 'o', 00H, 'n', 00H, 'n', 00H, '2', 00H, '.', 00H, 'p', 00H
	DB	'l', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'd'
	DB	00H, '!', 00H, '=', 00H, 'U', 00H, 'N', 00H, 'A', 00H, 'S', 00H
	DB	'S', 00H, 'I', 00H, 'G', 00H, 'N', 00H, 'E', 00H, 'D', 00H, '_'
	DB	00H, 'P', 00H, 'L', 00H, 'A', 00H, 'Y', 00H, 'E', 00H, 'R', 00H
	DB	'_', 00H, 'I', 00H, 'D', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@MGLCJFKJ@?$AAc?$AAo?$AAn?$AAn?$AA1?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE@
CONST	SEGMENT
??_C@_1EK@MGLCJFKJ@?$AAc?$AAo?$AAn?$AAn?$AA1?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE@ DB 'c'
	DB	00H, 'o', 00H, 'n', 00H, 'n', 00H, '1', 00H, '.', 00H, 'p', 00H
	DB	'l', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'd'
	DB	00H, '!', 00H, '=', 00H, 'U', 00H, 'N', 00H, 'A', 00H, 'S', 00H
	DB	'S', 00H, 'I', 00H, 'G', 00H, 'N', 00H, 'E', 00H, 'D', 00H, '_'
	DB	00H, 'P', 00H, 'L', 00H, 'A', 00H, 'Y', 00H, 'E', 00H, 'R', 00H
	DB	'_', 00H, 'I', 00H, 'D', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@2@1GPAVRakPeerInterface@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@2@1GPAVRakPeerInterface@@@Z@4JA DD 01f7H ; `ConnectionGraph::AddAndRelayConnection'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FE@GDDODEON@?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_@
CONST	SEGMENT
??_C@_1FE@GDDODEON@?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_@ DB 'c'
	DB	00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'p', 00H, 'l', 00H, 'a'
	DB	00H, 'y', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'd', 00H, '!', 00H
	DB	'=', 00H, 'U', 00H, 'N', 00H, 'A', 00H, 'S', 00H, 'S', 00H, 'I'
	DB	00H, 'G', 00H, 'N', 00H, 'E', 00H, 'D', 00H, '_', 00H, 'P', 00H
	DB	'L', 00H, 'A', 00H, 'Y', 00H, 'E', 00H, 'R', 00H, '_', 00H, 'I'
	DB	00H, 'D', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@CNBBGJFB@?$AAn?$AAo?$AAd?$AAe?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE?$AAR@
CONST	SEGMENT
??_C@_1EI@CNBBGJFB@?$AAn?$AAo?$AAd?$AAe?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE?$AAR@ DB 'n'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, '.', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'd', 00H, '!'
	DB	00H, '=', 00H, 'U', 00H, 'N', 00H, 'A', 00H, 'S', 00H, 'S', 00H
	DB	'I', 00H, 'G', 00H, 'N', 00H, 'E', 00H, 'D', 00H, '_', 00H, 'P'
	DB	00H, 'L', 00H, 'A', 00H, 'Y', 00H, 'E', 00H, 'R', 00H, '_', 00H
	DB	'I', 00H, 'D', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z@4JA DD 01bcH ; `ConnectionGraph::DeserializeWeightedGraph'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z@4JA DD 017bH ; `ConnectionGraph::DeserializeIgnoreList'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_19OLDIEKDA@?$AAp?$AAe?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_19OLDIEKDA@?$AAp?$AAe?$AAe?$AAr?$AA?$AA@ DB 'p', 00H, 'e', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z@4JA DD 0b9H ; `ConnectionGraph::HandleDroppedConnection'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CK@OAIJMFJM@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAp?$AAa?$AAs?$AAs?$AAw?$AAo?$AAr?$AAd?$AA?$CJ?$AA?$DM?$AA2?$AA5?$AA6?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@OAIJMFJM@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAp?$AAa?$AAs?$AAs?$AAw?$AAo?$AAr?$AAd?$AA?$CJ?$AA?$DM?$AA2?$AA5?$AA6?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H, '(', 00H
	DB	'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, ')', 00H, '<', 00H, '2', 00H, '5', 00H, '6', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
CONST	SEGMENT
??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 'n', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??SetPassword@ConnectionGraph@@QAEXPBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??SetPassword@ConnectionGraph@@QAEXPBD@Z@4JA DD 055H ; `ConnectionGraph::SetPassword'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7ConnectionGraph@@6B@
CONST	SEGMENT
??_7ConnectionGraph@@6B@ DD FLAT:??_R4ConnectionGraph@@6B@ ; ConnectionGraph::`vftable'
	DD	FLAT:?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@ConnectionGraph@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@ConnectionGraph@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT ??_7PluginInterface@@6B@
CONST	SEGMENT
??_7PluginInterface@@6B@ DD FLAT:??_R4PluginInterface@@6B@ ; PluginInterface::`vftable'
	DD	FLAT:?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ$1
__ehfuncinfo$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$1
__ehfuncinfo$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ$0
__ehfuncinfo$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$1
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z$1
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z$0
__ehfuncinfo$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$1
__ehfuncinfo$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ$1
__ehfuncinfo$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z$1
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z$1
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$0
__ehfuncinfo$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$1
__ehfuncinfo$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z$0
__ehfuncinfo$?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$2
__ehfuncinfo$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0
__ehfuncinfo$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$2
__ehfuncinfo$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$1
__ehfuncinfo$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ$1
__ehfuncinfo$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z$0
__ehfuncinfo$?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z$0
__ehfuncinfo$?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z$0
__ehfuncinfo$?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z$2
__ehfuncinfo$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z$0
__ehfuncinfo$?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z$1
__ehfuncinfo$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z$2
__ehfuncinfo$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z$1
__ehfuncinfo$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$3
__ehfuncinfo$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1
__ehfuncinfo$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$2
__ehfuncinfo$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1
__ehfuncinfo$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z$0
__ehfuncinfo$?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z$2
__ehfuncinfo$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z$0
__ehfuncinfo$?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ConnectionGraph@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ConnectionGraph@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ConnectionGraph@@QAE@XZ$1
__ehfuncinfo$??1ConnectionGraph@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ConnectionGraph@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ConnectionGraph@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ConnectionGraph@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ConnectionGraph@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ConnectionGraph@@QAE@XZ$2
__ehfuncinfo$??0ConnectionGraph@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0ConnectionGraph@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	9
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+7]
	mov	WORD PTR [eax+7], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__key$ = 8						; size = 7
__data$ = 16						; size = 2
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 49   : 			MapNode(key_type _key, data_type _data) : mapNodeKey(_key), mapNodeData(_data) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __key$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR __key$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR __key$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR __data$[ebp]
	mov	WORD PTR [eax+7], cx
	lea	ecx, DWORD PTR __key$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 48   : 			MapNode() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	11					; 0000000bH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+7]
	mov	DWORD PTR [eax+7], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__key$ = 8						; size = 7
__data$ = 16						; size = 4
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 49   : 			MapNode(key_type _key, data_type _data) : mapNodeKey(_key), mapNodeData(_data) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __key$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR __key$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR __key$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __data$[ebp]
	mov	DWORD PTR [eax+7], ecx
	lea	ecx, DWORD PTR __key$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 48   : 			MapNode() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		if ( head <= tail )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@Size

; 64   : 			return tail -head;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN3@Size

; 65   : 		else

	jmp	SHORT $LN3@Size
$LN2@Size:

; 66   : 			return allocation_size -head + tail;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
$LN3@Size:

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ
_TEXT	SEGMENT
tv145 = -264						; size = 4
tv139 = -264						; size = 4
tv78 = -264						; size = 4
$T2 = -255						; size = 7
$T3 = -239						; size = 7
$T4 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop, COMDAT
; _this$ = ecx

; 99   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T4[ebp], 0

; 100  : #ifdef _DEBUG
; 101  : 		assert( allocation_size > 0 && Size() >= 0 && head != tail);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN5@Pop
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
	test	eax, eax
	jb	SHORT $LN5@Pop
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN6@Pop
$LN5@Pop:
	push	101					; 00000065H
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Pop:

; 102  : #endif
; 103  : 		//head=(head+1) % allocation_size;
; 104  : 
; 105  : 		if ( ++head == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv78[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv78[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN2@Pop

; 106  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@Pop:

; 107  : 
; 108  : 		if ( head == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Pop

; 109  : 			return ( queue_type ) array[ allocation_size -1 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T2[ebp], edx
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR $T2[ebp+4], ax
	mov	cl, BYTE PTR [ecx+6]
	mov	BYTE PTR $T2[ebp+6], cl
	lea	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv139[ebp], edx
	mov	eax, DWORD PTR tv139[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T4[ebp]
	or	ecx, 1
	mov	DWORD PTR $T4[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@Pop
$LN1@Pop:

; 110  : 
; 111  : 		return ( queue_type ) array[ head -1 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T3[ebp], edx
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR $T3[ebp+4], ax
	mov	cl, BYTE PTR [ecx+6]
	mov	BYTE PTR $T3[ebp+6], cl
	lea	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	eax, DWORD PTR tv145[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T4[ebp]
	or	ecx, 1
	mov	DWORD PTR $T4[ebp], ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@Pop:

; 112  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ$1:
	mov	eax, DWORD PTR $T4[ebp]
	and	eax, 1
	je	$LN9@Pop
	and	DWORD PTR $T4[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
$LN9@Pop:
	ret	0
__ehhandler$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv195 = -328						; size = 4
tv163 = -328						; size = 4
tv129 = -328						; size = 4
tv79 = -328						; size = 4
$T2 = -320						; size = 4
$T3 = -308						; size = 4
$T4 = -296						; size = 4
$T5 = -284						; size = 4
$T6 = -272						; size = 4
$T7 = -260						; size = 4
$T8 = -248						; size = 4
_counter$9 = -44					; size = 4
_new_array$10 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 4
?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Push, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	$LN6@Push

; 184  : 		{
; 185  : 			array = new queue_type[ 16 ];

	push	116					; 00000074H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN9@Push
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	push	16					; 00000010H
	push	7
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T3[ebp]
	add	edx, 4
	mov	DWORD PTR tv79[ebp], edx
	jmp	SHORT $LN10@Push
$LN9@Push:
	mov	DWORD PTR tv79[ebp], 0
$LN10@Push:
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx

; 186  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 187  : 			tail = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1

; 188  : 			array[ 0 ] = input;

	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, 7
	imul	ecx, ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 189  : 			allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 190  : 			return ;

	jmp	$LN7@Push
$LN6@Push:

; 191  : 		}
; 192  : 
; 193  : 		array[ tail++ ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+8], 7
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR tv129[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv129[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 194  : 
; 195  : 		if ( tail == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN5@Push

; 196  : 			tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN5@Push:

; 197  : 
; 198  : 		if ( tail == head )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	$LN7@Push

; 199  : 		{
; 200  : 			//  unsigned int index=tail;
; 201  : 
; 202  : 			// Need to allocate more memory.
; 203  : 			queue_type * new_array;
; 204  : 			new_array = new queue_type[ allocation_size * 2 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	mov	DWORD PTR $T4[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T4[ebp]
	mov	edx, 7
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN11@Push
	mov	ecx, DWORD PTR $T6[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR $T6[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T6[ebp]
	add	edx, 4
	mov	DWORD PTR tv163[ebp], edx
	jmp	SHORT $LN12@Push
$LN11@Push:
	mov	DWORD PTR tv163[ebp], 0
$LN12@Push:
	mov	eax, DWORD PTR tv163[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _new_array$10[ebp], ecx

; 205  : #ifdef _DEBUG
; 206  : 
; 207  : 			assert( new_array );

	cmp	DWORD PTR _new_array$10[ebp], 0
	jne	SHORT $LN13@Push
	push	207					; 000000cfH
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN13@Push:

; 208  : #endif
; 209  : 
; 210  : 			for ( unsigned int counter = 0; counter < allocation_size; ++counter )

	mov	DWORD PTR _counter$9[ebp], 0
	jmp	SHORT $LN3@Push
$LN2@Push:
	mov	eax, DWORD PTR _counter$9[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$9[ebp], eax
$LN3@Push:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _counter$9[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN1@Push

; 211  : 				new_array[ counter ] = array[ ( head + counter ) % ( allocation_size ) ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR _counter$9[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	div	DWORD PTR [ecx+12]
	imul	edx, edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	push	edx
	imul	ecx, DWORD PTR _counter$9[ebp], 7
	add	ecx, DWORD PTR _new_array$10[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	jmp	SHORT $LN2@Push
$LN1@Push:

; 212  : 
; 213  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 214  : 
; 215  : 			tail = allocation_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx

; 216  : 
; 217  : 			allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 218  : 
; 219  : 			// Delete the old array and move the pointer to the new array
; 220  : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T8[ebp], ecx
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR $T7[ebp], edx
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN14@Push
	push	3
	mov	ecx, DWORD PTR $T7[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv195[ebp], eax
	jmp	SHORT $LN15@Push
$LN14@Push:
	mov	DWORD PTR tv195[ebp], 0
$LN15@Push:

; 221  : 
; 222  : 			array = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$10[ebp]
	mov	DWORD PTR [eax], ecx
$LN7@Push:

; 223  : 		}
; 224  : 
; 225  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$1:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Push
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN2@Queue

; 94   : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Queue
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@Queue
$LN4@Queue:
	mov	DWORD PTR tv71[ebp], 0
$LN2@Queue:

; 95   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv89 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
$T4 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Queue<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 83   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 		allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 85   : 		array = new queue_type[ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 7
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@Queue
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv89[ebp], edx
	jmp	SHORT $LN4@Queue
$LN3@Queue:
	mov	DWORD PTR tv89[ebp], 0
$LN4@Queue:
	mov	eax, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx

; 86   : 		head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 87   : 		tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 88   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Queue<ConnectionGraph::PlayerIdAndGroupId>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult, COMDAT
; _this$ = ecx

; 309  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		return lastSearchIndexValid && key_comparison_func(key,lastSearchKey)==0;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23]
	test	ecx, ecx
	je	SHORT $LN3@HasSavedSe
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@HasSavedSe
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@HasSavedSe
$LN3@HasSavedSe:
	mov	DWORD PTR tv72[ebp], 0
$LN4@HasSavedSe:
	mov	al, BYTE PTR tv72[ebp]

; 311  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_index$ = 12						; size = 4
?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch, COMDAT
; _this$ = ecx

; 301  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		lastSearchIndex=index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 303  : 		lastSearchKey=key;

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 304  : 		lastSearchIndexValid=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 1

; 305  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN5@Clear
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 333  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef _DEBUG
; 335  : 		assert( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN4@RemoveAtIn
	push	335					; 0000014fH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RemoveAtIn:

; 336  : #endif
; 337  : 
; 338  : 		if ( position < list_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@RemoveAtIn

; 339  : 		{
; 340  : 			// Compress the array
; 341  : 			/*
; 342  : 			for ( unsigned int counter = position; counter < list_size - 1 ; ++counter )
; 343  : 			listArray[ counter ] = listArray[ counter + 1 ];
; 344  : 			*/
; 345  : 			memmove(listArray+position, listArray+position+1, (list_size-1-position) * sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 9
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax+9]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 9
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 			Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
$LN2@RemoveAtIn:

; 348  : 		}
; 349  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
tv140 = -292						; size = 4
tv129 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 9
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 9
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	push	OFFSET ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN7@Insert
$LN6@Insert:
	mov	DWORD PTR tv129[ebp], 0
$LN7@Insert:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 9
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN8@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN9@Insert
$LN8@Insert:
	mov	DWORD PTR tv140[ebp], 0
$LN9@Insert:

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [ecx+4], 9
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z
_TEXT	SEGMENT
tv146 = -292						; size = 4
tv135 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 9
_position$ = 20						; size = 4
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 9
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	push	OFFSET ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN8@Insert
$LN7@Insert:
	mov	DWORD PTR tv135[ebp], 0
$LN8@Insert:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 9
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN9@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN10@Insert
$LN9@Insert:
	mov	DWORD PTR tv146[ebp], 0
$LN10@Insert:

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 9
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	imul	edx, DWORD PTR _position$[ebp], 9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx+9]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 9
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@List
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@List
$LN4@List:
	mov	DWORD PTR tv71[ebp], 0
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return orderedList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  : 		orderedList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[], COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		return orderedList[position];

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	al, BYTE PTR [eax+8]
	mov	BYTE PTR [ecx+8], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	cl, BYTE PTR [ecx+8]
	mov	BYTE PTR [edx+8], cl
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size, COMDAT
; _this$ = ecx

; 295  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 296  : 		return mapNodeList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size

; 297  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 278  : 		mapNodeList.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear

; 279  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_position$ = 12						; size = 4
?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex, COMDAT
; _this$ = ecx

; 289  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 290  : 		return mapNodeList[position].mapNodeKey;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 291  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[], COMDAT
; _this$ = ecx

; 283  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 284  : 		return mapNodeList[position].mapNodeData;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	add	eax, 7

; 285  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete, COMDAT
; _this$ = ecx

; 253  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 254  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Delete

; 255  : 		{
; 256  : 			lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 257  : 			mapNodeList.RemoveAtIndex(lastSearchIndex);   

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex

; 258  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@Delete
$LN3@Delete:

; 259  : 		}
; 260  : 
; 261  : 		bool objectExists;
; 262  : 		unsigned index;
; 263  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 264  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN2@Delete

; 265  : 		{
; 266  : 			lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 267  : 			mapNodeList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex

; 268  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@Delete

; 269  : 		}
; 270  : 		else

	jmp	SHORT $LN4@Delete
$LN2@Delete:

; 271  : 			return false;

	xor	al, al
$LN4@Delete:

; 272  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Delete
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@Delete:
	DD	1
	DD	$LN7@Delete
$LN7@Delete:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Delete
$LN6@Delete:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has, COMDAT
; _this$ = ecx

; 239  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 240  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Has

; 241  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Has
$LN2@Has:

; 242  : 
; 243  : 		bool objectExists;
; 244  : 		unsigned index;
; 245  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 246  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN1@Has

; 247  : 			SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
$LN1@Has:

; 248  : 		return objectExists;

	mov	al, BYTE PTR _objectExists$[ebp]
$LN3@Has:

; 249  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Has
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@Has:
	DD	1
	DD	$LN6@Has
$LN6@Has:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Has
$LN5@Has:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z
_TEXT	SEGMENT
tv137 = -268						; size = 4
tv138 = -264						; size = 4
$T2 = -253						; size = 9
_index$ = -44						; size = 4
_objectExists$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		bool objectExists;
; 184  : 		unsigned index;
; 185  : 
; 186  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Set

; 187  : 		{
; 188  : 			mapNodeList[lastSearchIndex].mapNodeData=data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	edx, DWORD PTR _data$[ebp]
	mov	cx, WORD PTR [edx]
	mov	WORD PTR [eax+7], cx

; 189  : 			return;

	jmp	$LN4@Set
$LN3@Set:

; 190  : 		}
; 191  : 		
; 192  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 193  : 
; 194  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN2@Set

; 195  : 		{
; 196  : 			SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch

; 197  : 			mapNodeList[index].mapNodeData=data;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax+7], dx

; 198  : 		}
; 199  : 		else

	jmp	SHORT $LN4@Set
$LN2@Set:

; 200  : 		{
; 201  : 			SaveLastSearch(key,mapNodeList.Insert(key,MapNode(key,data)));

	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	cx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], cx
	mov	dl, BYTE PTR [edx+6]
	mov	BYTE PTR [eax+6], dl
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv137[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv137[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
$LN4@Set:

; 202  : 		}
; 203  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Set
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@Set:
	DD	1
	DD	$LN9@Set
$LN9@Set:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN7@Set
$LN7@Set:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
__ehhandler$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 105  : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear

; 106  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId

; 99   : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 100  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
__ehhandler$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc, COMDAT

; 56   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 57   : #ifdef _MSC_VER
; 58   : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 59   : #endif
; 60   : 			return key_comparison_func(a, b.mapNodeKey);

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8

; 61   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z PROC	; RakNet::BitStream::ReadCompressed<unsigned int>, COMDAT
; _this$ = ecx

; 1080 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1081 : #ifdef _MSC_VER
; 1082 : #pragma warning(disable:4127)   // conditional expression is constant
; 1083 : #endif
; 1084 : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@ReadCompre

; 1085 : 			return ReadCompressed( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z ; RakNet::BitStream::ReadCompressed
	jmp	SHORT $LN3@ReadCompre

; 1086 : 		else

	jmp	SHORT $LN3@ReadCompre
$LN2@ReadCompre:

; 1087 : 		{
; 1088 : #ifndef __BITSTREAM_NATIVE_END
; 1089 : 			if (DoEndianSwap())
; 1090 : 			{
; 1091 : 				unsigned char output[sizeof(templateType)];
; 1092 : 				if (ReadCompressed( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1093 : 				{
; 1094 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1095 : 					return true;
; 1096 : 				}
; 1097 : 				return false;
; 1098 : 			}
; 1099 : 			else
; 1100 : #endif
; 1101 : 				return ReadCompressed( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z ; RakNet::BitStream::ReadCompressed
$LN3@ReadCompre:

; 1102 : 		}
; 1103 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ENDP	; RakNet::BitStream::ReadCompressed<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z PROC	; RakNet::BitStream::WriteCompressed<unsigned int>, COMDAT
; _this$ = ecx

; 865  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 866  : #ifdef _MSC_VER
; 867  : #pragma warning(disable:4127)   // conditional expression is constant
; 868  : #endif
; 869  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@WriteCompr

; 870  : 			WriteCompressed( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z ; RakNet::BitStream::WriteCompressed

; 871  : 		else

	jmp	SHORT $LN3@WriteCompr
$LN2@WriteCompr:

; 872  : 		{
; 873  : #ifndef __BITSTREAM_NATIVE_END
; 874  : #ifdef _MSC_VER
; 875  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 876  : #endif
; 877  : 
; 878  : 			if (DoEndianSwap())
; 879  : 			{
; 880  : 				unsigned char output[sizeof(templateType)];
; 881  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 882  : 				WriteCompressed( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 883  : 			}
; 884  : 			else
; 885  : #endif
; 886  : 				WriteCompressed( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z ; RakNet::BitStream::WriteCompressed
$LN3@WriteCompr:

; 887  : 		}
; 888  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ENDP	; RakNet::BitStream::WriteCompressed<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@E@BitStream@RakNet@@QAE_NAAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z PROC		; RakNet::BitStream::Read<unsigned char>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z ENDP		; RakNet::BitStream::Read<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@E@BitStream@RakNet@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 1
??$Write@E@BitStream@RakNet@@QAEXE@Z PROC		; RakNet::BitStream::Write<unsigned char>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@E@BitStream@RakNet@@QAEXE@Z ENDP		; RakNet::BitStream::Write<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@G@BitStream@RakNet@@QAE_NAAG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z PROC		; RakNet::BitStream::Read<unsigned short>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z ENDP		; RakNet::BitStream::Read<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@I@BitStream@RakNet@@QAE_NAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z PROC		; RakNet::BitStream::Read<unsigned int>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z ENDP		; RakNet::BitStream::Read<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z PROC ; RakNet::BitStream::Read<PlayerID>, COMDAT
; _this$ = ecx

; 1035 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1036 : 		Read(var.binaryAddress);

	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 1037 : 		return Read(var.port);

	mov	eax, DWORD PTR _var$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>

; 1038 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ENDP ; RakNet::BitStream::Read<PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@G@BitStream@RakNet@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 2
??$Write@G@BitStream@RakNet@@QAEXG@Z PROC		; RakNet::BitStream::Write<unsigned short>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@G@BitStream@RakNet@@QAEXG@Z ENDP		; RakNet::BitStream::Write<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@I@BitStream@RakNet@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Write@I@BitStream@RakNet@@QAEXI@Z PROC		; RakNet::BitStream::Write<unsigned int>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@I@BitStream@RakNet@@QAEXI@Z ENDP		; RakNet::BitStream::Write<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 6
??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z PROC ; RakNet::BitStream::Write<PlayerID>, COMDAT
; _this$ = ecx

; 765  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 766  : 		Write(var.binaryAddress);

	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Write@I@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::Write<unsigned int>

; 767  : 		Write(var.port);

	movzx	eax, WORD PTR _var$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 768  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ENDP ; RakNet::BitStream::Write<PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ?GetWriteOffset@BitStream@RakNet@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetWriteOffset@BitStream@RakNet@@QBEHXZ PROC		; RakNet::BitStream::GetWriteOffset, COMDAT
; _this$ = ecx

; 370  : 		inline int GetWriteOffset( void ) const {return numberOfBitsUsed;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWriteOffset@BitStream@RakNet@@QBEHXZ ENDP		; RakNet::BitStream::GetWriteOffset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@E@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@E@DataStructures@@QAEX_N@Z PROC		; DataStructures::List<unsigned char>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@E@DataStructures@@QAEX_N@Z ENDP		; DataStructures::List<unsigned char>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@E@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@E@DataStructures@@QBEIXZ PROC		; DataStructures::List<unsigned char>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@E@DataStructures@@QBEIXZ ENDP		; DataStructures::List<unsigned char>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@E@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@E@DataStructures@@QAEXI@Z PROC		; DataStructures::List<unsigned char>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@E@DataStructures@@QAEXI@Z ENDP		; DataStructures::List<unsigned char>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z PROC	; DataStructures::List<unsigned char>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 333  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef _DEBUG
; 335  : 		assert( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN4@RemoveAtIn
	push	335					; 0000014fH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RemoveAtIn:

; 336  : #endif
; 337  : 
; 338  : 		if ( position < list_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@RemoveAtIn

; 339  : 		{
; 340  : 			// Compress the array
; 341  : 			/*
; 342  : 			for ( unsigned int counter = position; counter < list_size - 1 ; ++counter )
; 343  : 			listArray[ counter ] = listArray[ counter + 1 ];
; 344  : 			*/
; 345  : 			memmove(listArray+position, listArray+position+1, (list_size-1-position) * sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	sub	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _position$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _position$[ebp]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 			Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@E@DataStructures@@QAEXI@Z	; DataStructures::List<unsigned char>::Del
$LN2@RemoveAtIn:

; 348  : 		}
; 349  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z ENDP	; DataStructures::List<unsigned char>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@E@DataStructures@@QAEXE@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_new_array$3 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 1
?Insert@?$List@E@DataStructures@@QAEXE@Z PROC		; DataStructures::List<unsigned char>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _new_array$3[ebp], edx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$3[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	dl, BYTE PTR _input$[ebp]
	mov	BYTE PTR [eax+ecx], dl

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Insert@?$List@E@DataStructures@@QAEXE@Z ENDP		; DataStructures::List<unsigned char>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@E@DataStructures@@QAEXEI@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_new_array$3 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 1
_position$ = 12						; size = 4
?Insert@?$List@E@DataStructures@@QAEXEI@Z PROC		; DataStructures::List<unsigned char>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _new_array$3[ebp], edx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$3[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _position$[ebp]
	lea	ecx, DWORD PTR [edx+eax+1]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	mov	al, BYTE PTR _input$[ebp]
	mov	BYTE PTR [ecx+edx], al

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert@?$List@E@DataStructures@@QAEXEI@Z ENDP		; DataStructures::List<unsigned char>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@E@DataStructures@@QBEAAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@E@DataStructures@@QBEAAEI@Z PROC		; DataStructures::List<unsigned char>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _position$[ebp]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@E@DataStructures@@QBEAAEI@Z ENDP		; DataStructures::List<unsigned char>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@E@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@E@DataStructures@@QAE@XZ PROC			; DataStructures::List<unsigned char>::~List<unsigned char>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@E@DataStructures@@QAE@XZ ENDP			; DataStructures::List<unsigned char>::~List<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@E@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@E@DataStructures@@QAE@XZ PROC			; DataStructures::List<unsigned char>::List<unsigned char>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@E@DataStructures@@QAE@XZ ENDP			; DataStructures::List<unsigned char>::List<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@E@DataStructures@@QAEX_N@Z ; DataStructures::List<unsigned char>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Remove, COMDAT
; _this$ = ecx

; 179  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		bool objectExists;
; 181  : 		unsigned index;
; 182  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 183  : 
; 184  : 		// Can't find the element to remove if this assert hits
; 185  : 		assert(objectExists==true);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	cmp	eax, 1
	je	SHORT $LN4@Remove
	push	185					; 000000b9H
	push	OFFSET ??_C@_1FC@PKHPOOLI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr@
	push	OFFSET ??_C@_1CG@FNLJFNDG@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAt?$AAr?$AAu?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@Remove:

; 186  : 		if (objectExists==false)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Remove

; 187  : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Remove
$LN1@Remove:

; 188  : 
; 189  : 		orderedList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z ; DataStructures::List<unsigned char>::RemoveAtIndex

; 190  : 		return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN2@Remove:

; 191  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Remove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@Remove:
	DD	1
	DD	$LN6@Remove
$LN6@Remove:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Remove
$LN5@Remove:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Remove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@E@DataStructures@@QAEXE@Z ; DataStructures::List<unsigned char>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@E@DataStructures@@QAEXEI@Z ; DataStructures::List<unsigned char>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@E@DataStructures@@QBEAAEI@Z	; DataStructures::List<unsigned char>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData, COMDAT
; _this$ = ecx

; 91   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 		bool objectExists;
; 93   : 		unsigned index;
; 94   : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 95   : 		return objectExists;

	mov	al, BYTE PTR _objectExists$[ebp]

; 96   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@HasData
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@HasData:
	DD	1
	DD	$LN4@HasData
$LN4@HasData:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@HasData
$LN3@HasData:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@E@DataStructures@@QAE@XZ	; DataStructures::List<unsigned char>::~List<unsigned char>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@E@DataStructures@@QAE@XZ	; DataStructures::List<unsigned char>::~List<unsigned char>
__ehhandler$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@E@DataStructures@@QAE@XZ	; DataStructures::List<unsigned char>::List<unsigned char>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
$T2 = -197						; size = 1
?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::IMPLEMENT_DEFAULT_COMPARISON, COMDAT

; 39   : 		static void IMPLEMENT_DEFAULT_COMPARISON(void) {DataStructures::defaultOrderedListComparison<key_type, data_type>(key_type(),data_type());}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T1[ebp], 0
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::IMPLEMENT_DEFAULT_COMPARISON
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z PROC ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 31   : 		if (a<b) return -1; if (a==b) return 0; return 1;

	mov	eax, DWORD PTR _a$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _b$[ebp]
	movzx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jge	SHORT $LN2@defaultOrd
	or	eax, -1
	jmp	SHORT $LN3@defaultOrd
$LN2@defaultOrd:
	mov	eax, DWORD PTR _a$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _b$[ebp]
	movzx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN1@defaultOrd
	xor	eax, eax
	jmp	SHORT $LN3@defaultOrd
$LN1@defaultOrd:
	mov	eax, 1
$LN3@defaultOrd:

; 32   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z ENDP ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN5@Clear
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@List
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@List
$LN4@List:
	mov	DWORD PTR tv71[ebp], 0
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ
_TEXT	SEGMENT
tv77 = -252						; size = 4
tv79 = -248						; size = 4
tv75 = -244						; size = 4
tv78 = -240						; size = 4
$T2 = -231						; size = 7
$T3 = -215						; size = 7
__$EHRec$ = -12						; size = 12
?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::IMPLEMENT_DEFAULT_COMPARISON, COMDAT

; 39   : 		static void IMPLEMENT_DEFAULT_COMPARISON(void) {DataStructures::defaultOrderedListComparison<key_type, data_type>(key_type(),data_type());}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR tv79[ebp], eax
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv77[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv77[ebp]
	push	eax
	call	??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::IMPLEMENT_DEFAULT_COMPARISON
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z PROC ; DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 31   : 		if (a<b) return -1; if (a==b) return 0; return 1;

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator<
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@defaultOrd
	or	eax, -1
	jmp	SHORT $LN3@defaultOrd
$LN2@defaultOrd:
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@defaultOrd
	xor	eax, eax
	jmp	SHORT $LN3@defaultOrd
$LN1@defaultOrd:
	mov	eax, 1
$LN3@defaultOrd:

; 32   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ENDP ; DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult, COMDAT
; _this$ = ecx

; 309  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		return lastSearchIndexValid && key_comparison_func(key,lastSearchKey)==0;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23]
	test	ecx, ecx
	je	SHORT $LN3@HasSavedSe
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@HasSavedSe
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@HasSavedSe
$LN3@HasSavedSe:
	mov	DWORD PTR tv72[ebp], 0
$LN4@HasSavedSe:
	mov	al, BYTE PTR tv72[ebp]

; 311  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_index$ = 12						; size = 4
?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch, COMDAT
; _this$ = ecx

; 301  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		lastSearchIndex=index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 303  : 		lastSearchKey=key;

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 304  : 		lastSearchIndexValid=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 1

; 305  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN5@Clear
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 333  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef _DEBUG
; 335  : 		assert( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN4@RemoveAtIn
	push	335					; 0000014fH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RemoveAtIn:

; 336  : #endif
; 337  : 
; 338  : 		if ( position < list_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@RemoveAtIn

; 339  : 		{
; 340  : 			// Compress the array
; 341  : 			/*
; 342  : 			for ( unsigned int counter = position; counter < list_size - 1 ; ++counter )
; 343  : 			listArray[ counter ] = listArray[ counter + 1 ];
; 344  : 			*/
; 345  : 			memmove(listArray+position, listArray+position+1, (list_size-1-position) * sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 11
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 11
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax+11]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 11
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 			Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
$LN2@RemoveAtIn:

; 348  : 		}
; 349  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
tv140 = -292						; size = 4
tv129 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 11
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 11					; 0000000bH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	push	OFFSET ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	11					; 0000000bH
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN7@Insert
$LN6@Insert:
	mov	DWORD PTR tv129[ebp], 0
$LN7@Insert:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 11
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN8@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN9@Insert
$LN8@Insert:
	mov	DWORD PTR tv140[ebp], 0
$LN9@Insert:

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [ecx+4], 11
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z
_TEXT	SEGMENT
tv146 = -292						; size = 4
tv135 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 11
_position$ = 20						; size = 4
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 11					; 0000000bH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	push	OFFSET ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	11					; 0000000bH
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN8@Insert
$LN7@Insert:
	mov	DWORD PTR tv135[ebp], 0
$LN8@Insert:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 11
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN9@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN10@Insert
$LN9@Insert:
	mov	DWORD PTR tv146[ebp], 0
$LN10@Insert:

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 11
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 11
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	imul	edx, DWORD PTR _position$[ebp], 11
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx+11]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 11
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 11
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@List
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@List
$LN4@List:
	mov	DWORD PTR tv71[ebp], 0
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return orderedList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  : 		orderedList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[], COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		return orderedList[position];

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	dx, WORD PTR [eax+8]
	mov	WORD PTR [ecx+8], dx
	mov	al, BYTE PTR [eax+10]
	mov	BYTE PTR [ecx+10], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ax, WORD PTR [ecx+8]
	mov	WORD PTR [edx+8], ax
	mov	cl, BYTE PTR [ecx+10]
	mov	BYTE PTR [edx+10], cl
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size, COMDAT
; _this$ = ecx

; 295  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 296  : 		return mapNodeList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size

; 297  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 278  : 		mapNodeList.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear

; 279  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_position$ = 12						; size = 4
?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex, COMDAT
; _this$ = ecx

; 289  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 290  : 		return mapNodeList[position].mapNodeKey;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 291  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[], COMDAT
; _this$ = ecx

; 283  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 284  : 		return mapNodeList[position].mapNodeData;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	add	eax, 7

; 285  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has, COMDAT
; _this$ = ecx

; 239  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 240  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Has

; 241  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Has
$LN2@Has:

; 242  : 
; 243  : 		bool objectExists;
; 244  : 		unsigned index;
; 245  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 246  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN1@Has

; 247  : 			SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
$LN1@Has:

; 248  : 		return objectExists;

	mov	al, BYTE PTR _objectExists$[ebp]
$LN3@Has:

; 249  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Has
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@Has:
	DD	1
	DD	$LN6@Has
$LN6@Has:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Has
$LN5@Has:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
tv90 = -268						; size = 4
tv91 = -264						; size = 4
$T2 = -255						; size = 11
_objectExists$ = -41					; size = 1
_index$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SetNew, COMDAT
; _this$ = ecx

; 227  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 228  : #ifdef _DEBUG
; 229  : 		unsigned index;
; 230  : 		bool objectExists;
; 231  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 232  : 		assert(objectExists==false);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@SetNew
	push	232					; 000000e8H
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@SetNew:

; 233  : #endif
; 234  : 		SaveLastSearch(key,mapNodeList.Insert(key,MapNode(key,data)));

	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	cx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], cx
	mov	dl, BYTE PTR [edx+6]
	mov	BYTE PTR [eax+6], dl
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	DWORD PTR tv91[ebp], eax
	mov	eax, DWORD PTR tv91[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ

; 235  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@SetNew
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN8@SetNew:
	DD	1
	DD	$LN7@SetNew
$LN7@SetNew:
	DD	-41					; ffffffd7H
	DD	1
	DD	$LN5@SetNew
$LN5@SetNew:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
__ehhandler$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SetNew
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Pop@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_tmp$ = -44						; size = 4
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Pop@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Pop, COMDAT
; _this$ = ecx

; 164  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 165  : 		bool objectExists;
; 166  : 		unsigned index;
; 167  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Pop

; 168  : 			index=lastSearchIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _index$[ebp], ecx

; 169  : 		else

	jmp	SHORT $LN1@Pop
$LN2@Pop:

; 170  : 		{
; 171  : 			index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 172  : 			assert(objectExists);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Pop
	push	172					; 000000acH
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@Pop:

; 173  : 		}		
; 174  : 		data_type tmp = mapNodeList[index].mapNodeData;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	ecx, DWORD PTR [eax+7]
	mov	DWORD PTR _tmp$[ebp], ecx

; 175  : 		mapNodeList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex

; 176  : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 177  : 		return tmp;

	mov	eax, DWORD PTR _tmp$[ebp]

; 178  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Pop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN8@Pop:
	DD	1
	DD	$LN7@Pop
$LN7@Pop:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Pop
$LN6@Pop:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Pop@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 130  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Get

; 131  : 			return mapNodeList[lastSearchIndex].mapNodeData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	add	eax, 7
	jmp	SHORT $LN2@Get
$LN1@Get:

; 132  : 
; 133  : 		bool objectExists;
; 134  : 		unsigned index;
; 135  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 136  : 		assert(objectExists);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Get
	push	136					; 00000088H
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@Get:

; 137  : 		SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch

; 138  : 		return mapNodeList[index].mapNodeData;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	add	eax, 7
$LN2@Get:

; 139  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Get
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@Get:
	DD	1
	DD	$LN6@Get
$LN6@Get:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Get
$LN5@Get:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 105  : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear

; 106  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId

; 99   : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 100  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
__ehhandler$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc, COMDAT

; 56   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 57   : #ifdef _MSC_VER
; 58   : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 59   : #endif
; 60   : 			return key_comparison_func(a, b.mapNodeKey);

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8

; 61   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z PROC ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>, COMDAT

; 35   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 36   : 		if (a<b) return -1; if (a==b) return 0; return 1;

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator<
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@defaultMap
	or	eax, -1
	jmp	SHORT $LN3@defaultMap
$LN2@defaultMap:
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@defaultMap
	xor	eax, eax
	jmp	SHORT $LN3@defaultMap
$LN1@defaultMap:
	mov	eax, 1
$LN3@defaultMap:

; 37   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ENDP ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T1 = -236						; size = 4
$T2 = -224						; size = 4
$T3 = -212						; size = 4
_this$ = -8						; size = 4
?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra, COMDAT
; _this$ = ecx

; 498  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 499  : 		if (isValid)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN2@ClearDijks

; 500  : 		{
; 501  : 			isValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 502  : 			delete [] costMatrix;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 503  : 			delete [] leastNodeArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@ClearDijks
	push	3
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@ClearDijks
$LN4@ClearDijks:
	mov	DWORD PTR tv75[ebp], 0
$LN5@ClearDijks:

; 504  : 			costMatrixIndices.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear
$LN2@ClearDijks:

; 505  : 		}
; 506  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?GetNodeAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_nodeIndex$ = 12					; size = 4
?GetNodeAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeAtIndex, COMDAT
; _this$ = ecx

; 305  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 306  : 		return adjacencyLists.GetKeyAtIndex(nodeIndex);

	mov	eax, DWORD PTR _nodeIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 307  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetNodeAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z
_TEXT	SEGMENT
tv84 = -240						; size = 4
tv85 = -236						; size = 4
$T2 = -227						; size = 7
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_nodeIndex$ = 8						; size = 4
_connectionIndex$ = 12					; size = 4
_outNode$ = 16						; size = 4
_outWeight$ = 20					; size = 4
?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionAtIndex, COMDAT
; _this$ = ecx

; 323  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 		outWeight=adjacencyLists[nodeIndex]->operator[](connectionIndex);

	mov	eax, DWORD PTR _connectionIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nodeIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	edx, DWORD PTR _outWeight$[ebp]
	mov	ax, WORD PTR [eax]
	mov	WORD PTR [edx], ax

; 325  : 		outNode=adjacencyLists[nodeIndex]->GetKeyAtIndex(connectionIndex);

	mov	eax, DWORD PTR _connectionIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR _nodeIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	DWORD PTR tv85[ebp], eax
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR tv84[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	ecx, DWORD PTR _outNode$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId

; 326  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionAtIndex
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?GetConnectionCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nodeIndex$ = 8						; size = 4
?GetConnectionCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEII@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionCount, COMDAT
; _this$ = ecx

; 317  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 318  :         return adjacencyLists[nodeIndex]->Size();

	mov	eax, DWORD PTR _nodeIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size

; 319  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetConnectionCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEII@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?GetNodeCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetNodeCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEIXZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeCount, COMDAT
; _this$ = ecx

; 311  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 312  : 		return adjacencyLists.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size

; 313  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNodeCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEIXZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ
_TEXT	SEGMENT
tv77 = -244						; size = 4
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear, COMDAT
; _this$ = ecx

; 215  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 216  : 		unsigned i;
; 217  : 		for (i=0; i < adjacencyLists.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Clear
$LN2@Clear:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@Clear:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN1@Clear

; 218  : 			delete adjacencyLists[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN6@Clear
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN7@Clear
$LN6@Clear:
	mov	DWORD PTR tv77[ebp], 0
$LN7@Clear:
	jmp	SHORT $LN2@Clear
$LN1@Clear:

; 219  : 		adjacencyLists.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear

; 220  : 
; 221  : 		ClearDijkstra();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra

; 222  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?HasConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node1$ = 8						; size = 4
_node2$ = 12						; size = 4
?HasConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@0@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::HasConnection, COMDAT
; _this$ = ecx

; 171  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 172  : 		if (node1==node2)

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node1$[ebp]
	call	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@HasConnect

; 173  : 			return false;

	xor	al, al
	jmp	SHORT $LN3@HasConnect
$LN2@HasConnect:

; 174  : 		if (adjacencyLists.Has(node1)==false)

	mov	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@HasConnect

; 175  : 			return false;

	xor	al, al
	jmp	SHORT $LN3@HasConnect
$LN1@HasConnect:

; 176  : 		return adjacencyLists.Get(node1)->Has(node2);

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
$LN3@HasConnect:

; 177  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?HasConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::HasConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?RemoveConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node1$ = 8						; size = 4
_node2$ = 12						; size = 4
?RemoveConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveConnection, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  : 		adjacencyLists.Get(node2)->Delete(node1);

	mov	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete

; 197  : 		adjacencyLists.Get(node1)->Delete(node2);

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete

; 198  : 
; 199  : #ifdef _MSC_VER
; 200  : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 201  : #endif
; 202  : 		if (allow_unlinkedNodes==false) // If we do not allow _unlinked nodes, then if there are no connections, remove the node

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN3@RemoveConn

; 203  : 		{
; 204  : 			if (adjacencyLists.Get(node1)->Size()==0)

	mov	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	test	eax, eax
	jne	SHORT $LN2@RemoveConn

; 205  : 				RemoveNode(node1); // Will also remove node1 from the adjacency list of node2

	mov	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveNode
$LN2@RemoveConn:

; 206  : 			if (adjacencyLists.Has(node2) && adjacencyLists.Get(node2)->Size()==0)

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@RemoveConn
	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	test	eax, eax
	jne	SHORT $LN3@RemoveConn

; 207  : 				RemoveNode(node2);

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveNode
$LN3@RemoveConn:

; 208  : 		}
; 209  : 
; 210  : 		ClearDijkstra();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra

; 211  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node1$ = 8						; size = 4
_node2$ = 12						; size = 4
_weight$ = 16						; size = 2
?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection, COMDAT
; _this$ = ecx

; 181  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		if (node1==node2)

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node1$[ebp]
	call	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@AddConnect

; 183  : 			return;

	jmp	SHORT $LN4@AddConnect
$LN3@AddConnect:

; 184  : 
; 185  : 		if (adjacencyLists.Has(node1)==false)

	mov	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@AddConnect

; 186  : 			AddNode(node1);

	mov	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode
$LN2@AddConnect:

; 187  : 		adjacencyLists.Get(node1)->Set(node2, weight);

	lea	eax, DWORD PTR _weight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _node1$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set

; 188  : 		if (adjacencyLists.Has(node2)==false)

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@AddConnect

; 189  : 			AddNode(node2);

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode
$LN1@AddConnect:

; 190  : 		adjacencyLists.Get(node2)->Set(node1, weight);

	lea	eax, DWORD PTR _weight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _node2$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set
$LN4@AddConnect:

; 191  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv85 = -320						; size = 4
tv151 = -316						; size = 4
tv149 = -316						; size = 4
tv152 = -312						; size = 4
tv65 = -312						; size = 4
$T2 = -304						; size = 4
$T3 = -292						; size = 4
$T4 = -279						; size = 7
$T5 = -263						; size = 7
_removeNodeQueue$ = -56					; size = 16
_i$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_node$ = 8						; size = 4
?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveNode, COMDAT
; _this$ = ecx

; 144  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-320]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		unsigned i;
; 146  : 		DataStructures::Queue<node_type> removeNodeQueue;

	lea	ecx, DWORD PTR _removeNodeQueue$[ebp]
	call	??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Queue<ConnectionGraph::PlayerIdAndGroupId>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 147  : 
; 148  : 		removeNodeQueue.Push(node);

	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	lea	ecx, DWORD PTR _removeNodeQueue$[ebp]
	call	?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Push
$LN6@RemoveNode:

; 149  : 		while (removeNodeQueue.Size())

	lea	ecx, DWORD PTR _removeNodeQueue$[ebp]
	call	?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
	test	eax, eax
	je	$LN5@RemoveNode

; 150  : 		{
; 151  : 			delete adjacencyLists.Pop(removeNodeQueue.Pop());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _removeNodeQueue$[ebp]
	call	?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv149[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv149[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Pop@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Pop
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN9@RemoveNode
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN10@RemoveNode
$LN9@RemoveNode:
	mov	DWORD PTR tv85[ebp], 0
$LN10@RemoveNode:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId

; 152  : 
; 153  : 			// Remove this node from all of the other lists as well
; 154  : 			for (i=0; i < adjacencyLists.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@RemoveNode
$LN3@RemoveNode:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@RemoveNode:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN2@RemoveNode

; 155  : 			{
; 156  : 				adjacencyLists[i]->Delete(node);

	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete

; 157  : 
; 158  : #ifdef _MSC_VER
; 159  : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 160  : #endif
; 161  : 				if (allow_unlinkedNodes==false && adjacencyLists[i]->Size()==0)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN1@RemoveNode
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	test	eax, eax
	jne	SHORT $LN1@RemoveNode

; 162  : 					removeNodeQueue.Push(adjacencyLists.GetKeyAtIndex(i));

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	DWORD PTR tv152[ebp], eax
	mov	edx, DWORD PTR tv152[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	lea	ecx, DWORD PTR _removeNodeQueue$[ebp]
	call	?Push@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Push
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
$LN1@RemoveNode:

; 163  : 			}

	jmp	$LN3@RemoveNode
$LN2@RemoveNode:

; 164  : 		}

	jmp	$LN6@RemoveNode
$LN5@RemoveNode:

; 165  : 
; 166  : 		ClearDijkstra();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra

; 167  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _removeNodeQueue$[ebp]
	call	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@RemoveNode
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 320				; 00000140H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN17@RemoveNode:
	DD	1
	DD	$LN16@RemoveNode
$LN16@RemoveNode:
	DD	-56					; ffffffc8H
	DD	16					; 00000010H
	DD	$LN14@RemoveNode
$LN14@RemoveNode:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	81					; 00000051H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0:
	lea	ecx, DWORD PTR _removeNodeQueue$[ebp]
	jmp	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
__unwindfunclet$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$1:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$2:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-324]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemoveNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveNode
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv73 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
$T4 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_node$ = 8						; size = 4
?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode, COMDAT
; _this$ = ecx

; 138  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 139  : 		adjacencyLists.SetNew(node, new DataStructures::Map<node_type, weight_type>);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@AddNode
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@AddNode
$LN3@AddNode:
	mov	DWORD PTR tv73[ebp], 0
$LN4@AddNode:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SetNew

; 140  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>, COMDAT
; _this$ = ecx

; 96   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 97   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear

; 98   : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
__ehhandler$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>, COMDAT
; _this$ = ecx

; 89   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >

; 90   : 		isValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 91   : 		costMatrix=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 92   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
__unwindfunclet$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ
_TEXT	SEGMENT
tv77 = -252						; size = 4
tv79 = -248						; size = 4
tv75 = -244						; size = 4
tv78 = -240						; size = 4
$T2 = -231						; size = 7
$T3 = -215						; size = 7
__$EHRec$ = -12						; size = 12
?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::IMPLEMENT_DEFAULT_COMPARISON, COMDAT

; 43   : 		static void IMPLEMENT_DEFAULT_COMPARISON(void) {DataStructures::defaultMapKeyComparison<node_type>(node_type(),node_type());}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR tv79[ebp], eax
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv77[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv77[ebp]
	push	eax
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::IMPLEMENT_DEFAULT_COMPARISON
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UPlayerID@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UPlayerID@@@DataStructures@@QAEX_N@Z PROC	; DataStructures::List<PlayerID>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UPlayerID@@@DataStructures@@QAEX_N@Z ENDP	; DataStructures::List<PlayerID>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ PROC	; DataStructures::List<PlayerID>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ENDP	; DataStructures::List<PlayerID>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@UPlayerID@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@UPlayerID@@@DataStructures@@QAEXI@Z PROC	; DataStructures::List<PlayerID>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@UPlayerID@@@DataStructures@@QAEXI@Z ENDP	; DataStructures::List<PlayerID>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?RemoveAtIndex@?$List@UPlayerID@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?RemoveAtIndex@?$List@UPlayerID@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<PlayerID>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 333  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef _DEBUG
; 335  : 		assert( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN4@RemoveAtIn
	push	335					; 0000014fH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RemoveAtIn:

; 336  : #endif
; 337  : 
; 338  : 		if ( position < list_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@RemoveAtIn

; 339  : 		{
; 340  : 			// Compress the array
; 341  : 			/*
; 342  : 			for ( unsigned int counter = position; counter < list_size - 1 ; ++counter )
; 343  : 			listArray[ counter ] = listArray[ counter + 1 ];
; 344  : 			*/
; 345  : 			memmove(listArray+position, listArray+position+1, (list_size-1-position) * sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 6
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax+6]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 6
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 			Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@UPlayerID@@@DataStructures@@QAEXI@Z ; DataStructures::List<PlayerID>::Del
$LN2@RemoveAtIn:

; 348  : 		}
; 349  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$List@UPlayerID@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<PlayerID>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_new_array$3 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 6
?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@@Z PROC ; DataStructures::List<PlayerID>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, 6
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _new_array$3[ebp], eax

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 6
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$3[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [ecx+4], 6
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@@Z ENDP ; DataStructures::List<PlayerID>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@I@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_new_array$3 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 6
_position$ = 16						; size = 4
?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@I@Z PROC ; DataStructures::List<PlayerID>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, 6
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _new_array$3[ebp], eax

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 6
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$3[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 6
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	imul	edx, DWORD PTR _position$[ebp], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx+6]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 6
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@I@Z ENDP ; DataStructures::List<PlayerID>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z PROC ; DataStructures::List<PlayerID>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ENDP ; DataStructures::List<PlayerID>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UPlayerID@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UPlayerID@@@DataStructures@@QAE@XZ PROC	; DataStructures::List<PlayerID>::~List<PlayerID>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UPlayerID@@@DataStructures@@QAE@XZ ENDP	; DataStructures::List<PlayerID>::~List<PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UPlayerID@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UPlayerID@@@DataStructures@@QAE@XZ PROC	; DataStructures::List<PlayerID>::List<PlayerID>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UPlayerID@@@DataStructures@@QAE@XZ ENDP	; DataStructures::List<PlayerID>::List<PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Size@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIXZ PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Size, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return orderedList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UPlayerID@@@DataStructures@@QAEX_N@Z ; DataStructures::List<PlayerID>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?RemoveAtIndex@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?RemoveAtIndex@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXI@Z PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::RemoveAtIndex, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  : 		orderedList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$List@UPlayerID@@@DataStructures@@QAEXI@Z ; DataStructures::List<PlayerID>::RemoveAtIndex

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXI@Z ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??A?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEAAUPlayerID@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEAAUPlayerID@@I@Z PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::operator[], COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		return orderedList[position];

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::List<PlayerID>::operator[]

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEAAUPlayerID@@I@Z ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIABUPlayerID@@PA_N@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@@Z ; DataStructures::List<PlayerID>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	cx, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], cx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@I@Z ; DataStructures::List<PlayerID>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIABUPlayerID@@PA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIABUPlayerID@@PA_N@Z PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::List<PlayerID>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABUPlayerID@@0@Z ; DataStructures::defaultOrderedListComparison<PlayerID,PlayerID>
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIABUPlayerID@@PA_N@Z ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData, COMDAT
; _this$ = ecx

; 91   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 		bool objectExists;
; 93   : 		unsigned index;
; 94   : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIABUPlayerID@@PA_N@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 95   : 		return objectExists;

	mov	al, BYTE PTR _objectExists$[ebp]

; 96   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@HasData
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@HasData:
	DD	1
	DD	$LN4@HasData
$LN4@HasData:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@HasData
$LN3@HasData:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UPlayerID@@@DataStructures@@QAE@XZ ; DataStructures::List<PlayerID>::~List<PlayerID>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UPlayerID@@@DataStructures@@QAE@XZ ; DataStructures::List<PlayerID>::~List<PlayerID>
__ehhandler$??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UPlayerID@@@DataStructures@@QAE@XZ ; DataStructures::List<PlayerID>::List<PlayerID>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@SAXXZ
_TEXT	SEGMENT
$T1 = -218						; size = 6
$T2 = -202						; size = 6
?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@SAXXZ PROC ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::IMPLEMENT_DEFAULT_COMPARISON, COMDAT

; 39   : 		static void IMPLEMENT_DEFAULT_COMPARISON(void) {DataStructures::defaultOrderedListComparison<key_type, data_type>(key_type(),data_type());}

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABUPlayerID@@0@Z ; DataStructures::defaultOrderedListComparison<PlayerID,PlayerID>
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@SAXXZ ENDP ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::IMPLEMENT_DEFAULT_COMPARISON
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_self$ = -68						; size = 6
_i$ = -52						; size = 4
_sendList$ = -40					; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_outBitstream$ = 8					; size = 4
_ignoreList$ = 12					; size = 4
_peer$ = 16						; size = 4
?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z PROC ; ConnectionGraph::SerializeIgnoreListAndBroadcast, COMDAT
; _this$ = ecx

; 564  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 565  : 	DataStructures::List<PlayerID> sendList;

	lea	ecx, DWORD PTR _sendList$[ebp]
	call	??0?$List@UPlayerID@@@DataStructures@@QAE@XZ ; DataStructures::List<PlayerID>::List<PlayerID>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 566  : 	unsigned i;
; 567  : 	for (i=0; i < participantList.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@SerializeI
$LN14@SerializeI:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@SerializeI:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Size@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN13@SerializeI

; 568  : 	{
; 569  : 		if (ignoreList.HasData(participantList[i])==false)

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::operator[]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN12@SerializeI

; 570  : 			sendList.Insert(participantList[i]);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::operator[]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	?Insert@?$List@UPlayerID@@@DataStructures@@QAEXUPlayerID@@@Z ; DataStructures::List<PlayerID>::Insert
$LN12@SerializeI:

; 571  : 	}

	jmp	SHORT $LN14@SerializeI
$LN13@SerializeI:

; 572  : 	if (sendList.Size()==0)

	lea	ecx, DWORD PTR _sendList$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	test	eax, eax
	jne	SHORT $LN11@SerializeI

; 573  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	??1?$List@UPlayerID@@@DataStructures@@QAE@XZ ; DataStructures::List<PlayerID>::~List<PlayerID>
	jmp	$LN16@SerializeI
$LN11@SerializeI:

; 574  : 
; 575  : 	PlayerID self = peer->GetExternalID(sendList[0]);

	push	0
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::List<PlayerID>::operator[]
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR _self$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 576  : 	if (ignoreList.HasData(self)==false)

	lea	eax, DWORD PTR _self$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@SerializeI

; 577  : 		ignoreList.Insert(self,self);

	lea	eax, DWORD PTR _self$[ebp]
	push	eax
	lea	ecx, DWORD PTR _self$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN10@SerializeI:

; 578  : 	outBitstream->Write((unsigned short) (ignoreList.Size()+sendList.Size()));

	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Size@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Size
	mov	esi, eax
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	add	esi, eax
	push	esi
	mov	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 579  : 	for (i=0; i < ignoreList.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@SerializeI
$LN8@SerializeI:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@SerializeI:
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Size@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN7@SerializeI

; 580  : 		outBitstream->Write(ignoreList[i]);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	??A?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::operator[]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>
	jmp	SHORT $LN8@SerializeI
$LN7@SerializeI:

; 581  : 	for (i=0; i < sendList.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@SerializeI
$LN5@SerializeI:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@SerializeI:
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN4@SerializeI

; 582  : 		outBitstream->Write(sendList[i]);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::List<PlayerID>::operator[]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>
	jmp	SHORT $LN5@SerializeI
$LN4@SerializeI:

; 583  : 
; 584  : 	for (i=0; i < sendList.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SerializeI
$LN2@SerializeI:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@SerializeI:
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN1@SerializeI

; 585  : 	{
; 586  : 		peer->Send(outBitstream, LOW_PRIORITY, RELIABLE_ORDERED, connectionGraphChannel, sendList[i], false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::List<PlayerID>::operator[]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	push	31					; 0000001fH
	push	3
	push	3
	mov	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 587  : 	}

	jmp	SHORT $LN2@SerializeI
$LN1@SerializeI:

; 588  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sendList$[ebp]
	call	??1?$List@UPlayerID@@@DataStructures@@QAE@XZ ; DataStructures::List<PlayerID>::~List<PlayerID>
$LN16@SerializeI:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@SerializeI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN23@SerializeI:
	DD	2
	DD	$LN22@SerializeI
$LN22@SerializeI:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN19@SerializeI
	DD	-68					; ffffffbcH
	DD	6
	DD	$LN20@SerializeI
$LN20@SerializeI:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	102					; 00000066H
	DB	0
$LN19@SerializeI:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z$0:
	lea	ecx, DWORD PTR _sendList$[ebp]
	jmp	??1?$List@UPlayerID@@@DataStructures@@QAE@XZ ; DataStructures::List<PlayerID>::~List<PlayerID>
__ehhandler$?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::SerializeIgnoreListAndBroadcast
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z
_TEXT	SEGMENT
_i$ = -48						; size = 4
_temp$ = -36						; size = 6
_count$ = -20						; size = 2
_this$ = -8						; size = 4
_ignoreList$ = 8					; size = 4
_inBitstream$ = 12					; size = 4
?DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z PROC ; ConnectionGraph::DeserializeIgnoreList, COMDAT
; _this$ = ecx

; 379  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 	unsigned short count;
; 381  : 	PlayerID temp;
; 382  : 	unsigned i;
; 383  : 	inBitstream->Read(count);

	lea	eax, DWORD PTR _count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>

; 384  : 	for (i=0; i < count; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Deserializ
$LN3@Deserializ:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Deserializ:
	movzx	eax, WORD PTR _count$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN2@Deserializ

; 385  : 	{
; 386  : 		if (inBitstream->Read(temp)==false)

	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@Deserializ

; 387  : 		{
; 388  : 			assert(0);

	xor	eax, eax
	jne	SHORT $LN7@Deserializ
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z@4JA
	add	ecx, 9
	push	ecx
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@Deserializ:

; 389  : 			return false;

	xor	al, al
	jmp	SHORT $LN5@Deserializ
$LN1@Deserializ:

; 390  : 		}
; 391  : 		ignoreList.Insert(temp,temp);

	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert

; 392  : 	}

	jmp	SHORT $LN3@Deserializ
$LN2@Deserializ:

; 393  : 	return true;

	mov	al, 1
$LN5@Deserializ:

; 394  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Deserializ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN11@Deserializ:
	DD	2
	DD	$LN10@Deserializ
$LN10@Deserializ:
	DD	-20					; ffffffecH
	DD	2
	DD	$LN8@Deserializ
	DD	-36					; ffffffdcH
	DD	6
	DD	$LN9@Deserializ
$LN9@Deserializ:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN8@Deserializ:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z ENDP ; ConnectionGraph::DeserializeIgnoreList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?IsNewRemoteConnection@ConnectionGraph@@IAE_NABUPlayerIdAndGroupId@1@0PAVRakPeerInterface@@@Z
_TEXT	SEGMENT
tv173 = -272						; size = 4
$T1 = -262						; size = 6
$T2 = -246						; size = 6
_externalId2$3 = -40					; size = 6
_externalId1$4 = -24					; size = 6
_this$ = -8						; size = 4
_conn1$ = 8						; size = 4
_conn2$ = 12						; size = 4
_peer$ = 16						; size = 4
?IsNewRemoteConnection@ConnectionGraph@@IAE_NABUPlayerIdAndGroupId@1@0PAVRakPeerInterface@@@Z PROC ; ConnectionGraph::IsNewRemoteConnection, COMDAT
; _this$ = ecx

; 590  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 	if (graph.HasConnection(conn1,conn2)==false &&
; 592  : 		subscribedGroups.HasData(conn1.groupId) &&
; 593  : 		subscribedGroups.HasData(conn2.groupId) &&
; 594  : 		(peer->GetIndexFromPlayerID(conn1.playerId)==-1 || peer->GetIndexFromPlayerID(conn2.playerId)==-1))

	mov	eax, DWORD PTR _conn2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conn1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?HasConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::HasConnection
	movzx	edx, al
	test	edx, edx
	jne	$LN2@IsNewRemot
	mov	eax, DWORD PTR _conn1$[ebp]
	add	eax, 6
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@IsNewRemot
	mov	eax, DWORD PTR _conn2$[ebp]
	add	eax, 6
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@IsNewRemot
	mov	eax, DWORD PTR _conn1$[ebp]
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN1@IsNewRemot
	mov	eax, DWORD PTR _conn2$[ebp]
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	$LN2@IsNewRemot
$LN1@IsNewRemot:

; 595  : 	{
; 596  : 		PlayerID externalId1, externalId2;
; 597  : 		externalId1=peer->GetExternalID(conn1.playerId);

	mov	eax, DWORD PTR _conn1$[ebp]
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _externalId1$4[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 598  : 		externalId2=peer->GetExternalID(conn2.playerId);

	mov	eax, DWORD PTR _conn2$[ebp]
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _externalId2$3[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 599  : 		return (externalId1!=conn1.playerId && externalId1!=conn2.playerId &&
; 600  : 			externalId2!=conn1.playerId && externalId2!=conn2.playerId);

	mov	eax, DWORD PTR _conn1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _externalId1$4[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@IsNewRemot
	mov	edx, DWORD PTR _conn2$[ebp]
	push	edx
	lea	ecx, DWORD PTR _externalId1$4[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@IsNewRemot
	mov	ecx, DWORD PTR _conn1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _externalId2$3[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@IsNewRemot
	mov	eax, DWORD PTR _conn2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _externalId2$3[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@IsNewRemot
	mov	DWORD PTR tv173[ebp], 1
	jmp	SHORT $LN6@IsNewRemot
$LN5@IsNewRemot:
	mov	DWORD PTR tv173[ebp], 0
$LN6@IsNewRemot:
	mov	al, BYTE PTR tv173[ebp]
	jmp	SHORT $LN3@IsNewRemot
$LN2@IsNewRemot:

; 601  : 	}
; 602  : 	return false;

	xor	al, al
$LN3@IsNewRemot:

; 603  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@IsNewRemot
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN10@IsNewRemot:
	DD	2
	DD	$LN9@IsNewRemot
$LN9@IsNewRemot:
	DD	-24					; ffffffe8H
	DD	6
	DD	$LN7@IsNewRemot
	DD	-40					; ffffffd8H
	DD	6
	DD	$LN8@IsNewRemot
$LN8@IsNewRemot:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	50					; 00000032H
	DB	0
$LN7@IsNewRemot:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	49					; 00000031H
	DB	0
?IsNewRemoteConnection@ConnectionGraph@@IAE_NABUPlayerIdAndGroupId@1@0PAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::IsNewRemoteConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_b$ = -320						; size = 273
_p$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_conn1$ = 8						; size = 4
_conn2$ = 12						; size = 4
_ping$ = 16						; size = 2
_peer$ = 20						; size = 4
?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z PROC ; ConnectionGraph::NotifyUserOfRemoteConnection, COMDAT
; _this$ = ecx

; 605  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 	// Create a packet to tell the user of this event
; 607  : 	static const int length=sizeof(MessageID) + (sizeof(PlayerID) + sizeof(ConnectionGraphGroupID)) * 2 + sizeof(unsigned short);
; 608  : 	Packet *p = AllocPacket(length);

	push	17					; 00000011H
	call	?AllocPacket@@YAPAUPacket@@I@Z		; AllocPacket
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 609  : 	RakNet::BitStream b(p->data, length, false);

	push	0
	push	17					; 00000011H
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	lea	ecx, DWORD PTR _b$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 610  : 	p->bitSize=p->length*8;

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 3
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 611  : 	b.SetWriteOffset(0);

	push	0
	lea	ecx, DWORD PTR _b$[ebp]
	call	?SetWriteOffset@BitStream@RakNet@@QAEXH@Z ; RakNet::BitStream::SetWriteOffset

; 612  : 	b.Write((MessageID)ID_REMOTE_NEW_INCOMING_CONNECTION);

	push	42					; 0000002aH
	lea	ecx, DWORD PTR _b$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 613  : 	b.Write(conn1.playerId);

	mov	eax, DWORD PTR _conn1$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR _b$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 614  : 	b.Write(conn1.groupId);

	mov	eax, DWORD PTR _conn1$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	push	ecx
	lea	ecx, DWORD PTR _b$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 615  : 	b.Write(conn2.playerId);

	mov	eax, DWORD PTR _conn2$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR _b$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 616  : 	b.Write(conn2.groupId);

	mov	eax, DWORD PTR _conn2$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	push	ecx
	lea	ecx, DWORD PTR _b$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 617  : 	b.Write(ping);

	movzx	eax, WORD PTR _ping$[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 618  : 	peer->PushBackPacket(p, false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+240]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 619  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _b$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@NotifyUser
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN7@NotifyUser:
	DD	1
	DD	$LN6@NotifyUser
$LN6@NotifyUser:
	DD	-320					; fffffec0H
	DD	273					; 00000111H
	DD	$LN4@NotifyUser
$LN4@NotifyUser:
	DB	98					; 00000062H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z$0:
	lea	ecx, DWORD PTR _b$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::NotifyUserOfRemoteConnection
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_outBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ignoreList$ = 8					; size = 4
_peer$ = 12						; size = 4
?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z PROC ; ConnectionGraph::BroadcastGraphUpdate, COMDAT
; _this$ = ecx

; 557  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-504]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 558  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 	outBitstream.Write((unsigned char) ID_CONNECTION_GRAPH_UPDATE);

	push	63					; 0000003fH
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 560  : 	SerializeWeightedGraph(&outBitstream, graph);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z ; ConnectionGraph::SerializeWeightedGraph

; 561  : 	SerializeIgnoreListAndBroadcast(&outBitstream, ignoreList, peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	lea	edx, DWORD PTR _outBitstream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ; ConnectionGraph::SerializeIgnoreListAndBroadcast

; 562  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@BroadcastG
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 504				; 000001f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN7@BroadcastG:
	DD	1
	DD	$LN6@BroadcastG
$LN6@BroadcastG:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN4@BroadcastG
$LN4@BroadcastG:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z$0:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-508]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::BroadcastGraphUpdate
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?AddParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerId$ = 8						; size = 6
?AddParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z PROC	; ConnectionGraph::AddParticipant, COMDAT
; _this$ = ecx

; 497  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 498  : 	if (participantList.HasData(playerId)==false)

	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@AddPartici

; 499  : 		participantList.Insert(playerId,playerId);

	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _playerId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN2@AddPartici:

; 500  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z ENDP	; ConnectionGraph::AddParticipant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?RemoveParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z
_TEXT	SEGMENT
_objectExists$ = -29					; size = 1
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_playerId$ = 8						; size = 6
?RemoveParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z PROC ; ConnectionGraph::RemoveParticipant, COMDAT
; _this$ = ecx

; 488  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 489  : 	unsigned index;
; 490  : 	bool objectExists;
; 491  : 	index=participantList.GetIndexFromKey(playerId, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	lea	ecx, DWORD PTR _playerId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?GetIndexFromKey@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBEIABUPlayerID@@PA_N@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 492  : 	if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN2@RemovePart

; 493  : 		participantList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?RemoveAtIndex@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::RemoveAtIndex
$LN2@RemovePart:

; 494  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@RemovePart
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@RemovePart:
	DD	1
	DD	$LN5@RemovePart
$LN5@RemovePart:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@RemovePart
$LN4@RemovePart:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?RemoveParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z ENDP ; ConnectionGraph::RemoveParticipant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z
_TEXT	SEGMENT
$T2 = -553						; size = 1
$T3 = -541						; size = 1
_outBitstream$ = -340					; size = 273
_n2$ = -56						; size = 7
_n1$ = -40						; size = 7
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ignoreList$ = 8					; size = 4
_packetId$ = 12						; size = 1
_node1$ = 16						; size = 6
_node2$ = 24						; size = 6
_peer$ = 32						; size = 4
?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z PROC ; ConnectionGraph::RemoveAndRelayConnection, COMDAT
; _this$ = ecx

; 534  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 548				; 00000224H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-560]
	mov	ecx, 137				; 00000089H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 535  : 	PlayerIdAndGroupId n1, n2;

	lea	ecx, DWORD PTR _n1$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _n2$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 536  : 	n1.playerId=node1;

	lea	eax, DWORD PTR _node1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _n1$[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 537  : 	n2.playerId=node2;

	lea	eax, DWORD PTR _node2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _n2$[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 538  : 	if (graph.HasConnection(n1,n2)==false)

	lea	eax, DWORD PTR _n2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _n1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?HasConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::HasConnection
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@RemoveAndR

; 539  : 		return false;

	mov	BYTE PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _n2$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _n1$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T2[ebp]
	jmp	$LN4@RemoveAndR
$LN3@RemoveAndR:

; 540  : 	graph.RemoveConnection(n1,n2);

	lea	eax, DWORD PTR _n2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _n1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?RemoveConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::RemoveConnection

; 541  : 
; 542  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 543  : 	outBitstream.Write(packetId);

	movzx	eax, BYTE PTR _packetId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 544  : 	outBitstream.Write(node1);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _node1$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _node1$[ebp+4]
	mov	WORD PTR [eax+4], dx
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 545  : 	outBitstream.Write(node2);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _node2$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _node2$[ebp+4]
	mov	WORD PTR [eax+4], dx
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 546  : 
; 547  : 	if (ignoreList.HasData(node1)==false)

	lea	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@RemoveAndR

; 548  : 		ignoreList.Insert(node1,node1);

	lea	eax, DWORD PTR _node1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _node1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN2@RemoveAndR:

; 549  : 	if (ignoreList.HasData(node2)==false)

	lea	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@RemoveAndR

; 550  : 		ignoreList.Insert(node2,node2);

	lea	eax, DWORD PTR _node2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _node2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN1@RemoveAndR:

; 551  : 	SerializeIgnoreListAndBroadcast(&outBitstream, ignoreList, peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	lea	edx, DWORD PTR _outBitstream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ; ConnectionGraph::SerializeIgnoreListAndBroadcast

; 552  : 
; 553  : 	return true;

	mov	BYTE PTR $T3[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _n2$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _n1$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T3[ebp]
$LN4@RemoveAndR:

; 554  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@RemoveAndR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 560				; 00000230H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	1
$LN14@RemoveAndR:
	DD	3
	DD	$LN13@RemoveAndR
$LN13@RemoveAndR:
	DD	-40					; ffffffd8H
	DD	7
	DD	$LN9@RemoveAndR
	DD	-56					; ffffffc8H
	DD	7
	DD	$LN10@RemoveAndR
	DD	-340					; fffffeacH
	DD	273					; 00000111H
	DD	$LN11@RemoveAndR
$LN11@RemoveAndR:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN10@RemoveAndR:
	DB	110					; 0000006eH
	DB	50					; 00000032H
	DB	0
$LN9@RemoveAndR:
	DB	110					; 0000006eH
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z$0:
	lea	ecx, DWORD PTR _n1$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z$1:
	lea	ecx, DWORD PTR _n2$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z$2:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-564]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::RemoveAndRelayConnection
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_outBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ignoreList$ = 8					; size = 4
_conn1$ = 12						; size = 4
_conn2$ = 16						; size = 4
_ping$ = 20						; size = 2
_peer$ = 24						; size = 4
?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z PROC ; ConnectionGraph::AddAndRelayConnection, COMDAT
; _this$ = ecx

; 503  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-504]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 504  : 	if (graph.HasConnection(conn1,conn2))

	mov	eax, DWORD PTR _conn2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conn1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?HasConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::HasConnection
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@AddAndRela

; 505  : 		return;

	jmp	$LN6@AddAndRela
$LN5@AddAndRela:

; 506  : 
; 507  : 	if (ping==65535)

	movzx	eax, WORD PTR _ping$[ebp]
	cmp	eax, 65535				; 0000ffffH
	jne	SHORT $LN4@AddAndRela

; 508  : 		ping=0;

	xor	eax, eax
	mov	WORD PTR _ping$[ebp], ax
$LN4@AddAndRela:

; 509  : 	assert(conn1.playerId!=UNASSIGNED_PLAYER_ID);

	push	OFFSET _UNASSIGNED_PLAYER_ID
	mov	ecx, DWORD PTR _conn1$[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@AddAndRela
	mov	ecx, DWORD PTR ?__LINE__Var@?1??AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@2@1GPAVRakPeerInterface@@@Z@4JA
	add	ecx, 6
	push	ecx
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_1EK@MGLCJFKJ@?$AAc?$AAo?$AAn?$AAn?$AA1?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN8@AddAndRela:

; 510  : 	assert(conn2.playerId!=UNASSIGNED_PLAYER_ID);

	push	OFFSET _UNASSIGNED_PLAYER_ID
	mov	ecx, DWORD PTR _conn2$[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN9@AddAndRela
	mov	ecx, DWORD PTR ?__LINE__Var@?1??AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@2@1GPAVRakPeerInterface@@@Z@4JA
	add	ecx, 7
	push	ecx
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_1EK@BMIIGCII@?$AAc?$AAo?$AAn?$AAn?$AA2?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@AddAndRela:

; 511  : 
; 512  : 	graph.AddConnection(conn1,conn2,ping);

	movzx	eax, WORD PTR _ping$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conn2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conn1$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection

; 513  : 
; 514  : 	if (IsNewRemoteConnection(conn1,conn2,peer))

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conn2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conn1$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsNewRemoteConnection@ConnectionGraph@@IAE_NABUPlayerIdAndGroupId@1@0PAVRakPeerInterface@@@Z ; ConnectionGraph::IsNewRemoteConnection
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@AddAndRela

; 515  : 	{
; 516  : 		NotifyUserOfRemoteConnection(conn1,conn2,ping,peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	movzx	ecx, WORD PTR _ping$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conn2$[ebp]
	push	edx
	mov	eax, DWORD PTR _conn1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z ; ConnectionGraph::NotifyUserOfRemoteConnection

; 517  : 		return;

	jmp	$LN6@AddAndRela
$LN3@AddAndRela:

; 518  : 	}
; 519  : 
; 520  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 521  : 	outBitstream.Write((unsigned char) ID_CONNECTION_GRAPH_NEW_CONNECTION);

	push	64					; 00000040H
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 522  : 	outBitstream.Write(conn1.playerId);

	mov	eax, DWORD PTR _conn1$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 523  : 	outBitstream.Write(conn1.groupId);

	mov	eax, DWORD PTR _conn1$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	push	ecx
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 524  : 	outBitstream.Write(conn2.playerId);

	mov	eax, DWORD PTR _conn2$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 525  : 	outBitstream.Write(conn2.groupId);

	mov	eax, DWORD PTR _conn2$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	push	ecx
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 526  : 	outBitstream.Write(ping);

	movzx	eax, WORD PTR _ping$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 527  : 	if (ignoreList.HasData(conn2.playerId)==false)

	mov	eax, DWORD PTR _conn2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@AddAndRela

; 528  : 		ignoreList.Insert(conn2.playerId,conn2.playerId);

	mov	eax, DWORD PTR _conn2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conn2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN2@AddAndRela:

; 529  : 	if (ignoreList.HasData(conn1.playerId)==false)

	mov	eax, DWORD PTR _conn1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@AddAndRela

; 530  : 		ignoreList.Insert(conn1.playerId,conn1.playerId);

	mov	eax, DWORD PTR _conn1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conn1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN1@AddAndRela:

; 531  : 	SerializeIgnoreListAndBroadcast(&outBitstream, ignoreList, peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	lea	edx, DWORD PTR _outBitstream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SerializeIgnoreListAndBroadcast@ConnectionGraph@@IAEXPAVBitStream@RakNet@@AAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ; ConnectionGraph::SerializeIgnoreListAndBroadcast

; 532  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN6@AddAndRela:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@AddAndRela
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 504				; 000001f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN14@AddAndRela:
	DD	1
	DD	$LN13@AddAndRela
$LN13@AddAndRela:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN11@AddAndRela
$LN11@AddAndRela:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z$0:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-508]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::AddAndRelayConnection
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABUPlayerID@@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABUPlayerID@@0@Z PROC ; DataStructures::defaultOrderedListComparison<PlayerID,PlayerID>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 31   : 		if (a<b) return -1; if (a==b) return 0; return 1;

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??MPlayerID@@QBE_NABU0@@Z		; PlayerID::operator<
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@defaultOrd
	or	eax, -1
	jmp	SHORT $LN3@defaultOrd
$LN2@defaultOrd:
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??8PlayerID@@QBE_NABU0@@Z		; PlayerID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@defaultOrd
	xor	eax, eax
	jmp	SHORT $LN3@defaultOrd
$LN1@defaultOrd:
	mov	eax, 1
$LN3@defaultOrd:

; 32   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABUPlayerID@@0@Z ENDP ; DataStructures::defaultOrderedListComparison<PlayerID,PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z
_TEXT	SEGMENT
$T2 = -349						; size = 1
$T3 = -337						; size = 1
$T4 = -325						; size = 1
_weight$ = -124						; size = 2
_anyConnectionsNew$ = -109				; size = 1
_connection$ = -100					; size = 7
_node$ = -84						; size = 7
_connectionCount$ = -68					; size = 2
_connectionIndex$ = -56					; size = 4
_nodeIndex$ = -44					; size = 4
_nodeCount$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_inBitstream$ = 8					; size = 4
_peer$ = 12						; size = 4
?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z PROC ; ConnectionGraph::DeserializeWeightedGraph, COMDAT
; _this$ = ecx

; 444  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 445  : 	unsigned nodeCount, nodeIndex, connectionIndex;
; 446  : 	unsigned short connectionCount;
; 447  : 	PlayerIdAndGroupId node, connection;

	lea	ecx, DWORD PTR _node$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _connection$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 448  : 	bool anyConnectionsNew=false;

	mov	BYTE PTR _anyConnectionsNew$[ebp], 0

; 449  : 	unsigned short weight;
; 450  : 	inBitstream->ReadCompressed(nodeCount);

	lea	eax, DWORD PTR _nodeCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$ReadCompressed@I@BitStream@RakNet@@QAE_NAAI@Z ; RakNet::BitStream::ReadCompressed<unsigned int>

; 451  : 	for (nodeIndex=0; nodeIndex < nodeCount; nodeIndex++)

	mov	DWORD PTR _nodeIndex$[ebp], 0
	jmp	SHORT $LN12@Deserializ
$LN11@Deserializ:
	mov	eax, DWORD PTR _nodeIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nodeIndex$[ebp], eax
$LN12@Deserializ:
	mov	eax, DWORD PTR _nodeIndex$[ebp]
	cmp	eax, DWORD PTR _nodeCount$[ebp]
	jae	$LN10@Deserializ

; 452  : 	{
; 453  : 		inBitstream->Read(node.playerId);

	lea	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 454  : 		inBitstream->Read(node.groupId);

	lea	eax, DWORD PTR _node$[ebp+6]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 455  : 
; 456  : 		inBitstream->AlignReadToByteBoundary();

	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	?AlignReadToByteBoundary@BitStream@RakNet@@QAEXXZ ; RakNet::BitStream::AlignReadToByteBoundary

; 457  : 		if (inBitstream->Read(connectionCount)==false)

	lea	eax, DWORD PTR _connectionCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@Deserializ

; 458  : 		{
; 459  : 			assert(0);

	xor	eax, eax
	jne	SHORT $LN15@Deserializ
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z@4JA
	add	ecx, 15					; 0000000fH
	push	ecx
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN15@Deserializ:

; 460  : 			return false;

	mov	BYTE PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _connection$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _node$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T2[ebp]
	jmp	$LN13@Deserializ
$LN9@Deserializ:

; 461  : 		}
; 462  : 		for (connectionIndex=0; connectionIndex < connectionCount; connectionIndex++)

	mov	DWORD PTR _connectionIndex$[ebp], 0
	jmp	SHORT $LN8@Deserializ
$LN7@Deserializ:
	mov	eax, DWORD PTR _connectionIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _connectionIndex$[ebp], eax
$LN8@Deserializ:
	movzx	eax, WORD PTR _connectionCount$[ebp]
	cmp	DWORD PTR _connectionIndex$[ebp], eax
	jae	$LN6@Deserializ

; 463  : 		{
; 464  : 			inBitstream->Read(connection.playerId);

	lea	eax, DWORD PTR _connection$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 465  : 			inBitstream->Read(connection.groupId);

	lea	eax, DWORD PTR _connection$[ebp+6]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 466  : 			if (inBitstream->Read(weight)==false)

	lea	eax, DWORD PTR _weight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@Deserializ

; 467  : 			{
; 468  : 				assert(0);

	xor	eax, eax
	jne	SHORT $LN16@Deserializ
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z@4JA
	add	ecx, 24					; 00000018H
	push	ecx
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN16@Deserializ:

; 469  : 				return false;

	mov	BYTE PTR $T3[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _connection$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _node$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T3[ebp]
	jmp	$LN13@Deserializ
$LN5@Deserializ:

; 470  : 			}
; 471  : 			if (subscribedGroups.HasData(connection.groupId)==false ||
; 472  : 				subscribedGroups.HasData(node.groupId)==false)

	lea	eax, DWORD PTR _connection$[ebp+6]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Deserializ
	lea	eax, DWORD PTR _node$[ebp+6]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@Deserializ
$LN3@Deserializ:

; 473  : 				continue;

	jmp	$LN7@Deserializ
$LN4@Deserializ:

; 474  : 			RakAssert(node.playerId!=UNASSIGNED_PLAYER_ID);

	push	OFFSET _UNASSIGNED_PLAYER_ID
	lea	ecx, DWORD PTR _node$[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN17@Deserializ
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z@4JA
	add	ecx, 30					; 0000001eH
	push	ecx
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_1EI@CNBBGJFB@?$AAn?$AAo?$AAd?$AAe?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_?$AAP?$AAL?$AAA?$AAY?$AAE?$AAR@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN17@Deserializ:

; 475  : 			RakAssert(connection.playerId!=UNASSIGNED_PLAYER_ID);

	push	OFFSET _UNASSIGNED_PLAYER_ID
	lea	ecx, DWORD PTR _connection$[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN18@Deserializ
	mov	ecx, DWORD PTR ?__LINE__Var@?1??DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z@4JA
	add	ecx, 31					; 0000001fH
	push	ecx
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_1FE@GDDODEON@?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?4?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAI?$AAd?$AA?$CB?$AA?$DN?$AAU?$AAN?$AAA?$AAS?$AAS?$AAI?$AAG?$AAN?$AAE?$AAD?$AA_@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN18@Deserializ:

; 476  : 			if (IsNewRemoteConnection(node,connection,peer))

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _connection$[ebp]
	push	ecx
	lea	edx, DWORD PTR _node$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsNewRemoteConnection@ConnectionGraph@@IAE_NABUPlayerIdAndGroupId@1@0PAVRakPeerInterface@@@Z ; ConnectionGraph::IsNewRemoteConnection
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Deserializ

; 477  : 				NotifyUserOfRemoteConnection(node,connection,weight,peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	movzx	ecx, WORD PTR _weight$[ebp]
	push	ecx
	lea	edx, DWORD PTR _connection$[ebp]
	push	edx
	lea	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyUserOfRemoteConnection@ConnectionGraph@@IAEXABUPlayerIdAndGroupId@1@0GPAVRakPeerInterface@@@Z ; ConnectionGraph::NotifyUserOfRemoteConnection
$LN2@Deserializ:

; 478  : 
; 479  : 			if (graph.HasConnection(node,connection)==false)

	lea	eax, DWORD PTR _connection$[ebp]
	push	eax
	lea	ecx, DWORD PTR _node$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?HasConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::HasConnection
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@Deserializ

; 480  : 				anyConnectionsNew=true;

	mov	BYTE PTR _anyConnectionsNew$[ebp], 1
$LN1@Deserializ:

; 481  : 
; 482  : 			graph.AddConnection(node,connection,weight);

	movzx	eax, WORD PTR _weight$[ebp]
	push	eax
	lea	ecx, DWORD PTR _connection$[ebp]
	push	ecx
	lea	edx, DWORD PTR _node$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection

; 483  : 		}

	jmp	$LN7@Deserializ
$LN6@Deserializ:

; 484  : 	}

	jmp	$LN11@Deserializ
$LN10@Deserializ:

; 485  : 	return anyConnectionsNew;

	mov	al, BYTE PTR _anyConnectionsNew$[ebp]
	mov	BYTE PTR $T4[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _connection$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _node$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T4[ebp]
$LN13@Deserializ:

; 486  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@Deserializ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN28@Deserializ:
	DD	5
	DD	$LN27@Deserializ
$LN27@Deserializ:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN21@Deserializ
	DD	-68					; ffffffbcH
	DD	2
	DD	$LN22@Deserializ
	DD	-84					; ffffffacH
	DD	7
	DD	$LN23@Deserializ
	DD	-100					; ffffff9cH
	DD	7
	DD	$LN24@Deserializ
	DD	-124					; ffffff84H
	DD	2
	DD	$LN25@Deserializ
$LN25@Deserializ:
	DB	119					; 00000077H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	0
$LN24@Deserializ:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN23@Deserializ:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN22@Deserializ:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN21@Deserializ:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z$0:
	lea	ecx, DWORD PTR _node$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z$1:
	lea	ecx, DWORD PTR _connection$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::DeserializeWeightedGraph
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z
_TEXT	SEGMENT
tv164 = -344						; size = 4
tv68 = -340						; size = 4
$T2 = -331						; size = 7
_weight$ = -124						; size = 2
_node2$ = -112						; size = 7
_node1$ = -96						; size = 7
_count$ = -80						; size = 2
_oldOffset$ = -68					; size = 4
_countOffset$ = -56					; size = 4
_connectionIndex$ = -44					; size = 4
_nodeIndex$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_out$ = 8						; size = 4
_g$ = 12						; size = 4
?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z PROC ; ConnectionGraph::SerializeWeightedGraph, COMDAT
; _this$ = ecx

; 396  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 397  : 	unsigned nodeIndex, connectionIndex;
; 398  : 	unsigned countOffset, oldOffset;
; 399  : 	unsigned short count;
; 400  : 	PlayerIdAndGroupId node1, node2;

	lea	ecx, DWORD PTR _node1$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _node2$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 401  : 	unsigned short weight;
; 402  : 	out->WriteCompressed(g.GetNodeCount());

	mov	ecx, DWORD PTR _g$[ebp]
	call	?GetNodeCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEIXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeCount
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$WriteCompressed@I@BitStream@RakNet@@QAEXI@Z ; RakNet::BitStream::WriteCompressed<unsigned int>

; 403  : 	for (nodeIndex=0; nodeIndex < g.GetNodeCount(); nodeIndex++)

	mov	DWORD PTR _nodeIndex$[ebp], 0
	jmp	SHORT $LN7@SerializeW
$LN6@SerializeW:
	mov	eax, DWORD PTR _nodeIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _nodeIndex$[ebp], eax
$LN7@SerializeW:
	mov	ecx, DWORD PTR _g$[ebp]
	call	?GetNodeCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEIXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeCount
	cmp	DWORD PTR _nodeIndex$[ebp], eax
	jae	$LN5@SerializeW

; 404  : 	{
; 405  : 		// Write the node
; 406  : 		node1=g.GetNodeAtIndex(nodeIndex);

	mov	eax, DWORD PTR _nodeIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _g$[ebp]
	call	?GetNodeAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetNodeAtIndex
	mov	DWORD PTR tv68[ebp], eax
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv164[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv164[ebp]
	push	eax
	lea	ecx, DWORD PTR _node1$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId

; 407  : #ifdef _CONNECTION_GRAPH_DEBUG_PRINT
; 408  : 		printf("[%i] ", node1.playerId.port);
; 409  : #endif
; 410  : 		out->Write(node1.playerId);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _node1$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _node1$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 411  : 		out->Write(node1.groupId);

	movzx	eax, BYTE PTR _node1$[ebp+6]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 412  : 
; 413  : 		// Write the adjacency list count
; 414  : 		count=(unsigned short)g.GetConnectionCount(nodeIndex);

	mov	eax, DWORD PTR _nodeIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _g$[ebp]
	call	?GetConnectionCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEII@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionCount
	mov	WORD PTR _count$[ebp], ax

; 415  : 		out->AlignWriteToByteBoundary();

	mov	ecx, DWORD PTR _out$[ebp]
	call	?AlignWriteToByteBoundary@BitStream@RakNet@@QAEXXZ ; RakNet::BitStream::AlignWriteToByteBoundary

; 416  : 		countOffset=out->GetWriteOffset();

	mov	ecx, DWORD PTR _out$[ebp]
	call	?GetWriteOffset@BitStream@RakNet@@QBEHXZ ; RakNet::BitStream::GetWriteOffset
	mov	DWORD PTR _countOffset$[ebp], eax

; 417  : 		out->Write(count);

	movzx	eax, WORD PTR _count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 418  : 		count=0;

	xor	eax, eax
	mov	WORD PTR _count$[ebp], ax

; 419  : 		for (connectionIndex=0; connectionIndex < g.GetConnectionCount(nodeIndex); connectionIndex++)

	mov	DWORD PTR _connectionIndex$[ebp], 0
	jmp	SHORT $LN4@SerializeW
$LN3@SerializeW:
	mov	eax, DWORD PTR _connectionIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _connectionIndex$[ebp], eax
$LN4@SerializeW:
	mov	eax, DWORD PTR _nodeIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _g$[ebp]
	call	?GetConnectionCount@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEII@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionCount
	cmp	DWORD PTR _connectionIndex$[ebp], eax
	jae	SHORT $LN2@SerializeW

; 420  : 		{
; 421  : 			g.GetConnectionAtIndex(nodeIndex, connectionIndex, node2, weight);

	lea	eax, DWORD PTR _weight$[ebp]
	push	eax
	lea	ecx, DWORD PTR _node2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _connectionIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _nodeIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _g$[ebp]
	call	?GetConnectionAtIndex@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QBEXIIAAUPlayerIdAndGroupId@ConnectionGraph@@AAG@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetConnectionAtIndex

; 422  : 			// For efficiencies' sake, only serialize the upper half of the connection pairs
; 423  : 			if (node2 > node1)

	lea	eax, DWORD PTR _node1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _node2$[ebp]
	call	??OPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator>
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@SerializeW

; 424  : 			{
; 425  : 				count++;

	mov	ax, WORD PTR _count$[ebp]
	add	ax, 1
	mov	WORD PTR _count$[ebp], ax

; 426  : 				out->Write(node2.playerId);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _node2$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _node2$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 427  : 				out->Write(node2.groupId);

	movzx	eax, BYTE PTR _node2$[ebp+6]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 428  : 				out->Write(weight);

	movzx	eax, WORD PTR _weight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>
$LN1@SerializeW:

; 429  : 
; 430  : #ifdef _CONNECTION_GRAPH_DEBUG_PRINT
; 431  : 				printf("(%i) ", node2.playerId.port);
; 432  : #endif
; 433  : 			}
; 434  : 		}

	jmp	$LN3@SerializeW
$LN2@SerializeW:

; 435  : 
; 436  : 		// Go back and change how many elements were written
; 437  : 		oldOffset=out->GetWriteOffset();

	mov	ecx, DWORD PTR _out$[ebp]
	call	?GetWriteOffset@BitStream@RakNet@@QBEHXZ ; RakNet::BitStream::GetWriteOffset
	mov	DWORD PTR _oldOffset$[ebp], eax

; 438  : 		out->SetWriteOffset(countOffset);

	mov	eax, DWORD PTR _countOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	?SetWriteOffset@BitStream@RakNet@@QAEXH@Z ; RakNet::BitStream::SetWriteOffset

; 439  : 		out->Write(count);

	movzx	eax, WORD PTR _count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 440  : 		out->SetWriteOffset(oldOffset);

	mov	eax, DWORD PTR _oldOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	?SetWriteOffset@BitStream@RakNet@@QAEXH@Z ; RakNet::BitStream::SetWriteOffset

; 441  : 	}

	jmp	$LN6@SerializeW
$LN5@SerializeW:

; 442  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _node2$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _node1$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@SerializeW
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN18@SerializeW:
	DD	3
	DD	$LN17@SerializeW
$LN17@SerializeW:
	DD	-96					; ffffffa0H
	DD	7
	DD	$LN13@SerializeW
	DD	-112					; ffffff90H
	DD	7
	DD	$LN14@SerializeW
	DD	-124					; ffffff84H
	DD	2
	DD	$LN15@SerializeW
$LN15@SerializeW:
	DB	119					; 00000077H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	0
$LN14@SerializeW:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN13@SerializeW:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z$0:
	lea	ecx, DWORD PTR _node1$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z$1:
	lea	ecx, DWORD PTR _node2$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z$2:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z ENDP ; ConnectionGraph::SerializeWeightedGraph
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z
_TEXT	SEGMENT
$T2 = -573						; size = 1
$T3 = -561						; size = 1
_ignoreList$ = -360					; size = 12
_inBitstream$ = -340					; size = 273
_node2$ = -56						; size = 6
_node1$ = -40						; size = 6
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
_packetId$ = 16						; size = 1
?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z PROC ; ConnectionGraph::OnConnectionLost, COMDAT
; _this$ = ecx

; 359  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 568				; 00000238H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-580]
	mov	ecx, 142				; 0000008eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 360  : 	// Only accept from participants
; 361  : 	if (participantList.HasData(packet->playerId)==false)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@OnConnecti

; 362  : 		return false;

	xor	al, al
	jmp	$LN4@OnConnecti
$LN3@OnConnecti:

; 363  : 
; 364  : 	PlayerID node1, node2;
; 365  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 366  : 	inBitstream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 367  : 	// This is correct - group IDs are not written for removal, only addition.
; 368  : 	inBitstream.Read(node1);

	lea	eax, DWORD PTR _node1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 369  : 	if (inBitstream.Read(node2)==false)

	lea	eax, DWORD PTR _node2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@OnConnecti

; 370  : 		return false;

	mov	BYTE PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T2[ebp]
	jmp	$LN4@OnConnecti
$LN2@OnConnecti:

; 371  : 	DataStructures::OrderedList<PlayerID,PlayerID> ignoreList;

	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 372  : 	DeserializeIgnoreList(ignoreList, &inBitstream);

	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z ; ConnectionGraph::DeserializeIgnoreList

; 373  : 	if (ignoreList.HasData(packet->playerId)==false)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@OnConnecti

; 374  : 		ignoreList.Insert(packet->playerId, packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	add	ecx, 2
	push	ecx
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN1@OnConnecti:

; 375  : 	
; 376  : 	return RemoveAndRelayConnection(ignoreList, packetId, node1, node2, peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _node2$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _node2$[ebp+4]
	mov	WORD PTR [ecx+4], ax
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _node1$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _node1$[ebp+4]
	mov	WORD PTR [ecx+4], ax
	movzx	ecx, BYTE PTR _packetId$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ignoreList$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z ; ConnectionGraph::RemoveAndRelayConnection
	mov	BYTE PTR $T3[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	al, BYTE PTR $T3[ebp]
$LN4@OnConnecti:

; 377  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@OnConnecti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 580				; 00000244H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN14@OnConnecti:
	DD	4
	DD	$LN13@OnConnecti
$LN13@OnConnecti:
	DD	-40					; ffffffd8H
	DD	6
	DD	$LN8@OnConnecti
	DD	-56					; ffffffc8H
	DD	6
	DD	$LN9@OnConnecti
	DD	-340					; fffffeacH
	DD	273					; 00000111H
	DD	$LN10@OnConnecti
	DD	-360					; fffffe98H
	DD	12					; 0000000cH
	DD	$LN11@OnConnecti
$LN11@OnConnecti:
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN10@OnConnecti:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN9@OnConnecti:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN8@OnConnecti:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z$0:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z$1:
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	jmp	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
__ehhandler$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-584]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z ENDP ; ConnectionGraph::OnConnectionLost
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_ignoreList$ = -372					; size = 12
_inBitstream$ = -352					; size = 273
_ping$ = -68						; size = 2
_node2$ = -56						; size = 7
_node1$ = -40						; size = 7
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; ConnectionGraph::OnNewConnection, COMDAT
; _this$ = ecx

; 337  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 556				; 0000022cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-568]
	mov	ecx, 139				; 0000008bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 338  : 	// Only accept from participants
; 339  : 	if (participantList.HasData(packet->playerId)==false)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@OnNewConne

; 340  : 		return;

	jmp	$LN4@OnNewConne
$LN3@OnNewConne:

; 341  : 
; 342  : 	PlayerIdAndGroupId node1, node2;

	lea	ecx, DWORD PTR _node1$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _node2$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 343  : 	unsigned short ping;
; 344  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 345  : 	inBitstream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 346  : 	inBitstream.Read(node1.playerId);

	lea	eax, DWORD PTR _node1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 347  : 	inBitstream.Read(node1.groupId);

	lea	eax, DWORD PTR _node1$[ebp+6]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 348  : 	inBitstream.Read(node2.playerId);

	lea	eax, DWORD PTR _node2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 349  : 	inBitstream.Read(node2.groupId);

	lea	eax, DWORD PTR _node2$[ebp+6]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 350  : 	if (inBitstream.Read(ping)==false)

	lea	eax, DWORD PTR _ping$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@OnNewConne

; 351  : 		return;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _node2$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _node1$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	jmp	$LN4@OnNewConne
$LN2@OnNewConne:

; 352  : 	DataStructures::OrderedList<PlayerID,PlayerID> ignoreList;

	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 353  : 	DeserializeIgnoreList(ignoreList, &inBitstream);

	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z ; ConnectionGraph::DeserializeIgnoreList

; 354  : 	if (ignoreList.HasData(packet->playerId)==false)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@OnNewConne

; 355  : 		ignoreList.Insert(packet->playerId,packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	add	ecx, 2
	push	ecx
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN1@OnNewConne:

; 356  : 	AddAndRelayConnection(ignoreList, node1, node2, ping, peer);	

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	movzx	ecx, WORD PTR _ping$[ebp]
	push	ecx
	lea	edx, DWORD PTR _node2$[ebp]
	push	edx
	lea	eax, DWORD PTR _node1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z ; ConnectionGraph::AddAndRelayConnection

; 357  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _node2$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _node1$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
$LN4@OnNewConne:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@OnNewConne
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 568				; 00000238H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN17@OnNewConne:
	DD	5
	DD	$LN16@OnNewConne
$LN16@OnNewConne:
	DD	-40					; ffffffd8H
	DD	7
	DD	$LN10@OnNewConne
	DD	-56					; ffffffc8H
	DD	7
	DD	$LN11@OnNewConne
	DD	-68					; ffffffbcH
	DD	2
	DD	$LN12@OnNewConne
	DD	-352					; fffffea0H
	DD	273					; 00000111H
	DD	$LN13@OnNewConne
	DD	-372					; fffffe8cH
	DD	12					; 0000000cH
	DD	$LN14@OnNewConne
$LN14@OnNewConne:
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN13@OnNewConne:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN12@OnNewConne:
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN11@OnNewConne:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN10@OnNewConne:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _node1$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1:
	lea	ecx, DWORD PTR _node2$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$2:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$3:
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	jmp	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
__ehhandler$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-572]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; ConnectionGraph::OnNewConnection
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_ignoreList$ = -328					; size = 12
_inBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; ConnectionGraph::OnConnectionGraphUpdate, COMDAT
; _this$ = ecx

; 317  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 512				; 00000200H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 128				; 00000080H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 318  : 	// Only accept from participants
; 319  : 	if (participantList.HasData(packet->playerId)==false)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@OnConnecti

; 320  : 		return;

	jmp	$LN4@OnConnecti
$LN3@OnConnecti:

; 321  : 
; 322  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 323  : 	inBitstream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 324  : 	
; 325  : 	if (DeserializeWeightedGraph(&inBitstream, peer)==false)

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z ; ConnectionGraph::DeserializeWeightedGraph
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@OnConnecti

; 326  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN4@OnConnecti
$LN2@OnConnecti:

; 327  : 
; 328  : 	DataStructures::OrderedList<PlayerID,PlayerID> ignoreList;

	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 329  : 	DeserializeIgnoreList(ignoreList, &inBitstream);

	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeserializeIgnoreList@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVBitStream@RakNet@@@Z ; ConnectionGraph::DeserializeIgnoreList

; 330  : 
; 331  : 	// Forward the updated graph to all participants.
; 332  : 	if (ignoreList.HasData(packet->playerId)==false)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	?HasData@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QBE_NABUPlayerID@@@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@OnConnecti

; 333  : 		ignoreList.Insert(packet->playerId,packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	add	ecx, 2
	push	ecx
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert
$LN1@OnConnecti:

; 334  : 	BroadcastGraphUpdate(ignoreList, peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ; ConnectionGraph::BroadcastGraphUpdate

; 335  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN4@OnConnecti:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@OnConnecti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN12@OnConnecti:
	DD	2
	DD	$LN11@OnConnecti
$LN11@OnConnecti:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN8@OnConnecti
	DD	-328					; fffffeb8H
	DD	12					; 0000000cH
	DD	$LN9@OnConnecti
$LN9@OnConnecti:
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN8@OnConnecti:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1:
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	jmp	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
__ehhandler$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-528]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; ConnectionGraph::OnConnectionGraphUpdate
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
$T2 = -1082						; size = 6
_ignoreList$ = -876					; size = 12
_outBitstream$ = -856					; size = 273
_inBitstream$ = -572					; size = 273
_password$ = -288					; size = 256
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; ConnectionGraph::OnConnectionGraphReply, COMDAT
; _this$ = ecx

; 275  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1076				; 00000434H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1088]
	mov	ecx, 269				; 0000010dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 276  : 	unsigned char password[256];
; 277  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 278  : 	inBitstream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 279  : 	stringCompressor->DecodeString((char*)password,256,&inBitstream);

	push	0
	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _password$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z ; StringCompressor::DecodeString

; 280  : 	if (pw && pw[0] && strcmp(pw, (const char*)password)!=0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@OnConnecti
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+ecx]
	test	ecx, ecx
	je	SHORT $LN2@OnConnecti
	lea	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@OnConnecti

; 281  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN3@OnConnecti
$LN2@OnConnecti:

; 282  : 
; 283  : 	// Serialize the weighted graph and send it to them
; 284  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 285  : 	outBitstream.Write((unsigned char) ID_CONNECTION_GRAPH_UPDATE);

	push	63					; 0000003fH
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 286  : 
; 287  : #ifdef _CONNECTION_GRAPH_DEBUG_PRINT
; 288  : 	printf("ID_CONNECTION_GRAPH_UPDATE ");
; 289  : #endif
; 290  : 
; 291  : 	// Send our current graph to the sender
; 292  : 	SerializeWeightedGraph(&outBitstream, graph);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z ; ConnectionGraph::SerializeWeightedGraph

; 293  : 
; 294  : 
; 295  : 	// Write the systems that have processed this graph so we don't resend to these systems
; 296  : 	outBitstream.Write((unsigned short) 1);

	push	1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 297  : 	outBitstream.Write(peer->GetExternalID(packet->playerId));

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 298  : 
; 299  : #ifdef _CONNECTION_GRAPH_DEBUG_PRINT
; 300  : 	printf("from %i to %i\n", peer->GetInternalID().port, packet->playerId.port);
; 301  : #endif
; 302  : 
; 303  : 	peer->Send(&outBitstream, LOW_PRIORITY, RELIABLE_ORDERED, connectionGraphChannel, packet->playerId, false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	push	31					; 0000001fH
	push	3
	push	3
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 304  : 
; 305  : 	// Add packet->playerId to the participant list if it is not already there
; 306  : 	AddParticipant(packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z ; ConnectionGraph::AddParticipant

; 307  : 
; 308  : 	if (DeserializeWeightedGraph(&inBitstream, peer)==false)

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeserializeWeightedGraph@ConnectionGraph@@IAE_NPAVBitStream@RakNet@@PAVRakPeerInterface@@@Z ; ConnectionGraph::DeserializeWeightedGraph
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@OnConnecti

; 309  : 		return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	SHORT $LN3@OnConnecti
$LN1@OnConnecti:

; 310  : 
; 311  : 	// Forward the updated graph to all current participants
; 312  : 	DataStructures::OrderedList<PlayerID,PlayerID> ignoreList;

	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 313  : 	ignoreList.Insert(packet->playerId,packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	add	ecx, 2
	push	ecx
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	?Insert@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEIABUPlayerID@@0@Z ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Insert

; 314  : 	BroadcastGraphUpdate(ignoreList, peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BroadcastGraphUpdate@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@PAVRakPeerInterface@@@Z ; ConnectionGraph::BroadcastGraphUpdate

; 315  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN3@OnConnecti:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@OnConnecti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1088				; 00000440H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN14@OnConnecti:
	DD	4
	DD	$LN13@OnConnecti
$LN13@OnConnecti:
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN8@OnConnecti
	DD	-572					; fffffdc4H
	DD	273					; 00000111H
	DD	$LN9@OnConnecti
	DD	-856					; fffffca8H
	DD	273					; 00000111H
	DD	$LN10@OnConnecti
	DD	-876					; fffffc94H
	DD	12					; 0000000cH
	DD	$LN11@OnConnecti
$LN11@OnConnecti:
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN10@OnConnecti:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN9@OnConnecti:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN8@OnConnecti:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$2:
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	jmp	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
__ehhandler$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1092]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; ConnectionGraph::OnConnectionGraphReply
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_outBitstream$ = -856					; size = 273
_inBitstream$ = -572					; size = 273
_password$ = -288					; size = 256
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; ConnectionGraph::OnConnectionGraphRequest, COMDAT
; _this$ = ecx

; 249  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1040				; 00000410H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1052]
	mov	ecx, 260				; 00000104H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 250  : 	char password[256];
; 251  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 252  : 	inBitstream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 253  : 	stringCompressor->DecodeString(password,256,&inBitstream);

	push	0
	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _password$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z ; StringCompressor::DecodeString

; 254  : 	if (pw && pw[0] && strcmp(pw, password)!=0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@OnConnecti
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+ecx]
	test	ecx, ecx
	je	SHORT $LN1@OnConnecti
	lea	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@OnConnecti

; 255  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN2@OnConnecti
$LN1@OnConnecti:

; 256  : 
; 257  : #ifdef _CONNECTION_GRAPH_DEBUG_PRINT
; 258  : 	printf("ID_CONNECTION_GRAPH_REPLY ");
; 259  : #endif
; 260  : 
; 261  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 262  : 	outBitstream.Write((unsigned char) ID_CONNECTION_GRAPH_REPLY);

	push	62					; 0000003eH
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 263  : 	stringCompressor->EncodeString(pw,256,&outBitstream);

	push	0
	lea	eax, DWORD PTR _outBitstream$[ebp]
	push	eax
	push	256					; 00000100H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?EncodeString@StringCompressor@@QAEXPBDHPAVBitStream@RakNet@@H@Z ; StringCompressor::EncodeString

; 264  : 	SerializeWeightedGraph(&outBitstream, graph);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SerializeWeightedGraph@ConnectionGraph@@IBEXPAVBitStream@RakNet@@ABV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z ; ConnectionGraph::SerializeWeightedGraph

; 265  : 	peer->Send(&outBitstream, LOW_PRIORITY, RELIABLE_ORDERED, connectionGraphChannel, packet->playerId, false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	push	31					; 0000001fH
	push	3
	push	3
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 266  : 
; 267  : #ifdef _CONNECTION_GRAPH_DEBUG_PRINT
; 268  : 	printf("from %i to %i\n", peer->GetInternalID().port, packet->playerId.port);
; 269  : #endif
; 270  : 
; 271  : 	// Add packet->playerId to the participant list if it is not already there
; 272  : 	AddParticipant(packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z ; ConnectionGraph::AddParticipant

; 273  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN2@OnConnecti:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@OnConnecti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1052				; 0000041cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN11@OnConnecti:
	DD	3
	DD	$LN10@OnConnecti
$LN10@OnConnecti:
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN6@OnConnecti
	DD	-572					; fffffdc4H
	DD	273					; 00000111H
	DD	$LN7@OnConnecti
	DD	-856					; fffffca8H
	DD	273					; 00000111H
	DD	$LN8@OnConnecti
$LN8@OnConnecti:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN7@OnConnecti:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN6@OnConnecti:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1056]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; ConnectionGraph::OnConnectionGraphRequest
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnConnectionRequestAccepted@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnConnectionRequestAccepted@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; ConnectionGraph::OnConnectionRequestAccepted, COMDAT
; _this$ = ecx

; 201  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 	if (autoAddNewConnections==false)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+76]
	test	ecx, ecx
	jne	SHORT $LN1@OnConnecti

; 203  : 		return;

	jmp	SHORT $LN2@OnConnecti
$LN1@OnConnecti:

; 204  : 
; 205  : 	RequestConnectionGraph(peer, packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z ; ConnectionGraph::RequestConnectionGraph

; 206  : 
; 207  : 	// 0 is the default groupId
; 208  : 	AddNewConnection(peer, packet->playerId, 0);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z ; ConnectionGraph::AddNewConnection
$LN2@OnConnecti:

; 209  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnConnectionRequestAccepted@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; ConnectionGraph::OnConnectionRequestAccepted
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnNewIncomingConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnNewIncomingConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; ConnectionGraph::OnNewIncomingConnection, COMDAT
; _this$ = ecx

; 193  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 194  : 	if (autoAddNewConnections==false)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+76]
	test	ecx, ecx
	jne	SHORT $LN1@OnNewIncom

; 195  : 		return;

	jmp	SHORT $LN2@OnNewIncom
$LN1@OnNewIncom:

; 196  : 
; 197  : 	// 0 is the default groupId
; 198  : 	AddNewConnection(peer, packet->playerId, 0);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z ; ConnectionGraph::AddNewConnection
$LN2@OnNewIncom:

; 199  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnNewIncomingConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; ConnectionGraph::OnNewIncomingConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z
_TEXT	SEGMENT
$T2 = -246						; size = 6
_ignoreList$ = -40					; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_playerId$ = 12						; size = 6
_packetId$ = 20						; size = 1
?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z PROC ; ConnectionGraph::HandleDroppedConnection, COMDAT
; _this$ = ecx

; 185  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 186  : 	assert(peer);

	cmp	DWORD PTR _peer$[ebp], 0
	jne	SHORT $LN3@HandleDrop
	mov	eax, DWORD PTR ?__LINE__Var@?1??HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_19OLDIEKDA@?$AAp?$AAe?$AAe?$AAr?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@HandleDrop:

; 187  : 	RemoveParticipant(playerId);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveParticipant@ConnectionGraph@@IAEXUPlayerID@@@Z ; ConnectionGraph::RemoveParticipant

; 188  : 	DataStructures::OrderedList<PlayerID,PlayerID> ignoreList;

	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 189  : 	RemoveAndRelayConnection(ignoreList, packetId, playerId, peer->GetExternalID(playerId), peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [ecx+4], ax
	movzx	ecx, BYTE PTR _packetId$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ignoreList$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAndRelayConnection@ConnectionGraph@@IAE_NAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@EUPlayerID@@1PAVRakPeerInterface@@@Z ; ConnectionGraph::RemoveAndRelayConnection

; 190  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@HandleDrop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN8@HandleDrop:
	DD	1
	DD	$LN7@HandleDrop
$LN7@HandleDrop:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN5@HandleDrop
$LN5@HandleDrop:
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z$0:
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	jmp	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
__ehhandler$?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z ENDP ; ConnectionGraph::HandleDroppedConnection
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnCloseConnection@ConnectionGraph@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_playerId$ = 12						; size = 6
?OnCloseConnection@ConnectionGraph@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z PROC ; ConnectionGraph::OnCloseConnection, COMDAT
; _this$ = ecx

; 180  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 181  : 	HandleDroppedConnection(peer, playerId, ID_CONNECTION_GRAPH_DISCONNECTION_NOTIFICATION);

	push	66					; 00000042H
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z ; ConnectionGraph::HandleDroppedConnection

; 182  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnCloseConnection@ConnectionGraph@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z ENDP ; ConnectionGraph::OnCloseConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnReceive@ConnectionGraph@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
tv68 = -220						; size = 4
_packetId$1 = -17					; size = 1
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnReceive@ConnectionGraph@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z PROC ; ConnectionGraph::OnReceive, COMDAT
; _this$ = ecx

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 131  : 	switch (packet->data[0]) 

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	sub	edx, 23					; 00000017H
	mov	DWORD PTR tv68[ebp], edx
	cmp	DWORD PTR tv68[ebp], 43			; 0000002bH
	ja	$LN14@OnReceive
	mov	eax, DWORD PTR tv68[ebp]
	movzx	ecx, BYTE PTR $LN18@OnReceive[eax]
	jmp	DWORD PTR $LN19@OnReceive[ecx*4]
$LN13@OnReceive:

; 132  : 	{
; 133  : 	case ID_NEW_INCOMING_CONNECTION:
; 134  : 		OnNewIncomingConnection(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnNewIncomingConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnNewIncomingConnection

; 135  : 		return RR_CONTINUE_PROCESSING;

	mov	eax, 1
	jmp	$LN16@OnReceive
$LN12@OnReceive:

; 136  : 	case ID_CONNECTION_REQUEST_ACCEPTED:
; 137  : 		OnConnectionRequestAccepted(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnConnectionRequestAccepted@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnConnectionRequestAccepted

; 138  : 		return RR_CONTINUE_PROCESSING;

	mov	eax, 1
	jmp	$LN16@OnReceive
$LN11@OnReceive:

; 139  : 	case ID_CONNECTION_GRAPH_REQUEST:
; 140  : 		OnConnectionGraphRequest(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnConnectionGraphRequest@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnConnectionGraphRequest

; 141  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	$LN16@OnReceive
$LN10@OnReceive:

; 142  : 	case ID_CONNECTION_GRAPH_REPLY:
; 143  : 		OnConnectionGraphReply(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnConnectionGraphReply@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnConnectionGraphReply

; 144  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	$LN16@OnReceive
$LN9@OnReceive:

; 145  : 	case ID_CONNECTION_GRAPH_UPDATE:
; 146  : 		OnConnectionGraphUpdate(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnConnectionGraphUpdate@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnConnectionGraphUpdate

; 147  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	$LN16@OnReceive
$LN8@OnReceive:

; 148  : 	case ID_CONNECTION_GRAPH_NEW_CONNECTION:
; 149  : 		OnNewConnection(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnNewConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; ConnectionGraph::OnNewConnection

; 150  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	$LN16@OnReceive
$LN7@OnReceive:

; 151  : 		// Remove connection lost
; 152  : 	case ID_CONNECTION_GRAPH_CONNECTION_LOST:
; 153  : 	case ID_CONNECTION_GRAPH_DISCONNECTION_NOTIFICATION:
; 154  : 		if (OnConnectionLost(peer, packet, packet->data[0]))

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	push	edx
	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnConnectionLost@ConnectionGraph@@IAE_NPAVRakPeerInterface@@PAUPacket@@E@Z ; ConnectionGraph::OnConnectionLost
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@OnReceive

; 155  : 		{
; 156  : 			if (packet->data[0]==ID_CONNECTION_GRAPH_CONNECTION_LOST)

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 65					; 00000041H
	jne	SHORT $LN5@OnReceive

; 157  : 				packet->data[0]=ID_REMOTE_CONNECTION_LOST;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	BYTE PTR [ecx+eax], 40			; 00000028H

; 158  : 			else

	jmp	SHORT $LN4@OnReceive
$LN5@OnReceive:

; 159  : 				packet->data[0]=ID_REMOTE_DISCONNECTION_NOTIFICATION;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	BYTE PTR [ecx+eax], 39			; 00000027H
$LN4@OnReceive:

; 160  : 			return RR_CONTINUE_PROCESSING; // Return this packet to the user

	mov	eax, 1
	jmp	SHORT $LN16@OnReceive
$LN6@OnReceive:

; 161  : 		}		
; 162  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	SHORT $LN16@OnReceive
$LN3@OnReceive:

; 163  : 		// Local connection lost
; 164  : 	case ID_CONNECTION_LOST:
; 165  : 	case ID_DISCONNECTION_NOTIFICATION:
; 166  : 		{
; 167  : 			unsigned char packetId;
; 168  : 			// Change toe remote connection lost and relay the message
; 169  : 			if (packet->data[0]==ID_CONNECTION_LOST)

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 30					; 0000001eH
	jne	SHORT $LN2@OnReceive

; 170  : 				packetId=ID_CONNECTION_GRAPH_CONNECTION_LOST;

	mov	BYTE PTR _packetId$1[ebp], 65		; 00000041H

; 171  : 			else

	jmp	SHORT $LN1@OnReceive
$LN2@OnReceive:

; 172  : 				packetId=ID_CONNECTION_GRAPH_DISCONNECTION_NOTIFICATION;

	mov	BYTE PTR _packetId$1[ebp], 66		; 00000042H
$LN1@OnReceive:

; 173  : 			HandleDroppedConnection(peer, packet->playerId, packetId);

	movzx	eax, BYTE PTR _packetId$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	add	ecx, 2
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	cx, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], cx
	mov	edx, DWORD PTR _peer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HandleDroppedConnection@ConnectionGraph@@IAEXPAVRakPeerInterface@@UPlayerID@@E@Z ; ConnectionGraph::HandleDroppedConnection
$LN14@OnReceive:

; 174  : 		}
; 175  : 	}
; 176  : 
; 177  : 	return RR_CONTINUE_PROCESSING;

	mov	eax, 1
$LN16@OnReceive:

; 178  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN19@OnReceive:
	DD	$LN12@OnReceive
	DD	$LN13@OnReceive
	DD	$LN3@OnReceive
	DD	$LN11@OnReceive
	DD	$LN10@OnReceive
	DD	$LN9@OnReceive
	DD	$LN8@OnReceive
	DD	$LN7@OnReceive
	DD	$LN14@OnReceive
$LN18@OnReceive:
	DB	0
	DB	8
	DB	8
	DB	1
	DB	8
	DB	2
	DB	8
	DB	2
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	7
?OnReceive@ConnectionGraph@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ENDP ; ConnectionGraph::OnReceive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?Update@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?Update@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z PROC ; ConnectionGraph::Update, COMDAT
; _this$ = ecx

; 118  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 119  : //	RakNetTime time = RakNet::GetTime();
; 120  : 
; 121  : 	// If the time is past the next weight update time, then refresh all pings of all connected participants and send these out if substantially different.
; 122  : //	if (forceBroadcastTime && time > forceBroadcastTime)
; 123  : //	{
; 124  : //		DataStructures::OrderedList<PlayerID,PlayerID> none;
; 125  : 	//	BroadcastGraphUpdate(none, peer);
; 126  : //		forceBroadcastTime=0;
; 127  : //	}
; 128  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::Update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?OnDisconnect@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnDisconnect@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z PROC ; ConnectionGraph::OnDisconnect, COMDAT
; _this$ = ecx

; 112  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 113  : 	graph.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear

; 114  : 	participantList.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Clear@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::Clear

; 115  : //	forceBroadcastTime=0;
; 116  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnDisconnect@ConnectionGraph@@UAEXPAVRakPeerInterface@@@Z ENDP ; ConnectionGraph::OnDisconnect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?UnsubscribeFromGroup@ConnectionGraph@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_groupId$ = 8						; size = 1
?UnsubscribeFromGroup@ConnectionGraph@@QAEXE@Z PROC	; ConnectionGraph::UnsubscribeFromGroup, COMDAT
; _this$ = ecx

; 234  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 235  : 	subscribedGroups.Remove(groupId);

	lea	eax, DWORD PTR _groupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Remove

; 236  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?UnsubscribeFromGroup@ConnectionGraph@@QAEXE@Z ENDP	; ConnectionGraph::UnsubscribeFromGroup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?SubscribeToGroup@ConnectionGraph@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_groupId$ = 8						; size = 1
?SubscribeToGroup@ConnectionGraph@@QAEXE@Z PROC		; ConnectionGraph::SubscribeToGroup, COMDAT
; _this$ = ecx

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 231  : 	subscribedGroups.Insert(groupId, groupId);

	lea	eax, DWORD PTR _groupId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _groupId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert

; 232  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SubscribeToGroup@ConnectionGraph@@QAEXE@Z ENDP		; ConnectionGraph::SubscribeToGroup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?SetGroupId@ConnectionGraph@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_groupId$ = 8						; size = 1
?SetGroupId@ConnectionGraph@@QAEXE@Z PROC		; ConnectionGraph::SetGroupId, COMDAT
; _this$ = ecx

; 211  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 212  : 	myGroupId=groupId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _groupId$[ebp]
	mov	BYTE PTR [eax+77], cl

; 213  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGroupId@ConnectionGraph@@QAEXE@Z ENDP		; ConnectionGraph::SetGroupId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z
_TEXT	SEGMENT
$T2 = -278						; size = 6
_second$ = -72						; size = 7
_first$ = -56						; size = 7
_ignoreList$ = -40					; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_playerId$ = 12						; size = 6
_groupId$ = 20						; size = 1
?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z PROC ; ConnectionGraph::AddNewConnection, COMDAT
; _this$ = ecx

; 215  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 216  : 	if (autoAddNewConnections==false && subscribedGroups.HasData(groupId)==false)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+76]
	test	ecx, ecx
	jne	SHORT $LN1@AddNewConn
	lea	eax, DWORD PTR _groupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@AddNewConn

; 217  : 		return;

	jmp	$LN2@AddNewConn
$LN1@AddNewConn:

; 218  : 
; 219  : 	DataStructures::OrderedList<PlayerID,PlayerID> ignoreList;

	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 220  : 	
; 221  : 	PlayerIdAndGroupId first, second;

	lea	ecx, DWORD PTR _first$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _second$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 222  : 	first.playerId=playerId;

	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _first$[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 223  : 	first.groupId=groupId;

	mov	al, BYTE PTR _groupId$[ebp]
	mov	BYTE PTR _first$[ebp+6], al

; 224  : 	second.playerId=peer->GetExternalID(playerId);

	mov	esi, esp
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _second$[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 225  : 	second.groupId=myGroupId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+77]
	mov	BYTE PTR _second$[ebp+6], cl

; 226  : 
; 227  : 	AddAndRelayConnection(ignoreList, first, second, (unsigned short)peer->GetAveragePing(playerId), peer);

	mov	eax, DWORD PTR _peer$[ebp]
	push	eax
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _second$[ebp]
	push	ecx
	lea	edx, DWORD PTR _first$[ebp]
	push	edx
	lea	eax, DWORD PTR _ignoreList$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddAndRelayConnection@ConnectionGraph@@IAEXAAV?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@ABUPlayerIdAndGroupId@1@1GPAVRakPeerInterface@@@Z ; ConnectionGraph::AddAndRelayConnection

; 228  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _second$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _first$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	call	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
$LN2@AddNewConn:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@AddNewConn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN12@AddNewConn:
	DD	3
	DD	$LN11@AddNewConn
$LN11@AddNewConn:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN7@AddNewConn
	DD	-56					; ffffffc8H
	DD	7
	DD	$LN8@AddNewConn
	DD	-72					; ffffffb8H
	DD	7
	DD	$LN9@AddNewConn
$LN9@AddNewConn:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN8@AddNewConn:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN7@AddNewConn:
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z$0:
	lea	ecx, DWORD PTR _ignoreList$[ebp]
	jmp	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
__unwindfunclet$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z$1:
	lea	ecx, DWORD PTR _first$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z$2:
	lea	ecx, DWORD PTR _second$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddNewConnection@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@E@Z ENDP ; ConnectionGraph::AddNewConnection
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z
_TEXT	SEGMENT
_outBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_playerId$ = 12						; size = 6
?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z PROC ; ConnectionGraph::RequestConnectionGraph, COMDAT
; _this$ = ecx

; 238  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-504]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 240  : 	outBitstream.Write((unsigned char) ID_CONNECTION_GRAPH_REQUEST);

	push	61					; 0000003dH
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 241  : 	stringCompressor->EncodeString(pw,256,&outBitstream);

	push	0
	lea	eax, DWORD PTR _outBitstream$[ebp]
	push	eax
	push	256					; 00000100H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?EncodeString@StringCompressor@@QAEXPBDHPAVBitStream@RakNet@@H@Z ; StringCompressor::EncodeString

; 242  : 	peer->Send(&outBitstream, LOW_PRIORITY, RELIABLE_ORDERED, connectionGraphChannel, playerId, false);

	mov	esi, esp
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	push	31					; 0000001fH
	push	3
	push	3
	lea	eax, DWORD PTR _outBitstream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 243  : 
; 244  : #ifdef _CONNECTION_GRAPH_DEBUG_PRINT
; 245  : 	printf("ID_CONNECTION_GRAPH_REQUEST from %i to %i\n", peer->GetInternalID().port, playerId.port);
; 246  : #endif
; 247  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@RequestCon
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 504				; 000001f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN7@RequestCon:
	DD	1
	DD	$LN6@RequestCon
$LN6@RequestCon:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN4@RequestCon
$LN4@RequestCon:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z$0:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-508]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RequestConnectionGraph@ConnectionGraph@@QAEXPAVRakPeerInterface@@UPlayerID@@@Z ENDP ; ConnectionGraph::RequestConnectionGraph
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?SetAutoAddNewConnections@ConnectionGraph@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_autoAdd$ = 8						; size = 1
?SetAutoAddNewConnections@ConnectionGraph@@QAEX_N@Z PROC ; ConnectionGraph::SetAutoAddNewConnections, COMDAT
; _this$ = ecx

; 104  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 	autoAddNewConnections=autoAdd;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _autoAdd$[ebp]
	mov	BYTE PTR [eax+76], cl

; 106  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAutoAddNewConnections@ConnectionGraph@@QAEX_N@Z ENDP ; ConnectionGraph::SetAutoAddNewConnections
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?GetGraph@ConnectionGraph@@QAEPAV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetGraph@ConnectionGraph@@QAEPAV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@XZ PROC ; ConnectionGraph::GetGraph, COMDAT
; _this$ = ecx

; 100  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 	return &graph;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H

; 102  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGraph@ConnectionGraph@@QAEPAV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@XZ ENDP ; ConnectionGraph::GetGraph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ?SetPassword@ConnectionGraph@@QAEXPBD@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_password$ = 8						; size = 4
?SetPassword@ConnectionGraph@@QAEXPBD@Z PROC		; ConnectionGraph::SetPassword, COMDAT
; _this$ = ecx

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 	if (pw)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@SetPasswor

; 87   : 	{
; 88   : 		delete [] pw;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 89   : 		pw=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN2@SetPasswor:

; 90   : 	}
; 91   : 
; 92   : 	if (password && password[0])

	cmp	DWORD PTR _password$[ebp], 0
	je	SHORT $LN3@SetPasswor
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _password$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN3@SetPasswor

; 93   : 	{
; 94   : 		assert(strlen(password)<256);

	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 256				; 00000100H
	jb	SHORT $LN5@SetPasswor
	mov	ecx, DWORD PTR ?__LINE__Var@?1??SetPassword@ConnectionGraph@@QAEXPBD@Z@4JA
	add	ecx, 9
	push	ecx
	push	OFFSET ??_C@_1FI@HAMPLOBF@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi@
	push	OFFSET ??_C@_1CK@OAIJMFJM@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAp?$AAa?$AAs?$AAs?$AAw?$AAo?$AAr?$AAd?$AA?$CJ?$AA?$DM?$AA2?$AA5?$AA6?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@SetPasswor:

; 95   : 		pw=new char [strlen(password)+1];

	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], edx

; 96   : 		strcpy(pw, password);

	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_strcpy
	add	esp, 8
$LN3@SetPasswor:

; 97   : 	}
; 98   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPassword@ConnectionGraph@@QAEXPBD@Z ENDP		; ConnectionGraph::SetPassword
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z PROC	; ConnectionGraph::PlayerIdAndGroupId::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	7
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z ENDP	; ConnectionGraph::PlayerIdAndGroupId::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z PROC ; ConnectionGraph::PlayerIdAndGroupId::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+6]
	mov	BYTE PTR [eax+6], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z ENDP ; ConnectionGraph::PlayerIdAndGroupId::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z PROC ; ConnectionGraph::PlayerIdAndGroupId::operator<, COMDAT
; _this$ = ecx

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 	return playerId<right.playerId;

	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??MPlayerID@@QBE_NABU0@@Z		; PlayerID::operator<

; 63   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ENDP ; ConnectionGraph::PlayerIdAndGroupId::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??OPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??OPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z PROC ; ConnectionGraph::PlayerIdAndGroupId::operator>, COMDAT
; _this$ = ecx

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   : 	return playerId>right.playerId;

	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??OPlayerID@@QBE_NABU0@@Z		; PlayerID::operator>

; 59   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??OPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ENDP ; ConnectionGraph::PlayerIdAndGroupId::operator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??9PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??9PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z PROC ; ConnectionGraph::PlayerIdAndGroupId::operator!=, COMDAT
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 54   : 	return playerId!=right.playerId;

	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=

; 55   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ENDP ; ConnectionGraph::PlayerIdAndGroupId::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_right$ = 8						; size = 4
??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z PROC ; ConnectionGraph::PlayerIdAndGroupId::operator==, COMDAT
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 	return playerId==right.playerId;

	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8PlayerID@@QBE_NABU0@@Z		; PlayerID::operator==

; 51   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ENDP ; ConnectionGraph::PlayerIdAndGroupId::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@UPlayerID@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerId$ = 8						; size = 6
_groupID$ = 16						; size = 1
??0PlayerIdAndGroupId@ConnectionGraph@@QAE@UPlayerID@@E@Z PROC ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId, COMDAT
; _this$ = ecx

; 44   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 	this->playerId=playerId;

	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 46   : 	this->groupId=groupId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+6]
	mov	BYTE PTR [eax+6], dl

; 47   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0PlayerIdAndGroupId@ConnectionGraph@@QAE@UPlayerID@@E@Z ENDP ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ PROC	; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId, COMDAT
; _this$ = ecx

; 40   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 
; 42   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ENDP	; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ PROC	; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId, COMDAT
; _this$ = ecx

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 37   : 
; 38   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ENDP	; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??1ConnectionGraph@@QAE@XZ
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ConnectionGraph@@QAE@XZ PROC				; ConnectionGraph::~ConnectionGraph, COMDAT
; _this$ = ecx

; 79   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ConnectionGraph@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ConnectionGraph@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 80   : 	if (pw)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@Connection

; 81   : 		delete [] pw;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@Connection:

; 82   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ConnectionGraph@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
__unwindfunclet$??1ConnectionGraph@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
__ehhandler$??1ConnectionGraph@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ConnectionGraph@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ConnectionGraph@@QAE@XZ ENDP				; ConnectionGraph::~ConnectionGraph
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\connectiongraph.cpp
;	COMDAT ??0ConnectionGraph@@QAE@XZ
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0ConnectionGraph@@QAE@XZ PROC				; ConnectionGraph::ConnectionGraph, COMDAT
; _this$ = ecx

; 65   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ConnectionGraph@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluginInterface@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ConnectionGraph@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 66   :     pw=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 67   : 	myGroupId=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+77], 0

; 68   : 	autoAddNewConnections=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+76], 1

; 69   : //	forceBroadcastTime=0;
; 70   : 	DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId, unsigned short, false>::IMPLEMENT_DEFAULT_COMPARISON();

	call	?IMPLEMENT_DEFAULT_COMPARISON@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@SAXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::IMPLEMENT_DEFAULT_COMPARISON

; 71   : 	DataStructures::OrderedList<PlayerID, PlayerID>::IMPLEMENT_DEFAULT_COMPARISON();

	call	?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@SAXXZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::IMPLEMENT_DEFAULT_COMPARISON

; 72   : 	DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId, ConnectionGraph::PlayerIdAndGroupId>::IMPLEMENT_DEFAULT_COMPARISON();

	call	?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::IMPLEMENT_DEFAULT_COMPARISON

; 73   : 	DataStructures::OrderedList<ConnectionGraphGroupID, ConnectionGraphGroupID>::IMPLEMENT_DEFAULT_COMPARISON();

	call	?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::IMPLEMENT_DEFAULT_COMPARISON

; 74   : 
; 75   : 	subscribedGroups.Insert(0,0);

	mov	BYTE PTR $T2[ebp], 0
	mov	BYTE PTR $T3[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	call	?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert

; 76   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ConnectionGraph@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$OrderedList@UPlayerID@@U1@$1??$defaultOrderedListComparison@UPlayerID@@U1@@DataStructures@@YAHABU1@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >::~OrderedList<PlayerID,PlayerID,&DataStructures::defaultOrderedListComparison<PlayerID,PlayerID> >
__unwindfunclet$??0ConnectionGraph@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
__unwindfunclet$??0ConnectionGraph@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 78					; 0000004eH
	jmp	??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
__ehhandler$??0ConnectionGraph@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ConnectionGraph@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ConnectionGraph@@QAE@XZ ENDP				; ConnectionGraph::ConnectionGraph
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluginInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluginInterface@@QAE@XZ PROC				; PluginInterface::PluginInterface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluginInterface@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluginInterface@@QAE@XZ ENDP				; PluginInterface::PluginInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\networktypes.h
;	COMDAT ??4PlayerID@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??4PlayerID@@QAEAAU0@ABU0@@Z PROC			; PlayerID::operator=, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 		binaryAddress = input.binaryAddress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 76   : 		port = input.port;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx

; 77   : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PlayerID@@QAEAAU0@ABU0@@Z ENDP			; PlayerID::operator=
_TEXT	ENDS
END
