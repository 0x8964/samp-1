; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\raknet\LightweightDatabaseServer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0PluginInterface@@QAE@XZ			; PluginInterface::PluginInterface
PUBLIC	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
PUBLIC	?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead
PUBLIC	??A?$List@UColumnDescriptor@Table@DataStructures@@@DataStructures@@QBEAAUColumnDescriptor@Table@1@I@Z ; DataStructures::List<DataStructures::Table::ColumnDescriptor>::operator[]
PUBLIC	??0DatabaseFilter@@QAE@XZ			; DatabaseFilter::DatabaseFilter
PUBLIC	??1DatabaseFilter@@QAE@XZ			; DatabaseFilter::~DatabaseFilter
PUBLIC	??0DatabaseCellUpdate@@QAE@XZ			; DatabaseCellUpdate::DatabaseCellUpdate
PUBLIC	??1DatabaseCellUpdate@@QAE@XZ			; DatabaseCellUpdate::~DatabaseCellUpdate
PUBLIC	??0LightweightDatabaseServer@@QAE@XZ		; LightweightDatabaseServer::LightweightDatabaseServer
PUBLIC	??1LightweightDatabaseServer@@QAE@XZ		; LightweightDatabaseServer::~LightweightDatabaseServer
PUBLIC	?GetTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD@Z ; LightweightDatabaseServer::GetTable
PUBLIC	?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z ; LightweightDatabaseServer::AddTable
PUBLIC	?RemoveTable@LightweightDatabaseServer@@QAE_NPAD@Z ; LightweightDatabaseServer::RemoveTable
PUBLIC	?Clear@LightweightDatabaseServer@@QAEXXZ	; LightweightDatabaseServer::Clear
PUBLIC	?GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z ; LightweightDatabaseServer::GetAndIncrementRowID
PUBLIC	?GetTableRows@LightweightDatabaseServer@@QAEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@PAD@Z ; LightweightDatabaseServer::GetTableRows
PUBLIC	?OnAttach@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z ; LightweightDatabaseServer::OnAttach
PUBLIC	?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z ; LightweightDatabaseServer::Update
PUBLIC	?OnReceive@LightweightDatabaseServer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnReceive
PUBLIC	?OnDisconnect@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z ; LightweightDatabaseServer::OnDisconnect
PUBLIC	?OnCloseConnection@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z ; LightweightDatabaseServer::OnCloseConnection
PUBLIC	??0DatabaseTable@LightweightDatabaseServer@@QAE@XZ ; LightweightDatabaseServer::DatabaseTable::DatabaseTable
PUBLIC	??1DatabaseTable@LightweightDatabaseServer@@QAE@XZ ; LightweightDatabaseServer::DatabaseTable::~DatabaseTable
PUBLIC	??_GDatabaseTable@LightweightDatabaseServer@@QAEPAXI@Z ; LightweightDatabaseServer::DatabaseTable::`scalar deleting destructor'
PUBLIC	?DatabaseTableComp@LightweightDatabaseServer@@SAHABQAD0@Z ; LightweightDatabaseServer::DatabaseTableComp
PUBLIC	?NodeComparisonFunc@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@SAHABQADABUMapNode@12@@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc
PUBLIC	??0?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>
PUBLIC	??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::~Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>
PUBLIC	?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Get
PUBLIC	?SetNew@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXABQADABQAUDatabaseTable@LightweightDatabaseServer@@@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SetNew
PUBLIC	?Has@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Has
PUBLIC	?Delete@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Delete
PUBLIC	??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::operator[]
PUBLIC	?Clear@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Clear
PUBLIC	?Size@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Size
PUBLIC	??0?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>
PUBLIC	??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::~OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>
PUBLIC	?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEIABQADABUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Insert
PUBLIC	??A?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::operator[]
PUBLIC	?RemoveAtIndex@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::RemoveAtIndex
PUBLIC	?Clear@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Clear
PUBLIC	?Size@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Size
PUBLIC	??0?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>
PUBLIC	??1?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::~List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>
PUBLIC	??A?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::operator[]
PUBLIC	?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Insert
PUBLIC	?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Insert
PUBLIC	?RemoveAtIndex@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::RemoveAtIndex
PUBLIC	?Del@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Del
PUBLIC	?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size
PUBLIC	?Clear@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Clear
PUBLIC	?SaveLastSearch@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IAEXABQADI@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SaveLastSearch
PUBLIC	?HasSavedSearchResult@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IBE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::HasSavedSearchResult
PUBLIC	?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnQueryRequest
PUBLIC	?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnUpdateRow
PUBLIC	?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnRemoveRow
PUBLIC	?OnPong@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnPong
PUBLIC	?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z ; LightweightDatabaseServer::DeserializeClientHeader
PUBLIC	?GetRowFromIP@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@PAI@Z ; LightweightDatabaseServer::GetRowFromIP
PUBLIC	?RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z ; LightweightDatabaseServer::RowHasIP
PUBLIC	?AddRow@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@_NI@Z ; LightweightDatabaseServer::AddRow
PUBLIC	?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z ; LightweightDatabaseServer::RemoveRowsFromIP
PUBLIC	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z	; RakNet::BitStream::Read<bool>
PUBLIC	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z		; RakNet::BitStream::Read<unsigned int>
PUBLIC	??0?$List@I@DataStructures@@QAE@XZ		; DataStructures::List<unsigned int>::List<unsigned int>
PUBLIC	??1?$List@I@DataStructures@@QAE@XZ		; DataStructures::List<unsigned int>::~List<unsigned int>
PUBLIC	??A?$List@I@DataStructures@@QBEAAII@Z		; DataStructures::List<unsigned int>::operator[]
PUBLIC	?Insert@?$List@I@DataStructures@@QAEXI@Z	; DataStructures::List<unsigned int>::Insert
PUBLIC	?Size@?$List@I@DataStructures@@QBEIXZ		; DataStructures::List<unsigned int>::Size
PUBLIC	?Clear@?$List@I@DataStructures@@QAEX_N@Z	; DataStructures::List<unsigned int>::Clear
PUBLIC	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z		; RakNet::BitStream::Read<unsigned char>
PUBLIC	??$Write@E@BitStream@RakNet@@QAEXE@Z		; RakNet::BitStream::Write<unsigned char>
PUBLIC	??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode
PUBLIC	??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@PADPAUDatabaseTable@LightweightDatabaseServer@@@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode
PUBLIC	??_7PluginInterface@@6B@			; PluginInterface::`vftable'
PUBLIC	??_7LightweightDatabaseServer@@6B@		; LightweightDatabaseServer::`vftable'
PUBLIC	??_C@_0L@OGGHIFPB@__systemId?$AA@		; `string'
PUBLIC	??_C@_0BH@PHDJLFLA@__lastPingResponseTime?$AA@	; `string'
PUBLIC	??_C@_0BD@NEFEFGEE@__nextPingSendTime?$AA@	; `string'
PUBLIC	?__LINE__Var@?1??GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z@4JA ; `LightweightDatabaseServer::GetAndIncrementRowID'::`2'::__LINE__Var
PUBLIC	??_C@_1GM@FKEIMHDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAl?$AAi?$AAg?$AAh?$AAt?$AAw?$AAe?$AAi@ ; `string'
PUBLIC	??_C@_1BM@OGMPKGIK@?$AAd?$AAa?$AAt?$AAa?$AAb?$AAa?$AAs?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FA@EHBBMKHP@?$AAd?$AAa?$AAt?$AAa?$AAb?$AAa?$AAs?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AA?9?$AA?$DO?$AAa?$AAu?$AAt?$AAo?$AAg?$AAe?$AAn?$AAe?$AAr?$AAa?$AAt?$AAe?$AAR?$AAo?$AAw?$AAI?$AAD@ ; `string'
PUBLIC	?__LINE__Var@?1??OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA ; `LightweightDatabaseServer::OnUpdateRow'::`2'::__LINE__Var
PUBLIC	??_C@_1FG@POBBKKBI@?$AA?$CI?$AAR?$AAo?$AAw?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CJ?$AAu?$AAp?$AAd?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$DN?$AA?$DN?$AAR?$AAU?$AAM?$AA_?$AAA@ ; `string'
PUBLIC	??_C@_1HC@CGHBFIMB@?$AAc?$AAe?$AAl?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAc?$AAo?$AAl?$AAu?$AAm?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?$DN?$AA?$DN?$AAD?$AAa?$AAt?$AAa?$AAS@ ; `string'
PUBLIC	?__LINE__Var@?1??RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z@4JA ; `LightweightDatabaseServer::RowHasIP'::`2'::__LINE__Var
PUBLIC	??_C@_1GA@HJBKPGGJ@?$AAr?$AAo?$AAw?$AA?9?$AA?$DO?$AAc?$AAe?$AAl?$AAl?$AAs?$AA?$FL?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAC?$AAo?$AAl?$AAu?$AAm?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$FN?$AA?9@ ; `string'
PUBLIC	??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@ ; `string'
PUBLIC	??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@ ; `string'
PUBLIC	??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_R4PluginInterface@@6B@			; PluginInterface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluginInterface@@@8			; PluginInterface `RTTI Type Descriptor'
PUBLIC	??_R3PluginInterface@@8				; PluginInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluginInterface@@8				; PluginInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluginInterface@@8		; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4LightweightDatabaseServer@@6B@		; LightweightDatabaseServer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLightweightDatabaseServer@@@8		; LightweightDatabaseServer `RTTI Type Descriptor'
PUBLIC	??_R3LightweightDatabaseServer@@8		; LightweightDatabaseServer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LightweightDatabaseServer@@8		; LightweightDatabaseServer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LightweightDatabaseServer@@8	; LightweightDatabaseServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?ToString@PlayerID@@QBEPAD_N@Z:PROC		; PlayerID::ToString
EXTRN	??8PlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator==
EXTRN	?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnAttach
EXTRN	?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDetach
EXTRN	?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnInitialize
EXTRN	?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::Update
EXTRN	?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z:PROC ; PluginInterface::OnReceive
EXTRN	?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDisconnect
EXTRN	?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z:PROC ; PluginInterface::OnCloseConnection
EXTRN	?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketSend
EXTRN	?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketReceive
EXTRN	?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z:PROC ; PluginInterface::OnInternalPacket
EXTRN	__wassert:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_memmove:PROC
EXTRN	_strncpy:PROC
EXTRN	??0Cell@Table@DataStructures@@QAE@XZ:PROC	; DataStructures::Table::Cell::Cell
EXTRN	??1Cell@Table@DataStructures@@QAE@XZ:PROC	; DataStructures::Table::Cell::~Cell
EXTRN	?Clear@Cell@Table@DataStructures@@QAEXXZ:PROC	; DataStructures::Table::Cell::Clear
EXTRN	?Set@Cell@Table@DataStructures@@QAEXH@Z:PROC	; DataStructures::Table::Cell::Set
EXTRN	?Set@Cell@Table@DataStructures@@QAEXPADH@Z:PROC	; DataStructures::Table::Cell::Set
EXTRN	?Get@Cell@Table@DataStructures@@QAEXPADPAH@Z:PROC ; DataStructures::Table::Cell::Get
EXTRN	?UpdateCell@Row@Table@DataStructures@@QAEXIH@Z:PROC ; DataStructures::Table::Row::UpdateCell
EXTRN	?UpdateCell@Row@Table@DataStructures@@QAEXIPAD@Z:PROC ; DataStructures::Table::Row::UpdateCell
EXTRN	?UpdateCell@Row@Table@DataStructures@@QAEXIHPAD@Z:PROC ; DataStructures::Table::Row::UpdateCell
EXTRN	??0FilterQuery@Table@DataStructures@@QAE@XZ:PROC ; DataStructures::Table::FilterQuery::FilterQuery
EXTRN	??1FilterQuery@Table@DataStructures@@QAE@XZ:PROC ; DataStructures::Table::FilterQuery::~FilterQuery
EXTRN	??0Table@DataStructures@@QAE@XZ:PROC		; DataStructures::Table::Table
EXTRN	??1Table@DataStructures@@QAE@XZ:PROC		; DataStructures::Table::~Table
EXTRN	?AddColumn@Table@DataStructures@@QAEIQADW4ColumnType@12@@Z:PROC ; DataStructures::Table::AddColumn
EXTRN	?ColumnIndex@Table@DataStructures@@QAEIQAD@Z:PROC ; DataStructures::Table::ColumnIndex
EXTRN	?GetColumnType@Table@DataStructures@@QAE?AW4ColumnType@12@I@Z:PROC ; DataStructures::Table::GetColumnType
EXTRN	?AddRow@Table@DataStructures@@QAEPAURow@12@I@Z:PROC ; DataStructures::Table::AddRow
EXTRN	?RemoveRow@Table@DataStructures@@QAEXI@Z:PROC	; DataStructures::Table::RemoveRow
EXTRN	?GetRowByID@Table@DataStructures@@QAEPAURow@12@I@Z:PROC ; DataStructures::Table::GetRowByID
EXTRN	?QueryTable@Table@DataStructures@@QAEXPAIIPAUFilterQuery@12@I0IPAV12@@Z:PROC ; DataStructures::Table::QueryTable
EXTRN	?Clear@Table@DataStructures@@QAEXXZ:PROC	; DataStructures::Table::Clear
EXTRN	?GetColumns@Table@DataStructures@@QAEAAV?$List@UColumnDescriptor@Table@DataStructures@@@2@XZ:PROC ; DataStructures::Table::GetColumns
EXTRN	?GetRows@Table@DataStructures@@QAEAAV?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@2@XZ:PROC ; DataStructures::Table::GetRows
EXTRN	?Deserialize@DatabaseFilter@@QAE_NPAVBitStream@RakNet@@@Z:PROC ; DatabaseFilter::Deserialize
EXTRN	?Deserialize@DatabaseCellUpdate@@QAE_NPAVBitStream@RakNet@@@Z:PROC ; DatabaseCellUpdate::Deserialize
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	??0BitStream@RakNet@@QAE@PAEI_N@Z:PROC		; RakNet::BitStream::BitStream
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?IgnoreBits@BitStream@RakNet@@QAEXH@Z:PROC	; RakNet::BitStream::IgnoreBits
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z:PROC	; RakNet::BitStream::WriteBits
EXTRN	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z:PROC	; RakNet::BitStream::ReadBits
EXTRN	?Instance@StringCompressor@@SAPAV1@XZ:PROC	; StringCompressor::Instance
EXTRN	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z:PROC ; StringCompressor::DecodeString
EXTRN	?SerializeTable@TableSerializer@@SAXPAVTable@DataStructures@@PAVBitStream@RakNet@@@Z:PROC ; TableSerializer::SerializeTable
EXTRN	?GetTime@RakNet@@YAIXZ:PROC			; RakNet::GetTime
EXTRN	?randomMT@@YAIXZ:PROC				; randomMT
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@LightweightDatabaseServer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LightweightDatabaseServer@@8 DD FLAT:??_R0?AVLightweightDatabaseServer@@@8 ; LightweightDatabaseServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LightweightDatabaseServer@@8
rdata$r	ENDS
;	COMDAT ??_R2LightweightDatabaseServer@@8
rdata$r	SEGMENT
??_R2LightweightDatabaseServer@@8 DD FLAT:??_R1A@?0A@EA@LightweightDatabaseServer@@8 ; LightweightDatabaseServer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R3LightweightDatabaseServer@@8
rdata$r	SEGMENT
??_R3LightweightDatabaseServer@@8 DD 00H		; LightweightDatabaseServer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2LightweightDatabaseServer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLightweightDatabaseServer@@@8
data$r	SEGMENT
??_R0?AVLightweightDatabaseServer@@@8 DD FLAT:??_7type_info@@6B@ ; LightweightDatabaseServer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLightweightDatabaseServer@@', 00H
data$r	ENDS
;	COMDAT ??_R4LightweightDatabaseServer@@6B@
rdata$r	SEGMENT
??_R4LightweightDatabaseServer@@6B@ DD 00H		; LightweightDatabaseServer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLightweightDatabaseServer@@@8
	DD	FLAT:??_R3LightweightDatabaseServer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluginInterface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluginInterface@@8 DD FLAT:??_R0?AVPluginInterface@@@8 ; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R2PluginInterface@@8
rdata$r	SEGMENT
??_R2PluginInterface@@8 DD FLAT:??_R1A@?0A@EA@PluginInterface@@8 ; PluginInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PluginInterface@@8
rdata$r	SEGMENT
??_R3PluginInterface@@8 DD 00H				; PluginInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluginInterface@@@8
data$r	SEGMENT
??_R0?AVPluginInterface@@@8 DD FLAT:??_7type_info@@6B@	; PluginInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluginInterface@@', 00H
data$r	ENDS
;	COMDAT ??_R4PluginInterface@@6B@
rdata$r	SEGMENT
??_R4PluginInterface@@6B@ DD 00H			; PluginInterface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluginInterface@@@8
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, '>', 00H, '=', 00H, 'n', 00H, 'u', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, '=', 00H, '='
	DB	00H, 'f', 00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
CONST	SEGMENT
??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
CONST	SEGMENT
??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@HJBKPGGJ@?$AAr?$AAo?$AAw?$AA?9?$AA?$DO?$AAc?$AAe?$AAl?$AAl?$AAs?$AA?$FL?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAC?$AAo?$AAl?$AAu?$AAm?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$FN?$AA?9@
CONST	SEGMENT
??_C@_1GA@HJBKPGGJ@?$AAr?$AAo?$AAw?$AA?9?$AA?$DO?$AAc?$AAe?$AAl?$AAl?$AAs?$AA?$FL?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAC?$AAo?$AAl?$AAu?$AAm?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$FN?$AA?9@ DB 'r'
	DB	00H, 'o', 00H, 'w', 00H, '-', 00H, '>', 00H, 'c', 00H, 'e', 00H
	DB	'l', 00H, 'l', 00H, 's', 00H, '[', 00H, 's', 00H, 'y', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 'I', 00H, 'd', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'n', 00H, 'I', 00H, 'n'
	DB	00H, 'd', 00H, 'e', 00H, 'x', 00H, ']', 00H, '-', 00H, '>', 00H
	DB	'i', 00H, 's', 00H, 'E', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y'
	DB	00H, '=', 00H, '=', 00H, 'f', 00H, 'a', 00H, 'l', 00H, 's', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z@4JA DD 0220H ; `LightweightDatabaseServer::RowHasIP'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1HC@CGHBFIMB@?$AAc?$AAe?$AAl?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAc?$AAo?$AAl?$AAu?$AAm?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?$DN?$AA?$DN?$AAD?$AAa?$AAt?$AAa?$AAS@
CONST	SEGMENT
??_C@_1HC@CGHBFIMB@?$AAc?$AAe?$AAl?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAc?$AAo?$AAl?$AAu?$AAm?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?$DN?$AA?$DN?$AAD?$AAa?$AAt?$AAa?$AAS@ DB 'c'
	DB	00H, 'e', 00H, 'l', 00H, 'l', 00H, 'U', 00H, 'p', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 's', 00H, '[', 00H, 'i', 00H, ']'
	DB	00H, '.', 00H, 'c', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H
	DB	'n', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '=', 00H, '='
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'S', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e'
	DB	00H, 's', 00H, ':', 00H, ':', 00H, 'T', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, ':', 00H, ':', 00H, 'S', 00H, 'T', 00H, 'R'
	DB	00H, 'I', 00H, 'N', 00H, 'G', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@POBBKKBI@?$AA?$CI?$AAR?$AAo?$AAw?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CJ?$AAu?$AAp?$AAd?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$DN?$AA?$DN?$AAR?$AAU?$AAM?$AA_?$AAA@
CONST	SEGMENT
??_C@_1FG@POBBKKBI@?$AA?$CI?$AAR?$AAo?$AAw?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CJ?$AAu?$AAp?$AAd?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$DN?$AA?$DN?$AAR?$AAU?$AAM?$AA_?$AAA@ DB '('
	DB	00H, 'R', 00H, 'o', 00H, 'w', 00H, 'U', 00H, 'p', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, ')', 00H, 'u', 00H, 'p', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '=', 00H, '='
	DB	00H, 'R', 00H, 'U', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'D', 00H
	DB	'D', 00H, '_', 00H, 'N', 00H, 'E', 00H, 'W', 00H, '_', 00H, 'R'
	DB	00H, 'O', 00H, 'W', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA DD 014bH ; `LightweightDatabaseServer::OnUpdateRow'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FA@EHBBMKHP@?$AAd?$AAa?$AAt?$AAa?$AAb?$AAa?$AAs?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AA?9?$AA?$DO?$AAa?$AAu?$AAt?$AAo?$AAg?$AAe?$AAn?$AAe?$AAr?$AAa?$AAt?$AAe?$AAR?$AAo?$AAw?$AAI?$AAD@
CONST	SEGMENT
??_C@_1FA@EHBBMKHP@?$AAd?$AAa?$AAt?$AAa?$AAb?$AAa?$AAs?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AA?9?$AA?$DO?$AAa?$AAu?$AAt?$AAo?$AAg?$AAe?$AAn?$AAe?$AAr?$AAa?$AAt?$AAe?$AAR?$AAo?$AAw?$AAI?$AAD@ DB 'd'
	DB	00H, 'a', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'a', 00H, 's', 00H
	DB	'e', 00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, '-'
	DB	00H, '>', 00H, 'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'g', 00H
	DB	'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'R', 00H, 'o', 00H, 'w', 00H, 'I', 00H, 'D', 00H, 's', 00H
	DB	'=', 00H, '=', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@OGMPKGIK@?$AAd?$AAa?$AAt?$AAa?$AAb?$AAa?$AAs?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@OGMPKGIK@?$AAd?$AAa?$AAt?$AAa?$AAb?$AAa?$AAs?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'd'
	DB	00H, 'a', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'a', 00H, 's', 00H
	DB	'e', 00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FKEIMHDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAl?$AAi?$AAg?$AAh?$AAt?$AAw?$AAe?$AAi@
CONST	SEGMENT
??_C@_1GM@FKEIMHDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAl?$AAi?$AAg?$AAh?$AAt?$AAw?$AAe?$AAi@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, 'w', 00H, 'e', 00H, 'i', 00H, 'g', 00H
	DB	'h', 00H, 't', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'b'
	DB	00H, 'a', 00H, 's', 00H, 'e', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	'v', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z@4JA DD 0a1H ; `LightweightDatabaseServer::GetAndIncrementRowID'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BD@NEFEFGEE@__nextPingSendTime?$AA@
CONST	SEGMENT
??_C@_0BD@NEFEFGEE@__nextPingSendTime?$AA@ DB '__nextPingSendTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PHDJLFLA@__lastPingResponseTime?$AA@
CONST	SEGMENT
??_C@_0BH@PHDJLFLA@__lastPingResponseTime?$AA@ DB '__lastPingResponseTime'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OGGHIFPB@__systemId?$AA@
CONST	SEGMENT
??_C@_0L@OGGHIFPB@__systemId?$AA@ DB '__systemId', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7LightweightDatabaseServer@@6B@
CONST	SEGMENT
??_7LightweightDatabaseServer@@6B@ DD FLAT:??_R4LightweightDatabaseServer@@6B@ ; LightweightDatabaseServer::`vftable'
	DD	FLAT:?OnAttach@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@LightweightDatabaseServer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT ??_7PluginInterface@@6B@
CONST	SEGMENT
??_7PluginInterface@@6B@ DD FLAT:??_R4PluginInterface@@6B@ ; PluginInterface::`vftable'
	DD	FLAT:?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z$0
__ehfuncinfo$?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z$0
__ehfuncinfo$?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0
__ehfuncinfo$?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1
__ehfuncinfo$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z$0
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z$0
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z$0
__ehfuncinfo$?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z$0
__ehfuncinfo$?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1LightweightDatabaseServer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1LightweightDatabaseServer@@QAE@XZ$0
__ehfuncinfo$??1LightweightDatabaseServer@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1LightweightDatabaseServer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@PADPAUDatabaseTable@LightweightDatabaseServer@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__key$ = 8						; size = 4
__data$ = 12						; size = 4
??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@PADPAUDatabaseTable@LightweightDatabaseServer@@@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode, COMDAT
; _this$ = ecx

; 49   : 			MapNode(key_type _key, data_type _data) : mapNodeKey(_key), mapNodeData(_data) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __key$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __data$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@PADPAUDatabaseTable@LightweightDatabaseServer@@@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode, COMDAT
; _this$ = ecx

; 48   : 			MapNode() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@E@BitStream@RakNet@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 1
??$Write@E@BitStream@RakNet@@QAEXE@Z PROC		; RakNet::BitStream::Write<unsigned char>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@E@BitStream@RakNet@@QAEXE@Z ENDP		; RakNet::BitStream::Write<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@E@BitStream@RakNet@@QAE_NAAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z PROC		; RakNet::BitStream::Read<unsigned char>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z ENDP		; RakNet::BitStream::Read<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@I@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@I@DataStructures@@QAEX_N@Z PROC		; DataStructures::List<unsigned int>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@I@DataStructures@@QAEX_N@Z ENDP		; DataStructures::List<unsigned int>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@I@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@I@DataStructures@@QBEIXZ PROC		; DataStructures::List<unsigned int>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@I@DataStructures@@QBEIXZ ENDP		; DataStructures::List<unsigned int>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@I@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_new_array$3 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 4
?Insert@?$List@I@DataStructures@@QAEXI@Z PROC		; DataStructures::List<unsigned int>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _new_array$3[ebp], eax

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$3[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Insert@?$List@I@DataStructures@@QAEXI@Z ENDP		; DataStructures::List<unsigned int>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@I@DataStructures@@QBEAAII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@I@DataStructures@@QBEAAII@Z PROC		; DataStructures::List<unsigned int>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@I@DataStructures@@QBEAAII@Z ENDP		; DataStructures::List<unsigned int>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@I@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@I@DataStructures@@QAE@XZ PROC			; DataStructures::List<unsigned int>::~List<unsigned int>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@I@DataStructures@@QAE@XZ ENDP			; DataStructures::List<unsigned int>::~List<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@I@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@I@DataStructures@@QAE@XZ PROC			; DataStructures::List<unsigned int>::List<unsigned int>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@I@DataStructures@@QAE@XZ ENDP			; DataStructures::List<unsigned int>::List<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@I@BitStream@RakNet@@QAE_NAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z PROC		; RakNet::BitStream::Read<unsigned int>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z ENDP		; RakNet::BitStream::Read<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z PROC		; RakNet::BitStream::Read<bool>, COMDAT
; _this$ = ecx

; 1019 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1020 : 		if ( readOffset + 1 > numberOfBitsUsed )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx]
	jle	SHORT $LN3@Read

; 1021 : 			return false;

	xor	al, al
	jmp	SHORT $LN4@Read
$LN3@Read:

; 1022 : 
; 1023 : 		if ( data[ readOffset >> 3 ] & ( 0x80 >> ( readOffset++ % 8 ) ) )   // Is it faster to just write it out here?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sar	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movzx	edx, BYTE PTR [eax+ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -2147483641			; 80000007H
	jns	SHORT $LN6@Read
	dec	ecx
	or	ecx, -8					; fffffff8H
	inc	ecx
$LN6@Read:
	mov	eax, 128				; 00000080H
	sar	eax, cl
	and	edx, eax
	mov	DWORD PTR tv82[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
	cmp	DWORD PTR tv82[ebp], 0
	je	SHORT $LN2@Read

; 1024 : 			var = true;

	mov	eax, DWORD PTR _var$[ebp]
	mov	BYTE PTR [eax], 1

; 1025 : 		else

	jmp	SHORT $LN1@Read
$LN2@Read:

; 1026 : 			var = false;

	mov	eax, DWORD PTR _var$[ebp]
	mov	BYTE PTR [eax], 0
$LN1@Read:

; 1027 : 
; 1028 : 		return true;

	mov	al, 1
$LN4@Read:

; 1029 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ENDP		; RakNet::BitStream::Read<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z
_TEXT	SEGMENT
_rows$2 = -100						; size = 4
_j$ = -88						; size = 4
_i$ = -76						; size = 4
_cur$ = -64						; size = 4
_removeList$ = -52					; size = 12
_databaseTable$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_playerId$ = 8						; size = 6
?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z PROC ; LightweightDatabaseServer::RemoveRowsFromIP, COMDAT
; _this$ = ecx

; 584  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 585  : 	// Remove rows for tables that do so on a system disconnect
; 586  : 	DatabaseTable *databaseTable;
; 587  : 	DataStructures::List<unsigned> removeList;

	lea	ecx, DWORD PTR _removeList$[ebp]
	call	??0?$List@I@DataStructures@@QAE@XZ	; DataStructures::List<unsigned int>::List<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 588  : 	DataStructures::Page<unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER> *cur;
; 589  : 	unsigned i,j;
; 590  : 	for (i=0; i < database.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@RemoveRows
$LN12@RemoveRows:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN13@RemoveRows:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN11@RemoveRows

; 591  : 	{
; 592  : 		databaseTable=database[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _databaseTable$[ebp], ecx

; 593  : 		if (databaseTable->removeRowOnDisconnect)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+102]
	test	ecx, ecx
	je	$LN10@RemoveRows

; 594  : 		{
; 595  : 			DataStructures::BPlusTree<unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER> &rows = databaseTable->table.GetRows();

	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetRows@Table@DataStructures@@QAEAAV?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::Table::GetRows
	mov	DWORD PTR _rows$2[ebp], eax

; 596  : 			cur = rows.GetListHead();

	mov	ecx, DWORD PTR _rows$2[ebp]
	call	?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead
	mov	DWORD PTR _cur$[ebp], eax
$LN9@RemoveRows:

; 597  : 			while (cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN8@RemoveRows

; 598  : 			{
; 599  : 				// Mark dropped entities
; 600  : 				for (j=0; j < (unsigned)cur->size; j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN7@RemoveRows
$LN6@RemoveRows:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN7@RemoveRows:
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR [eax+1]
	jae	SHORT $LN5@RemoveRows

; 601  : 				{
; 602  : 					if (RowHasIP(cur->data[j], playerId, databaseTable->systemIdColumnIndex))

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [edx], eax
	mov	cx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [edx+4], cx
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+69]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z ; LightweightDatabaseServer::RowHasIP
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@RemoveRows

; 603  : 						removeList.Insert(cur->keys[j]);

	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+5]
	push	edx
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	?Insert@?$List@I@DataStructures@@QAEXI@Z ; DataStructures::List<unsigned int>::Insert
$LN4@RemoveRows:

; 604  : 				}

	jmp	SHORT $LN6@RemoveRows
$LN5@RemoveRows:

; 605  : 				cur=cur->next;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+133]
	mov	DWORD PTR _cur$[ebp], ecx

; 606  : 			}

	jmp	SHORT $LN9@RemoveRows
$LN8@RemoveRows:

; 607  : 
; 608  : 			for (j=0; j < removeList.Size(); j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN3@RemoveRows
$LN2@RemoveRows:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN3@RemoveRows:
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	?Size@?$List@I@DataStructures@@QBEIXZ	; DataStructures::List<unsigned int>::Size
	cmp	DWORD PTR _j$[ebp], eax
	jae	SHORT $LN1@RemoveRows

; 609  : 				databaseTable->table.RemoveRow(removeList[i]);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	??A?$List@I@DataStructures@@QBEAAII@Z	; DataStructures::List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?RemoveRow@Table@DataStructures@@QAEXI@Z ; DataStructures::Table::RemoveRow
	jmp	SHORT $LN2@RemoveRows
$LN1@RemoveRows:

; 610  : 			removeList.Clear(true);

	push	1
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	?Clear@?$List@I@DataStructures@@QAEX_N@Z ; DataStructures::List<unsigned int>::Clear
$LN10@RemoveRows:

; 611  : 		}
; 612  : 	}	

	jmp	$LN12@RemoveRows
$LN11@RemoveRows:

; 613  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	??1?$List@I@DataStructures@@QAE@XZ	; DataStructures::List<unsigned int>::~List<unsigned int>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@RemoveRows
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN20@RemoveRows:
	DD	1
	DD	$LN19@RemoveRows
$LN19@RemoveRows:
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN17@RemoveRows
$LN17@RemoveRows:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z$0:
	lea	ecx, DWORD PTR _removeList$[ebp]
	jmp	??1?$List@I@DataStructures@@QAE@XZ	; DataStructures::List<unsigned int>::~List<unsigned int>
__ehhandler$?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-300]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z ENDP ; LightweightDatabaseServer::RemoveRowsFromIP
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?AddRow@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@_NI@Z
_TEXT	SEGMENT
_time$1 = -32						; size = 4
_row$ = -20						; size = 4
_this$ = -8						; size = 4
_databaseTable$ = 8					; size = 4
_playerId$ = 12						; size = 6
_hasRowId$ = 20						; size = 1
_rowId$ = 24						; size = 4
?AddRow@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@_NI@Z PROC ; LightweightDatabaseServer::AddRow, COMDAT
; _this$ = ecx

; 551  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 552  : 	DataStructures::Table::Row *row;
; 553  : 	if (databaseTable->oneRowPerSystemId && GetRowFromIP(databaseTable, playerId, 0))

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+99]
	test	ecx, ecx
	je	SHORT $LN8@AddRow
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _databaseTable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetRowFromIP@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@PAI@Z ; LightweightDatabaseServer::GetRowFromIP
	test	eax, eax
	je	SHORT $LN8@AddRow

; 554  : 		return 0; // This system already has a row.

	xor	eax, eax
	jmp	$LN9@AddRow
$LN8@AddRow:

; 555  : 
; 556  : 	if (databaseTable->autogenerateRowIDs==false)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+103]
	test	ecx, ecx
	jne	SHORT $LN7@AddRow

; 557  : 	{
; 558  : 		// For a new row:
; 559  : 		// rowID required but not specified OR
; 560  : 		// rowId specified but already in the table
; 561  : 		// Then exit
; 562  : 		if (hasRowId==false || databaseTable->table.GetRowByID(rowId))

	movzx	eax, BYTE PTR _hasRowId$[ebp]
	test	eax, eax
	je	SHORT $LN5@AddRow
	mov	eax, DWORD PTR _rowId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetRowByID@Table@DataStructures@@QAEPAURow@12@I@Z ; DataStructures::Table::GetRowByID
	test	eax, eax
	je	SHORT $LN6@AddRow
$LN5@AddRow:

; 563  : 			return 0; 

	xor	eax, eax
	jmp	$LN9@AddRow
$LN6@AddRow:

; 564  : 	}
; 565  : 	else

	jmp	SHORT $LN4@AddRow
$LN7@AddRow:

; 566  : 		rowId=databaseTable->nextRowId++;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	DWORD PTR _rowId$[ebp], ecx
	mov	edx, DWORD PTR _databaseTable$[ebp]
	mov	eax, DWORD PTR [edx+136]
	add	eax, 1
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN4@AddRow:

; 567  : 
; 568  : 	// Add new row
; 569  : 	row = databaseTable->table.AddRow(rowId);

	mov	eax, DWORD PTR _rowId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?AddRow@Table@DataStructures@@QAEPAURow@12@I@Z ; DataStructures::Table::AddRow
	mov	DWORD PTR _row$[ebp], eax

; 570  : 
; 571  : 	// Set IP and last update time
; 572  : 	if ( databaseTable->oneRowPerSystemId || databaseTable->onlyUpdateOwnRows || databaseTable->removeRowOnPingFailure || databaseTable->removeRowOnDisconnect)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+99]
	test	ecx, ecx
	jne	SHORT $LN2@AddRow
	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	jne	SHORT $LN2@AddRow
	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+101]
	test	ecx, ecx
	jne	SHORT $LN2@AddRow
	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+102]
	test	ecx, ecx
	je	SHORT $LN3@AddRow
$LN2@AddRow:

; 573  : 		row->cells[databaseTable->systemIdColumnIndex]->Set((char*)&playerId, sizeof(PlayerID));

	push	6
	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	push	edx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Set@Cell@Table@DataStructures@@QAEXPADH@Z ; DataStructures::Table::Cell::Set
$LN3@AddRow:

; 574  : 	if (databaseTable->removeRowOnPingFailure)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+101]
	test	ecx, ecx
	je	SHORT $LN1@AddRow

; 575  : 	{
; 576  : 		RakNetTime time = RakNet::GetTime();

	call	?GetTime@RakNet@@YAIXZ			; RakNet::GetTime
	mov	DWORD PTR _time$1[ebp], eax

; 577  : 		row->cells[databaseTable->lastPingResponseColumnIndex]->Set(time);

	mov	eax, DWORD PTR _time$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	push	edx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Set@Cell@Table@DataStructures@@QAEXH@Z	; DataStructures::Table::Cell::Set

; 578  : 		row->cells[databaseTable->nextPingSendColumnIndex]->Set(time+SEND_PING_INTERVAL);

	mov	eax, DWORD PTR _time$1[ebp]
	add	eax, 15000				; 00003a98H
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	push	edx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Set@Cell@Table@DataStructures@@QAEXH@Z	; DataStructures::Table::Cell::Set
$LN1@AddRow:

; 579  : 	}
; 580  : 
; 581  : 	return row;

	mov	eax, DWORD PTR _row$[ebp]
$LN9@AddRow:

; 582  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddRow@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@_NI@Z ENDP ; LightweightDatabaseServer::AddRow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_row$ = 8						; size = 4
_playerId$ = 12						; size = 6
_systemIdColumnIndex$ = 20				; size = 4
?RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z PROC ; LightweightDatabaseServer::RowHasIP, COMDAT
; _this$ = ecx

; 544  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 545  : 	RakAssert(row->cells[systemIdColumnIndex]->isEmpty==false);

	mov	eax, DWORD PTR _systemIdColumnIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN4@RowHasIP
	mov	eax, DWORD PTR ?__LINE__Var@?1??RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1GM@FKEIMHDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAl?$AAi?$AAg?$AAh?$AAt?$AAw?$AAe?$AAi@
	push	OFFSET ??_C@_1GA@HJBKPGGJ@?$AAr?$AAo?$AAw?$AA?9?$AA?$DO?$AAc?$AAe?$AAl?$AAl?$AAs?$AA?$FL?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAC?$AAo?$AAl?$AAu?$AAm?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$FN?$AA?9@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RowHasIP:

; 546  : 	if (memcmp(row->cells[systemIdColumnIndex]->c, &playerId, sizeof(PlayerID))==0)

	push	6
	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _systemIdColumnIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+5]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@RowHasIP

; 547  : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@RowHasIP
$LN1@RowHasIP:

; 548  : 	return false;

	xor	al, al
$LN2@RowHasIP:

; 549  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z ENDP ; LightweightDatabaseServer::RowHasIP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?GetRowFromIP@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@PAI@Z
_TEXT	SEGMENT
_i$ = -56						; size = 4
_row$ = -44						; size = 4
_cur$ = -32						; size = 4
_rows$ = -20						; size = 4
_this$ = -8						; size = 4
_databaseTable$ = 8					; size = 4
_playerId$ = 12						; size = 6
_rowKey$ = 20						; size = 4
?GetRowFromIP@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@PAI@Z PROC ; LightweightDatabaseServer::GetRowFromIP, COMDAT
; _this$ = ecx

; 522  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 523  : 	DataStructures::BPlusTree<unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER> &rows = databaseTable->table.GetRows();

	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetRows@Table@DataStructures@@QAEAAV?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::Table::GetRows
	mov	DWORD PTR _rows$[ebp], eax

; 524  : 	DataStructures::Page<unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER> *cur = rows.GetListHead();

	mov	ecx, DWORD PTR _rows$[ebp]
	call	?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead
	mov	DWORD PTR _cur$[ebp], eax
$LN7@GetRowFrom:

; 525  : 	DataStructures::Table::Row* row;
; 526  : 	unsigned i;
; 527  : 	while (cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN6@GetRowFrom

; 528  : 	{
; 529  : 		for (i=0; i < (unsigned)cur->size; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@GetRowFrom
$LN4@GetRowFrom:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@GetRowFrom:
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1]
	jae	SHORT $LN3@GetRowFrom

; 530  : 		{
; 531  : 			row = cur->data[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+69]
	mov	DWORD PTR _row$[ebp], edx

; 532  : 			if (RowHasIP(row, playerId, databaseTable->systemIdColumnIndex ))

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [edx], eax
	mov	cx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [edx+4], cx
	mov	edx, DWORD PTR _row$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z ; LightweightDatabaseServer::RowHasIP
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@GetRowFrom

; 533  : 			{
; 534  : 				if (rowKey)

	cmp	DWORD PTR _rowKey$[ebp], 0
	je	SHORT $LN1@GetRowFrom

; 535  : 					*rowKey=cur->keys[i];

	mov	eax, DWORD PTR _rowKey$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+5]
	mov	DWORD PTR [eax], ecx
$LN1@GetRowFrom:

; 536  : 				return row;

	mov	eax, DWORD PTR _row$[ebp]
	jmp	SHORT $LN8@GetRowFrom
$LN2@GetRowFrom:

; 537  : 			}
; 538  : 		}

	jmp	SHORT $LN4@GetRowFrom
$LN3@GetRowFrom:

; 539  : 		cur=cur->next;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+133]
	mov	DWORD PTR _cur$[ebp], ecx

; 540  : 	}

	jmp	$LN7@GetRowFrom
$LN6@GetRowFrom:

; 541  : 	return 0;

	xor	eax, eax
$LN8@GetRowFrom:

; 542  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetRowFromIP@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@PAI@Z ENDP ; LightweightDatabaseServer::GetRowFromIP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z
_TEXT	SEGMENT
$T2 = -688						; size = 4
$T3 = -676						; size = 4
$T4 = -664						; size = 4
$T5 = -652						; size = 4
$T6 = -640						; size = 4
$T7 = -628						; size = 4
_dbPass$ = -424						; size = 4
_databaseTable$ = -412					; size = 4
_tableName$ = -400					; size = 32
_password$ = -360					; size = 32
_hasPassword$ = -317					; size = 1
_outBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_inBitstream$ = 8					; size = 4
_peer$ = 12						; size = 4
_packet$ = 16						; size = 4
_mode$ = 20						; size = 4
?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z PROC ; LightweightDatabaseServer::DeserializeClientHeader, COMDAT
; _this$ = ecx

; 473  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 680				; 000002a8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-692]
	mov	ecx, 170				; 000000aaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 474  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 475  : 	bool hasPassword;
; 476  : 	char password[_SIMPLE_DATABASE_PASSWORD_LENGTH];
; 477  : 	inBitstream->IgnoreBits(8);

	push	8
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 478  : 	char tableName[_SIMPLE_DATABASE_TABLE_NAME_LENGTH];
; 479  : 	stringCompressor->DecodeString(tableName, _SIMPLE_DATABASE_TABLE_NAME_LENGTH, inBitstream);

	push	0
	mov	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	push	32					; 00000020H
	lea	ecx, DWORD PTR _tableName$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z ; StringCompressor::DecodeString

; 480  : 	DatabaseTable *databaseTable = database.Get(tableName);

	lea	eax, DWORD PTR _tableName$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Get
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _databaseTable$[ebp], edx

; 481  : 	if (databaseTable==0)

	cmp	DWORD PTR _databaseTable$[ebp], 0
	jne	SHORT $LN10@Deserializ

; 482  : 	{
; 483  : 		outBitstream.Write((unsigned char)ID_DATABASE_UNKNOWN_TABLE);

	push	89					; 00000059H
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 484  : 		peer->Send(&outBitstream, HIGH_PRIORITY, RELIABLE_ORDERED, 0, packet->playerId, false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	push	0
	push	3
	push	1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 485  : 		return 0;

	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN11@Deserializ
$LN10@Deserializ:

; 486  : 	}
; 487  : 	const char *dbPass;
; 488  : 	if (mode==0)

	cmp	DWORD PTR _mode$[ebp], 0
	jne	SHORT $LN9@Deserializ

; 489  : 		dbPass=databaseTable->queryPassword;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	add	eax, 35					; 00000023H
	mov	DWORD PTR _dbPass$[ebp], eax
	jmp	SHORT $LN8@Deserializ
$LN9@Deserializ:

; 490  : 	else if (mode==1)

	cmp	DWORD PTR _mode$[ebp], 1
	jne	SHORT $LN7@Deserializ

; 491  : 		dbPass=databaseTable->updatePassword;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	add	eax, 3
	mov	DWORD PTR _dbPass$[ebp], eax

; 492  : 	else

	jmp	SHORT $LN8@Deserializ
$LN7@Deserializ:

; 493  : 		dbPass=databaseTable->removePassword;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	add	eax, 67					; 00000043H
	mov	DWORD PTR _dbPass$[ebp], eax
$LN8@Deserializ:

; 494  : 
; 495  : 	inBitstream->Read(hasPassword);

	lea	eax, DWORD PTR _hasPassword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ; RakNet::BitStream::Read<bool>

; 496  : 	if (hasPassword)

	movzx	eax, BYTE PTR _hasPassword$[ebp]
	test	eax, eax
	je	$LN5@Deserializ

; 497  : 	{
; 498  : 		if (stringCompressor->DecodeString(password, _SIMPLE_DATABASE_PASSWORD_LENGTH, inBitstream)==false)

	push	0
	mov	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	push	32					; 00000020H
	lea	ecx, DWORD PTR _password$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z ; StringCompressor::DecodeString
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@Deserializ

; 499  : 			return 0;

	mov	DWORD PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN11@Deserializ
$LN4@Deserializ:

; 500  : 		if (databaseTable->queryPassword[0] && strcmp(password, dbPass)!=0)

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _databaseTable$[ebp]
	movsx	eax, BYTE PTR [edx+ecx+35]
	test	eax, eax
	je	$LN3@Deserializ
	mov	eax, DWORD PTR _dbPass$[ebp]
	push	eax
	lea	ecx, DWORD PTR _password$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN3@Deserializ

; 501  : 		{
; 502  : 			outBitstream.Write((unsigned char)ID_DATABASE_INCORRECT_PASSWORD);

	push	90					; 0000005aH
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 503  : 			peer->Send(&outBitstream, HIGH_PRIORITY, RELIABLE_ORDERED, 0, packet->playerId, false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	push	0
	push	3
	push	1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 504  : 			// Short ban to prevent brute force password attempts
; 505  : 			peer->AddToBanList(packet->playerId.ToString(false), 1000);

	mov	esi, esp
	push	1000					; 000003e8H
	push	0
	mov	ecx, DWORD PTR _packet$[ebp]
	add	ecx, 2
	call	?ToString@PlayerID@@QBEPAD_N@Z		; PlayerID::ToString
	push	eax
	mov	eax, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 506  : 			// Don't send a disconnection notification so it closes the connection right away.
; 507  : 			peer->CloseConnection(packet->playerId, false, 0);			

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 508  : 			return 0;

	mov	DWORD PTR $T5[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN11@Deserializ
$LN3@Deserializ:

; 509  : 		}
; 510  : 	}

	jmp	$LN2@Deserializ
$LN5@Deserializ:

; 511  : 	else if (dbPass[0])

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _dbPass$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN2@Deserializ

; 512  : 	{
; 513  : 		outBitstream.Write((unsigned char)ID_DATABASE_INCORRECT_PASSWORD);

	push	90					; 0000005aH
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 514  : 		peer->Send(&outBitstream, HIGH_PRIORITY, RELIABLE_ORDERED, 0, packet->playerId, false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	push	0
	push	3
	push	1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 515  : 		return 0;

	mov	DWORD PTR $T6[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T6[ebp]
	jmp	SHORT $LN11@Deserializ
$LN2@Deserializ:

; 516  : 	}
; 517  : 
; 518  : 	return databaseTable;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T7[ebp]
$LN11@Deserializ:

; 519  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@Deserializ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 692				; 000002b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN20@Deserializ:
	DD	4
	DD	$LN19@Deserializ
$LN19@Deserializ:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN14@Deserializ
	DD	-317					; fffffec3H
	DD	1
	DD	$LN15@Deserializ
	DD	-360					; fffffe98H
	DD	32					; 00000020H
	DD	$LN16@Deserializ
	DD	-400					; fffffe70H
	DD	32					; 00000020H
	DD	$LN17@Deserializ
$LN17@Deserializ:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN16@Deserializ:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN15@Deserializ:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN14@Deserializ:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z$0:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-696]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z ENDP ; LightweightDatabaseServer::DeserializeClientHeader
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?OnPong@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_cur$1 = -96						; size = 4
_rows$2 = -84						; size = 4
_time$ = -72						; size = 4
_playerId$ = -60					; size = 6
_curIndex$ = -44					; size = 4
_databaseTable$ = -32					; size = 4
_databaseIndex$ = -20					; size = 4
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnPong@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; LightweightDatabaseServer::OnPong, COMDAT
; _this$ = ecx

; 439  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 440  : 	unsigned databaseIndex;
; 441  : 	DatabaseTable *databaseTable;
; 442  : 	unsigned curIndex;
; 443  : 	PlayerID playerId;
; 444  : 	RakNetTime time=0;

	mov	DWORD PTR _time$[ebp], 0

; 445  : 	for (databaseIndex=0; databaseIndex < database.Size(); databaseIndex++)

	mov	DWORD PTR _databaseIndex$[ebp], 0
	jmp	SHORT $LN11@OnPong
$LN10@OnPong:
	mov	eax, DWORD PTR _databaseIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _databaseIndex$[ebp], eax
$LN11@OnPong:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Size
	cmp	DWORD PTR _databaseIndex$[ebp], eax
	jae	$LN12@OnPong

; 446  : 	{
; 447  : 		databaseTable=database[databaseIndex];

	mov	eax, DWORD PTR _databaseIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _databaseTable$[ebp], ecx

; 448  : 		if (databaseTable->removeRowOnPingFailure)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+101]
	test	ecx, ecx
	je	$LN8@OnPong

; 449  : 		{
; 450  : 			if (time==0)

	cmp	DWORD PTR _time$[ebp], 0
	jne	SHORT $LN7@OnPong

; 451  : 				time=RakNet::GetTime();

	call	?GetTime@RakNet@@YAIXZ			; RakNet::GetTime
	mov	DWORD PTR _time$[ebp], eax
$LN7@OnPong:

; 452  : 
; 453  : 			DataStructures::BPlusTree<unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER> &rows = databaseTable->table.GetRows();

	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetRows@Table@DataStructures@@QAEAAV?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::Table::GetRows
	mov	DWORD PTR _rows$2[ebp], eax

; 454  : 			DataStructures::Page<unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER> *cur = rows.GetListHead();

	mov	ecx, DWORD PTR _rows$2[ebp]
	call	?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead
	mov	DWORD PTR _cur$1[ebp], eax
$LN6@OnPong:

; 455  : 			
; 456  : 			while (cur)

	cmp	DWORD PTR _cur$1[ebp], 0
	je	$LN8@OnPong

; 457  : 			{
; 458  : 				for (curIndex=0; curIndex < (unsigned) cur->size; curIndex++)

	mov	DWORD PTR _curIndex$[ebp], 0
	jmp	SHORT $LN4@OnPong
$LN3@OnPong:
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _curIndex$[ebp], eax
$LN4@OnPong:
	mov	eax, DWORD PTR _cur$1[ebp]
	mov	ecx, DWORD PTR _curIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+1]
	jae	SHORT $LN2@OnPong

; 459  : 				{
; 460  : 					cur->data[curIndex]->cells[databaseTable->systemIdColumnIndex]->Get((char*)&playerId,0);

	push	0
	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	push	edx
	mov	eax, DWORD PTR _curIndex$[ebp]
	mov	ecx, DWORD PTR _cur$1[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+69]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Get@Cell@Table@DataStructures@@QAEXPADPAH@Z ; DataStructures::Table::Cell::Get

; 461  : 					if (playerId==packet->playerId)

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR _playerId$[ebp]
	call	??8PlayerID@@QBE_NABU0@@Z		; PlayerID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@OnPong

; 462  : 					{
; 463  : 						cur->data[curIndex]->cells[databaseTable->lastPingResponseColumnIndex]->i=time;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	push	ecx
	mov	edx, DWORD PTR _curIndex$[ebp]
	mov	eax, DWORD PTR _cur$1[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+69]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _time$[ebp]
	mov	DWORD PTR [ecx+1], edx
$LN1@OnPong:

; 464  : 					}
; 465  : 				}

	jmp	SHORT $LN3@OnPong
$LN2@OnPong:

; 466  : 				cur=cur->next;

	mov	eax, DWORD PTR _cur$1[ebp]
	mov	ecx, DWORD PTR [eax+133]
	mov	DWORD PTR _cur$1[ebp], ecx

; 467  : 			}

	jmp	$LN6@OnPong
$LN8@OnPong:

; 468  : 		}
; 469  : 	}

	jmp	$LN10@OnPong
$LN12@OnPong:

; 470  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@OnPong
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN16@OnPong:
	DD	1
	DD	$LN15@OnPong
$LN15@OnPong:
	DD	-60					; ffffffc4H
	DD	6
	DD	$LN14@OnPong
$LN14@OnPong:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
?OnPong@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; LightweightDatabaseServer::OnPong
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_rowId$ = -332						; size = 4
_databaseTable$ = -320					; size = 4
_inBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; LightweightDatabaseServer::OnRemoveRow, COMDAT
; _this$ = ecx

; 426  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 516				; 00000204H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-528]
	mov	ecx, 129				; 00000081H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 427  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 428  : 	LightweightDatabaseServer::DatabaseTable *databaseTable = DeserializeClientHeader(&inBitstream, peer, packet, 0);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _inBitstream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z ; LightweightDatabaseServer::DeserializeClientHeader
	mov	DWORD PTR _databaseTable$[ebp], eax

; 429  : 	if (databaseTable==0)

	cmp	DWORD PTR _databaseTable$[ebp], 0
	jne	SHORT $LN2@OnRemoveRo

; 430  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	SHORT $LN3@OnRemoveRo
$LN2@OnRemoveRo:

; 431  : 	if (databaseTable->allowRemoteRemove==false)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	test	ecx, ecx
	jne	SHORT $LN1@OnRemoveRo

; 432  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	SHORT $LN3@OnRemoveRo
$LN1@OnRemoveRo:

; 433  : 	unsigned rowId;
; 434  : 	inBitstream.Read(rowId);

	lea	eax, DWORD PTR _rowId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 435  : 	databaseTable->table.RemoveRow(rowId);

	mov	eax, DWORD PTR _rowId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?RemoveRow@Table@DataStructures@@QAEXI@Z ; DataStructures::Table::RemoveRow

; 436  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN3@OnRemoveRo:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@OnRemoveRo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 528				; 00000210H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN10@OnRemoveRo:
	DD	2
	DD	$LN9@OnRemoveRo
$LN9@OnRemoveRo:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN6@OnRemoveRo
	DD	-332					; fffffeb4H
	DD	4
	DD	$LN7@OnRemoveRo
$LN7@OnRemoveRo:
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
$LN6@OnRemoveRo:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-532]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; LightweightDatabaseServer::OnRemoveRow
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_columnIndex$ = -11932					; size = 4
_cellUpdates$ = -11920					; size = 11520
_numCellUpdates$ = -389					; size = 1
_row$ = -380						; size = 4
_i$ = -368						; size = 4
_rowId$ = -356						; size = 4
_hasRowId$ = -341					; size = 1
_updateMode$ = -329					; size = 1
_databaseTable$ = -320					; size = 4
_inBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; LightweightDatabaseServer::OnUpdateRow, COMDAT
; _this$ = ecx

; 331  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 12116				; 00002f54H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12128]
	mov	ecx, 3029				; 00000bd5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 332  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 333  : 	LightweightDatabaseServer::DatabaseTable *databaseTable = DeserializeClientHeader(&inBitstream, peer, packet, 1);

	push	1
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _inBitstream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z ; LightweightDatabaseServer::DeserializeClientHeader
	mov	DWORD PTR _databaseTable$[ebp], eax

; 334  : 	if (databaseTable==0)

	cmp	DWORD PTR _databaseTable$[ebp], 0
	jne	SHORT $LN34@OnUpdateRo

; 335  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN34@OnUpdateRo:

; 336  : 	if (databaseTable->allowRemoteUpdate==false)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN33@OnUpdateRo

; 337  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN33@OnUpdateRo:

; 338  : 	unsigned char updateMode;
; 339  : 	bool hasRowId;
; 340  : 	unsigned rowId;
; 341  : 	unsigned i;
; 342  : 	DataStructures::Table::Row *row;
; 343  : 	inBitstream.Read(updateMode);

	lea	eax, DWORD PTR _updateMode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 344  : 	inBitstream.Read(hasRowId);

	lea	eax, DWORD PTR _hasRowId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ; RakNet::BitStream::Read<bool>

; 345  : 	if (hasRowId)

	movzx	eax, BYTE PTR _hasRowId$[ebp]
	test	eax, eax
	je	SHORT $LN32@OnUpdateRo

; 346  : 		inBitstream.Read(rowId);

	lea	eax, DWORD PTR _rowId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 347  : 	else

	jmp	SHORT $LN31@OnUpdateRo
$LN32@OnUpdateRo:

; 348  : 		rowId=(unsigned) -1; // Not used here but remove the debugging check

	mov	DWORD PTR _rowId$[ebp], -1
$LN31@OnUpdateRo:

; 349  : 	unsigned char numCellUpdates;
; 350  : 	if (inBitstream.Read(numCellUpdates)==false)

	lea	eax, DWORD PTR _numCellUpdates$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN30@OnUpdateRo

; 351  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN30@OnUpdateRo:

; 352  : 	// Read the updates for the row
; 353  : 	DatabaseCellUpdate cellUpdates[256];

	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	OFFSET ??0DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 354  : 	for (i=0; i < numCellUpdates; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN29@OnUpdateRo
$LN28@OnUpdateRo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN29@OnUpdateRo:
	movzx	eax, BYTE PTR _numCellUpdates$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN27@OnUpdateRo

; 355  : 	{
; 356  : 		if (cellUpdates[i].Deserialize(&inBitstream)==false)

	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	imul	ecx, DWORD PTR _i$[ebp], 45
	lea	ecx, DWORD PTR _cellUpdates$[ebp+ecx]
	call	?Deserialize@DatabaseCellUpdate@@QAE_NPAVBitStream@RakNet@@@Z ; DatabaseCellUpdate::Deserialize
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN26@OnUpdateRo

; 357  : 			return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN26@OnUpdateRo:

; 358  : 	}

	jmp	SHORT $LN28@OnUpdateRo
$LN27@OnUpdateRo:

; 359  : 
; 360  : 	if ((RowUpdateMode)updateMode==RUM_UPDATE_EXISTING_ROW)

	movzx	eax, BYTE PTR _updateMode$[ebp]
	test	eax, eax
	jne	$LN25@OnUpdateRo

; 361  : 	{
; 362  : 		if (hasRowId==false)

	movzx	eax, BYTE PTR _hasRowId$[ebp]
	test	eax, eax
	jne	SHORT $LN24@OnUpdateRo

; 363  : 			return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN24@OnUpdateRo:

; 364  : 
; 365  : 		row = databaseTable->table.GetRowByID(rowId);

	mov	eax, DWORD PTR _rowId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetRowByID@Table@DataStructures@@QAEPAURow@12@I@Z ; DataStructures::Table::GetRowByID
	mov	DWORD PTR _row$[ebp], eax

; 366  : 		if (row==0 || databaseTable->onlyUpdateOwnRows && RowHasIP(row, packet->playerId, databaseTable->systemIdColumnIndex)==false)

	cmp	DWORD PTR _row$[ebp], 0
	je	SHORT $LN22@OnUpdateRo
	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	je	SHORT $LN23@OnUpdateRo
	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	add	edx, 2
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z ; LightweightDatabaseServer::RowHasIP
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN23@OnUpdateRo
$LN22@OnUpdateRo:

; 367  : 			return; // You can't update some other system's row

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN23@OnUpdateRo:

; 368  : 	}

	jmp	$LN21@OnUpdateRo
$LN25@OnUpdateRo:

; 369  : 	else if ((RowUpdateMode)updateMode==RUM_UPDATE_OR_ADD_ROW)

	movzx	eax, BYTE PTR _updateMode$[ebp]
	cmp	eax, 1
	jne	$LN20@OnUpdateRo

; 370  : 	{
; 371  : 		if (hasRowId)

	movzx	eax, BYTE PTR _hasRowId$[ebp]
	test	eax, eax
	je	SHORT $LN19@OnUpdateRo

; 372  : 			row = databaseTable->table.GetRowByID(rowId);

	mov	eax, DWORD PTR _rowId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetRowByID@Table@DataStructures@@QAEPAURow@12@I@Z ; DataStructures::Table::GetRowByID
	mov	DWORD PTR _row$[ebp], eax

; 373  : 		else

	jmp	SHORT $LN18@OnUpdateRo
$LN19@OnUpdateRo:

; 374  : 			row=0;

	mov	DWORD PTR _row$[ebp], 0
$LN18@OnUpdateRo:

; 375  : 
; 376  : 		if (row==0)

	cmp	DWORD PTR _row$[ebp], 0
	jne	SHORT $LN17@OnUpdateRo

; 377  : 		{
; 378  : 			row=AddRow(databaseTable, packet->playerId, hasRowId, rowId);

	mov	eax, DWORD PTR _rowId$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _hasRowId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	add	edx, 2
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _databaseTable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddRow@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@_NI@Z ; LightweightDatabaseServer::AddRow
	mov	DWORD PTR _row$[ebp], eax

; 379  : 			if (row==0)

	cmp	DWORD PTR _row$[ebp], 0
	jne	SHORT $LN16@OnUpdateRo

; 380  : 				return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN16@OnUpdateRo:

; 381  : 		}
; 382  : 		else

	jmp	SHORT $LN15@OnUpdateRo
$LN17@OnUpdateRo:

; 383  : 		{
; 384  : 			// Existing row
; 385  : 			if (databaseTable->onlyUpdateOwnRows && RowHasIP(row, packet->playerId, databaseTable->systemIdColumnIndex)==false)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+100]
	test	ecx, ecx
	je	SHORT $LN15@OnUpdateRo
	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	add	edx, 2
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RowHasIP@LightweightDatabaseServer@@IAE_NPAURow@Table@DataStructures@@UPlayerID@@I@Z ; LightweightDatabaseServer::RowHasIP
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN15@OnUpdateRo

; 386  : 				return; // You can't update some other system's row

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN15@OnUpdateRo:

; 387  : 		}	
; 388  : 	}
; 389  : 	else

	jmp	$LN21@OnUpdateRo
$LN20@OnUpdateRo:

; 390  : 	{
; 391  : 		RakAssert((RowUpdateMode)updateMode==RUM_ADD_NEW_ROW);

	movzx	eax, BYTE PTR _updateMode$[ebp]
	cmp	eax, 2
	je	SHORT $LN37@OnUpdateRo
	mov	ecx, DWORD PTR ?__LINE__Var@?1??OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA
	add	ecx, 60					; 0000003cH
	push	ecx
	push	OFFSET ??_C@_1GM@FKEIMHDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAl?$AAi?$AAg?$AAh?$AAt?$AAw?$AAe?$AAi@
	push	OFFSET ??_C@_1FG@POBBKKBI@?$AA?$CI?$AAR?$AAo?$AAw?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CJ?$AAu?$AAp?$AAd?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$DN?$AA?$DN?$AAR?$AAU?$AAM?$AA_?$AAA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN37@OnUpdateRo:

; 392  : 
; 393  : 		row=AddRow(databaseTable, packet->playerId, hasRowId, rowId);

	mov	eax, DWORD PTR _rowId$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _hasRowId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	add	edx, 2
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _databaseTable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddRow@LightweightDatabaseServer@@IAEPAURow@Table@DataStructures@@PAUDatabaseTable@1@UPlayerID@@_NI@Z ; LightweightDatabaseServer::AddRow
	mov	DWORD PTR _row$[ebp], eax

; 394  : 		if (row==0)

	cmp	DWORD PTR _row$[ebp], 0
	jne	SHORT $LN21@OnUpdateRo

; 395  : 			return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN35@OnUpdateRo
$LN21@OnUpdateRo:

; 396  : 	}
; 397  : 
; 398  : 	unsigned columnIndex;
; 399  : 	for (i=0; i < numCellUpdates; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@OnUpdateRo
$LN10@OnUpdateRo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@OnUpdateRo:
	movzx	eax, BYTE PTR _numCellUpdates$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN9@OnUpdateRo

; 400  : 	{
; 401  : 		columnIndex=databaseTable->table.ColumnIndex(cellUpdates[i].columnName);

	imul	eax, DWORD PTR _i$[ebp], 45
	lea	ecx, DWORD PTR _cellUpdates$[ebp+eax+13]
	push	ecx
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?ColumnIndex@Table@DataStructures@@QAEIQAD@Z ; DataStructures::Table::ColumnIndex
	mov	DWORD PTR _columnIndex$[ebp], eax

; 402  : 		if (columnIndex!=(unsigned)-1 && columnIndex!=databaseTable->lastPingResponseColumnIndex && columnIndex!=databaseTable->nextPingSendColumnIndex && columnIndex!=databaseTable->systemIdColumnIndex)

	cmp	DWORD PTR _columnIndex$[ebp], -1
	je	$LN8@OnUpdateRo
	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR _columnIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+144]
	je	$LN8@OnUpdateRo
	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR _columnIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+148]
	je	$LN8@OnUpdateRo
	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR _columnIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+140]
	je	$LN8@OnUpdateRo

; 403  : 		{
; 404  : 			if (cellUpdates[i].cellValue.isEmpty)

	imul	eax, DWORD PTR _i$[ebp], 45
	movzx	ecx, BYTE PTR _cellUpdates$[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN7@OnUpdateRo

; 405  : 				row->cells[columnIndex]->Clear();

	mov	eax, DWORD PTR _columnIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Clear@Cell@Table@DataStructures@@QAEXXZ ; DataStructures::Table::Cell::Clear
	jmp	$LN8@OnUpdateRo
$LN7@OnUpdateRo:

; 406  : 			else if (cellUpdates[i].columnType==databaseTable->table.GetColumnType(columnIndex))

	imul	esi, DWORD PTR _i$[ebp], 45
	mov	eax, DWORD PTR _columnIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetColumnType@Table@DataStructures@@QAE?AW4ColumnType@12@I@Z ; DataStructures::Table::GetColumnType
	cmp	DWORD PTR _cellUpdates$[ebp+esi+9], eax
	jne	$LN8@OnUpdateRo

; 407  : 			{
; 408  : 				if (cellUpdates[i].columnType==DataStructures::Table::NUMERIC)

	imul	eax, DWORD PTR _i$[ebp], 45
	cmp	DWORD PTR _cellUpdates$[ebp+eax+9], 0
	jne	SHORT $LN4@OnUpdateRo

; 409  : 				{
; 410  : 					row->UpdateCell(columnIndex, cellUpdates[i].cellValue.i);

	imul	eax, DWORD PTR _i$[ebp], 45
	mov	ecx, DWORD PTR _cellUpdates$[ebp+eax+1]
	push	ecx
	mov	edx, DWORD PTR _columnIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _row$[ebp]
	call	?UpdateCell@Row@Table@DataStructures@@QAEXIH@Z ; DataStructures::Table::Row::UpdateCell
	jmp	$LN8@OnUpdateRo
$LN4@OnUpdateRo:

; 411  : 				}
; 412  : 				else if (cellUpdates[i].columnType==DataStructures::Table::BINARY)

	imul	eax, DWORD PTR _i$[ebp], 45
	cmp	DWORD PTR _cellUpdates$[ebp+eax+9], 2
	jne	SHORT $LN2@OnUpdateRo

; 413  : 				{
; 414  : 					row->UpdateCell(columnIndex, cellUpdates[i].cellValue.i, cellUpdates[i].cellValue.c);

	imul	eax, DWORD PTR _i$[ebp], 45
	mov	ecx, DWORD PTR _cellUpdates$[ebp+eax+5]
	push	ecx
	imul	edx, DWORD PTR _i$[ebp], 45
	mov	eax, DWORD PTR _cellUpdates$[ebp+edx+1]
	push	eax
	mov	ecx, DWORD PTR _columnIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _row$[ebp]
	call	?UpdateCell@Row@Table@DataStructures@@QAEXIHPAD@Z ; DataStructures::Table::Row::UpdateCell

; 415  : 				}
; 416  : 				else

	jmp	SHORT $LN8@OnUpdateRo
$LN2@OnUpdateRo:

; 417  : 				{
; 418  : 					RakAssert(cellUpdates[i].columnType==DataStructures::Table::STRING);

	imul	eax, DWORD PTR _i$[ebp], 45
	cmp	DWORD PTR _cellUpdates$[ebp+eax+9], 1
	je	SHORT $LN38@OnUpdateRo
	mov	ecx, DWORD PTR ?__LINE__Var@?1??OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA
	add	ecx, 87					; 00000057H
	push	ecx
	push	OFFSET ??_C@_1GM@FKEIMHDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAl?$AAi?$AAg?$AAh?$AAt?$AAw?$AAe?$AAi@
	push	OFFSET ??_C@_1HC@CGHBFIMB@?$AAc?$AAe?$AAl?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAc?$AAo?$AAl?$AAu?$AAm?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?$DN?$AA?$DN?$AAD?$AAa?$AAt?$AAa?$AAS@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN38@OnUpdateRo:

; 419  : 					row->UpdateCell(columnIndex, cellUpdates[i].cellValue.c);

	imul	eax, DWORD PTR _i$[ebp], 45
	mov	ecx, DWORD PTR _cellUpdates$[ebp+eax+5]
	push	ecx
	mov	edx, DWORD PTR _columnIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _row$[ebp]
	call	?UpdateCell@Row@Table@DataStructures@@QAEXIPAD@Z ; DataStructures::Table::Row::UpdateCell
$LN8@OnUpdateRo:

; 420  : 				}
; 421  : 			}
; 422  : 		}
; 423  : 	}

	jmp	$LN10@OnUpdateRo
$LN9@OnUpdateRo:

; 424  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN35@OnUpdateRo:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN49@OnUpdateRo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 12128				; 00002f60H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN49@OnUpdateRo:
	DD	6
	DD	$LN48@OnUpdateRo
$LN48@OnUpdateRo:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN41@OnUpdateRo
	DD	-329					; fffffeb7H
	DD	1
	DD	$LN42@OnUpdateRo
	DD	-341					; fffffeabH
	DD	1
	DD	$LN43@OnUpdateRo
	DD	-356					; fffffe9cH
	DD	4
	DD	$LN44@OnUpdateRo
	DD	-389					; fffffe7bH
	DD	1
	DD	$LN45@OnUpdateRo
	DD	-11920					; ffffd170H
	DD	11520					; 00002d00H
	DD	$LN46@OnUpdateRo
$LN46@OnUpdateRo:
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	85					; 00000055H
	DB	112					; 00000070H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN45@OnUpdateRo:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	67					; 00000043H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	85					; 00000055H
	DB	112					; 00000070H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN44@OnUpdateRo:
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
$LN43@OnUpdateRo:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
$LN42@OnUpdateRo:
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN41@OnUpdateRo:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1:
	push	OFFSET ??1DatabaseCellUpdate@@QAE@XZ
	push	256					; 00000100H
	push	45					; 0000002dH
	lea	eax, DWORD PTR _cellUpdates$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; LightweightDatabaseServer::OnUpdateRow
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_queryResult$ = -18404					; size = 36
_numTableFilters$ = -18360				; size = 4
_tableFilters$ = -18348					; size = 3072
_numRowIDs$ = -15265					; size = 1
_rowIds$ = -15256					; size = 1024
_networkedFilters$ = -14224				; size = 12544
_numNetworkedFilters$ = -1669				; size = 1
_columnSubset$ = -1660					; size = 1024
_i$ = -628						; size = 4
_outBitstream$ = -616					; size = 273
_numColumnSubset$ = -329				; size = 1
_databaseTable$ = -320					; size = 4
_inBitstream$ = -308					; size = 273
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; LightweightDatabaseServer::OnQueryRequest, COMDAT
; _this$ = ecx

; 276  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 18588				; 0000489cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-18600]
	mov	ecx, 4647				; 00001227H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 278  : 	LightweightDatabaseServer::DatabaseTable *databaseTable = DeserializeClientHeader(&inBitstream, peer, packet, 0);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _inBitstream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeserializeClientHeader@LightweightDatabaseServer@@IAEPAUDatabaseTable@1@PAVBitStream@RakNet@@PAVRakPeerInterface@@PAUPacket@@H@Z ; LightweightDatabaseServer::DeserializeClientHeader
	mov	DWORD PTR _databaseTable$[ebp], eax

; 279  : 	if (databaseTable==0)

	cmp	DWORD PTR _databaseTable$[ebp], 0
	jne	SHORT $LN20@OnQueryReq

; 280  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN21@OnQueryReq
$LN20@OnQueryReq:

; 281  : 	if (databaseTable->allowRemoteQuery==false)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	test	ecx, ecx
	jne	SHORT $LN19@OnQueryReq

; 282  : 		return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN21@OnQueryReq
$LN19@OnQueryReq:

; 283  : 	unsigned char numColumnSubset;
; 284  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 285  : 	unsigned i;
; 286  : 	if (inBitstream.Read(numColumnSubset)==false)

	lea	eax, DWORD PTR _numColumnSubset$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN18@OnQueryReq

; 287  : 		return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN21@OnQueryReq
$LN18@OnQueryReq:

; 288  : 	unsigned columnSubset[256];
; 289  : 	for (i=0; i < numColumnSubset; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@OnQueryReq
$LN16@OnQueryReq:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@OnQueryReq:
	movzx	eax, BYTE PTR _numColumnSubset$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN15@OnQueryReq

; 290  : 		inBitstream.Read(columnSubset[i]);

	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR _columnSubset$[ebp+eax*4]
	push	ecx
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>
	jmp	SHORT $LN16@OnQueryReq
$LN15@OnQueryReq:

; 291  : 	unsigned char numNetworkedFilters;
; 292  : 	if (inBitstream.Read(numNetworkedFilters)==false)

	lea	eax, DWORD PTR _numNetworkedFilters$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@OnQueryReq

; 293  : 		return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN21@OnQueryReq
$LN14@OnQueryReq:

; 294  : 	DatabaseFilter networkedFilters[256];

	push	OFFSET ??1DatabaseFilter@@QAE@XZ
	push	OFFSET ??0DatabaseFilter@@QAE@XZ
	push	256					; 00000100H
	push	49					; 00000031H
	lea	eax, DWORD PTR _networkedFilters$[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 295  : 	for (i=0; i < numNetworkedFilters; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@OnQueryReq
$LN12@OnQueryReq:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN13@OnQueryReq:
	movzx	eax, BYTE PTR _numNetworkedFilters$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN11@OnQueryReq

; 296  : 	{
; 297  : 		if (networkedFilters[i].Deserialize(&inBitstream)==false)

	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	imul	ecx, DWORD PTR _i$[ebp], 49
	lea	ecx, DWORD PTR _networkedFilters$[ebp+ecx]
	call	?Deserialize@DatabaseFilter@@QAE_NPAVBitStream@RakNet@@@Z ; DatabaseFilter::Deserialize
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN10@OnQueryReq

; 298  : 			return;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??1DatabaseFilter@@QAE@XZ
	push	256					; 00000100H
	push	49					; 00000031H
	lea	eax, DWORD PTR _networkedFilters$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN21@OnQueryReq
$LN10@OnQueryReq:

; 299  : 	}

	jmp	$LN12@OnQueryReq
$LN11@OnQueryReq:

; 300  : 
; 301  : 	unsigned rowIds[256];
; 302  : 	unsigned char numRowIDs;
; 303  : 	if (inBitstream.Read(numRowIDs)==false)

	lea	eax, DWORD PTR _numRowIDs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@OnQueryReq

; 304  : 		return;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??1DatabaseFilter@@QAE@XZ
	push	256					; 00000100H
	push	49					; 00000031H
	lea	eax, DWORD PTR _networkedFilters$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN21@OnQueryReq
$LN9@OnQueryReq:

; 305  : 	for (i=0; i < numRowIDs; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@OnQueryReq
$LN7@OnQueryReq:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@OnQueryReq:
	movzx	eax, BYTE PTR _numRowIDs$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN6@OnQueryReq

; 306  : 		inBitstream.Read(rowIds[i]);

	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR _rowIds$[ebp+eax*4]
	push	ecx
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>
	jmp	SHORT $LN7@OnQueryReq
$LN6@OnQueryReq:

; 307  : 
; 308  : 	// Convert the safer and more robust networked database filter to the more efficient form the table actually uses.
; 309  : 	DataStructures::Table::FilterQuery tableFilters[256];

	push	OFFSET ??1FilterQuery@Table@DataStructures@@QAE@XZ ; DataStructures::Table::FilterQuery::~FilterQuery
	push	OFFSET ??0FilterQuery@Table@DataStructures@@QAE@XZ ; DataStructures::Table::FilterQuery::FilterQuery
	push	256					; 00000100H
	push	12					; 0000000cH
	lea	eax, DWORD PTR _tableFilters$[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 310  : 	unsigned numTableFilters=0;

	mov	DWORD PTR _numTableFilters$[ebp], 0

; 311  : 	for (i=0; i < numNetworkedFilters; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@OnQueryReq
$LN4@OnQueryReq:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@OnQueryReq:
	movzx	eax, BYTE PTR _numNetworkedFilters$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN3@OnQueryReq

; 312  : 	{	
; 313  : 		tableFilters[numTableFilters].columnIndex=databaseTable->table.ColumnIndex(networkedFilters[i].columnName);

	imul	eax, DWORD PTR _i$[ebp], 49
	lea	ecx, DWORD PTR _networkedFilters$[ebp+eax+17]
	push	ecx
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?ColumnIndex@Table@DataStructures@@QAEIQAD@Z ; DataStructures::Table::ColumnIndex
	imul	edx, DWORD PTR _numTableFilters$[ebp], 12
	mov	DWORD PTR _tableFilters$[ebp+edx], eax

; 314  : 		if (tableFilters[numTableFilters].columnIndex==(unsigned)-1)

	imul	eax, DWORD PTR _numTableFilters$[ebp], 12
	cmp	DWORD PTR _tableFilters$[ebp+eax], -1
	jne	SHORT $LN2@OnQueryReq

; 315  : 			continue;

	jmp	SHORT $LN4@OnQueryReq
$LN2@OnQueryReq:

; 316  : 		if (networkedFilters[i].columnType!=databaseTable->table.GetColumns()[tableFilters[numTableFilters].columnIndex].columnType)

	imul	esi, DWORD PTR _i$[ebp], 49
	imul	eax, DWORD PTR _numTableFilters$[ebp], 12
	mov	ecx, DWORD PTR _tableFilters$[ebp+eax]
	push	ecx
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetColumns@Table@DataStructures@@QAEAAV?$List@UColumnDescriptor@Table@DataStructures@@@2@XZ ; DataStructures::Table::GetColumns
	mov	ecx, eax
	call	??A?$List@UColumnDescriptor@Table@DataStructures@@@DataStructures@@QBEAAUColumnDescriptor@Table@1@I@Z ; DataStructures::List<DataStructures::Table::ColumnDescriptor>::operator[]
	mov	edx, DWORD PTR _networkedFilters$[ebp+esi+13]
	cmp	edx, DWORD PTR [eax+32]
	je	SHORT $LN1@OnQueryReq

; 317  : 			continue;

	jmp	$LN4@OnQueryReq
$LN1@OnQueryReq:

; 318  : 		tableFilters[numTableFilters].operation=networkedFilters[i].operation;

	imul	eax, DWORD PTR _i$[ebp], 49
	imul	ecx, DWORD PTR _numTableFilters$[ebp], 12
	mov	edx, DWORD PTR _networkedFilters$[ebp+eax+9]
	mov	DWORD PTR _tableFilters$[ebp+ecx+8], edx

; 319  : 		// It's important that I store a pointer to the class here or the destructor of the class will deallocate the cell twice
; 320  : 		tableFilters[numTableFilters++].cellValue=&(networkedFilters[i].cellValue);

	imul	eax, DWORD PTR _i$[ebp], 49
	lea	ecx, DWORD PTR _networkedFilters$[ebp+eax]
	imul	edx, DWORD PTR _numTableFilters$[ebp], 12
	mov	DWORD PTR _tableFilters$[ebp+edx+4], ecx
	mov	eax, DWORD PTR _numTableFilters$[ebp]
	add	eax, 1
	mov	DWORD PTR _numTableFilters$[ebp], eax

; 321  : 	}

	jmp	$LN4@OnQueryReq
$LN3@OnQueryReq:

; 322  :     
; 323  : 	DataStructures::Table queryResult;

	lea	ecx, DWORD PTR _queryResult$[ebp]
	call	??0Table@DataStructures@@QAE@XZ		; DataStructures::Table::Table
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 324  : 	databaseTable->table.QueryTable(columnSubset, numColumnSubset, tableFilters, numTableFilters, rowIds, numRowIDs, &queryResult);

	lea	eax, DWORD PTR _queryResult$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _numRowIDs$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rowIds$[ebp]
	push	edx
	mov	eax, DWORD PTR _numTableFilters$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tableFilters$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _numColumnSubset$[ebp]
	push	edx
	lea	eax, DWORD PTR _columnSubset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?QueryTable@Table@DataStructures@@QAEXPAIIPAUFilterQuery@12@I0IPAV12@@Z ; DataStructures::Table::QueryTable

; 325  : 	outBitstream.Write((unsigned char)ID_DATABASE_QUERY_REPLY);

	push	88					; 00000058H
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 326  : 	TableSerializer::SerializeTable(&queryResult, &outBitstream);

	lea	eax, DWORD PTR _outBitstream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _queryResult$[ebp]
	push	ecx
	call	?SerializeTable@TableSerializer@@SAXPAVTable@DataStructures@@PAVBitStream@RakNet@@@Z ; TableSerializer::SerializeTable
	add	esp, 8

; 327  : 	peer->Send(&outBitstream, HIGH_PRIORITY, RELIABLE_ORDERED, 0, packet->playerId, false);			

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	push	0
	push	3
	push	1
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 328  : 
; 329  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _queryResult$[ebp]
	call	??1Table@DataStructures@@QAE@XZ		; DataStructures::Table::~Table
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??1FilterQuery@Table@DataStructures@@QAE@XZ ; DataStructures::Table::FilterQuery::~FilterQuery
	push	256					; 00000100H
	push	12					; 0000000cH
	lea	eax, DWORD PTR _tableFilters$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET ??1DatabaseFilter@@QAE@XZ
	push	256					; 00000100H
	push	49					; 00000031H
	lea	ecx, DWORD PTR _networkedFilters$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN21@OnQueryReq:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@OnQueryReq
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 18600				; 000048a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN40@OnQueryReq:
	DD	10					; 0000000aH
	DD	$LN39@OnQueryReq
$LN39@OnQueryReq:
	DD	-308					; fffffeccH
	DD	273					; 00000111H
	DD	$LN28@OnQueryReq
	DD	-329					; fffffeb7H
	DD	1
	DD	$LN29@OnQueryReq
	DD	-616					; fffffd98H
	DD	273					; 00000111H
	DD	$LN30@OnQueryReq
	DD	-1660					; fffff984H
	DD	1024					; 00000400H
	DD	$LN31@OnQueryReq
	DD	-1669					; fffff97bH
	DD	1
	DD	$LN32@OnQueryReq
	DD	-14224					; ffffc870H
	DD	12544					; 00003100H
	DD	$LN33@OnQueryReq
	DD	-15256					; ffffc468H
	DD	1024					; 00000400H
	DD	$LN34@OnQueryReq
	DD	-15265					; ffffc45fH
	DD	1
	DD	$LN35@OnQueryReq
	DD	-18348					; ffffb854H
	DD	3072					; 00000c00H
	DD	$LN36@OnQueryReq
	DD	-18404					; ffffb81cH
	DD	36					; 00000024H
	DD	$LN37@OnQueryReq
$LN37@OnQueryReq:
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN36@OnQueryReq:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN35@OnQueryReq:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	0
$LN34@OnQueryReq:
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN33@OnQueryReq:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN32@OnQueryReq:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN31@OnQueryReq:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN30@OnQueryReq:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN29@OnQueryReq:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN28@OnQueryReq:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$2:
	push	OFFSET ??1DatabaseFilter@@QAE@XZ
	push	256					; 00000100H
	push	49					; 00000031H
	lea	eax, DWORD PTR _networkedFilters$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$3:
	push	OFFSET ??1FilterQuery@Table@DataStructures@@QAE@XZ ; DataStructures::Table::FilterQuery::~FilterQuery
	push	256					; 00000100H
	push	12					; 0000000cH
	lea	eax, DWORD PTR _tableFilters$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$4:
	lea	ecx, DWORD PTR _queryResult$[ebp]
	jmp	??1Table@DataStructures@@QAE@XZ		; DataStructures::Table::~Table
__ehhandler$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-18604]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; LightweightDatabaseServer::OnQueryRequest
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?HasSavedSearchResult@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IBE_NABQAD@Z
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasSavedSearchResult@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IBE_NABQAD@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::HasSavedSearchResult, COMDAT
; _this$ = ecx

; 309  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		return lastSearchIndexValid && key_comparison_func(key,lastSearchKey)==0;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	SHORT $LN3@HasSavedSe
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	?DatabaseTableComp@LightweightDatabaseServer@@SAHABQAD0@Z ; LightweightDatabaseServer::DatabaseTableComp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@HasSavedSe
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@HasSavedSe
$LN3@HasSavedSe:
	mov	DWORD PTR tv72[ebp], 0
$LN4@HasSavedSe:
	mov	al, BYTE PTR tv72[ebp]

; 311  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HasSavedSearchResult@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IBE_NABQAD@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::HasSavedSearchResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SaveLastSearch@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IAEXABQADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_index$ = 12						; size = 4
?SaveLastSearch@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IAEXABQADI@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SaveLastSearch, COMDAT
; _this$ = ecx

; 301  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		lastSearchIndex=index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 303  : 		lastSearchKey=key;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+16], edx

; 304  : 		lastSearchIndexValid=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 1

; 305  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveLastSearch@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IAEXABQADI@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SaveLastSearch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?RemoveAtIndex@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?RemoveAtIndex@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 333  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef _DEBUG
; 335  : 		assert( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN4@RemoveAtIn
	push	335					; 0000014fH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RemoveAtIn:

; 336  : #endif
; 337  : 
; 338  : 		if ( position < list_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@RemoveAtIn

; 339  : 		{
; 340  : 			// Compress the array
; 341  : 			/*
; 342  : 			for ( unsigned int counter = position; counter < list_size - 1 ; ++counter )
; 343  : 			listArray[ counter ] = listArray[ counter + 1 ];
; 344  : 			*/
; 345  : 			memmove(listArray+position, listArray+position+1, (list_size-1-position) * sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	sub	ecx, DWORD PTR _position$[ebp]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _position$[ebp]
	lea	edx, DWORD PTR [eax+ecx*8+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 			Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Del
$LN2@RemoveAtIn:

; 348  : 		}
; 349  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z
_TEXT	SEGMENT
tv88 = -280						; size = 4
$T2 = -272						; size = 4
$T3 = -260						; size = 4
$T4 = -248						; size = 4
$T5 = -236						; size = 4
_new_array$6 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 8
?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@Insert
	push	OFFSET ??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR tv88[ebp], edx
	jmp	SHORT $LN7@Insert
$LN6@Insert:
	mov	DWORD PTR tv88[ebp], 0
$LN7@Insert:
	mov	eax, DWORD PTR tv88[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$6[ebp], ecx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$6[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$6[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [eax+ecx*8], edx
	mov	edx, DWORD PTR _input$[ebp+4]
	mov	DWORD PTR [eax+ecx*8+4], edx

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z
_TEXT	SEGMENT
tv94 = -280						; size = 4
$T2 = -272						; size = 4
$T3 = -260						; size = 4
$T4 = -248						; size = 4
$T5 = -236						; size = 4
_new_array$6 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 8
_position$ = 16						; size = 4
?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@Insert
	push	OFFSET ??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR tv94[ebp], edx
	jmp	SHORT $LN8@Insert
$LN7@Insert:
	mov	DWORD PTR tv94[ebp], 0
$LN8@Insert:
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$6[ebp], ecx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$6[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$6[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _position$[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8+8]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	mov	eax, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+edx*8], eax
	mov	eax, DWORD PTR _input$[ebp+4]
	mov	DWORD PTR [ecx+edx*8+4], eax

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::~List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::~List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Size@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIXZ PROC ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Size, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return orderedList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?RemoveAtIndex@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?RemoveAtIndex@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXI@Z PROC ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  : 		orderedList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::RemoveAtIndex

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXI@Z ENDP ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??A?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z PROC ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::operator[], COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		return orderedList[position];

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::operator[]

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ENDP ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEIABQADABUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEIABQADABUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z PROC ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEIABQADABUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z ENDP ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z PROC ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	?NodeComparisonFunc@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@SAHABQADABUMapNode@12@@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z ENDP ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::~OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::~List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::~List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>
__ehhandler$??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::~OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>::List<DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Size@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEIXZ PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Size, COMDAT
; _this$ = ecx

; 295  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 296  : 		return mapNodeList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Size

; 297  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Clear@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Clear, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 0

; 278  : 		mapNodeList.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Clear

; 279  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::operator[], COMDAT
; _this$ = ecx

; 283  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 284  : 		return mapNodeList[position].mapNodeData;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::operator[]
	add	eax, 4

; 285  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Delete@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Delete@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Delete, COMDAT
; _this$ = ecx

; 253  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 254  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IBE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Delete

; 255  : 		{
; 256  : 			lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 0

; 257  : 			mapNodeList.RemoveAtIndex(lastSearchIndex);   

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::RemoveAtIndex

; 258  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@Delete
$LN3@Delete:

; 259  : 		}
; 260  : 
; 261  : 		bool objectExists;
; 262  : 		unsigned index;
; 263  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 264  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN2@Delete

; 265  : 		{
; 266  : 			lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 0

; 267  : 			mapNodeList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::RemoveAtIndex

; 268  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@Delete

; 269  : 		}
; 270  : 		else

	jmp	SHORT $LN4@Delete
$LN2@Delete:

; 271  : 			return false;

	xor	al, al
$LN4@Delete:

; 272  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Delete
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@Delete:
	DD	1
	DD	$LN7@Delete
$LN7@Delete:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Delete
$LN6@Delete:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Delete@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Has@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Has@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Has, COMDAT
; _this$ = ecx

; 239  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 240  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IBE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Has

; 241  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Has
$LN2@Has:

; 242  : 
; 243  : 		bool objectExists;
; 244  : 		unsigned index;
; 245  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 246  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN1@Has

; 247  : 			SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IAEXABQADI@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SaveLastSearch
$LN1@Has:

; 248  : 		return objectExists;

	mov	al, BYTE PTR _objectExists$[ebp]
$LN3@Has:

; 249  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Has
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@Has:
	DD	1
	DD	$LN6@Has
$LN6@Has:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Has
$LN5@Has:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Has@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Has
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SetNew@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXABQADABQAUDatabaseTable@LightweightDatabaseServer@@@Z
_TEXT	SEGMENT
$T1 = -240						; size = 8
_objectExists$ = -29					; size = 1
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?SetNew@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXABQADABQAUDatabaseTable@LightweightDatabaseServer@@@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SetNew, COMDAT
; _this$ = ecx

; 227  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 228  : #ifdef _DEBUG
; 229  : 		unsigned index;
; 230  : 		bool objectExists;
; 231  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 232  : 		assert(objectExists==false);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@SetNew
	push	232					; 000000e8H
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@SetNew:

; 233  : #endif
; 234  : 		SaveLastSearch(key,mapNodeList.Insert(key,MapNode(key,data)));

	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0MapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@PADPAUDatabaseTable@LightweightDatabaseServer@@@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode::MapNode
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAEIABQADABUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@2@@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::Insert
	push	eax
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IAEXABQADI@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SaveLastSearch

; 235  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetNew
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN6@SetNew:
	DD	1
	DD	$LN5@SetNew
$LN5@SetNew:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@SetNew
$LN4@SetNew:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetNew@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXABQADABQAUDatabaseTable@LightweightDatabaseServer@@@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SetNew
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Get, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 130  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IBE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Get

; 131  : 			return mapNodeList[lastSearchIndex].mapNodeData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::operator[]
	add	eax, 4
	jmp	SHORT $LN2@Get
$LN1@Get:

; 132  : 
; 133  : 		bool objectExists;
; 134  : 		unsigned index;
; 135  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEIABQADPA_N@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 136  : 		assert(objectExists);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Get
	push	136					; 00000088H
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@Get:

; 137  : 		SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@IAEXABQADI@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SaveLastSearch

; 138  : 		return mapNodeList[index].mapNodeData;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QBEAAUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@1@I@Z ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::operator[]
	add	eax, 4
$LN2@Get:

; 139  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Get
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@Get:
	DD	1
	DD	$LN6@Get
$LN6@Get:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Get
$LN5@Get:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::~Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 105  : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Clear

; 106  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::~OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::~OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>
__ehhandler$??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::~Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$OrderedList@PADUMapNode@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@$1?NodeComparisonFunc@23@SAHABQADABU123@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>::OrderedList<char *,DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::MapNode,&DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc>

; 99   : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 0

; 100  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?NodeComparisonFunc@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@SAHABQADABUMapNode@12@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?NodeComparisonFunc@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@SAHABQADABUMapNode@12@@Z PROC ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc, COMDAT

; 56   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 57   : #ifdef _MSC_VER
; 58   : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 59   : #endif
; 60   : 			return key_comparison_func(a, b.mapNodeKey);

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	?DatabaseTableComp@LightweightDatabaseServer@@SAHABQAD0@Z ; LightweightDatabaseServer::DatabaseTableComp
	add	esp, 8

; 61   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NodeComparisonFunc@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@SAHABQADABUMapNode@12@@Z ENDP ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::NodeComparisonFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?DatabaseTableComp@LightweightDatabaseServer@@SAHABQAD0@Z
_TEXT	SEGMENT
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
?DatabaseTableComp@LightweightDatabaseServer@@SAHABQAD0@Z PROC ; LightweightDatabaseServer::DatabaseTableComp, COMDAT

; 22   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 23   : 	return strcmp(key1, key2);

	mov	eax, DWORD PTR _key2$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _key1$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_strcmp
	add	esp, 8

; 24   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DatabaseTableComp@LightweightDatabaseServer@@SAHABQAD0@Z ENDP ; LightweightDatabaseServer::DatabaseTableComp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDatabaseTable@LightweightDatabaseServer@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDatabaseTable@LightweightDatabaseServer@@QAEPAXI@Z PROC ; LightweightDatabaseServer::DatabaseTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DatabaseTable@LightweightDatabaseServer@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDatabaseTable@LightweightDatabaseServer@@QAEPAXI@Z ENDP ; LightweightDatabaseServer::DatabaseTable::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DatabaseTable@LightweightDatabaseServer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DatabaseTable@LightweightDatabaseServer@@QAE@XZ PROC	; LightweightDatabaseServer::DatabaseTable::~DatabaseTable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??1Table@DataStructures@@QAE@XZ		; DataStructures::Table::~Table
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DatabaseTable@LightweightDatabaseServer@@QAE@XZ ENDP	; LightweightDatabaseServer::DatabaseTable::~DatabaseTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DatabaseTable@LightweightDatabaseServer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DatabaseTable@LightweightDatabaseServer@@QAE@XZ PROC	; LightweightDatabaseServer::DatabaseTable::DatabaseTable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??0Table@DataStructures@@QAE@XZ		; DataStructures::Table::Table
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DatabaseTable@LightweightDatabaseServer@@QAE@XZ ENDP	; LightweightDatabaseServer::DatabaseTable::DatabaseTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?OnCloseConnection@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_playerId$ = 12						; size = 6
?OnCloseConnection@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z PROC ; LightweightDatabaseServer::OnCloseConnection, COMDAT
; _this$ = ecx

; 272  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 273  : 	RemoveRowsFromIP(playerId);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z ; LightweightDatabaseServer::RemoveRowsFromIP

; 274  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnCloseConnection@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z ENDP ; LightweightDatabaseServer::OnCloseConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?OnDisconnect@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnDisconnect@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z PROC ; LightweightDatabaseServer::OnDisconnect, COMDAT
; _this$ = ecx

; 268  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 269  : 
; 270  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?OnDisconnect@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z ENDP ; LightweightDatabaseServer::OnDisconnect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?OnReceive@LightweightDatabaseServer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnReceive@LightweightDatabaseServer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z PROC ; LightweightDatabaseServer::OnReceive, COMDAT
; _this$ = ecx

; 245  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 	switch (packet->data[0]) 

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	sub	edx, 28					; 0000001cH
	mov	DWORD PTR tv68[ebp], edx
	cmp	DWORD PTR tv68[ebp], 59			; 0000003bH
	ja	$LN6@OnReceive
	mov	eax, DWORD PTR tv68[ebp]
	movzx	ecx, BYTE PTR $LN10@OnReceive[eax]
	jmp	DWORD PTR $LN11@OnReceive[ecx*4]
$LN5@OnReceive:

; 247  : 	{
; 248  : 	case ID_DATABASE_QUERY_REQUEST:
; 249  : 		OnQueryRequest(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnQueryRequest@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnQueryRequest

; 250  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	SHORT $LN8@OnReceive
$LN4@OnReceive:

; 251  : 	case ID_DATABASE_UPDATE_ROW:
; 252  : 		OnUpdateRow(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnUpdateRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnUpdateRow

; 253  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	SHORT $LN8@OnReceive
$LN3@OnReceive:

; 254  : 	case ID_DATABASE_REMOVE_ROW:
; 255  : 		OnRemoveRow(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnRemoveRow@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnRemoveRow

; 256  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	SHORT $LN8@OnReceive
$LN2@OnReceive:

; 257  : 	case ID_DISCONNECTION_NOTIFICATION:
; 258  : 	case ID_CONNECTION_LOST:
; 259  : 		RemoveRowsFromIP(packet->playerId);

	mov	eax, DWORD PTR _packet$[ebp]
	add	eax, 2
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveRowsFromIP@LightweightDatabaseServer@@IAEXUPlayerID@@@Z ; LightweightDatabaseServer::RemoveRowsFromIP

; 260  : 		return RR_CONTINUE_PROCESSING;

	mov	eax, 1
	jmp	SHORT $LN8@OnReceive
$LN1@OnReceive:

; 261  : 	case ID_PONG:
; 262  : 		OnPong(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnPong@LightweightDatabaseServer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; LightweightDatabaseServer::OnPong

; 263  : 		return RR_CONTINUE_PROCESSING;

	mov	eax, 1
	jmp	SHORT $LN8@OnReceive
$LN6@OnReceive:

; 264  : 	}
; 265  : 	return RR_CONTINUE_PROCESSING;

	mov	eax, 1
$LN8@OnReceive:

; 266  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN11@OnReceive:
	DD	$LN2@OnReceive
	DD	$LN1@OnReceive
	DD	$LN5@OnReceive
	DD	$LN4@OnReceive
	DD	$LN3@OnReceive
	DD	$LN6@OnReceive
$LN10@OnReceive:
	DB	0
	DB	5
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	2
	DB	3
	DB	4
?OnReceive@LightweightDatabaseServer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ENDP ; LightweightDatabaseServer::OnReceive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_rows$2 = -140						; size = 4
_playerId$ = -128					; size = 6
_removeList$ = -112					; size = 12
_row$ = -92						; size = 4
_j$ = -80						; size = 4
_i$ = -68						; size = 4
_cur$ = -56						; size = 4
_databaseTable$ = -44					; size = 4
_time$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z PROC ; LightweightDatabaseServer::Update, COMDAT
; _this$ = ecx

; 173  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 174  : 	RakNetTime time=0;

	mov	DWORD PTR _time$[ebp], 0

; 175  : 	DatabaseTable *databaseTable;
; 176  : 	DataStructures::Page<unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER> *cur;
; 177  : 	unsigned i,j;
; 178  : 	DataStructures::Table::Row* row;
; 179  : 	DataStructures::List<unsigned> removeList;

	lea	ecx, DWORD PTR _removeList$[ebp]
	call	??0?$List@I@DataStructures@@QAE@XZ	; DataStructures::List<unsigned int>::List<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 180  : 	PlayerID playerId;
; 181  : 
; 182  : 	// periodic ping if removing system that do not respond to pings.
; 183  : 	for (i=0; i < database.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN23@Update
$LN22@Update:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN23@Update:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN21@Update

; 184  : 	{
; 185  : 		databaseTable=database[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _databaseTable$[ebp], ecx

; 186  : 
; 187  : 		if (databaseTable->removeRowOnPingFailure)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+101]
	test	ecx, ecx
	je	$LN20@Update

; 188  : 		{
; 189  : 			// Reading the time is slow - only do it once if necessary.
; 190  : 			if (time==0)

	cmp	DWORD PTR _time$[ebp], 0
	jne	SHORT $LN19@Update

; 191  : 				 time = RakNet::GetTime();

	call	?GetTime@RakNet@@YAIXZ			; RakNet::GetTime
	mov	DWORD PTR _time$[ebp], eax
$LN19@Update:

; 192  : 
; 193  : 			if (databaseTable->nextRowPingCheck < time)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	cmp	ecx, DWORD PTR _time$[ebp]
	jae	$LN20@Update

; 194  : 			{
; 195  : 				databaseTable->nextRowPingCheck=time+1000+(randomMT()%1000);

	call	?randomMT@@YAIXZ			; randomMT
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	mov	eax, DWORD PTR _time$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1000]
	mov	edx, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 196  : 				DataStructures::BPlusTree<unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER> &rows = databaseTable->table.GetRows();

	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?GetRows@Table@DataStructures@@QAEAAV?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::Table::GetRows
	mov	DWORD PTR _rows$2[ebp], eax

; 197  : 				cur = rows.GetListHead();

	mov	ecx, DWORD PTR _rows$2[ebp]
	call	?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead
	mov	DWORD PTR _cur$[ebp], eax
$LN17@Update:

; 198  : 				while (cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN16@Update

; 199  : 				{
; 200  : 					// Mark dropped entities
; 201  : 					for (j=0; j < (unsigned)cur->size; j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN15@Update
$LN14@Update:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN15@Update:
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR [eax+1]
	jae	SHORT $LN13@Update

; 202  : 					{
; 203  : 						row = cur->data[j];

	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+69]
	mov	DWORD PTR _row$[ebp], edx

; 204  : 						if (time - row->cells[databaseTable->lastPingResponseColumnIndex]->i > DROP_SERVER_INTERVAL)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	push	ecx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _time$[ebp]
	sub	eax, DWORD PTR [edx+1]
	cmp	eax, 75000				; 000124f8H
	jbe	SHORT $LN12@Update

; 205  : 							removeList.Insert(cur->keys[j]);

	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+5]
	push	edx
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	?Insert@?$List@I@DataStructures@@QAEXI@Z ; DataStructures::List<unsigned int>::Insert
$LN12@Update:

; 206  : 					}

	jmp	SHORT $LN14@Update
$LN13@Update:

; 207  : 					cur=cur->next;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+133]
	mov	DWORD PTR _cur$[ebp], ecx

; 208  : 				}

	jmp	SHORT $LN17@Update
$LN16@Update:

; 209  : 
; 210  : 				// Remove dropped entities
; 211  : 				for (j=0; j < removeList.Size(); j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN11@Update
$LN10@Update:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN11@Update:
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	?Size@?$List@I@DataStructures@@QBEIXZ	; DataStructures::List<unsigned int>::Size
	cmp	DWORD PTR _j$[ebp], eax
	jae	SHORT $LN9@Update

; 212  : 					databaseTable->table.RemoveRow(removeList[i]);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	??A?$List@I@DataStructures@@QBEAAII@Z	; DataStructures::List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?RemoveRow@Table@DataStructures@@QAEXI@Z ; DataStructures::Table::RemoveRow
	jmp	SHORT $LN10@Update
$LN9@Update:

; 213  : 				removeList.Clear(true);

	push	1
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	?Clear@?$List@I@DataStructures@@QAEX_N@Z ; DataStructures::List<unsigned int>::Clear

; 214  : 
; 215  : 				cur = rows.GetListHead();

	mov	ecx, DWORD PTR _rows$2[ebp]
	call	?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead
	mov	DWORD PTR _cur$[ebp], eax
$LN8@Update:

; 216  : 				// Ping remaining entities if they are not connected.  If they are connected just increase the ping interval.
; 217  : 				while (cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN20@Update

; 218  : 				{
; 219  : 					for (j=0; j < (unsigned)cur->size; j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN6@Update
$LN5@Update:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN6@Update:
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR [eax+1]
	jae	$LN4@Update

; 220  : 					{
; 221  : 						row = cur->data[j];

	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+69]
	mov	DWORD PTR _row$[ebp], edx

; 222  : 						if (row->cells[databaseTable->nextPingSendColumnIndex]->i < (int) time)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+1]
	cmp	eax, DWORD PTR _time$[ebp]
	jge	$LN3@Update

; 223  : 						{
; 224  : 							row->cells[databaseTable->systemIdColumnIndex]->Get((char*)&playerId, 0);

	push	0
	lea	eax, DWORD PTR _playerId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	push	edx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?Get@Cell@Table@DataStructures@@QAEXPADPAH@Z ; DataStructures::Table::Cell::Get

; 225  : 							if (peer->GetIndexFromPlayerID(playerId)==-1)

	mov	esi, esp
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN2@Update

; 226  : 							{
; 227  : 								peer->Ping(playerId.ToString(false), playerId.port, false);

	mov	esi, esp
	push	0
	movzx	eax, WORD PTR _playerId$[ebp+4]
	push	eax
	push	0
	lea	ecx, DWORD PTR _playerId$[ebp]
	call	?ToString@PlayerID@@QBEPAD_N@Z		; PlayerID::ToString
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 228  : 							}
; 229  : 							else

	jmp	SHORT $LN1@Update
$LN2@Update:

; 230  : 							{
; 231  : 								// Consider the fact that they are connected to be a ping response
; 232  : 								row->cells[databaseTable->lastPingResponseColumnIndex]->i=time;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	push	ecx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _time$[ebp]
	mov	DWORD PTR [edx+1], eax
$LN1@Update:

; 233  : 							}
; 234  : 							
; 235  : 							row->cells[databaseTable->nextPingSendColumnIndex]->i=time+SEND_PING_INTERVAL+(randomMT()%1000);

	call	?randomMT@@YAIXZ			; randomMT
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	mov	eax, DWORD PTR _time$[ebp]
	lea	esi, DWORD PTR [eax+edx+15000]
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	push	edx
	mov	ecx, DWORD PTR _row$[ebp]
	call	??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+1], esi
$LN3@Update:

; 236  : 						}
; 237  : 					}

	jmp	$LN5@Update
$LN4@Update:

; 238  : 					cur=cur->next;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+133]
	mov	DWORD PTR _cur$[ebp], ecx

; 239  : 				}

	jmp	$LN8@Update
$LN20@Update:

; 240  : 			}
; 241  : 		}
; 242  : 	}

	jmp	$LN22@Update
$LN21@Update:

; 243  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _removeList$[ebp]
	call	??1?$List@I@DataStructures@@QAE@XZ	; DataStructures::List<unsigned int>::~List<unsigned int>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@Update
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN31@Update:
	DD	2
	DD	$LN30@Update
$LN30@Update:
	DD	-112					; ffffff90H
	DD	12					; 0000000cH
	DD	$LN27@Update
	DD	-128					; ffffff80H
	DD	6
	DD	$LN28@Update
$LN28@Update:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
$LN27@Update:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z$0:
	lea	ecx, DWORD PTR _removeList$[ebp]
	jmp	??1?$List@I@DataStructures@@QAE@XZ	; DataStructures::List<unsigned int>::~List<unsigned int>
__ehhandler$?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Update@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z ENDP ; LightweightDatabaseServer::Update
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?OnAttach@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnAttach@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z PROC ; LightweightDatabaseServer::OnAttach, COMDAT
; _this$ = ecx

; 169  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 
; 171  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?OnAttach@LightweightDatabaseServer@@UAEXPAVRakPeerInterface@@@Z ENDP ; LightweightDatabaseServer::OnAttach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?GetTableRows@LightweightDatabaseServer@@QAEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@PAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tableName$ = 8						; size = 4
?GetTableRows@LightweightDatabaseServer@@QAEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@PAD@Z PROC ; LightweightDatabaseServer::GetTableRows, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 	if (database.Has(tableName))

	lea	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Has@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Has
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetTableRo

; 43   : 		database.Get(tableName)->table.GetRows().GetListHead();

	lea	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Get
	mov	ecx, DWORD PTR [eax]
	add	ecx, 156				; 0000009cH
	call	?GetRows@Table@DataStructures@@QAEAAV?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::Table::GetRows
	mov	ecx, eax
	call	?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead
$LN1@GetTableRo:

; 44   : 	return 0;

	xor	eax, eax

; 45   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetTableRows@LightweightDatabaseServer@@QAEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@PAD@Z ENDP ; LightweightDatabaseServer::GetTableRows
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z
_TEXT	SEGMENT
tv84 = -220						; size = 4
_databaseTable$ = -20					; size = 4
_this$ = -8						; size = 4
_tableName$ = 8						; size = 4
?GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z PROC ; LightweightDatabaseServer::GetAndIncrementRowID, COMDAT
; _this$ = ecx

; 161  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 	LightweightDatabaseServer::DatabaseTable *databaseTable;
; 163  : 	databaseTable = database.Get(tableName);

	lea	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Get
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _databaseTable$[ebp], ecx

; 164  : 	RakAssert(databaseTable);

	cmp	DWORD PTR _databaseTable$[ebp], 0
	jne	SHORT $LN3@GetAndIncr
	mov	eax, DWORD PTR ?__LINE__Var@?1??GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z@4JA
	add	eax, 3
	push	eax
	push	OFFSET ??_C@_1GM@FKEIMHDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAl?$AAi?$AAg?$AAh?$AAt?$AAw?$AAe?$AAi@
	push	OFFSET ??_C@_1BM@OGMPKGIK@?$AAd?$AAa?$AAt?$AAa?$AAb?$AAa?$AAs?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@GetAndIncr:

; 165  : 	RakAssert(databaseTable->autogenerateRowIDs==true);

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+103]
	cmp	ecx, 1
	je	SHORT $LN4@GetAndIncr
	mov	edx, DWORD PTR ?__LINE__Var@?1??GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z@4JA
	add	edx, 4
	push	edx
	push	OFFSET ??_C@_1GM@FKEIMHDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAl?$AAi?$AAg?$AAh?$AAt?$AAw?$AAe?$AAi@
	push	OFFSET ??_C@_1FA@EHBBMKHP@?$AAd?$AAa?$AAt?$AAa?$AAb?$AAa?$AAs?$AAe?$AAT?$AAa?$AAb?$AAl?$AAe?$AA?9?$AA?$DO?$AAa?$AAu?$AAt?$AAo?$AAg?$AAe?$AAn?$AAe?$AAr?$AAa?$AAt?$AAe?$AAR?$AAo?$AAw?$AAI?$AAD@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@GetAndIncr:

; 166  : 	return ++(databaseTable->nextRowId) - 1;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	add	ecx, 1
	mov	DWORD PTR tv84[ebp], ecx
	mov	edx, DWORD PTR _databaseTable$[ebp]
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR [edx+136], eax
	mov	eax, DWORD PTR tv84[ebp]
	sub	eax, 1

; 167  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAndIncrementRowID@LightweightDatabaseServer@@QAEIPAD@Z ENDP ; LightweightDatabaseServer::GetAndIncrementRowID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?Clear@LightweightDatabaseServer@@QAEXXZ
_TEXT	SEGMENT
tv83 = -244						; size = 4
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
?Clear@LightweightDatabaseServer@@QAEXXZ PROC		; LightweightDatabaseServer::Clear, COMDAT
; _this$ = ecx

; 149  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 150  : 	unsigned i;
; 151  : 
; 152  : 	for (i=0; i < database.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Clear
$LN2@Clear:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@Clear:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN1@Clear

; 153  : 	{
; 154  : 		database[i]->table.Clear();

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 156				; 0000009cH
	call	?Clear@Table@DataStructures@@QAEXXZ	; DataStructures::Table::Clear

; 155  : 		delete database[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QBEAAPAUDatabaseTable@LightweightDatabaseServer@@I@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN6@Clear
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_GDatabaseTable@LightweightDatabaseServer@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN7@Clear
$LN6@Clear:
	mov	DWORD PTR tv83[ebp], 0
$LN7@Clear:

; 156  : 	}

	jmp	$LN2@Clear
$LN1@Clear:

; 157  : 
; 158  : 	database.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Clear@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Clear

; 159  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@LightweightDatabaseServer@@QAEXXZ ENDP		; LightweightDatabaseServer::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?RemoveTable@LightweightDatabaseServer@@QAE_NPAD@Z
_TEXT	SEGMENT
tv78 = -244						; size = 4
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_databaseTable$ = -20					; size = 4
_this$ = -8						; size = 4
_tableName$ = 8						; size = 4
?RemoveTable@LightweightDatabaseServer@@QAE_NPAD@Z PROC	; LightweightDatabaseServer::RemoveTable, COMDAT
; _this$ = ecx

; 137  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 138  : 	LightweightDatabaseServer::DatabaseTable *databaseTable;
; 139  : 	databaseTable = database.Get(tableName);

	lea	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Get
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _databaseTable$[ebp], ecx

; 140  : 	if (databaseTable==0)

	cmp	DWORD PTR _databaseTable$[ebp], 0
	jne	SHORT $LN1@RemoveTabl

; 141  : 		return false;

	xor	al, al
	jmp	SHORT $LN2@RemoveTabl
$LN1@RemoveTabl:

; 142  : 	// Be sure to call Delete on database before I do the actual pointer deletion since the key won't be valid after that time.
; 143  : 	database.Delete(tableName);

	lea	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Delete@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Delete

; 144  : 	databaseTable->table.Clear();

	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?Clear@Table@DataStructures@@QAEXXZ	; DataStructures::Table::Clear

; 145  : 	delete databaseTable;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@RemoveTabl
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_GDatabaseTable@LightweightDatabaseServer@@QAEPAXI@Z
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@RemoveTabl
$LN4@RemoveTabl:
	mov	DWORD PTR tv78[ebp], 0
$LN5@RemoveTabl:

; 146  : 	return true;

	mov	al, 1
$LN2@RemoveTabl:

; 147  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTable@LightweightDatabaseServer@@QAE_NPAD@Z ENDP	; LightweightDatabaseServer::RemoveTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z
_TEXT	SEGMENT
tv82 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
_databaseTable$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_tableName$ = 8						; size = 4
_allowRemoteQuery$ = 12					; size = 1
_allowRemoteUpdate$ = 16				; size = 1
_allowRemoteRemove$ = 20				; size = 1
_queryPassword$ = 24					; size = 4
_updatePassword$ = 28					; size = 4
_removePassword$ = 32					; size = 4
_oneRowPerSystemId$ = 36				; size = 1
_onlyUpdateOwnRows$ = 40				; size = 1
_removeRowOnPingFailure$ = 44				; size = 1
_removeRowOnDisconnect$ = 48				; size = 1
_autogenerateRowIDs$ = 52				; size = 1
?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z PROC ; LightweightDatabaseServer::AddTable, COMDAT
; _this$ = ecx

; 58   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	if (tableName==0 || tableName[0]==0)

	cmp	DWORD PTR _tableName$[ebp], 0
	je	SHORT $LN15@AddTable
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _tableName$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	jne	SHORT $LN16@AddTable
$LN15@AddTable:

; 60   : 		return 0;

	xor	eax, eax
	jmp	$LN17@AddTable
$LN16@AddTable:

; 61   : 	if (database.Has(tableName))

	lea	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Has@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Has
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@AddTable

; 62   : 		return 0;

	xor	eax, eax
	jmp	$LN17@AddTable
$LN14@AddTable:

; 63   : 	DatabaseTable *databaseTable = new DatabaseTable;

	push	192					; 000000c0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN19@AddTable
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0DatabaseTable@LightweightDatabaseServer@@QAE@XZ
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN20@AddTable
$LN19@AddTable:
	mov	DWORD PTR tv82[ebp], 0
$LN20@AddTable:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _databaseTable$[ebp], ecx

; 64   : 
; 65   : 	strncpy(databaseTable->tableName, tableName, _SIMPLE_DATABASE_TABLE_NAME_LENGTH);

	push	32					; 00000020H
	mov	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 104				; 00000068H
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 66   : 	databaseTable->tableName[_SIMPLE_DATABASE_TABLE_NAME_LENGTH]=0;

	mov	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [ecx+eax+104], 0

; 67   : 
; 68   : 	if (allowRemoteUpdate)

	movzx	eax, BYTE PTR _allowRemoteUpdate$[ebp]
	test	eax, eax
	je	SHORT $LN13@AddTable

; 69   : 	{
; 70   : 		strncpy(databaseTable->updatePassword, updatePassword, _SIMPLE_DATABASE_PASSWORD_LENGTH);

	push	32					; 00000020H
	mov	eax, DWORD PTR _updatePassword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 3
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 71   : 		databaseTable->updatePassword[_SIMPLE_DATABASE_PASSWORD_LENGTH]=0;

	mov	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [ecx+eax+3], 0

; 72   : 	}
; 73   : 	else

	jmp	SHORT $LN12@AddTable
$LN13@AddTable:

; 74   : 		databaseTable->updatePassword[0]=0;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [edx+ecx+3], 0
$LN12@AddTable:

; 75   : 
; 76   : 	if (allowRemoteQuery)

	movzx	eax, BYTE PTR _allowRemoteQuery$[ebp]
	test	eax, eax
	je	SHORT $LN11@AddTable

; 77   : 	{
; 78   : 		strncpy(databaseTable->queryPassword, queryPassword, _SIMPLE_DATABASE_PASSWORD_LENGTH);

	push	32					; 00000020H
	mov	eax, DWORD PTR _queryPassword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 35					; 00000023H
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 79   : 		databaseTable->queryPassword[_SIMPLE_DATABASE_PASSWORD_LENGTH]=0;

	mov	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [ecx+eax+35], 0

; 80   : 	}
; 81   : 	else

	jmp	SHORT $LN10@AddTable
$LN11@AddTable:

; 82   : 		databaseTable->queryPassword[0]=0;	

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [edx+ecx+35], 0
$LN10@AddTable:

; 83   : 
; 84   : 	if (allowRemoteRemove)

	movzx	eax, BYTE PTR _allowRemoteRemove$[ebp]
	test	eax, eax
	je	SHORT $LN9@AddTable

; 85   : 	{
; 86   : 		strncpy(databaseTable->removePassword, removePassword, _SIMPLE_DATABASE_PASSWORD_LENGTH);

	push	32					; 00000020H
	mov	eax, DWORD PTR _removePassword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 67					; 00000043H
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 87   : 		databaseTable->removePassword[_SIMPLE_DATABASE_PASSWORD_LENGTH]=0;

	mov	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [ecx+eax+67], 0

; 88   : 	}
; 89   : 	else

	jmp	SHORT $LN8@AddTable
$LN9@AddTable:

; 90   : 		databaseTable->removePassword[0]=0;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [edx+ecx+67], 0
$LN8@AddTable:

; 91   : 
; 92   : 	if (allowRemoteUpdate)

	movzx	eax, BYTE PTR _allowRemoteUpdate$[ebp]
	test	eax, eax
	je	SHORT $LN7@AddTable

; 93   : 	{
; 94   : 		databaseTable->allowRemoteUpdate=true;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [eax], 1

; 95   : 		databaseTable->oneRowPerSystemId=oneRowPerSystemId;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	cl, BYTE PTR _oneRowPerSystemId$[ebp]
	mov	BYTE PTR [eax+99], cl

; 96   : 		databaseTable->onlyUpdateOwnRows=onlyUpdateOwnRows;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	cl, BYTE PTR _onlyUpdateOwnRows$[ebp]
	mov	BYTE PTR [eax+100], cl

; 97   : 		databaseTable->removeRowOnPingFailure=removeRowOnPingFailure;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	cl, BYTE PTR _removeRowOnPingFailure$[ebp]
	mov	BYTE PTR [eax+101], cl

; 98   : 		databaseTable->removeRowOnDisconnect=removeRowOnDisconnect;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	cl, BYTE PTR _removeRowOnDisconnect$[ebp]
	mov	BYTE PTR [eax+102], cl

; 99   : 	}
; 100  : 	else

	jmp	SHORT $LN6@AddTable
$LN7@AddTable:

; 101  : 	{
; 102  : 		// All these parameters are related to IP tracking, which is not done if remote updates are not allowed
; 103  : 		databaseTable->allowRemoteUpdate=true;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [eax], 1

; 104  : 		databaseTable->oneRowPerSystemId=false;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [eax+99], 0

; 105  : 		databaseTable->onlyUpdateOwnRows=false;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [eax+100], 0

; 106  : 		databaseTable->removeRowOnPingFailure=false;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [eax+101], 0

; 107  : 		databaseTable->removeRowOnDisconnect=false;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	BYTE PTR [eax+102], 0
$LN6@AddTable:

; 108  : 	}
; 109  : 	
; 110  : 	databaseTable->nextRowId=0;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [eax+136], 0

; 111  : 	databaseTable->nextRowPingCheck=0;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [eax+152], 0

; 112  : 	
; 113  : 	databaseTable->autogenerateRowIDs=autogenerateRowIDs;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	cl, BYTE PTR _autogenerateRowIDs$[ebp]
	mov	BYTE PTR [eax+103], cl

; 114  : 	databaseTable->allowRemoteRemove=allowRemoteRemove;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	cl, BYTE PTR _allowRemoteRemove$[ebp]
	mov	BYTE PTR [eax+2], cl

; 115  : 	databaseTable->allowRemoteQuery=allowRemoteQuery;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	cl, BYTE PTR _allowRemoteQuery$[ebp]
	mov	BYTE PTR [eax+1], cl

; 116  : 	
; 117  : 	database.SetNew(databaseTable->tableName, databaseTable);

	mov	eax, DWORD PTR _databaseTable$[ebp]
	add	eax, 104				; 00000068H
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR _databaseTable$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?SetNew@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEXABQADABQAUDatabaseTable@LightweightDatabaseServer@@@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::SetNew

; 118  : 
; 119  : 	if ( oneRowPerSystemId || onlyUpdateOwnRows || removeRowOnPingFailure || removeRowOnDisconnect)

	movzx	eax, BYTE PTR _oneRowPerSystemId$[ebp]
	test	eax, eax
	jne	SHORT $LN4@AddTable
	movzx	eax, BYTE PTR _onlyUpdateOwnRows$[ebp]
	test	eax, eax
	jne	SHORT $LN4@AddTable
	movzx	eax, BYTE PTR _removeRowOnPingFailure$[ebp]
	test	eax, eax
	jne	SHORT $LN4@AddTable
	movzx	eax, BYTE PTR _removeRowOnDisconnect$[ebp]
	test	eax, eax
	je	SHORT $LN5@AddTable
$LN4@AddTable:

; 120  : 		databaseTable->systemIdColumnIndex=databaseTable->table.AddColumn(SYSTEM_ID_COLUMN_NAME, DataStructures::Table::BINARY);

	push	2
	push	OFFSET ??_C@_0L@OGGHIFPB@__systemId?$AA@
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?AddColumn@Table@DataStructures@@QAEIQADW4ColumnType@12@@Z ; DataStructures::Table::AddColumn
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [ecx+140], eax

; 121  : 	else

	jmp	SHORT $LN3@AddTable
$LN5@AddTable:

; 122  : 		databaseTable->systemIdColumnIndex=(unsigned) -1;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [eax+140], -1
$LN3@AddTable:

; 123  : 	if (databaseTable->removeRowOnPingFailure)

	mov	eax, DWORD PTR _databaseTable$[ebp]
	movzx	ecx, BYTE PTR [eax+101]
	test	ecx, ecx
	je	SHORT $LN2@AddTable

; 124  : 	{
; 125  : 		databaseTable->lastPingResponseColumnIndex=databaseTable->table.AddColumn(LAST_PING_RESPONSE_COLUMN_NAME, DataStructures::Table::NUMERIC);

	push	0
	push	OFFSET ??_C@_0BH@PHDJLFLA@__lastPingResponseTime?$AA@
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?AddColumn@Table@DataStructures@@QAEIQADW4ColumnType@12@@Z ; DataStructures::Table::AddColumn
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [ecx+144], eax

; 126  : 		databaseTable->nextPingSendColumnIndex=databaseTable->table.AddColumn(NEXT_PING_SEND_COLUMN_NAME, DataStructures::Table::NUMERIC);

	push	0
	push	OFFSET ??_C@_0BD@NEFEFGEE@__nextPingSendTime?$AA@
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	add	ecx, 156				; 0000009cH
	call	?AddColumn@Table@DataStructures@@QAEIQADW4ColumnType@12@@Z ; DataStructures::Table::AddColumn
	mov	ecx, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [ecx+148], eax

; 127  : 	}
; 128  : 	else

	jmp	SHORT $LN1@AddTable
$LN2@AddTable:

; 129  : 	{
; 130  : 		databaseTable->lastPingResponseColumnIndex=(unsigned) -1;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [eax+144], -1

; 131  : 		databaseTable->nextPingSendColumnIndex=(unsigned) -1;

	mov	eax, DWORD PTR _databaseTable$[ebp]
	mov	DWORD PTR [eax+148], -1
$LN1@AddTable:

; 132  : 	}
; 133  : 
; 134  : 	return &(databaseTable->table);

	mov	eax, DWORD PTR _databaseTable$[ebp]
	add	eax, 156				; 0000009cH
$LN17@AddTable:

; 135  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@AddTable
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
$LN25@AddTable:
	DD	1
	DD	$LN24@AddTable
$LN24@AddTable:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN22@AddTable
$LN22@AddTable:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD_N11QAD2211111@Z ENDP ; LightweightDatabaseServer::AddTable
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ?GetTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tableName$ = 8						; size = 4
?GetTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD@Z PROC ; LightweightDatabaseServer::GetTable, COMDAT
; _this$ = ecx

; 35   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 36   : 	if (database.Has(tableName))

	lea	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Has@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE_NABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Has
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetTable

; 37   : 		return &(database.Get(tableName)->table);

	lea	eax, DWORD PTR _tableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Get@?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAEAAPAUDatabaseTable@LightweightDatabaseServer@@ABQAD@Z ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Get
	mov	eax, DWORD PTR [eax]
	add	eax, 156				; 0000009cH
	jmp	SHORT $LN2@GetTable
$LN1@GetTable:

; 38   : 	return 0;

	xor	eax, eax
$LN2@GetTable:

; 39   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetTable@LightweightDatabaseServer@@QAEPAVTable@DataStructures@@PAD@Z ENDP ; LightweightDatabaseServer::GetTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ??1LightweightDatabaseServer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1LightweightDatabaseServer@@QAE@XZ PROC		; LightweightDatabaseServer::~LightweightDatabaseServer, COMDAT
; _this$ = ecx

; 31   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1LightweightDatabaseServer@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LightweightDatabaseServer@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 32   : 	Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@LightweightDatabaseServer@@QAEXXZ ; LightweightDatabaseServer::Clear

; 33   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::~Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1LightweightDatabaseServer@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::~Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>
__ehhandler$??1LightweightDatabaseServer@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1LightweightDatabaseServer@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1LightweightDatabaseServer@@QAE@XZ ENDP		; LightweightDatabaseServer::~LightweightDatabaseServer
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\lightweightdatabaseserver.cpp
;	COMDAT ??0LightweightDatabaseServer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0LightweightDatabaseServer@@QAE@XZ PROC		; LightweightDatabaseServer::LightweightDatabaseServer, COMDAT
; _this$ = ecx

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluginInterface@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LightweightDatabaseServer@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$Map@PADPAUDatabaseTable@LightweightDatabaseServer@@$1?DatabaseTableComp@2@SAHABQAD0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>::Map<char *,LightweightDatabaseServer::DatabaseTable *,&LightweightDatabaseServer::DatabaseTableComp>

; 28   : 
; 29   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0LightweightDatabaseServer@@QAE@XZ ENDP		; LightweightDatabaseServer::LightweightDatabaseServer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DatabaseCellUpdate@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DatabaseCellUpdate@@QAE@XZ PROC			; DatabaseCellUpdate::~DatabaseCellUpdate, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Cell@Table@DataStructures@@QAE@XZ	; DataStructures::Table::Cell::~Cell
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DatabaseCellUpdate@@QAE@XZ ENDP			; DatabaseCellUpdate::~DatabaseCellUpdate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DatabaseCellUpdate@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DatabaseCellUpdate@@QAE@XZ PROC			; DatabaseCellUpdate::DatabaseCellUpdate, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Cell@Table@DataStructures@@QAE@XZ	; DataStructures::Table::Cell::Cell
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DatabaseCellUpdate@@QAE@XZ ENDP			; DatabaseCellUpdate::DatabaseCellUpdate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DatabaseFilter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DatabaseFilter@@QAE@XZ PROC				; DatabaseFilter::~DatabaseFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Cell@Table@DataStructures@@QAE@XZ	; DataStructures::Table::Cell::~Cell
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DatabaseFilter@@QAE@XZ ENDP				; DatabaseFilter::~DatabaseFilter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DatabaseFilter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DatabaseFilter@@QAE@XZ PROC				; DatabaseFilter::DatabaseFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Cell@Table@DataStructures@@QAE@XZ	; DataStructures::Table::Cell::Cell
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DatabaseFilter@@QAE@XZ ENDP				; DatabaseFilter::DatabaseFilter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UColumnDescriptor@Table@DataStructures@@@DataStructures@@QBEAAUColumnDescriptor@Table@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UColumnDescriptor@Table@DataStructures@@@DataStructures@@QBEAAUColumnDescriptor@Table@1@I@Z PROC ; DataStructures::List<DataStructures::Table::ColumnDescriptor>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UColumnDescriptor@Table@DataStructures@@@DataStructures@@QBEAAUColumnDescriptor@Table@1@I@Z ENDP ; DataStructures::List<DataStructures::Table::ColumnDescriptor>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_bplustree.h
;	COMDAT ?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ PROC ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead, COMDAT
; _this$ = ecx

; 947  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 948  : 		return leftmostLeaf;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 949  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetListHead@?$BPlusTree@IPAURow@Table@DataStructures@@$0BA@@DataStructures@@QBEPAU?$Page@IPAURow@Table@DataStructures@@$0BA@@2@XZ ENDP ; DataStructures::BPlusTree<unsigned int,DataStructures::Table::Row *,16>::GetListHead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z PROC ; DataStructures::List<DataStructures::Table::Cell *>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@PAUCell@Table@DataStructures@@@DataStructures@@QBEAAPAUCell@Table@1@I@Z ENDP ; DataStructures::List<DataStructures::Table::Cell *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluginInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluginInterface@@QAE@XZ PROC				; PluginInterface::PluginInterface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluginInterface@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluginInterface@@QAE@XZ ENDP				; PluginInterface::PluginInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
