; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\fontrender.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?GetScreenWidth@CGame@@QAEHXZ			; CGame::GetScreenWidth
PUBLIC	??0CFontRender@@QAE@PAUIDirect3DDevice9@@@Z	; CFontRender::CFontRender
PUBLIC	??1CFontRender@@QAE@XZ				; CFontRender::~CFontRender
PUBLIC	?CreateFonts@CFontRender@@QAEXXZ		; CFontRender::CreateFonts
PUBLIC	?DeleteDeviceObjects@CFontRender@@QAEXXZ	; CFontRender::DeleteDeviceObjects
PUBLIC	?RestoreDeviceObjects@CFontRender@@QAEXXZ	; CFontRender::RestoreDeviceObjects
PUBLIC	?MeasureText@CFontRender@@QAE?AUtagSIZE@@PAD@Z	; CFontRender::MeasureText
PUBLIC	?RenderText@CFontRender@@QAEXPADUtagRECT@@K@Z	; CFontRender::RenderText
PUBLIC	??_C@_05MPFIAJAP@Arial?$AA@			; `string'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_D3DXCreateFontA@48:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_05MPFIAJAP@Arial?$AA@
CONST	SEGMENT
??_C@_05MPFIAJAP@Arial?$AA@ DB 'Arial', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\fontrender.cpp
;	COMDAT ?RenderText@CFontRender@@QAEXPADUtagRECT@@K@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_sz$ = 8						; size = 4
_rect$ = 12						; size = 16
_dwColor$ = 28						; size = 4
?RenderText@CFontRender@@QAEXPADUtagRECT@@K@Z PROC	; CFontRender::RenderText, COMDAT
; _this$ = ecx

; 70   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 	rect.left += 1;

	mov	eax, DWORD PTR _rect$[ebp]
	add	eax, 1
	mov	DWORD PTR _rect$[ebp], eax

; 72   : 	rect.top += 1;

	mov	eax, DWORD PTR _rect$[ebp+4]
	add	eax, 1
	mov	DWORD PTR _rect$[ebp+4], eax

; 73   : 	m_pD3DFont->DrawText(0,sz,-1,&rect,DT_NOCLIP|DT_LEFT,0xFF000000);

	mov	esi, esp
	push	-16777216				; ff000000H
	push	256					; 00000100H
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _sz$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+56]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 74   : 	rect.left -= 1;

	mov	eax, DWORD PTR _rect$[ebp]
	sub	eax, 1
	mov	DWORD PTR _rect$[ebp], eax

; 75   : 	rect.top -= 1;

	mov	eax, DWORD PTR _rect$[ebp+4]
	sub	eax, 1
	mov	DWORD PTR _rect$[ebp+4], eax

; 76   :     
; 77   : 	// the text
; 78   : 	m_pD3DFont->DrawText(0,sz,-1,&rect,DT_NOCLIP|DT_LEFT,dwColor);	

	mov	esi, esp
	mov	eax, DWORD PTR _dwColor$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _sz$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?RenderText@CFontRender@@QAEXPADUtagRECT@@K@Z ENDP	; CFontRender::RenderText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\fontrender.cpp
;	COMDAT ?MeasureText@CFontRender@@QAE?AUtagSIZE@@PAD@Z
_TEXT	SEGMENT
_ret$ = -52						; size = 8
_rect$ = -36						; size = 16
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
?MeasureText@CFontRender@@QAE?AUtagSIZE@@PAD@Z PROC	; CFontRender::MeasureText, COMDAT
; _this$ = ecx

; 58   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	RECT rect;
; 60   : 	SIZE ret;
; 61   : 
; 62   : 	m_pD3DFont->DrawText(0,szString,-1,&rect,DT_CALCRECT|DT_LEFT,0xFF000000);

	mov	esi, esp
	push	-16777216				; ff000000H
	push	1024					; 00000400H
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _szString$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+56]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 63   : 	ret.cx = rect.right - rect.left;

	mov	eax, DWORD PTR _rect$[ebp+8]
	sub	eax, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _ret$[ebp], eax

; 64   : 	ret.cy = rect.bottom - rect.top;

	mov	eax, DWORD PTR _rect$[ebp+12]
	sub	eax, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR _ret$[ebp+4], eax

; 65   : 
; 66   : 	return ret;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ret$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 67   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@MeasureTex
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN6@MeasureTex:
	DD	2
	DD	$LN5@MeasureTex
$LN5@MeasureTex:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN3@MeasureTex
	DD	-52					; ffffffccH
	DD	8
	DD	$LN4@MeasureTex
$LN4@MeasureTex:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN3@MeasureTex:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?MeasureText@CFontRender@@QAE?AUtagSIZE@@PAD@Z ENDP	; CFontRender::MeasureText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\fontrender.cpp
;	COMDAT ?RestoreDeviceObjects@CFontRender@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?RestoreDeviceObjects@CFontRender@@QAEXXZ PROC		; CFontRender::RestoreDeviceObjects, COMDAT
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 54   : 	m_pD3DFont->OnResetDevice();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+68]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 55   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RestoreDeviceObjects@CFontRender@@QAEXXZ ENDP		; CFontRender::RestoreDeviceObjects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\fontrender.cpp
;	COMDAT ?DeleteDeviceObjects@CFontRender@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DeleteDeviceObjects@CFontRender@@QAEXXZ PROC		; CFontRender::DeleteDeviceObjects, COMDAT
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 	m_pD3DFont->OnLostDevice();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 51   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteDeviceObjects@CFontRender@@QAEXXZ ENDP		; CFontRender::DeleteDeviceObjects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\fontrender.cpp
;	COMDAT ?CreateFonts@CFontRender@@QAEXXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
_iFontSize$ = -20					; size = 4
_this$ = -8						; size = 4
?CreateFonts@CFontRender@@QAEXXZ PROC			; CFontRender::CreateFonts, COMDAT
; _this$ = ecx

; 29   : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 30   : 	if(!m_pD3DDevice) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN7@CreateFont
	jmp	$LN8@CreateFont
$LN7@CreateFont:

; 31   : 	if(m_pD3DFont) SAFE_DELETE(m_pD3DFont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@CreateFont
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@CreateFont
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN6@CreateFont:

; 32   : 
; 33   : 	int iFontSize;
; 34   : 
; 35   : 	if(pGame->GetScreenWidth() < 1024) {

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetScreenWidth@CGame@@QAEHXZ		; CGame::GetScreenWidth
	cmp	eax, 1024				; 00000400H
	jge	SHORT $LN4@CreateFont

; 36   : 		iFontSize = 14;

	mov	DWORD PTR _iFontSize$[ebp], 14		; 0000000eH
	jmp	SHORT $LN3@CreateFont
$LN4@CreateFont:

; 37   : 	} else if(pGame->GetScreenWidth() == 1024) {

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetScreenWidth@CGame@@QAEHXZ		; CGame::GetScreenWidth
	cmp	eax, 1024				; 00000400H
	jne	SHORT $LN2@CreateFont

; 38   : 		iFontSize = 16;

	mov	DWORD PTR _iFontSize$[ebp], 16		; 00000010H

; 39   : 	} else {

	jmp	SHORT $LN3@CreateFont
$LN2@CreateFont:

; 40   : 		iFontSize = 18;

	mov	DWORD PTR _iFontSize$[ebp], 18		; 00000012H
$LN3@CreateFont:

; 41   : 	}
; 42   : 
; 43   : 	D3DXCreateFont(m_pD3DDevice, iFontSize, 0, FW_BOLD, 1, FALSE,
; 44   : 		DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, DEFAULT_QUALITY, DEFAULT_PITCH, "Arial", &m_pD3DFont);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET ??_C@_05MPFIAJAP@Arial?$AA@
	push	0
	push	0
	push	0
	push	1
	push	0
	push	1
	push	700					; 000002bcH
	push	0
	mov	ecx, DWORD PTR _iFontSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_D3DXCreateFontA@48
$LN8@CreateFont:

; 45   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateFonts@CFontRender@@QAEXXZ ENDP			; CFontRender::CreateFonts
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\fontrender.cpp
;	COMDAT ??1CFontRender@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1CFontRender@@QAE@XZ PROC				; CFontRender::~CFontRender, COMDAT
; _this$ = ecx

; 24   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 25   : 	if(m_pD3DFont) SAFE_DELETE(m_pD3DFont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@CFontRende
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@CFontRende
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@CFontRende:

; 26   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFontRender@@QAE@XZ ENDP				; CFontRender::~CFontRender
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\fontrender.cpp
;	COMDAT ??0CFontRender@@QAE@PAUIDirect3DDevice9@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pD3DDevice$ = 8					; size = 4
??0CFontRender@@QAE@PAUIDirect3DDevice9@@@Z PROC	; CFontRender::CFontRender, COMDAT
; _this$ = ecx

; 16   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 17   : 	m_pD3DDevice = pD3DDevice;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pD3DDevice$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 18   : 	m_pD3DFont = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 19   : 
; 20   : 	CreateFonts();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateFonts@CFontRender@@QAEXXZ	; CFontRender::CreateFonts

; 21   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CFontRender@@QAE@PAUIDirect3DDevice9@@@Z ENDP	; CFontRender::CFontRender
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.h
;	COMDAT ?GetScreenWidth@CGame@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetScreenWidth@CGame@@QAEHXZ PROC			; CGame::GetScreenWidth, COMDAT
; _this$ = ecx

; 152  : 	int GetScreenWidth() { return *(int*)0xC17044; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ds:12677188
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetScreenWidth@CGame@@QAEHXZ ENDP			; CGame::GetScreenWidth
_TEXT	ENDS
END
