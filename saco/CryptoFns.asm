; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\archive\CryptoFns.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?xCryptOffsAcquireContext@@3KA			; xCryptOffsAcquireContext
PUBLIC	?xCryptOffsReleaseContext@@3KA			; xCryptOffsReleaseContext
PUBLIC	?xCryptOffsCreateHash@@3KA			; xCryptOffsCreateHash
PUBLIC	?xCryptOffsDestroyHash@@3KA			; xCryptOffsDestroyHash
PUBLIC	?xCryptOffsHashData@@3KA			; xCryptOffsHashData
PUBLIC	?xCryptOffsDestroyKey@@3KA			; xCryptOffsDestroyKey
PUBLIC	?xCryptOffsImportKey@@3KA			; xCryptOffsImportKey
PUBLIC	?xCryptOffsVerifySignature@@3KA			; xCryptOffsVerifySignature
_BSS	SEGMENT
?xCryptOffsAcquireContext@@3KA DD 01H DUP (?)		; xCryptOffsAcquireContext
?xCryptOffsReleaseContext@@3KA DD 01H DUP (?)		; xCryptOffsReleaseContext
?xCryptOffsCreateHash@@3KA DD 01H DUP (?)		; xCryptOffsCreateHash
?xCryptOffsDestroyHash@@3KA DD 01H DUP (?)		; xCryptOffsDestroyHash
?xCryptOffsHashData@@3KA DD 01H DUP (?)			; xCryptOffsHashData
?xCryptOffsDestroyKey@@3KA DD 01H DUP (?)		; xCryptOffsDestroyKey
?xCryptOffsImportKey@@3KA DD 01H DUP (?)		; xCryptOffsImportKey
?xCryptOffsVerifySignature@@3KA DD 01H DUP (?)		; xCryptOffsVerifySignature
_BSS	ENDS
CONST	SEGMENT
_CRYPT_MODULE DB '41#4%<fgU', 00H
	ORG $+2
_CRYPT_FN_AcquireContext DB 016H
	DB	027H
	DB	02cH
	DB	025H
	DB	021H
	DB	014H
	DB	036H
	DB	024H
	DB	020H
	DB	03cH
	DB	027H
	DB	030H
	DB	016H
	DB	03aH
	DB	03bH
	DB	021H
	DB	030H
	DB	02dH
	DB	021H
	DB	014H
	DB	055H
	DB	00H
	DB	00H
	DB	00H
_CRYPT_FN_ReleaseContext DB 016H
	DB	027H
	DB	02cH
	DB	025H
	DB	021H
	DB	07H
	DB	030H
	DB	039H
	DB	030H
	DB	034H
	DB	026H
	DB	030H
	DB	016H
	DB	03aH
	DB	03bH
	DB	021H
	DB	030H
	DB	02dH
	DB	021H
	DB	055H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_CRYPT_FN_CreateHash DB 016H
	DB	027H
	DB	02cH
	DB	025H
	DB	021H
	DB	016H
	DB	027H
	DB	030H
	DB	034H
	DB	021H
	DB	030H
	DB	01dH
	DB	034H
	DB	026H
	DB	03dH
	DB	055H
_CRYPT_FN_DestroyHash DB 016H
	DB	027H
	DB	02cH
	DB	025H
	DB	021H
	DB	011H
	DB	030H
	DB	026H
	DB	021H
	DB	027H
	DB	03aH
	DB	02cH
	DB	01dH
	DB	034H
	DB	026H
	DB	03dH
	DB	055H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_CRYPT_FN_HashData DB 016H
	DB	027H
	DB	02cH
	DB	025H
	DB	021H
	DB	01dH
	DB	034H
	DB	026H
	DB	03dH
	DB	011H
	DB	034H
	DB	021H
	DB	034H
	DB	055H
	DB	00H
	DB	00H
_CRYPT_FN_DestroyKey DB 016H
	DB	027H
	DB	02cH
	DB	025H
	DB	021H
	DB	011H
	DB	030H
	DB	026H
	DB	021H
	DB	027H
	DB	03aH
	DB	02cH
	DB	01eH
	DB	030H
	DB	02cH
	DB	055H
_CRYPT_FN_ImportKey DB 016H
	DB	027H
	DB	02cH
	DB	025H
	DB	021H
	DB	01cH
	DB	038H
	DB	025H
	DB	03aH
	DB	027H
	DB	021H
	DB	01eH
	DB	030H
	DB	02cH
	DB	055H
	DB	00H
_CRYPT_FN_VerifySignature DB 016H
	DB	027H
	DB	02cH
	DB	025H
	DB	021H
	DB	03H
	DB	030H
	DB	027H
	DB	03cH
	DB	033H
	DB	02cH
	DB	06H
	DB	03cH
	DB	032H
	DB	03bH
	DB	034H
	DB	021H
	DB	020H
	DB	027H
	DB	030H
	DB	014H
	DB	055H
	DB	00H
	DB	00H
CONST	ENDS
PUBLIC	?xCryptGetFunction@@YAP6GHXZPADK@Z		; xCryptGetFunction
PUBLIC	?xCryptCallAcquireContext@@YGHPAKPBD1KK@Z	; xCryptCallAcquireContext
PUBLIC	?xCryptCallReleaseContext@@YGHKK@Z		; xCryptCallReleaseContext
PUBLIC	?xCryptCallCreateHash@@YGHKIKKPAK@Z		; xCryptCallCreateHash
PUBLIC	?xCryptCallDestroyHash@@YGHK@Z			; xCryptCallDestroyHash
PUBLIC	?xCryptCallHashData@@YGHKPAEKK@Z		; xCryptCallHashData
PUBLIC	?xCryptCallDestroyKey@@YGHK@Z			; xCryptCallDestroyKey
PUBLIC	?xCryptCallImportKey@@YGHKPAEKKKPAK@Z		; xCryptCallImportKey
PUBLIC	?xCryptCallVerifySignature@@YGHKPAEKKPBDK@Z	; xCryptCallVerifySignature
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_strlen:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptCallVerifySignature@@YGHKPAEKKPBDK@Z
_TEXT	SEGMENT
_hHash$ = 8						; size = 4
_pbSignature$ = 12					; size = 4
_dwSigLen$ = 16						; size = 4
_hPubKey$ = 20						; size = 4
_sDescription$ = 24					; size = 4
_dwFlags$ = 28						; size = 4
?xCryptCallVerifySignature@@YGHKPAEKKPBDK@Z PROC	; xCryptCallVerifySignature, COMDAT

; 111  : CRYPT_IMPL_FN(VerifySignature, BOOL, (HCRYPTHASH hHash, BYTE* pbSignature, DWORD dwSigLen, HCRYPTKEY hPubKey, LPCTSTR sDescription, DWORD dwFlags))

	cmp	DWORD PTR ?xCryptOffsVerifySignature@@3KA, 0 ; xCryptOffsVerifySignature
	jne	SHORT $LN1@xCryptCall
	lea	eax, OFFSET _CRYPT_FN_VerifySignature
	push	eax
	call	?xCryptGetFunction@@YAP6GHXZPADK@Z	; xCryptGetFunction
	add	esp, 4
	mov	DWORD PTR ?xCryptOffsVerifySignature@@3KA, eax ; xCryptOffsVerifySignature
$LN1@xCryptCall:
	mov	eax, DWORD PTR ?xCryptOffsVerifySignature@@3KA ; xCryptOffsVerifySignature
	jmp	eax
?xCryptCallVerifySignature@@YGHKPAEKKPBDK@Z ENDP	; xCryptCallVerifySignature
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptCallImportKey@@YGHKPAEKKKPAK@Z
_TEXT	SEGMENT
_hProv$ = 8						; size = 4
_pbData$ = 12						; size = 4
_dwDataLen$ = 16					; size = 4
_hPubKey$ = 20						; size = 4
_dwFlags$ = 24						; size = 4
_phKey$ = 28						; size = 4
?xCryptCallImportKey@@YGHKPAEKKKPAK@Z PROC		; xCryptCallImportKey, COMDAT

; 110  : CRYPT_IMPL_FN(ImportKey,       BOOL, (HCRYPTPROV hProv, BYTE* pbData, DWORD dwDataLen, HCRYPTKEY hPubKey, DWORD dwFlags, HCRYPTKEY* phKey))

	cmp	DWORD PTR ?xCryptOffsImportKey@@3KA, 0	; xCryptOffsImportKey
	jne	SHORT $LN1@xCryptCall
	lea	eax, OFFSET _CRYPT_FN_ImportKey
	push	eax
	call	?xCryptGetFunction@@YAP6GHXZPADK@Z	; xCryptGetFunction
	add	esp, 4
	mov	DWORD PTR ?xCryptOffsImportKey@@3KA, eax ; xCryptOffsImportKey
$LN1@xCryptCall:
	mov	eax, DWORD PTR ?xCryptOffsImportKey@@3KA ; xCryptOffsImportKey
	jmp	eax
?xCryptCallImportKey@@YGHKPAEKKKPAK@Z ENDP		; xCryptCallImportKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptCallDestroyKey@@YGHK@Z
_TEXT	SEGMENT
_hKey$ = 8						; size = 4
?xCryptCallDestroyKey@@YGHK@Z PROC			; xCryptCallDestroyKey, COMDAT

; 109  : CRYPT_IMPL_FN(DestroyKey,      BOOL, (HCRYPTKEY hKey))

	cmp	DWORD PTR ?xCryptOffsDestroyKey@@3KA, 0	; xCryptOffsDestroyKey
	jne	SHORT $LN1@xCryptCall
	lea	eax, OFFSET _CRYPT_FN_DestroyKey
	push	eax
	call	?xCryptGetFunction@@YAP6GHXZPADK@Z	; xCryptGetFunction
	add	esp, 4
	mov	DWORD PTR ?xCryptOffsDestroyKey@@3KA, eax ; xCryptOffsDestroyKey
$LN1@xCryptCall:
	mov	eax, DWORD PTR ?xCryptOffsDestroyKey@@3KA ; xCryptOffsDestroyKey
	jmp	eax
?xCryptCallDestroyKey@@YGHK@Z ENDP			; xCryptCallDestroyKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptCallHashData@@YGHKPAEKK@Z
_TEXT	SEGMENT
_hHash$ = 8						; size = 4
_pbData$ = 12						; size = 4
_dwDataLen$ = 16					; size = 4
_dwFlags$ = 20						; size = 4
?xCryptCallHashData@@YGHKPAEKK@Z PROC			; xCryptCallHashData, COMDAT

; 108  : CRYPT_IMPL_FN(HashData,        BOOL, (HCRYPTHASH hHash, BYTE* pbData, DWORD dwDataLen, DWORD dwFlags))

	cmp	DWORD PTR ?xCryptOffsHashData@@3KA, 0	; xCryptOffsHashData
	jne	SHORT $LN1@xCryptCall
	lea	eax, OFFSET _CRYPT_FN_HashData
	push	eax
	call	?xCryptGetFunction@@YAP6GHXZPADK@Z	; xCryptGetFunction
	add	esp, 4
	mov	DWORD PTR ?xCryptOffsHashData@@3KA, eax	; xCryptOffsHashData
$LN1@xCryptCall:
	mov	eax, DWORD PTR ?xCryptOffsHashData@@3KA	; xCryptOffsHashData
	jmp	eax
?xCryptCallHashData@@YGHKPAEKK@Z ENDP			; xCryptCallHashData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptCallDestroyHash@@YGHK@Z
_TEXT	SEGMENT
_hHash$ = 8						; size = 4
?xCryptCallDestroyHash@@YGHK@Z PROC			; xCryptCallDestroyHash, COMDAT

; 107  : CRYPT_IMPL_FN(DestroyHash,     BOOL, (HCRYPTHASH hHash))

	cmp	DWORD PTR ?xCryptOffsDestroyHash@@3KA, 0 ; xCryptOffsDestroyHash
	jne	SHORT $LN1@xCryptCall
	lea	eax, OFFSET _CRYPT_FN_DestroyHash
	push	eax
	call	?xCryptGetFunction@@YAP6GHXZPADK@Z	; xCryptGetFunction
	add	esp, 4
	mov	DWORD PTR ?xCryptOffsDestroyHash@@3KA, eax ; xCryptOffsDestroyHash
$LN1@xCryptCall:
	mov	eax, DWORD PTR ?xCryptOffsDestroyHash@@3KA ; xCryptOffsDestroyHash
	jmp	eax
?xCryptCallDestroyHash@@YGHK@Z ENDP			; xCryptCallDestroyHash
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptCallCreateHash@@YGHKIKKPAK@Z
_TEXT	SEGMENT
_hProv$ = 8						; size = 4
_Algid$ = 12						; size = 4
_hKey$ = 16						; size = 4
_dwFlags$ = 20						; size = 4
_phHash$ = 24						; size = 4
?xCryptCallCreateHash@@YGHKIKKPAK@Z PROC		; xCryptCallCreateHash, COMDAT

; 106  : CRYPT_IMPL_FN(CreateHash,      BOOL, (HCRYPTPROV hProv, ALG_ID Algid, HCRYPTKEY hKey, DWORD dwFlags, HCRYPTHASH* phHash))

	cmp	DWORD PTR ?xCryptOffsCreateHash@@3KA, 0	; xCryptOffsCreateHash
	jne	SHORT $LN1@xCryptCall
	lea	eax, OFFSET _CRYPT_FN_CreateHash
	push	eax
	call	?xCryptGetFunction@@YAP6GHXZPADK@Z	; xCryptGetFunction
	add	esp, 4
	mov	DWORD PTR ?xCryptOffsCreateHash@@3KA, eax ; xCryptOffsCreateHash
$LN1@xCryptCall:
	mov	eax, DWORD PTR ?xCryptOffsCreateHash@@3KA ; xCryptOffsCreateHash
	jmp	eax
?xCryptCallCreateHash@@YGHKIKKPAK@Z ENDP		; xCryptCallCreateHash
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptCallReleaseContext@@YGHKK@Z
_TEXT	SEGMENT
_hProv$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
?xCryptCallReleaseContext@@YGHKK@Z PROC			; xCryptCallReleaseContext, COMDAT

; 105  : CRYPT_IMPL_FN(ReleaseContext,  BOOL, (HCRYPTPROV hProv, DWORD dwFlags))

	cmp	DWORD PTR ?xCryptOffsReleaseContext@@3KA, 0 ; xCryptOffsReleaseContext
	jne	SHORT $LN1@xCryptCall
	lea	eax, OFFSET _CRYPT_FN_ReleaseContext
	push	eax
	call	?xCryptGetFunction@@YAP6GHXZPADK@Z	; xCryptGetFunction
	add	esp, 4
	mov	DWORD PTR ?xCryptOffsReleaseContext@@3KA, eax ; xCryptOffsReleaseContext
$LN1@xCryptCall:
	mov	eax, DWORD PTR ?xCryptOffsReleaseContext@@3KA ; xCryptOffsReleaseContext
	jmp	eax
?xCryptCallReleaseContext@@YGHKK@Z ENDP			; xCryptCallReleaseContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptCallAcquireContext@@YGHPAKPBD1KK@Z
_TEXT	SEGMENT
_phProv$ = 8						; size = 4
_pszContainer$ = 12					; size = 4
_pszProvider$ = 16					; size = 4
_dwProvType$ = 20					; size = 4
_dwFlags$ = 24						; size = 4
?xCryptCallAcquireContext@@YGHPAKPBD1KK@Z PROC		; xCryptCallAcquireContext, COMDAT

; 104  : CRYPT_IMPL_FN(AcquireContext,  BOOL, (HCRYPTPROV* phProv, LPCTSTR pszContainer, LPCTSTR pszProvider, DWORD dwProvType, DWORD dwFlags))

	cmp	DWORD PTR ?xCryptOffsAcquireContext@@3KA, 0 ; xCryptOffsAcquireContext
	jne	SHORT $LN1@xCryptCall
	lea	eax, OFFSET _CRYPT_FN_AcquireContext
	push	eax
	call	?xCryptGetFunction@@YAP6GHXZPADK@Z	; xCryptGetFunction
	add	esp, 4
	mov	DWORD PTR ?xCryptOffsAcquireContext@@3KA, eax ; xCryptOffsAcquireContext
$LN1@xCryptCall:
	mov	eax, DWORD PTR ?xCryptOffsAcquireContext@@3KA ; xCryptOffsAcquireContext
	jmp	eax
?xCryptCallAcquireContext@@YGHPAKPBD1KK@Z ENDP		; xCryptCallAcquireContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\archive\cryptofns.h
;	COMDAT ?xCryptGetFunction@@YAP6GHXZPADK@Z
_TEXT	SEGMENT
$T1 = -308						; size = 4
$T2 = -296						; size = 4
_fpProc$ = -92						; size = 4
_hMod$ = -80						; size = 4
_i$3 = -68						; size = 4
_dwFnLen$4 = -56					; size = 4
_szProcName$ = -44					; size = 4
_i$5 = -32						; size = 4
_dwFnLen$6 = -20					; size = 4
_szModName$ = -8					; size = 4
_name$ = 8						; size = 4
_len$ = 12						; size = 4
?xCryptGetFunction@@YAP6GHXZPADK@Z PROC			; xCryptGetFunction, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 92   : 	CRYPT_GET_NAME(szModName, CRYPT_MODULE);

	mov	DWORD PTR _szModName$[ebp], 0
	push	OFFSET _CRYPT_MODULE
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _dwFnLen$6[ebp], eax
	mov	eax, DWORD PTR _dwFnLen$6[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _szModName$[ebp], ecx
	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN6@xCryptGetF
$LN5@xCryptGetF:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN6@xCryptGetF:
	mov	eax, DWORD PTR _i$5[ebp]
	cmp	eax, DWORD PTR _dwFnLen$6[ebp]
	jae	SHORT $LN4@xCryptGetF
	mov	eax, DWORD PTR _i$5[ebp]
	movsx	ecx, BYTE PTR _CRYPT_MODULE[eax]
	xor	ecx, 85					; 00000055H
	mov	edx, DWORD PTR _szModName$[ebp]
	add	edx, DWORD PTR _i$5[ebp]
	mov	BYTE PTR [edx], cl
	jmp	SHORT $LN5@xCryptGetF
$LN4@xCryptGetF:

; 93   : 	CRYPT_GET_NAME(szProcName, name);

	mov	DWORD PTR _szProcName$[ebp], 0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _dwFnLen$4[ebp], eax
	mov	eax, DWORD PTR _dwFnLen$4[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _szProcName$[ebp], ecx
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN3@xCryptGetF
$LN2@xCryptGetF:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN3@xCryptGetF:
	mov	eax, DWORD PTR _i$3[ebp]
	cmp	eax, DWORD PTR _dwFnLen$4[ebp]
	jae	SHORT $LN1@xCryptGetF
	mov	eax, DWORD PTR _name$[ebp]
	add	eax, DWORD PTR _i$3[ebp]
	movsx	ecx, BYTE PTR [eax]
	xor	ecx, 85					; 00000055H
	mov	edx, DWORD PTR _szProcName$[ebp]
	add	edx, DWORD PTR _i$3[ebp]
	mov	BYTE PTR [edx], cl
	jmp	SHORT $LN2@xCryptGetF
$LN1@xCryptGetF:

; 94   : 	HMODULE hMod = GetModuleHandle(szModName);

	mov	esi, esp
	mov	eax, DWORD PTR _szModName$[ebp]
	push	eax
	call	DWORD PTR __imp__GetModuleHandleA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hMod$[ebp], eax

; 95   : 	FARPROC fpProc = GetProcAddress(hMod, szProcName);

	mov	esi, esp
	mov	eax, DWORD PTR _szProcName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hMod$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _fpProc$[ebp], eax

; 96   : 	return fpProc;

	mov	eax, DWORD PTR _fpProc$[ebp]

; 97   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?xCryptGetFunction@@YAP6GHXZPADK@Z ENDP			; xCryptGetFunction
_TEXT	ENDS
END
