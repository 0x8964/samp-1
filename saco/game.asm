; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\saco\game\game.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?szGameTextMessage@@3PADA			; szGameTextMessage
PUBLIC	?bInputsDisabled@@3HA				; bInputsDisabled
PUBLIC	?iInputDisableWaitFrames@@3HA			; iInputDisableWaitFrames
PUBLIC	?byteGetKeyStateFunc@@3PAEA			; byteGetKeyStateFunc
_BSS	SEGMENT
?szGameTextMessage@@3PADA DD 01H DUP (?)		; szGameTextMessage
?bInputsDisabled@@3HA DD 01H DUP (?)			; bInputsDisabled
?iInputDisableWaitFrames@@3HA DD 01H DUP (?)		; iInputDisableWaitFrames
_BSS	ENDS
CONST	SEGMENT
_request_model DW 0247H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_load_requested_models DW 038bH
	DB	00H
	ORG $+15
	ORG $+2
_is_model_available DW 0248H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_disable_marker DW 0164H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_set_marker_color DW 0165H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_create_radar_marker_without_sphere DW 04ceH
	DB	'fffiv', 00H
	ORG $+10
	ORG $+2
_show_on_radar DW 0168H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_is_actor_near_point_3d DW 0feH
	DB	'iffffffi', 00H
	ORG $+7
	ORG $+2
_add_to_player_money DW 0109H
	DB	'ii', 00H
	ORG $+13
	ORG $+2
_get_ground_z DW 02ceH
	DB	'fffv', 00H
	ORG $+11
	ORG $+2
_create_racing_checkpoint DW 06d5H
	DB	'ifffffffv', 00H
	ORG $+6
	ORG $+2
_destroy_racing_checkpoint DW 06d6H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_play_sound DW	018cH
	DB	'fffi', 00H
	ORG $+11
	ORG $+2
_enable_train_traffic DW 06d7H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_release_model DW 0249H
	DB	'i', 00H
	ORG $+14
	ORG $+2
_get_active_interior DW 077eH
	DB	'v', 00H
	ORG $+14
	ORG $+2
_refresh_streaming_at DW 04e4H
	DB	'ff', 00H
	ORG $+13
	ORG $+2
_request_animation DW 04edH
	DB	's', 00H
	ORG $+14
	ORG $+2
_is_animation_loaded DW 04eeH
	DB	's', 00H
	ORG $+14
	ORG $+2
_release_animation DW 04efH
	DB	's', 00H
	ORG $+14
	ORG $+2
_text_clear_all DW 0beH
	DB	00H
	ORG $+15
	ORG $+2
_create_pickup DW 0213H
	DB	'iifffv', 00H
	ORG $+9
	ORG $+2
_create_pickup_with_ammo DW 032bH
	DB	'iiifffv', 00H
	ORG $+8
	ORG $+2
_enable_zone_names DW 09baH
	DB	'i', 00H
	ORG $+14
CONST	ENDS
_DATA	SEGMENT
?byteGetKeyStateFunc@@3PAEA DB 0e8H			; byteGetKeyStateFunc
	DB	046H
	DB	0f3H
	DB	0feH
	DB	0ffH
_DATA	ENDS
PUBLIC	??0CCamera@@QAE@XZ				; CCamera::CCamera
PUBLIC	?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z	; CGame::NewPlayer
PUBLIC	?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z	; CGame::NewVehicle
PUBLIC	?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z ; CGame::NewObject
PUBLIC	?GetWeaponModelIDFromWeapon@CGame@@QAEHH@Z	; CGame::GetWeaponModelIDFromWeapon
PUBLIC	?IsKeyPressed@CGame@@QAEHH@Z			; CGame::IsKeyPressed
PUBLIC	?FindGroundZForCoord@CGame@@QAEMMMM@Z		; CGame::FindGroundZForCoord
PUBLIC	?ToggleKeyInputsDisabled@CGame@@QAEXH@Z		; CGame::ToggleKeyInputsDisabled
PUBLIC	?StartGame@CGame@@QAEXXZ			; CGame::StartGame
PUBLIC	?InitGame@CGame@@QAEXXZ				; CGame::InitGame
PUBLIC	?IsMenuActive@CGame@@QAEHXZ			; CGame::IsMenuActive
PUBLIC	?IsGameLoaded@CGame@@QAEHXZ			; CGame::IsGameLoaded
PUBLIC	?RequestModel@CGame@@QAEXH@Z			; CGame::RequestModel
PUBLIC	?LoadRequestedModels@CGame@@QAEXXZ		; CGame::LoadRequestedModels
PUBLIC	?IsModelLoaded@CGame@@QAEHH@Z			; CGame::IsModelLoaded
PUBLIC	?RemoveModel@CGame@@QAEXH@Z			; CGame::RemoveModel
PUBLIC	?SetWorldTime@CGame@@QAEXHH@Z			; CGame::SetWorldTime
PUBLIC	?GetWorldTime@CGame@@QAEXPAH0@Z			; CGame::GetWorldTime
PUBLIC	?ToggleThePassingOfTime@CGame@@QAEXE@Z		; CGame::ToggleThePassingOfTime
PUBLIC	?SetWorldWeather@CGame@@QAEXH@Z			; CGame::SetWorldWeather
PUBLIC	?DisplayHud@CGame@@QAEXH@Z			; CGame::DisplayHud
PUBLIC	?IsHudEnabled@CGame@@QAEEXZ			; CGame::IsHudEnabled
PUBLIC	?SetFrameLimiterOn@CGame@@QAEXH@Z		; CGame::SetFrameLimiterOn
PUBLIC	?SetMaxStats@CGame@@QAEXXZ			; CGame::SetMaxStats
PUBLIC	?DisableTrainTraffic@CGame@@QAEXXZ		; CGame::DisableTrainTraffic
PUBLIC	?RefreshStreamingAt@CGame@@QAEXMM@Z		; CGame::RefreshStreamingAt
PUBLIC	?RequestAnimation@CGame@@QAEXPAD@Z		; CGame::RequestAnimation
PUBLIC	?IsAnimationLoaded@CGame@@QAEHPAD@Z		; CGame::IsAnimationLoaded
PUBLIC	?ReleaseAnimation@CGame@@QAEXPAD@Z		; CGame::ReleaseAnimation
PUBLIC	?ToggleRadar@CGame@@QAEXH@Z			; CGame::ToggleRadar
PUBLIC	?DisplayGameText@CGame@@QAEXPADHH@Z		; CGame::DisplayGameText
PUBLIC	?PlaySoundA@CGame@@QAEXHMMM@Z			; CGame::PlaySoundA
PUBLIC	?SetGravity@CGame@@QAEXM@Z			; CGame::SetGravity
PUBLIC	?EnableClock@CGame@@QAEXE@Z			; CGame::EnableClock
PUBLIC	?EnableZoneNames@CGame@@QAEXE@Z			; CGame::EnableZoneNames
PUBLIC	?SetWantedLevel@CGame@@QAEXE@Z			; CGame::SetWantedLevel
PUBLIC	?SetGameTextCount@CGame@@QAEXG@Z		; CGame::SetGameTextCount
PUBLIC	?DrawGangZone@CGame@@QAEXPAMK@Z			; CGame::DrawGangZone
PUBLIC	?EnableStuntBonus@CGame@@QAEX_N@Z		; CGame::EnableStuntBonus
PUBLIC	?UpdateCheckpoints@CGame@@QAEXXZ		; CGame::UpdateCheckpoints
PUBLIC	?SetCheckpointInformation@CGame@@QAEXPAU_VECTOR@@0@Z ; CGame::SetCheckpointInformation
PUBLIC	?MakeRaceCheckpoint@CGame@@QAEXXZ		; CGame::MakeRaceCheckpoint
PUBLIC	?DisableRaceCheckpoint@CGame@@QAEXXZ		; CGame::DisableRaceCheckpoint
PUBLIC	?SetRaceCheckpointInformation@CGame@@QAEXEPAU_VECTOR@@0M@Z ; CGame::SetRaceCheckpointInformation
PUBLIC	?CreateRadarMarkerIcon@CGame@@QAEKHMMMH@Z	; CGame::CreateRadarMarkerIcon
PUBLIC	?DisableMarker@CGame@@QAEXK@Z			; CGame::DisableMarker
PUBLIC	?AddToLocalMoney@CGame@@QAEXH@Z			; CGame::AddToLocalMoney
PUBLIC	?ResetLocalMoney@CGame@@QAEXXZ			; CGame::ResetLocalMoney
PUBLIC	?GetLocalMoney@CGame@@QAEHXZ			; CGame::GetLocalMoney
PUBLIC	?GetActiveInterior@CGame@@QAEEXZ		; CGame::GetActiveInterior
PUBLIC	?UpdateFarClippingPlane@CGame@@QAEXXZ		; CGame::UpdateFarClippingPlane
PUBLIC	?GetD3DDevice@CGame@@QAEKXZ			; CGame::GetD3DDevice
PUBLIC	?RestartEverything@CGame@@QAEXXZ		; CGame::RestartEverything
PUBLIC	?ProcessInputDisabling@CGame@@QAEXXZ		; CGame::ProcessInputDisabling
PUBLIC	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ	; CGame::FindPlayerPed
PUBLIC	?GetWeaponName@CGame@@QAEQADH@Z			; CGame::GetWeaponName
PUBLIC	?CreatePickup@CGame@@QAEKHHMMM@Z		; CGame::CreatePickup
PUBLIC	?CreateWeaponPickup@CGame@@QAEKHKMMM@Z		; CGame::CreateWeaponPickup
PUBLIC	?GetWeaponInfo@CGame@@QAEKHH@Z			; CGame::GetWeaponInfo
PUBLIC	?DisableEnterExits@CGame@@QAEXXZ		; CGame::DisableEnterExits
PUBLIC	??0CGame@@QAE@XZ				; CGame::CGame
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0O@KKCHHJBD@Version?5Error?$AA@		; `string'
PUBLIC	??_C@_0EM@DFJJIKMA@I?5can?8t?5determine?5your?5GTA?5versi@ ; `string'
PUBLIC	??_C@_0BH@KPOKFMND@CGame?3?3StartGame?5start?$AA@ ; `string'
PUBLIC	??_C@_0BF@DFMJHNMO@CGame?3?3StartGame?5end?$AA@	; `string'
PUBLIC	??_C@_0P@JFPGKGND@Brass?5Knuckles?$AA@		; `string'
PUBLIC	??_C@_09OABFMFIE@Golf?5Club?$AA@		; `string'
PUBLIC	??_C@_0L@MLLDBFBA@Nite?5Stick?$AA@		; `string'
PUBLIC	??_C@_05BPFOPNCG@Knife?$AA@			; `string'
PUBLIC	??_C@_0N@GBMNAENM@Baseball?5Bat?$AA@		; `string'
PUBLIC	??_C@_06EGGLGMCA@Shovel?$AA@			; `string'
PUBLIC	??_C@_08GCHHAGJD@Pool?5Cue?$AA@			; `string'
PUBLIC	??_C@_06FGFALHFI@Katana?$AA@			; `string'
PUBLIC	??_C@_08IJDOPOCG@Chainsaw?$AA@			; `string'
PUBLIC	??_C@_05JCJNFPDF@Dildo?$AA@			; `string'
PUBLIC	??_C@_08JDFEGHGE@Vibrator?$AA@			; `string'
PUBLIC	??_C@_07NEPGNNAH@Flowers?$AA@			; `string'
PUBLIC	??_C@_04PPNHMDNF@Cane?$AA@			; `string'
PUBLIC	??_C@_07GIIHBBNN@Grenade?$AA@			; `string'
PUBLIC	??_C@_07DJHDJFCA@Teargas?$AA@			; `string'
PUBLIC	??_C@_07OPFMIBLN@Molotov?$AA@			; `string'
PUBLIC	??_C@_07BCDEHAHO@Colt?545?$AA@			; `string'
PUBLIC	??_C@_0BA@GIMNGNFL@Silenced?5Pistol?$AA@	; `string'
PUBLIC	??_C@_0N@FAMDEIAF@Desert?5Eagle?$AA@		; `string'
PUBLIC	??_C@_07DGIAOJJ@Shotgun?$AA@			; `string'
PUBLIC	??_C@_0BB@LDOHOGFE@Sawn?9off?5Shotgun?$AA@	; `string'
PUBLIC	??_C@_0P@NBOJFOMC@Combat?5Shotgun?$AA@		; `string'
PUBLIC	??_C@_03GCPIIAFJ@UZI?$AA@			; `string'
PUBLIC	??_C@_03HJEIEMAF@MP5?$AA@			; `string'
PUBLIC	??_C@_04KDDOELFP@AK47?$AA@			; `string'
PUBLIC	??_C@_02MDNGMLIJ@M4?$AA@			; `string'
PUBLIC	??_C@_04CENMHHMF@TEC9?$AA@			; `string'
PUBLIC	??_C@_05NMFDOHOF@Rifle?$AA@			; `string'
PUBLIC	??_C@_0N@PNCKKCNC@Sniper?5Rifle?$AA@		; `string'
PUBLIC	??_C@_0BA@DJIGCIDL@Rocket?5Launcher?$AA@	; `string'
PUBLIC	??_C@_0M@KILOAMKG@Heat?5Seaker?$AA@		; `string'
PUBLIC	??_C@_0N@LDKIPHF@Flamethrower?$AA@		; `string'
PUBLIC	??_C@_07JPACKGKC@Minigun?$AA@			; `string'
PUBLIC	??_C@_0BD@ILKAJFBP@Satchel?5Explosives?$AA@	; `string'
PUBLIC	??_C@_04GPGPLFMI@Bomb?$AA@			; `string'
PUBLIC	??_C@_09KLGHNLEL@Spray?5Can?$AA@		; `string'
PUBLIC	??_C@_0BC@PHGBOEPB@Fire?5Extinguisher?$AA@	; `string'
PUBLIC	??_C@_06JCBBMBIP@Camera?$AA@			; `string'
PUBLIC	??_C@_09BNHMBLCC@Parachute?$AA@			; `string'
PUBLIC	??_C@_07NAELNENF@Vehicle?$AA@			; `string'
PUBLIC	??_C@_07GKNJILIL@Drowned?$AA@			; `string'
PUBLIC	??_C@_05EOEDJBJE@Splat?$AA@			; `string'
PUBLIC	??_C@_0BD@DPIHGFBM@ShutDownForRestart?$AA@	; `string'
PUBLIC	??_C@_0P@NAJHMDON@Timers?5stopped?$AA@		; `string'
PUBLIC	??_C@_0N@BKAKCFIE@ReInitialise?$AA@		; `string'
PUBLIC	__real@40000000
PUBLIC	__real@43c80000
PUBLIC	__real@442f0000
PUBLIC	__real@449c4000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_abs:PROC
EXTRN	_malloc:PROC
EXTRN	??0CVehicle@@QAE@HMMMMPAD@Z:PROC		; CVehicle::CVehicle
EXTRN	?GameAimSyncInit@@YGXXZ:PROC			; GameAimSyncInit
EXTRN	??0CPlayerPed@@QAE@XZ:PROC			; CPlayerPed::CPlayerPed
EXTRN	??0CPlayerPed@@QAE@HHMMMME@Z:PROC		; CPlayerPed::CPlayerPed
EXTRN	?InitScripting@@YAXXZ:PROC			; InitScripting
EXTRN	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ:PROC	; ScriptCommand
EXTRN	??0CObject@@QAE@HMMMU_VECTOR@@@Z:PROC		; CObject::CObject
EXTRN	?UnFuck@@YAXKH@Z:PROC				; UnFuck
EXTRN	?GameGetWeaponModelIDFromWeaponID@@YGHH@Z:PROC	; GameGetWeaponModelIDFromWeaponID
EXTRN	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ:PROC ; GamePool_FindPlayerPed
EXTRN	?GameResetRadarColors@@YAXXZ:PROC		; GameResetRadarColors
EXTRN	?GameKeyStatesInit@@YAXXZ:PROC			; GameKeyStatesInit
EXTRN	?GameGetInternalKeys@@YAPAU_GTA_CONTROLSET@@XZ:PROC ; GameGetInternalKeys
EXTRN	?GameInstallHooks@@YAXXZ:PROC			; GameInstallHooks
EXTRN	?ApplyPreGamePatches@@YAHXZ:PROC		; ApplyPreGamePatches
EXTRN	?ApplyInGamePatches@@YAXXZ:PROC			; ApplyInGamePatches
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?iGtaVersion@@3HA:DWORD				; iGtaVersion
EXTRN	?fFarClip@@3MA:DWORD				; fFarClip
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@449c4000
CONST	SEGMENT
__real@449c4000 DD 0449c4000r			; 1250
CONST	ENDS
;	COMDAT __real@442f0000
CONST	SEGMENT
__real@442f0000 DD 0442f0000r			; 700
CONST	ENDS
;	COMDAT __real@43c80000
CONST	SEGMENT
__real@43c80000 DD 043c80000r			; 400
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0N@BKAKCFIE@ReInitialise?$AA@
CONST	SEGMENT
??_C@_0N@BKAKCFIE@ReInitialise?$AA@ DB 'ReInitialise', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NAJHMDON@Timers?5stopped?$AA@
CONST	SEGMENT
??_C@_0P@NAJHMDON@Timers?5stopped?$AA@ DB 'Timers stopped', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPIHGFBM@ShutDownForRestart?$AA@
CONST	SEGMENT
??_C@_0BD@DPIHGFBM@ShutDownForRestart?$AA@ DB 'ShutDownForRestart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EOEDJBJE@Splat?$AA@
CONST	SEGMENT
??_C@_05EOEDJBJE@Splat?$AA@ DB 'Splat', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GKNJILIL@Drowned?$AA@
CONST	SEGMENT
??_C@_07GKNJILIL@Drowned?$AA@ DB 'Drowned', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NAELNENF@Vehicle?$AA@
CONST	SEGMENT
??_C@_07NAELNENF@Vehicle?$AA@ DB 'Vehicle', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BNHMBLCC@Parachute?$AA@
CONST	SEGMENT
??_C@_09BNHMBLCC@Parachute?$AA@ DB 'Parachute', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JCBBMBIP@Camera?$AA@
CONST	SEGMENT
??_C@_06JCBBMBIP@Camera?$AA@ DB 'Camera', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PHGBOEPB@Fire?5Extinguisher?$AA@
CONST	SEGMENT
??_C@_0BC@PHGBOEPB@Fire?5Extinguisher?$AA@ DB 'Fire Extinguisher', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KLGHNLEL@Spray?5Can?$AA@
CONST	SEGMENT
??_C@_09KLGHNLEL@Spray?5Can?$AA@ DB 'Spray Can', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPGPLFMI@Bomb?$AA@
CONST	SEGMENT
??_C@_04GPGPLFMI@Bomb?$AA@ DB 'Bomb', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ILKAJFBP@Satchel?5Explosives?$AA@
CONST	SEGMENT
??_C@_0BD@ILKAJFBP@Satchel?5Explosives?$AA@ DB 'Satchel Explosives', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JPACKGKC@Minigun?$AA@
CONST	SEGMENT
??_C@_07JPACKGKC@Minigun?$AA@ DB 'Minigun', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LDKIPHF@Flamethrower?$AA@
CONST	SEGMENT
??_C@_0N@LDKIPHF@Flamethrower?$AA@ DB 'Flamethrower', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KILOAMKG@Heat?5Seaker?$AA@
CONST	SEGMENT
??_C@_0M@KILOAMKG@Heat?5Seaker?$AA@ DB 'Heat Seaker', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DJIGCIDL@Rocket?5Launcher?$AA@
CONST	SEGMENT
??_C@_0BA@DJIGCIDL@Rocket?5Launcher?$AA@ DB 'Rocket Launcher', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PNCKKCNC@Sniper?5Rifle?$AA@
CONST	SEGMENT
??_C@_0N@PNCKKCNC@Sniper?5Rifle?$AA@ DB 'Sniper Rifle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NMFDOHOF@Rifle?$AA@
CONST	SEGMENT
??_C@_05NMFDOHOF@Rifle?$AA@ DB 'Rifle', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CENMHHMF@TEC9?$AA@
CONST	SEGMENT
??_C@_04CENMHHMF@TEC9?$AA@ DB 'TEC9', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MDNGMLIJ@M4?$AA@
CONST	SEGMENT
??_C@_02MDNGMLIJ@M4?$AA@ DB 'M4', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KDDOELFP@AK47?$AA@
CONST	SEGMENT
??_C@_04KDDOELFP@AK47?$AA@ DB 'AK47', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HJEIEMAF@MP5?$AA@
CONST	SEGMENT
??_C@_03HJEIEMAF@MP5?$AA@ DB 'MP5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCPIIAFJ@UZI?$AA@
CONST	SEGMENT
??_C@_03GCPIIAFJ@UZI?$AA@ DB 'UZI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NBOJFOMC@Combat?5Shotgun?$AA@
CONST	SEGMENT
??_C@_0P@NBOJFOMC@Combat?5Shotgun?$AA@ DB 'Combat Shotgun', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LDOHOGFE@Sawn?9off?5Shotgun?$AA@
CONST	SEGMENT
??_C@_0BB@LDOHOGFE@Sawn?9off?5Shotgun?$AA@ DB 'Sawn-off Shotgun', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DGIAOJJ@Shotgun?$AA@
CONST	SEGMENT
??_C@_07DGIAOJJ@Shotgun?$AA@ DB 'Shotgun', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FAMDEIAF@Desert?5Eagle?$AA@
CONST	SEGMENT
??_C@_0N@FAMDEIAF@Desert?5Eagle?$AA@ DB 'Desert Eagle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GIMNGNFL@Silenced?5Pistol?$AA@
CONST	SEGMENT
??_C@_0BA@GIMNGNFL@Silenced?5Pistol?$AA@ DB 'Silenced Pistol', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BCDEHAHO@Colt?545?$AA@
CONST	SEGMENT
??_C@_07BCDEHAHO@Colt?545?$AA@ DB 'Colt 45', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OPFMIBLN@Molotov?$AA@
CONST	SEGMENT
??_C@_07OPFMIBLN@Molotov?$AA@ DB 'Molotov', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DJHDJFCA@Teargas?$AA@
CONST	SEGMENT
??_C@_07DJHDJFCA@Teargas?$AA@ DB 'Teargas', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GIIHBBNN@Grenade?$AA@
CONST	SEGMENT
??_C@_07GIIHBBNN@Grenade?$AA@ DB 'Grenade', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PPNHMDNF@Cane?$AA@
CONST	SEGMENT
??_C@_04PPNHMDNF@Cane?$AA@ DB 'Cane', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NEPGNNAH@Flowers?$AA@
CONST	SEGMENT
??_C@_07NEPGNNAH@Flowers?$AA@ DB 'Flowers', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JDFEGHGE@Vibrator?$AA@
CONST	SEGMENT
??_C@_08JDFEGHGE@Vibrator?$AA@ DB 'Vibrator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JCJNFPDF@Dildo?$AA@
CONST	SEGMENT
??_C@_05JCJNFPDF@Dildo?$AA@ DB 'Dildo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IJDOPOCG@Chainsaw?$AA@
CONST	SEGMENT
??_C@_08IJDOPOCG@Chainsaw?$AA@ DB 'Chainsaw', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FGFALHFI@Katana?$AA@
CONST	SEGMENT
??_C@_06FGFALHFI@Katana?$AA@ DB 'Katana', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GCHHAGJD@Pool?5Cue?$AA@
CONST	SEGMENT
??_C@_08GCHHAGJD@Pool?5Cue?$AA@ DB 'Pool Cue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EGGLGMCA@Shovel?$AA@
CONST	SEGMENT
??_C@_06EGGLGMCA@Shovel?$AA@ DB 'Shovel', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GBMNAENM@Baseball?5Bat?$AA@
CONST	SEGMENT
??_C@_0N@GBMNAENM@Baseball?5Bat?$AA@ DB 'Baseball Bat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BPFOPNCG@Knife?$AA@
CONST	SEGMENT
??_C@_05BPFOPNCG@Knife?$AA@ DB 'Knife', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MLLDBFBA@Nite?5Stick?$AA@
CONST	SEGMENT
??_C@_0L@MLLDBFBA@Nite?5Stick?$AA@ DB 'Nite Stick', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09OABFMFIE@Golf?5Club?$AA@
CONST	SEGMENT
??_C@_09OABFMFIE@Golf?5Club?$AA@ DB 'Golf Club', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JFPGKGND@Brass?5Knuckles?$AA@
CONST	SEGMENT
??_C@_0P@JFPGKGND@Brass?5Knuckles?$AA@ DB 'Brass Knuckles', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DFMJHNMO@CGame?3?3StartGame?5end?$AA@
CONST	SEGMENT
??_C@_0BF@DFMJHNMO@CGame?3?3StartGame?5end?$AA@ DB 'CGame::StartGame end', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KPOKFMND@CGame?3?3StartGame?5start?$AA@
CONST	SEGMENT
??_C@_0BH@KPOKFMND@CGame?3?3StartGame?5start?$AA@ DB 'CGame::StartGame st'
	DB	'art', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@DFJJIKMA@I?5can?8t?5determine?5your?5GTA?5versi@
CONST	SEGMENT
??_C@_0EM@DFJJIKMA@I?5can?8t?5determine?5your?5GTA?5versi@ DB 'I can''t d'
	DB	'etermine your GTA version.', 0dH, 0aH, 'SA-MP only supports G'
	DB	'TA:SA v1.0 USA/EU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KKCHHJBD@Version?5Error?$AA@
CONST	SEGMENT
??_C@_0O@KKCHHJBD@Version?5Error?$AA@ DB 'Version Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGame@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGame@@QAE@XZ$0
__ehfuncinfo$??0CGame@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CGame@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0
__ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z$0
__ehfuncinfo$?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z$0
__ehfuncinfo$?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z$0
__ehfuncinfo$?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ??0CGame@@QAE@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CGame@@QAE@XZ PROC					; CGame::CGame, COMDAT
; _this$ = ecx

; 33   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CGame@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 	m_pGameCamera = new CCamera();

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@CGame
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CCamera@@QAE@XZ			; CCamera::CCamera
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@CGame
$LN3@CGame:
	mov	DWORD PTR tv72[ebp], 0
$LN4@CGame:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx

; 35   : 	m_pGamePlayer = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 36   : 	m_bCheckpointsEnabled = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 37   : 	m_bRaceCheckpointsEnabled = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+69], 0

; 38   : 	m_dwRaceCheckpointHandle = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+77], 0

; 39   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGame@@QAE@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0CGame@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CGame@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CGame@@QAE@XZ ENDP					; CGame::CGame
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?DisableEnterExits@CGame@@QAEXXZ
_TEXT	SEGMENT
_pEnExPoolSlot$ = -68					; size = 4
_x$ = -56						; size = 4
_iNumEnEx$ = -44					; size = 4
_pEnExEntries$ = -32					; size = 4
_pEnExPool$ = -20					; size = 4
_this$ = -8						; size = 4
?DisableEnterExits@CGame@@QAEXXZ PROC			; CGame::DisableEnterExits, COMDAT
; _this$ = ecx

; 840  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 841  : 	DWORD pEnExPool = *(DWORD *)0x96A7D8;

	mov	eax, DWORD PTR ds:9873368
	mov	DWORD PTR _pEnExPool$[ebp], eax

; 842  : 	DWORD pEnExEntries = *(DWORD *)pEnExPool;

	mov	eax, DWORD PTR _pEnExPool$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pEnExEntries$[ebp], ecx

; 843  : 	
; 844  : 	int iNumEnEx=0;

	mov	DWORD PTR _iNumEnEx$[ebp], 0

; 845  : 	int x=0;

	mov	DWORD PTR _x$[ebp], 0

; 846  : 
; 847  : 	_asm mov ecx, pEnExPool

	mov	ecx, DWORD PTR _pEnExPool$[ebp]

; 848  : 	_asm mov eax, [ecx+8]

	mov	eax, DWORD PTR [ecx+8]

; 849  : 	_asm mov iNumEnEx, eax

	mov	DWORD PTR _iNumEnEx$[ebp], eax
$LN2@DisableEnt:

; 850  : 
; 851  : 	BYTE *pEnExPoolSlot;
; 852  : 	while(x != iNumEnEx) 

	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _iNumEnEx$[ebp]
	je	SHORT $LN3@DisableEnt

; 853  : 	{
; 854  : 		pEnExPoolSlot = (((BYTE *)pEnExEntries) + (60*x));

	imul	eax, DWORD PTR _x$[ebp], 60
	add	eax, DWORD PTR _pEnExEntries$[ebp]
	mov	DWORD PTR _pEnExPoolSlot$[ebp], eax

; 855  : 		_asm mov eax, pEnExPoolSlot

	mov	eax, DWORD PTR _pEnExPoolSlot$[ebp]

; 856  : 		_asm and word ptr [eax+48], 0

	and	WORD PTR [eax+48], 0

; 857  : 		x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 858  : 	}   

	jmp	SHORT $LN2@DisableEnt
$LN3@DisableEnt:

; 859  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DisableEnterExits@CGame@@QAEXXZ ENDP			; CGame::DisableEnterExits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?GetWeaponInfo@CGame@@QAEKHH@Z
_TEXT	SEGMENT
_dwRet$ = -20						; size = 4
_this$ = -8						; size = 4
_iWeapon$ = 8						; size = 4
_iUnk$ = 12						; size = 4
?GetWeaponInfo@CGame@@QAEKHH@Z PROC			; CGame::GetWeaponInfo, COMDAT
; _this$ = ecx

; 761  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 762  : 	DWORD dwRet;
; 763  : 
; 764  : 	_asm push iUnk

	push	DWORD PTR _iUnk$[ebp]

; 765  : 	_asm push iWeapon

	push	DWORD PTR _iWeapon$[ebp]

; 766  : 	_asm mov edx, 0x743C60

	mov	edx, 7617632				; 00743c60H

; 767  : 	_asm call edx

	call	edx

; 768  : 	_asm pop ecx

	pop	ecx

; 769  : 	_asm pop ecx

	pop	ecx

; 770  : 	_asm mov dwRet, eax

	mov	DWORD PTR _dwRet$[ebp], eax

; 771  : 
; 772  : 	return dwRet;

	mov	eax, DWORD PTR _dwRet$[ebp]

; 773  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWeaponInfo@CGame@@QAEKHH@Z ENDP			; CGame::GetWeaponInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?CreateWeaponPickup@CGame@@QAEKHKMMM@Z
_TEXT	SEGMENT
_hnd$ = -20						; size = 4
_this$ = -8						; size = 4
_iModel$ = 8						; size = 4
_dwAmmo$ = 12						; size = 4
_fX$ = 16						; size = 4
_fY$ = 20						; size = 4
_fZ$ = 24						; size = 4
?CreateWeaponPickup@CGame@@QAEKHKMMM@Z PROC		; CGame::CreateWeaponPickup, COMDAT
; _this$ = ecx

; 697  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 698  : 	DWORD hnd;
; 699  : 
; 700  : 	if(!IsModelLoaded(iModel)) {

	mov	eax, DWORD PTR _iModel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN1@CreateWeap

; 701  : 		RequestModel(iModel);

	mov	eax, DWORD PTR _iModel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 702  : 		LoadRequestedModels();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadRequestedModels@CGame@@QAEXXZ	; CGame::LoadRequestedModels
$LN2@CreateWeap:

; 703  : 		while(!IsModelLoaded(iModel)) Sleep(5);

	mov	eax, DWORD PTR _iModel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN1@CreateWeap
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@CreateWeap
$LN1@CreateWeap:

; 704  : 	}
; 705  : 
; 706  : 	ScriptCommand(&create_pickup_with_ammo, iModel, 4, dwAmmo, fX, fY, fZ, &hnd);

	lea	eax, DWORD PTR _hnd$[ebp]
	push	eax
	cvtss2sd xmm0, DWORD PTR _fZ$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _dwAmmo$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _iModel$[ebp]
	push	edx
	push	OFFSET _create_pickup_with_ammo
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 44					; 0000002cH

; 707  : 	return hnd;

	mov	eax, DWORD PTR _hnd$[ebp]

; 708  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@CreateWeap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN8@CreateWeap:
	DD	1
	DD	$LN7@CreateWeap
$LN7@CreateWeap:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@CreateWeap
$LN6@CreateWeap:
	DB	104					; 00000068H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
?CreateWeaponPickup@CGame@@QAEKHKMMM@Z ENDP		; CGame::CreateWeaponPickup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?CreatePickup@CGame@@QAEKHHMMM@Z
_TEXT	SEGMENT
_hnd$ = -20						; size = 4
_this$ = -8						; size = 4
_iModel$ = 8						; size = 4
_iType$ = 12						; size = 4
_fX$ = 16						; size = 4
_fY$ = 20						; size = 4
_fZ$ = 24						; size = 4
?CreatePickup@CGame@@QAEKHHMMM@Z PROC			; CGame::CreatePickup, COMDAT
; _this$ = ecx

; 681  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 682  : 	DWORD hnd;
; 683  : 
; 684  : 	if(!IsModelLoaded(iModel)) {

	mov	eax, DWORD PTR _iModel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN1@CreatePick

; 685  : 		RequestModel(iModel);

	mov	eax, DWORD PTR _iModel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 686  : 		LoadRequestedModels();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadRequestedModels@CGame@@QAEXXZ	; CGame::LoadRequestedModels
$LN2@CreatePick:

; 687  : 		while(!IsModelLoaded(iModel)) Sleep(5);

	mov	eax, DWORD PTR _iModel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN1@CreatePick
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@CreatePick
$LN1@CreatePick:

; 688  : 	}
; 689  : 
; 690  : 	ScriptCommand(&create_pickup,iModel,iType,fX,fY,fZ,&hnd);

	lea	eax, DWORD PTR _hnd$[ebp]
	push	eax
	cvtss2sd xmm0, DWORD PTR _fZ$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _iType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iModel$[ebp]
	push	edx
	push	OFFSET _create_pickup
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 40					; 00000028H

; 691  : 	return hnd;

	mov	eax, DWORD PTR _hnd$[ebp]

; 692  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@CreatePick
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN8@CreatePick:
	DD	1
	DD	$LN7@CreatePick
$LN7@CreatePick:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@CreatePick
$LN6@CreatePick:
	DB	104					; 00000068H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
?CreatePickup@CGame@@QAEKHHMMM@Z ENDP			; CGame::CreatePickup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?GetWeaponName@CGame@@QAEQADH@Z
_TEXT	SEGMENT
tv64 = -208						; size = 4
_this$ = -8						; size = 4
_iWeaponID$ = 8						; size = 4
?GetWeaponName@CGame@@QAEQADH@Z PROC			; CGame::GetWeaponName, COMDAT
; _this$ = ecx

; 583  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 584  : 	switch(iWeaponID) { 

	mov	eax, DWORD PTR _iWeaponID$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 53			; 00000035H
	ja	$LN45@GetWeaponN
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN49@GetWeaponN[edx*4]
$LN44@GetWeaponN:

; 585  :       case WEAPON_BRASSKNUCKLE: 
; 586  :          return "Brass Knuckles"; 

	mov	eax, OFFSET ??_C@_0P@JFPGKGND@Brass?5Knuckles?$AA@
	jmp	$LN47@GetWeaponN
$LN43@GetWeaponN:

; 587  :       case WEAPON_GOLFCLUB: 
; 588  :          return "Golf Club"; 

	mov	eax, OFFSET ??_C@_09OABFMFIE@Golf?5Club?$AA@
	jmp	$LN47@GetWeaponN
$LN42@GetWeaponN:

; 589  :       case WEAPON_NITESTICK: 
; 590  :          return "Nite Stick"; 

	mov	eax, OFFSET ??_C@_0L@MLLDBFBA@Nite?5Stick?$AA@
	jmp	$LN47@GetWeaponN
$LN41@GetWeaponN:

; 591  :       case WEAPON_KNIFE: 
; 592  :          return "Knife"; 

	mov	eax, OFFSET ??_C@_05BPFOPNCG@Knife?$AA@
	jmp	$LN47@GetWeaponN
$LN40@GetWeaponN:

; 593  :       case WEAPON_BAT: 
; 594  :          return "Baseball Bat"; 

	mov	eax, OFFSET ??_C@_0N@GBMNAENM@Baseball?5Bat?$AA@
	jmp	$LN47@GetWeaponN
$LN39@GetWeaponN:

; 595  :       case WEAPON_SHOVEL: 
; 596  :          return "Shovel"; 

	mov	eax, OFFSET ??_C@_06EGGLGMCA@Shovel?$AA@
	jmp	$LN47@GetWeaponN
$LN38@GetWeaponN:

; 597  :       case WEAPON_POOLSTICK: 
; 598  :          return "Pool Cue"; 

	mov	eax, OFFSET ??_C@_08GCHHAGJD@Pool?5Cue?$AA@
	jmp	$LN47@GetWeaponN
$LN37@GetWeaponN:

; 599  :       case WEAPON_KATANA: 
; 600  :          return "Katana"; 

	mov	eax, OFFSET ??_C@_06FGFALHFI@Katana?$AA@
	jmp	$LN47@GetWeaponN
$LN36@GetWeaponN:

; 601  :       case WEAPON_CHAINSAW: 
; 602  :          return "Chainsaw"; 

	mov	eax, OFFSET ??_C@_08IJDOPOCG@Chainsaw?$AA@
	jmp	$LN47@GetWeaponN
$LN35@GetWeaponN:

; 603  :       case WEAPON_DILDO: 
; 604  :          return "Dildo"; 

	mov	eax, OFFSET ??_C@_05JCJNFPDF@Dildo?$AA@
	jmp	$LN47@GetWeaponN
$LN34@GetWeaponN:

; 605  :       case WEAPON_DILDO2: 
; 606  :          return "Dildo"; 

	mov	eax, OFFSET ??_C@_05JCJNFPDF@Dildo?$AA@
	jmp	$LN47@GetWeaponN
$LN33@GetWeaponN:

; 607  :       case WEAPON_VIBRATOR: 
; 608  :          return "Vibrator"; 

	mov	eax, OFFSET ??_C@_08JDFEGHGE@Vibrator?$AA@
	jmp	$LN47@GetWeaponN
$LN32@GetWeaponN:

; 609  :       case WEAPON_VIBRATOR2: 
; 610  :          return "Vibrator"; 

	mov	eax, OFFSET ??_C@_08JDFEGHGE@Vibrator?$AA@
	jmp	$LN47@GetWeaponN
$LN31@GetWeaponN:

; 611  :       case WEAPON_FLOWER: 
; 612  :          return "Flowers"; 

	mov	eax, OFFSET ??_C@_07NEPGNNAH@Flowers?$AA@
	jmp	$LN47@GetWeaponN
$LN30@GetWeaponN:

; 613  :       case WEAPON_CANE: 
; 614  :          return "Cane"; 

	mov	eax, OFFSET ??_C@_04PPNHMDNF@Cane?$AA@
	jmp	$LN47@GetWeaponN
$LN29@GetWeaponN:

; 615  :       case WEAPON_GRENADE: 
; 616  :          return "Grenade"; 

	mov	eax, OFFSET ??_C@_07GIIHBBNN@Grenade?$AA@
	jmp	$LN47@GetWeaponN
$LN28@GetWeaponN:

; 617  :       case WEAPON_TEARGAS: 
; 618  :          return "Teargas";

	mov	eax, OFFSET ??_C@_07DJHDJFCA@Teargas?$AA@
	jmp	$LN47@GetWeaponN
$LN27@GetWeaponN:

; 619  : 	  case WEAPON_MOLTOV: 
; 620  :          return "Molotov";

	mov	eax, OFFSET ??_C@_07OPFMIBLN@Molotov?$AA@
	jmp	$LN47@GetWeaponN
$LN26@GetWeaponN:

; 621  :       case WEAPON_COLT45: 
; 622  :          return "Colt 45"; 

	mov	eax, OFFSET ??_C@_07BCDEHAHO@Colt?545?$AA@
	jmp	$LN47@GetWeaponN
$LN25@GetWeaponN:

; 623  :       case WEAPON_SILENCED: 
; 624  :          return "Silenced Pistol"; 

	mov	eax, OFFSET ??_C@_0BA@GIMNGNFL@Silenced?5Pistol?$AA@
	jmp	$LN47@GetWeaponN
$LN24@GetWeaponN:

; 625  :       case WEAPON_DEAGLE: 
; 626  :          return "Desert Eagle"; 

	mov	eax, OFFSET ??_C@_0N@FAMDEIAF@Desert?5Eagle?$AA@
	jmp	$LN47@GetWeaponN
$LN23@GetWeaponN:

; 627  :       case WEAPON_SHOTGUN: 
; 628  :          return "Shotgun"; 

	mov	eax, OFFSET ??_C@_07DGIAOJJ@Shotgun?$AA@
	jmp	$LN47@GetWeaponN
$LN22@GetWeaponN:

; 629  :       case WEAPON_SAWEDOFF: 
; 630  :          return "Sawn-off Shotgun"; 

	mov	eax, OFFSET ??_C@_0BB@LDOHOGFE@Sawn?9off?5Shotgun?$AA@
	jmp	$LN47@GetWeaponN
$LN21@GetWeaponN:

; 631  :       case WEAPON_SHOTGSPA: // wtf? 
; 632  :          return "Combat Shotgun"; 

	mov	eax, OFFSET ??_C@_0P@NBOJFOMC@Combat?5Shotgun?$AA@
	jmp	$LN47@GetWeaponN
$LN20@GetWeaponN:

; 633  :       case WEAPON_UZI: 
; 634  :          return "UZI"; 

	mov	eax, OFFSET ??_C@_03GCPIIAFJ@UZI?$AA@
	jmp	$LN47@GetWeaponN
$LN19@GetWeaponN:

; 635  :       case WEAPON_MP5: 
; 636  :          return "MP5"; 

	mov	eax, OFFSET ??_C@_03HJEIEMAF@MP5?$AA@
	jmp	$LN47@GetWeaponN
$LN18@GetWeaponN:

; 637  :       case WEAPON_AK47: 
; 638  :          return "AK47"; 

	mov	eax, OFFSET ??_C@_04KDDOELFP@AK47?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN17@GetWeaponN:

; 639  :       case WEAPON_M4: 
; 640  :          return "M4"; 

	mov	eax, OFFSET ??_C@_02MDNGMLIJ@M4?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN16@GetWeaponN:

; 641  :       case WEAPON_TEC9: 
; 642  :          return "TEC9"; 

	mov	eax, OFFSET ??_C@_04CENMHHMF@TEC9?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN15@GetWeaponN:

; 643  :       case WEAPON_RIFLE: 
; 644  :          return "Rifle"; 

	mov	eax, OFFSET ??_C@_05NMFDOHOF@Rifle?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN14@GetWeaponN:

; 645  :       case WEAPON_SNIPER: 
; 646  :          return "Sniper Rifle"; 

	mov	eax, OFFSET ??_C@_0N@PNCKKCNC@Sniper?5Rifle?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN13@GetWeaponN:

; 647  :       case WEAPON_ROCKETLAUNCHER: 
; 648  :          return "Rocket Launcher"; 

	mov	eax, OFFSET ??_C@_0BA@DJIGCIDL@Rocket?5Launcher?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN12@GetWeaponN:

; 649  :       case WEAPON_HEATSEEKER: 
; 650  :          return "Heat Seaker"; 

	mov	eax, OFFSET ??_C@_0M@KILOAMKG@Heat?5Seaker?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN11@GetWeaponN:

; 651  :       case WEAPON_FLAMETHROWER: 
; 652  :          return "Flamethrower"; 

	mov	eax, OFFSET ??_C@_0N@LDKIPHF@Flamethrower?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN10@GetWeaponN:

; 653  :       case WEAPON_MINIGUN: 
; 654  :          return "Minigun"; 

	mov	eax, OFFSET ??_C@_07JPACKGKC@Minigun?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN9@GetWeaponN:

; 655  :       case WEAPON_SATCHEL: 
; 656  :          return "Satchel Explosives"; 

	mov	eax, OFFSET ??_C@_0BD@ILKAJFBP@Satchel?5Explosives?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN8@GetWeaponN:

; 657  :       case WEAPON_BOMB: 
; 658  :          return "Bomb"; 

	mov	eax, OFFSET ??_C@_04GPGPLFMI@Bomb?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN7@GetWeaponN:

; 659  :       case WEAPON_SPRAYCAN: 
; 660  :          return "Spray Can"; 

	mov	eax, OFFSET ??_C@_09KLGHNLEL@Spray?5Can?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN6@GetWeaponN:

; 661  :       case WEAPON_FIREEXTINGUISHER: 
; 662  :          return "Fire Extinguisher"; 

	mov	eax, OFFSET ??_C@_0BC@PHGBOEPB@Fire?5Extinguisher?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN5@GetWeaponN:

; 663  :       case WEAPON_CAMERA: 
; 664  :          return "Camera"; 

	mov	eax, OFFSET ??_C@_06JCBBMBIP@Camera?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN4@GetWeaponN:

; 665  :       case WEAPON_PARACHUTE: 
; 666  :          return "Parachute"; 

	mov	eax, OFFSET ??_C@_09BNHMBLCC@Parachute?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN3@GetWeaponN:

; 667  :       case WEAPON_VEHICLE: 
; 668  :          return "Vehicle"; 

	mov	eax, OFFSET ??_C@_07NAELNENF@Vehicle?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN2@GetWeaponN:

; 669  :       case WEAPON_DROWN: 
; 670  :          return "Drowned"; 

	mov	eax, OFFSET ??_C@_07GKNJILIL@Drowned?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN1@GetWeaponN:

; 671  :       case WEAPON_COLLISION: 
; 672  :          return "Splat";

	mov	eax, OFFSET ??_C@_05EOEDJBJE@Splat?$AA@
	jmp	SHORT $LN47@GetWeaponN
$LN45@GetWeaponN:

; 673  : 	}
; 674  : 
; 675  : 	return "";

	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN47@GetWeaponN:

; 676  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN49@GetWeaponN:
	DD	$LN44@GetWeaponN
	DD	$LN43@GetWeaponN
	DD	$LN42@GetWeaponN
	DD	$LN41@GetWeaponN
	DD	$LN40@GetWeaponN
	DD	$LN39@GetWeaponN
	DD	$LN38@GetWeaponN
	DD	$LN37@GetWeaponN
	DD	$LN36@GetWeaponN
	DD	$LN35@GetWeaponN
	DD	$LN34@GetWeaponN
	DD	$LN33@GetWeaponN
	DD	$LN32@GetWeaponN
	DD	$LN31@GetWeaponN
	DD	$LN30@GetWeaponN
	DD	$LN29@GetWeaponN
	DD	$LN28@GetWeaponN
	DD	$LN27@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN26@GetWeaponN
	DD	$LN25@GetWeaponN
	DD	$LN24@GetWeaponN
	DD	$LN23@GetWeaponN
	DD	$LN22@GetWeaponN
	DD	$LN21@GetWeaponN
	DD	$LN20@GetWeaponN
	DD	$LN19@GetWeaponN
	DD	$LN18@GetWeaponN
	DD	$LN17@GetWeaponN
	DD	$LN16@GetWeaponN
	DD	$LN15@GetWeaponN
	DD	$LN14@GetWeaponN
	DD	$LN13@GetWeaponN
	DD	$LN12@GetWeaponN
	DD	$LN11@GetWeaponN
	DD	$LN10@GetWeaponN
	DD	$LN9@GetWeaponN
	DD	$LN8@GetWeaponN
	DD	$LN7@GetWeaponN
	DD	$LN6@GetWeaponN
	DD	$LN5@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN4@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN3@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN45@GetWeaponN
	DD	$LN2@GetWeaponN
	DD	$LN1@GetWeaponN
?GetWeaponName@CGame@@QAEQADH@Z ENDP			; CGame::GetWeaponName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.h
;	COMDAT ?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ PROC		; CGame::FindPlayerPed, COMDAT
; _this$ = ecx

; 142  : 	CPlayerPed  *FindPlayerPed() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		if(m_pGamePlayer==NULL)	m_pGamePlayer = new CPlayerPed();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@FindPlayer
	push	70					; 00000046H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@FindPlayer
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CPlayerPed@@QAE@XZ			; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@FindPlayer
$LN4@FindPlayer:
	mov	DWORD PTR tv74[ebp], 0
$LN5@FindPlayer:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@FindPlayer:

; 144  : 		return m_pGamePlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 145  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ENDP		; CGame::FindPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?ProcessInputDisabling@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ProcessInputDisabling@CGame@@QAEXXZ PROC		; CGame::ProcessInputDisabling, COMDAT
; _this$ = ecx

; 100  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 	if(bInputsDisabled) {

	cmp	DWORD PTR ?bInputsDisabled@@3HA, 0	; bInputsDisabled
	je	SHORT $LN4@ProcessInp

; 102  : 		UnFuck(0x541DF5,5);

	push	5
	push	5512693					; 00541df5H
	call	?UnFuck@@YAXKH@Z			; UnFuck
	add	esp, 8

; 103  : 		memset((PVOID)0x541DF5,0x90,5);	// disable call	

	push	5
	push	144					; 00000090H
	push	5512693					; 00541df5H
	call	_memset
	add	esp, 12					; 0000000cH

; 104  : 		//GameResetInternalKeys(); // set keys to 0
; 105  : 	} else {

	jmp	SHORT $LN5@ProcessInp
$LN4@ProcessInp:

; 106  : 		if(!iInputDisableWaitFrames) {

	cmp	DWORD PTR ?iInputDisableWaitFrames@@3HA, 0 ; iInputDisableWaitFrames
	jne	SHORT $LN2@ProcessInp

; 107  : 			UnFuck(0x541DF5,5);

	push	5
	push	5512693					; 00541df5H
	call	?UnFuck@@YAXKH@Z			; UnFuck
	add	esp, 8

; 108  : 			memcpy((PVOID)0x541DF5,byteGetKeyStateFunc,5);

	push	5
	push	OFFSET ?byteGetKeyStateFunc@@3PAEA	; byteGetKeyStateFunc
	push	5512693					; 00541df5H
	call	_memcpy
	add	esp, 12					; 0000000cH

; 109  : 			//GameResetInternalKeys(); // set keys to 0
; 110  : 		} else {

	jmp	SHORT $LN5@ProcessInp
$LN2@ProcessInp:

; 111  : 			iInputDisableWaitFrames--;

	mov	eax, DWORD PTR ?iInputDisableWaitFrames@@3HA ; iInputDisableWaitFrames
	sub	eax, 1
	mov	DWORD PTR ?iInputDisableWaitFrames@@3HA, eax ; iInputDisableWaitFrames
$LN5@ProcessInp:

; 112  : 		}
; 113  : 	}
; 114  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ProcessInputDisabling@CGame@@QAEXXZ ENDP		; CGame::ProcessInputDisabling
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?RestartEverything@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?RestartEverything@CGame@@QAEXXZ PROC			; CGame::RestartEverything, COMDAT
; _this$ = ecx

; 734  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 	//*(PBYTE)ADDR_MENU = 1;
; 736  : 	*(PBYTE)ADDR_MENU2 = 1;

	mov	BYTE PTR ds:12216229, 1

; 737  : 	*(PBYTE)ADDR_MENU3 = 1;

	mov	BYTE PTR ds:12216230, 1

; 738  : 
; 739  : 	//(PBYTE)ADDR_GAME_STARTED = 0;
; 740  : 	//*(PBYTE)ADDR_MENU = 1;
; 741  : 
; 742  : 	OutputDebugString("ShutDownForRestart");

	mov	esi, esp
	push	OFFSET ??_C@_0BD@DPIHGFBM@ShutDownForRestart?$AA@
	call	DWORD PTR __imp__OutputDebugStringA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 743  : 	_asm mov edx, 0x53C550 ; internal_CGame_ShutDownForRestart

	mov	edx, 5490000				; 0053c550H

; 744  : 	_asm call edx

	call	edx

; 745  : 
; 746  : 	OutputDebugString("Timers stopped");

	mov	esi, esp
	push	OFFSET ??_C@_0P@NAJHMDON@Timers?5stopped?$AA@
	call	DWORD PTR __imp__OutputDebugStringA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 747  : 	_asm mov edx, 0x561AA0 ; internal_CTimer_Stop

	mov	edx, 5642912				; 00561aa0H

; 748  : 	_asm call edx

	call	edx

; 749  : 
; 750  : 	OutputDebugString("ReInitialise");

	mov	esi, esp
	push	OFFSET ??_C@_0N@BKAKCFIE@ReInitialise?$AA@
	call	DWORD PTR __imp__OutputDebugStringA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 751  : 	_asm mov edx, 0x53C680 ; internal_CGame_InitialiseWhenRestarting

	mov	edx, 5490304				; 0053c680H

; 752  : 	_asm call edx

	call	edx

; 753  : 
; 754  : 	*(PBYTE)ADDR_GAME_STARTED = 1;

	mov	BYTE PTR ds:12216369, 1

; 755  : 
; 756  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RestartEverything@CGame@@QAEXXZ ENDP			; CGame::RestartEverything
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?GetD3DDevice@CGame@@QAEKXZ
_TEXT	SEGMENT
_pdwD3DDev$ = -20					; size = 4
_this$ = -8						; size = 4
?GetD3DDevice@CGame@@QAEKXZ PROC			; CGame::GetD3DDevice, COMDAT
; _this$ = ecx

; 713  : { 

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 714  : 	DWORD pdwD3DDev=0;

	mov	DWORD PTR _pdwD3DDev$[ebp], 0

; 715  : 
; 716  : 	if(iGtaVersion == GTASA_VERSION_USA10) {

	cmp	DWORD PTR ?iGtaVersion@@3HA, 1		; iGtaVersion
	jne	SHORT $LN3@GetD3DDevi

; 717  : 		_asm mov edx, ADDR_RENDERWARE_GETD3D_USA10

	mov	edx, 8363344				; 007f9d50H

; 718  : 		_asm call edx

	call	edx

; 719  : 		_asm mov pdwD3DDev, eax

	mov	DWORD PTR _pdwD3DDev$[ebp], eax
	jmp	SHORT $LN2@GetD3DDevi
$LN3@GetD3DDevi:

; 720  : 	} 
; 721  : 	else if (iGtaVersion == GTASA_VERSION_EU10) {

	cmp	DWORD PTR ?iGtaVersion@@3HA, 2		; iGtaVersion
	jne	SHORT $LN2@GetD3DDevi

; 722  : 		_asm mov edx, ADDR_RENDERWARE_GETD3D_EU10

	mov	edx, 8363408				; 007f9d90H

; 723  : 		_asm call edx

	call	edx

; 724  : 		_asm mov pdwD3DDev, eax

	mov	DWORD PTR _pdwD3DDev$[ebp], eax
$LN2@GetD3DDevi:

; 725  : 	}
; 726  : 
; 727  : 	return pdwD3DDev;	

	mov	eax, DWORD PTR _pdwD3DDev$[ebp]

; 728  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetD3DDevice@CGame@@QAEKXZ ENDP			; CGame::GetD3DDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?UpdateFarClippingPlane@CGame@@QAEXXZ
_TEXT	SEGMENT
_pPlayerPed$ = -20					; size = 4
_this$ = -8						; size = 4
?UpdateFarClippingPlane@CGame@@QAEXXZ PROC		; CGame::UpdateFarClippingPlane, COMDAT
; _this$ = ecx

; 533  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 534  : 	PED_TYPE *pPlayerPed = GamePool_FindPlayerPed();

	call	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ ; GamePool_FindPlayerPed
	mov	DWORD PTR _pPlayerPed$[ebp], eax

; 535  : 
; 536  : 	if(pPlayerPed) {

	cmp	DWORD PTR _pPlayerPed$[ebp], 0
	je	SHORT $LN5@UpdateFarC

; 537  : 		if(GetActiveInterior() == 0) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetActiveInterior@CGame@@QAEEXZ	; CGame::GetActiveInterior
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@UpdateFarC

; 538  : 			fFarClip = 1250.0f - (pPlayerPed->entity.mat->pos.Z * 2.0f);

	mov	eax, DWORD PTR _pPlayerPed$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	movss	xmm0, DWORD PTR [ecx+56]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@449c4000
	subss	xmm1, xmm0
	movss	DWORD PTR ?fFarClip@@3MA, xmm1

; 539  : 			if(fFarClip < 700.0f) {

	movss	xmm0, DWORD PTR __real@442f0000
	comiss	xmm0, DWORD PTR ?fFarClip@@3MA
	jbe	SHORT $LN3@UpdateFarC

; 540  : 				fFarClip = 700.0f;

	movss	xmm0, DWORD PTR __real@442f0000
	movss	DWORD PTR ?fFarClip@@3MA, xmm0
$LN3@UpdateFarC:

; 541  : 			}
; 542  : 		}
; 543  : 		else {

	jmp	SHORT $LN2@UpdateFarC
$LN4@UpdateFarC:

; 544  : 			fFarClip = 400.0f;

	movss	xmm0, DWORD PTR __real@43c80000
	movss	DWORD PTR ?fFarClip@@3MA, xmm0
$LN2@UpdateFarC:

; 545  : 		}
; 546  : 	}
; 547  : 	else {

	jmp	SHORT $LN1@UpdateFarC
$LN5@UpdateFarC:

; 548  : 		fFarClip = 1250.0f;

	movss	xmm0, DWORD PTR __real@449c4000
	movss	DWORD PTR ?fFarClip@@3MA, xmm0
$LN1@UpdateFarC:

; 549  : 	}
; 550  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateFarClippingPlane@CGame@@QAEXXZ ENDP		; CGame::UpdateFarClippingPlane
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?GetActiveInterior@CGame@@QAEEXZ
_TEXT	SEGMENT
_dwRet$ = -20						; size = 4
_this$ = -8						; size = 4
?GetActiveInterior@CGame@@QAEEXZ PROC			; CGame::GetActiveInterior, COMDAT
; _this$ = ecx

; 522  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 523  : 	DWORD dwRet;
; 524  : 	ScriptCommand(&get_active_interior,&dwRet);

	lea	eax, DWORD PTR _dwRet$[ebp]
	push	eax
	push	OFFSET _get_active_interior
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 525  : 	return (BYTE)dwRet;

	mov	al, BYTE PTR _dwRet$[ebp]

; 526  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetActiveI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GetActiveI:
	DD	1
	DD	$LN4@GetActiveI
$LN4@GetActiveI:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@GetActiveI
$LN3@GetActiveI:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
?GetActiveInterior@CGame@@QAEEXZ ENDP			; CGame::GetActiveInterior
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?GetLocalMoney@CGame@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLocalMoney@CGame@@QAEHXZ PROC			; CGame::GetLocalMoney, COMDAT
; _this$ = ecx

; 576  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 577  : 	return *(int *)0xB7CE50;

	mov	eax, DWORD PTR ds:12045904

; 578  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLocalMoney@CGame@@QAEHXZ ENDP			; CGame::GetLocalMoney
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?ResetLocalMoney@CGame@@QAEXXZ
_TEXT	SEGMENT
_iMoney$ = -20						; size = 4
_this$ = -8						; size = 4
?ResetLocalMoney@CGame@@QAEXXZ PROC			; CGame::ResetLocalMoney, COMDAT
; _this$ = ecx

; 562  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 563  : 	int iMoney = GetLocalMoney();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLocalMoney@CGame@@QAEHXZ		; CGame::GetLocalMoney
	mov	DWORD PTR _iMoney$[ebp], eax

; 564  : 	if(!iMoney) return;

	cmp	DWORD PTR _iMoney$[ebp], 0
	jne	SHORT $LN3@ResetLocal
	jmp	SHORT $LN4@ResetLocal
$LN3@ResetLocal:

; 565  : 
; 566  : 	if(iMoney < 0) {

	cmp	DWORD PTR _iMoney$[ebp], 0
	jge	SHORT $LN2@ResetLocal

; 567  : 		AddToLocalMoney(abs(iMoney));

	mov	eax, DWORD PTR _iMoney$[ebp]
	push	eax
	call	_abs
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToLocalMoney@CGame@@QAEXH@Z		; CGame::AddToLocalMoney

; 568  : 	} else {

	jmp	SHORT $LN4@ResetLocal
$LN2@ResetLocal:

; 569  : 		AddToLocalMoney(-(iMoney));

	mov	eax, DWORD PTR _iMoney$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToLocalMoney@CGame@@QAEXH@Z		; CGame::AddToLocalMoney
$LN4@ResetLocal:

; 570  : 	}
; 571  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ResetLocalMoney@CGame@@QAEXXZ ENDP			; CGame::ResetLocalMoney
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?AddToLocalMoney@CGame@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iAmount$ = 8						; size = 4
?AddToLocalMoney@CGame@@QAEXH@Z PROC			; CGame::AddToLocalMoney, COMDAT
; _this$ = ecx

; 555  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 556  : 	ScriptCommand(&add_to_player_money,0,iAmount);

	mov	eax, DWORD PTR _iAmount$[ebp]
	push	eax
	push	0
	push	OFFSET _add_to_player_money
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 557  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddToLocalMoney@CGame@@QAEXH@Z ENDP			; CGame::AddToLocalMoney
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?DisableMarker@CGame@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dwMarkerID$ = 8					; size = 4
?DisableMarker@CGame@@QAEXK@Z PROC			; CGame::DisableMarker, COMDAT
; _this$ = ecx

; 514  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 	ScriptCommand(&disable_marker, dwMarkerID);

	mov	eax, DWORD PTR _dwMarkerID$[ebp]
	push	eax
	push	OFFSET _disable_marker
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 516  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DisableMarker@CGame@@QAEXK@Z ENDP			; CGame::DisableMarker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?CreateRadarMarkerIcon@CGame@@QAEKHMMMH@Z
_TEXT	SEGMENT
_dwMarkerID$ = -20					; size = 4
_this$ = -8						; size = 4
_iMarkerType$ = 8					; size = 4
_fX$ = 12						; size = 4
_fY$ = 16						; size = 4
_fZ$ = 20						; size = 4
_iColor$ = 24						; size = 4
?CreateRadarMarkerIcon@CGame@@QAEKHMMMH@Z PROC		; CGame::CreateRadarMarkerIcon, COMDAT
; _this$ = ecx

; 503  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 504  : 	DWORD dwMarkerID;
; 505  : 	ScriptCommand(&create_radar_marker_without_sphere, fX, fY, fZ, iMarkerType, &dwMarkerID);

	lea	eax, DWORD PTR _dwMarkerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMarkerType$[ebp]
	push	ecx
	cvtss2sd xmm0, DWORD PTR _fZ$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET _create_radar_marker_without_sphere
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 36					; 00000024H

; 506  : 	ScriptCommand(&set_marker_color,dwMarkerID,iColor);

	mov	eax, DWORD PTR _iColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwMarkerID$[ebp]
	push	ecx
	push	OFFSET _set_marker_color
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 507  : 	ScriptCommand(&show_on_radar,dwMarkerID,3);

	push	3
	mov	eax, DWORD PTR _dwMarkerID$[ebp]
	push	eax
	push	OFFSET _show_on_radar
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 508  : 	return dwMarkerID;

	mov	eax, DWORD PTR _dwMarkerID$[ebp]

; 509  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@CreateRada
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN5@CreateRada:
	DD	1
	DD	$LN4@CreateRada
$LN4@CreateRada:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@CreateRada
$LN3@CreateRada:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?CreateRadarMarkerIcon@CGame@@QAEKHMMMH@Z ENDP		; CGame::CreateRadarMarkerIcon
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetRaceCheckpointInformation@CGame@@QAEXEPAU_VECTOR@@0M@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteType$ = 8						; size = 1
_pos$ = 12						; size = 4
_next$ = 16						; size = 4
_fSize$ = 20						; size = 4
?SetRaceCheckpointInformation@CGame@@QAEXEPAU_VECTOR@@0M@Z PROC ; CGame::SetRaceCheckpointInformation, COMDAT
; _this$ = ecx

; 403  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 404  : 	memcpy(&m_vecRaceCheckpointPos,pos,sizeof(VECTOR));

	push	12					; 0000000cH
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 405  : 	memcpy(&m_vecRaceCheckpointNext,next,sizeof(VECTOR));

	push	12					; 0000000cH
	mov	eax, DWORD PTR _next$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 406  : 	m_fRaceCheckpointSize = fSize;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _fSize$[ebp]
	movss	DWORD PTR [eax+64], xmm0

; 407  : 	m_byteRaceType = byteType;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _byteType$[ebp]
	mov	BYTE PTR [eax+68], cl

; 408  : 	//memcpy(&m_vecCheckpointExtent,extent,sizeof(VECTOR));
; 409  : 	//pChatWindow->AddDebugMessage("Called");
; 410  : 	if(m_dwRaceCheckpointMarker)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+73], 0
	je	SHORT $LN1@SetRaceChe

; 411  : 	{
; 412  : 		DisableMarker(m_dwRaceCheckpointMarker);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+73]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisableMarker@CGame@@QAEXK@Z		; CGame::DisableMarker

; 413  : 		//pChatWindow->AddDebugMessage("1");
; 414  : 		m_dwRaceCheckpointMarker = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+73], 0

; 415  : 		//pChatWindow->AddDebugMessage("Disabled checkpoint marker");
; 416  : 
; 417  : 		m_dwRaceCheckpointMarker = CreateRadarMarkerIcon(0, m_vecRaceCheckpointPos.X,
; 418  : 			m_vecRaceCheckpointPos.Y, m_vecRaceCheckpointPos.Z);

	push	201					; 000000c9H
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+44]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+40]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateRadarMarkerIcon@CGame@@QAEKHMMMH@Z ; CGame::CreateRadarMarkerIcon
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+73], eax
$LN1@SetRaceChe:

; 419  : 		/*pChatWindow->AddDebugMessage("Created marker icon '%X' at %f %f %f",
; 420  : 			m_dwCheckpointMarker, m_vecCheckpointPos.X, m_vecCheckpointPos.Y, m_vecCheckpointPos.Z);*/
; 421  : 	}
; 422  : 	MakeRaceCheckpoint();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeRaceCheckpoint@CGame@@QAEXXZ	; CGame::MakeRaceCheckpoint

; 423  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetRaceCheckpointInformation@CGame@@QAEXEPAU_VECTOR@@0M@Z ENDP ; CGame::SetRaceCheckpointInformation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?DisableRaceCheckpoint@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DisableRaceCheckpoint@CGame@@QAEXXZ PROC		; CGame::DisableRaceCheckpoint, COMDAT
; _this$ = ecx

; 443  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 444  : 	if (m_dwRaceCheckpointHandle)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+77], 0
	je	SHORT $LN1@DisableRac

; 445  : 	{
; 446  : 		ScriptCommand(&destroy_racing_checkpoint, m_dwRaceCheckpointHandle);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+77]
	push	ecx
	push	OFFSET _destroy_racing_checkpoint
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 447  : 		m_dwRaceCheckpointHandle = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+77], 0
$LN1@DisableRac:

; 448  : 	}
; 449  : 	m_bRaceCheckpointsEnabled = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+69], 0

; 450  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DisableRaceCheckpoint@CGame@@QAEXXZ ENDP		; CGame::DisableRaceCheckpoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?MakeRaceCheckpoint@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?MakeRaceCheckpoint@CGame@@QAEXXZ PROC			; CGame::MakeRaceCheckpoint, COMDAT
; _this$ = ecx

; 428  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 429  : 	//DWORD dwCheckpoint;
; 430  : 	DisableRaceCheckpoint();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisableRaceCheckpoint@CGame@@QAEXXZ	; CGame::DisableRaceCheckpoint

; 431  : 	//ScriptCommand(&create_checkpoint2, m_vecRaceCheckpointPos.X, m_vecRaceCheckpointPos.Y, m_vecRaceCheckpointPos.Z, &m_dwRaceCheckpointHandle);
; 432  : 	ScriptCommand(&create_racing_checkpoint, (int)m_byteRaceType,
; 433  : 				m_vecRaceCheckpointPos.X, m_vecRaceCheckpointPos.Y, m_vecRaceCheckpointPos.Z,
; 434  : 				m_vecRaceCheckpointNext.X, m_vecRaceCheckpointNext.Y, m_vecRaceCheckpointNext.Z,
; 435  : 				m_fRaceCheckpointSize, &m_dwRaceCheckpointHandle);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 77					; 0000004dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+64]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+56]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+52]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+48]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+44]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+40]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+68]
	push	eax
	push	OFFSET _create_racing_checkpoint
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 68					; 00000044H

; 436  : 	/*pChatWindow->AddDebugMessage("Created checkpoint '%X' at %f %f %f",
; 437  : 			m_dwRaceCheckpointHandle, m_vecRaceCheckpointPos.X, m_vecRaceCheckpointPos.Y, m_vecRaceCheckpointPos.Z);
; 438  : 	pChatWindow->AddDebugMessage("Type: %d Size: %f", m_byteRaceType, m_fRaceCheckpointSize);*/
; 439  : 	m_bRaceCheckpointsEnabled = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+69], 1

; 440  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?MakeRaceCheckpoint@CGame@@QAEXXZ ENDP			; CGame::MakeRaceCheckpoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetCheckpointInformation@CGame@@QAEXPAU_VECTOR@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pos$ = 8						; size = 4
_extent$ = 12						; size = 4
?SetCheckpointInformation@CGame@@QAEXPAU_VECTOR@@0@Z PROC ; CGame::SetCheckpointInformation, COMDAT
; _this$ = ecx

; 385  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 386  : 	memcpy(&m_vecCheckpointPos,pos,sizeof(VECTOR));

	push	12					; 0000000cH
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 387  : 	memcpy(&m_vecCheckpointExtent,extent,sizeof(VECTOR));

	push	12					; 0000000cH
	mov	eax, DWORD PTR _extent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 388  : 	if(m_dwCheckpointMarker) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN1@SetCheckpo

; 389  : 		DisableMarker(m_dwCheckpointMarker);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisableMarker@CGame@@QAEXK@Z		; CGame::DisableMarker

; 390  : 		m_dwCheckpointMarker = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 391  : 		//pChatWindow->AddDebugMessage("Disabled checkpoint marker");
; 392  : 
; 393  : 		m_dwCheckpointMarker = CreateRadarMarkerIcon(0, m_vecCheckpointPos.X,
; 394  : 			m_vecCheckpointPos.Y, m_vecCheckpointPos.Z);

	push	201					; 000000c9H
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+12]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+8]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateRadarMarkerIcon@CGame@@QAEKHMMMH@Z ; CGame::CreateRadarMarkerIcon
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax
$LN1@SetCheckpo:

; 395  : 		/*pChatWindow->AddDebugMessage("Created marker icon '%X' at %f %f %f",
; 396  : 			m_dwCheckpointMarker, m_vecCheckpointPos.X, m_vecCheckpointPos.Y, m_vecCheckpointPos.Z);*/
; 397  : 	}
; 398  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetCheckpointInformation@CGame@@QAEXPAU_VECTOR@@0@Z ENDP ; CGame::SetCheckpointInformation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?UpdateCheckpoints@CGame@@QAEXXZ
_TEXT	SEGMENT
_pPlayerPed$1 = -32					; size = 4
_pPlayerPed$2 = -20					; size = 4
_this$ = -8						; size = 4
?UpdateCheckpoints@CGame@@QAEXXZ PROC			; CGame::UpdateCheckpoints, COMDAT
; _this$ = ecx

; 455  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 456  : 	if(m_bCheckpointsEnabled) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN10@UpdateChec

; 457  : 		CPlayerPed *pPlayerPed = this->FindPlayerPed();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayerPed$2[ebp], eax

; 458  : 		if(pPlayerPed) {

	cmp	DWORD PTR _pPlayerPed$2[ebp], 0
	je	$LN8@UpdateChec

; 459  : 			ScriptCommand(&is_actor_near_point_3d,pPlayerPed->m_dwGTAId,
; 460  : 				m_vecCheckpointPos.X,m_vecCheckpointPos.Y,m_vecCheckpointPos.Z,
; 461  : 				m_vecCheckpointExtent.X,m_vecCheckpointExtent.Y,m_vecCheckpointExtent.Z,1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+28]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+24]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+20]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+16]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+12]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _pPlayerPed$2[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET _is_actor_near_point_3d
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 60					; 0000003cH

; 462  : 			if (!m_dwCheckpointMarker)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jne	SHORT $LN8@UpdateChec

; 463  : 			{
; 464  : 				m_dwCheckpointMarker = CreateRadarMarkerIcon(0, m_vecCheckpointPos.X,
; 465  : 					m_vecCheckpointPos.Y, m_vecCheckpointPos.Z);

	push	201					; 000000c9H
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+12]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+8]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateRadarMarkerIcon@CGame@@QAEKHMMMH@Z ; CGame::CreateRadarMarkerIcon
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax
$LN8@UpdateChec:

; 466  : 				/*pChatWindow->AddDebugMessage("Created marker icon '%X' at %f %f %f",
; 467  : 					m_dwCheckpointMarker, m_vecCheckpointPos.X, m_vecCheckpointPos.Y, m_vecCheckpointPos.Z);*/
; 468  : 			}
; 469  : 		}
; 470  : 	}

	jmp	SHORT $LN6@UpdateChec
$LN10@UpdateChec:

; 471  : 	else if(m_dwCheckpointMarker) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN6@UpdateChec

; 472  : 		DisableMarker(m_dwCheckpointMarker);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisableMarker@CGame@@QAEXK@Z		; CGame::DisableMarker

; 473  : 		m_dwCheckpointMarker = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
$LN6@UpdateChec:

; 474  : 		//pChatWindow->AddDebugMessage("Disabled checkpoint marker");
; 475  : 	}
; 476  : 	
; 477  : 	if(m_bRaceCheckpointsEnabled) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+69], 0
	je	SHORT $LN5@UpdateChec

; 478  : 		CPlayerPed *pPlayerPed = this->FindPlayerPed();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayerPed$1[ebp], eax

; 479  : 		if(pPlayerPed)

	cmp	DWORD PTR _pPlayerPed$1[ebp], 0
	je	SHORT $LN3@UpdateChec

; 480  : 		{
; 481  : 			//MakeRaceCheckpoint();
; 482  : 			if (!m_dwRaceCheckpointMarker)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+73], 0
	jne	SHORT $LN3@UpdateChec

; 483  : 			{
; 484  : 				m_dwRaceCheckpointMarker = CreateRadarMarkerIcon(0, m_vecRaceCheckpointPos.X,
; 485  : 					m_vecRaceCheckpointPos.Y, m_vecRaceCheckpointPos.Z);

	push	201					; 000000c9H
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+44]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+40]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateRadarMarkerIcon@CGame@@QAEKHMMMH@Z ; CGame::CreateRadarMarkerIcon
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+73], eax
$LN3@UpdateChec:

; 486  : 				/*pChatWindow->AddDebugMessage("Created marker icon '%X' at %f %f %f",
; 487  : 					m_dwCheckpointMarker, m_vecCheckpointPos.X, m_vecCheckpointPos.Y, m_vecCheckpointPos.Z);*/
; 488  : 			}
; 489  : 		}
; 490  : 	}

	jmp	SHORT $LN1@UpdateChec
$LN5@UpdateChec:

; 491  : 	else if(m_dwRaceCheckpointMarker) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+73], 0
	je	SHORT $LN1@UpdateChec

; 492  : 		DisableMarker(m_dwRaceCheckpointMarker);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+73]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisableMarker@CGame@@QAEXK@Z		; CGame::DisableMarker

; 493  : 		DisableRaceCheckpoint();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisableRaceCheckpoint@CGame@@QAEXXZ	; CGame::DisableRaceCheckpoint

; 494  : 		m_dwRaceCheckpointMarker = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+73], 0
$LN1@UpdateChec:

; 495  : 		//pChatWindow->AddDebugMessage("Disabled checkpoint marker");
; 496  : 	}
; 497  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateCheckpoints@CGame@@QAEXXZ ENDP			; CGame::UpdateCheckpoints
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?EnableStuntBonus@CGame@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bEnable$ = 8						; size = 1
?EnableStuntBonus@CGame@@QAEX_N@Z PROC			; CGame::EnableStuntBonus, COMDAT
; _this$ = ecx

; 832  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 833  : 	UnFuck(0xA4A474,4);

	push	4
	push	10790004				; 00a4a474H
	call	?UnFuck@@YAXKH@Z			; UnFuck
	add	esp, 8

; 834  : 	*(DWORD*)0xA4A474 = (int)bEnable;

	movzx	eax, BYTE PTR _bEnable$[ebp]
	mov	DWORD PTR ds:10790004, eax

; 835  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnableStuntBonus@CGame@@QAEX_N@Z ENDP			; CGame::EnableStuntBonus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?DrawGangZone@CGame@@QAEXPAMK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fPos$ = 8						; size = 4
_dwColor$ = 12						; size = 4
?DrawGangZone@CGame@@QAEXPAMK@Z PROC			; CGame::DrawGangZone, COMDAT
; _this$ = ecx

; 800  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 801  : 	((DrawZone_t)0x5853D0)(fPos, &dwColor, *(BYTE*)ADDR_MENU);

	mov	esi, esp
	movzx	eax, BYTE PTR ds:12216228
	push	eax
	lea	ecx, DWORD PTR _dwColor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fPos$[ebp]
	push	edx
	mov	eax, 5788624				; 005853d0H
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 802  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DrawGangZone@CGame@@QAEXPAMK@Z ENDP			; CGame::DrawGangZone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetGameTextCount@CGame@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_wCount$ = 8						; size = 2
?SetGameTextCount@CGame@@QAEXG@Z PROC			; CGame::SetGameTextCount, COMDAT
; _this$ = ecx

; 793  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 794  : 	*(WORD*)0xA44B68 = wCount;

	mov	ax, WORD PTR _wCount$[ebp]
	mov	WORD PTR ds:10767208, ax

; 795  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGameTextCount@CGame@@QAEXG@Z ENDP			; CGame::SetGameTextCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetWantedLevel@CGame@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteLevel$ = 8						; size = 1
?SetWantedLevel@CGame@@QAEXE@Z PROC			; CGame::SetWantedLevel, COMDAT
; _this$ = ecx

; 786  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 787  : 	*(BYTE*)0x58DB60 = byteLevel;

	mov	al, BYTE PTR _byteLevel$[ebp]
	mov	BYTE PTR ds:5823328, al

; 788  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWantedLevel@CGame@@QAEXE@Z ENDP			; CGame::SetWantedLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?EnableZoneNames@CGame@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteEnable$ = 8					; size = 1
?EnableZoneNames@CGame@@QAEXE@Z PROC			; CGame::EnableZoneNames, COMDAT
; _this$ = ecx

; 825  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 826  : 	ScriptCommand(&enable_zone_names, byteEnable);

	movzx	eax, BYTE PTR _byteEnable$[ebp]
	push	eax
	push	OFFSET _enable_zone_names
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 827  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnableZoneNames@CGame@@QAEXE@Z ENDP			; CGame::EnableZoneNames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?EnableClock@CGame@@QAEXE@Z
_TEXT	SEGMENT
_byteClockData$ = -32					; size = 10
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_byteClock$ = 8						; size = 1
?EnableClock@CGame@@QAEXE@Z PROC			; CGame::EnableClock, COMDAT
; _this$ = ecx

; 807  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 808  : 	BYTE byteClockData[] = {'%', '0', '2', 'd', ':', '%', '0', '2', 'd', 0};

	mov	BYTE PTR _byteClockData$[ebp], 37	; 00000025H
	mov	BYTE PTR _byteClockData$[ebp+1], 48	; 00000030H
	mov	BYTE PTR _byteClockData$[ebp+2], 50	; 00000032H
	mov	BYTE PTR _byteClockData$[ebp+3], 100	; 00000064H
	mov	BYTE PTR _byteClockData$[ebp+4], 58	; 0000003aH
	mov	BYTE PTR _byteClockData$[ebp+5], 37	; 00000025H
	mov	BYTE PTR _byteClockData$[ebp+6], 48	; 00000030H
	mov	BYTE PTR _byteClockData$[ebp+7], 50	; 00000032H
	mov	BYTE PTR _byteClockData$[ebp+8], 100	; 00000064H
	mov	BYTE PTR _byteClockData$[ebp+9], 0

; 809  : 	UnFuck(0x859A6C,10);

	push	10					; 0000000aH
	push	8755820					; 00859a6cH
	call	?UnFuck@@YAXKH@Z			; UnFuck
	add	esp, 8

; 810  : 	if (byteClock)

	movzx	eax, BYTE PTR _byteClock$[ebp]
	test	eax, eax
	je	SHORT $LN2@EnableCloc

; 811  : 	{
; 812  : 		ToggleThePassingOfTime(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ToggleThePassingOfTime@CGame@@QAEXE@Z	; CGame::ToggleThePassingOfTime

; 813  : 		memcpy((PVOID)0x859A6C, byteClockData, 10);

	push	10					; 0000000aH
	lea	eax, DWORD PTR _byteClockData$[ebp]
	push	eax
	push	8755820					; 00859a6cH
	call	_memcpy
	add	esp, 12					; 0000000cH

; 814  : 	}
; 815  : 	else

	jmp	SHORT $LN3@EnableCloc
$LN2@EnableCloc:

; 816  : 	{
; 817  : 		ToggleThePassingOfTime(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ToggleThePassingOfTime@CGame@@QAEXE@Z	; CGame::ToggleThePassingOfTime

; 818  : 		memset((PVOID)0x859A6C,0,10);

	push	10					; 0000000aH
	push	0
	push	8755820					; 00859a6cH
	call	_memset
	add	esp, 12					; 0000000cH
$LN3@EnableCloc:

; 819  : 	}
; 820  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@EnableCloc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@EnableCloc:
	DD	1
	DD	$LN6@EnableCloc
$LN6@EnableCloc:
	DD	-32					; ffffffe0H
	DD	10					; 0000000aH
	DD	$LN5@EnableCloc
$LN5@EnableCloc:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
?EnableClock@CGame@@QAEXE@Z ENDP			; CGame::EnableClock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetGravity@CGame@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fGravity$ = 8						; size = 4
?SetGravity@CGame@@QAEXM@Z PROC				; CGame::SetGravity, COMDAT
; _this$ = ecx

; 778  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 779  : 	UnFuck(0x863984, 4);

	push	4
	push	8796548					; 00863984H
	call	?UnFuck@@YAXKH@Z			; UnFuck
	add	esp, 8

; 780  : 	*(float*)0x863984 = fGravity;

	movss	xmm0, DWORD PTR _fGravity$[ebp]
	movss	DWORD PTR ds:8796548, xmm0

; 781  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGravity@CGame@@QAEXM@Z ENDP				; CGame::SetGravity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?PlaySoundA@CGame@@QAEXHMMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iSound$ = 8						; size = 4
_fX$ = 12						; size = 4
_fY$ = 16						; size = 4
_fZ$ = 20						; size = 4
?PlaySoundA@CGame@@QAEXHMMM@Z PROC			; CGame::PlaySoundA, COMDAT
; _this$ = ecx

; 378  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 379  : 	ScriptCommand(&play_sound, fX, fY, fZ, iSound);

	mov	eax, DWORD PTR _iSound$[ebp]
	push	eax
	cvtss2sd xmm0, DWORD PTR _fZ$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fY$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _fX$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET _play_sound
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 32					; 00000020H

; 380  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?PlaySoundA@CGame@@QAEXHMMM@Z ENDP			; CGame::PlaySoundA
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?DisplayGameText@CGame@@QAEXPADHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szStr$ = 8						; size = 4
_iTime$ = 12						; size = 4
_iSize$ = 16						; size = 4
?DisplayGameText@CGame@@QAEXPADHH@Z PROC		; CGame::DisplayGameText, COMDAT
; _this$ = ecx

; 362  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 363  : 	ScriptCommand(&text_clear_all);

	push	OFFSET _text_clear_all
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 4

; 364  : 
; 365  : 	strcpy(szGameTextMessage,szStr);

	mov	eax, DWORD PTR _szStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?szGameTextMessage@@3PADA ; szGameTextMessage
	push	ecx
	call	_strcpy
	add	esp, 8

; 366  : 
; 367  : 	_asm push iSize

	push	DWORD PTR _iSize$[ebp]

; 368  : 	_asm push iTime

	push	DWORD PTR _iTime$[ebp]

; 369  : 	_asm push szGameTextMessage

	push	DWORD PTR ?szGameTextMessage@@3PADA	; szGameTextMessage

; 370  : 	_asm mov eax, 0x69F2B0

	mov	eax, 6943408				; 0069f2b0H

; 371  : 	_asm call eax

	call	eax

; 372  : 	_asm add esp, 12

	add	esp, 12					; 0000000cH

; 373  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DisplayGameText@CGame@@QAEXPADHH@Z ENDP		; CGame::DisplayGameText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?ToggleRadar@CGame@@QAEXH@Z
_TEXT	SEGMENT
tv65 = -205						; size = 1
_this$ = -8						; size = 4
_iToggle$ = 8						; size = 4
?ToggleRadar@CGame@@QAEXH@Z PROC			; CGame::ToggleRadar, COMDAT
; _this$ = ecx

; 355  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 356  : 	*(PBYTE)0xBAA3FB = (BYTE)!iToggle;

	cmp	DWORD PTR _iToggle$[ebp], 0
	jne	SHORT $LN3@ToggleRada
	mov	BYTE PTR tv65[ebp], 1
	jmp	SHORT $LN4@ToggleRada
$LN3@ToggleRada:
	mov	BYTE PTR tv65[ebp], 0
$LN4@ToggleRada:
	mov	al, BYTE PTR tv65[ebp]
	mov	BYTE PTR ds:12231675, al

; 357  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ToggleRadar@CGame@@QAEXH@Z ENDP			; CGame::ToggleRadar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?ReleaseAnimation@CGame@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szAnimFile$ = 8					; size = 4
?ReleaseAnimation@CGame@@QAEXPAD@Z PROC			; CGame::ReleaseAnimation, COMDAT
; _this$ = ecx

; 347  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 	if (IsAnimationLoaded(szAnimFile))

	mov	eax, DWORD PTR _szAnimFile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAnimationLoaded@CGame@@QAEHPAD@Z	; CGame::IsAnimationLoaded
	test	eax, eax
	je	SHORT $LN2@ReleaseAni

; 349  : 		ScriptCommand(&release_animation,szAnimFile);

	mov	eax, DWORD PTR _szAnimFile$[ebp]
	push	eax
	push	OFFSET _release_animation
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8
$LN2@ReleaseAni:

; 350  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseAnimation@CGame@@QAEXPAD@Z ENDP			; CGame::ReleaseAnimation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?IsAnimationLoaded@CGame@@QAEHPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szAnimFile$ = 8					; size = 4
?IsAnimationLoaded@CGame@@QAEHPAD@Z PROC		; CGame::IsAnimationLoaded, COMDAT
; _this$ = ecx

; 340  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 	return ScriptCommand(&is_animation_loaded,szAnimFile);

	mov	eax, DWORD PTR _szAnimFile$[ebp]
	push	eax
	push	OFFSET _is_animation_loaded
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 342  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsAnimationLoaded@CGame@@QAEHPAD@Z ENDP		; CGame::IsAnimationLoaded
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?RequestAnimation@CGame@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szAnimFile$ = 8					; size = 4
?RequestAnimation@CGame@@QAEXPAD@Z PROC			; CGame::RequestAnimation, COMDAT
; _this$ = ecx

; 333  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : 	ScriptCommand(&request_animation, szAnimFile);

	mov	eax, DWORD PTR _szAnimFile$[ebp]
	push	eax
	push	OFFSET _request_animation
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 335  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RequestAnimation@CGame@@QAEXPAD@Z ENDP			; CGame::RequestAnimation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?RefreshStreamingAt@CGame@@QAEXMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?RefreshStreamingAt@CGame@@QAEXMM@Z PROC		; CGame::RefreshStreamingAt, COMDAT
; _this$ = ecx

; 326  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 327  : 	ScriptCommand(&refresh_streaming_at,x,y);

	cvtss2sd xmm0, DWORD PTR _y$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _x$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET _refresh_streaming_at
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 20					; 00000014H

; 328  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RefreshStreamingAt@CGame@@QAEXMM@Z ENDP		; CGame::RefreshStreamingAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?DisableTrainTraffic@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DisableTrainTraffic@CGame@@QAEXXZ PROC			; CGame::DisableTrainTraffic, COMDAT
; _this$ = ecx

; 319  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 	ScriptCommand(&enable_train_traffic,0);

	push	0
	push	OFFSET _enable_train_traffic
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 321  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DisableTrainTraffic@CGame@@QAEXXZ ENDP			; CGame::DisableTrainTraffic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetMaxStats@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetMaxStats@CGame@@QAEXXZ PROC				; CGame::SetMaxStats, COMDAT
; _this$ = ecx

; 306  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 307  : 	// driving stat
; 308  : 	_asm mov eax, 0x4399D0

	mov	eax, 4430288				; 004399d0H

; 309  : 	_asm call eax

	call	eax

; 310  : 
; 311  : 	// weapon stats
; 312  : 	_asm mov eax, 0x439940

	mov	eax, 4430144				; 00439940H

; 313  : 	_asm call eax

	call	eax

; 314  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SetMaxStats@CGame@@QAEXXZ ENDP				; CGame::SetMaxStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetFrameLimiterOn@CGame@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bLimiter$ = 8						; size = 4
?SetFrameLimiterOn@CGame@@QAEXH@Z PROC			; CGame::SetFrameLimiterOn, COMDAT
; _this$ = ecx

; 299  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 
; 301  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFrameLimiterOn@CGame@@QAEXH@Z ENDP			; CGame::SetFrameLimiterOn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?IsHudEnabled@CGame@@QAEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsHudEnabled@CGame@@QAEEXZ PROC			; CGame::IsHudEnabled, COMDAT
; _this$ = ecx

; 292  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 293  : 	return *(BYTE*)ADDR_ENABLE_HUD;

	mov	al, BYTE PTR ds:12216169

; 294  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsHudEnabled@CGame@@QAEEXZ ENDP			; CGame::IsHudEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?DisplayHud@CGame@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bDisp$ = 8						; size = 4
?DisplayHud@CGame@@QAEXH@Z PROC				; CGame::DisplayHud, COMDAT
; _this$ = ecx

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 281  : 	if(bDisp) {

	cmp	DWORD PTR _bDisp$[ebp], 0
	je	SHORT $LN2@DisplayHud

; 282  : 		*(BYTE*)ADDR_ENABLE_HUD = 1;

	mov	BYTE PTR ds:12216169, 1

; 283  : 		ToggleRadar(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ToggleRadar@CGame@@QAEXH@Z		; CGame::ToggleRadar

; 284  : 	} else {

	jmp	SHORT $LN3@DisplayHud
$LN2@DisplayHud:

; 285  : 		*(BYTE*)ADDR_ENABLE_HUD = 0;

	mov	BYTE PTR ds:12216169, 0

; 286  : 		ToggleRadar(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ToggleRadar@CGame@@QAEXH@Z		; CGame::ToggleRadar
$LN3@DisplayHud:

; 287  : 	}
; 288  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DisplayHud@CGame@@QAEXH@Z ENDP				; CGame::DisplayHud
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetWorldWeather@CGame@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iWeatherID$ = 8					; size = 4
?SetWorldWeather@CGame@@QAEXH@Z PROC			; CGame::SetWorldWeather, COMDAT
; _this$ = ecx

; 272  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 273  : 	*(DWORD*)(0xC81320) = iWeatherID;

	mov	eax, DWORD PTR _iWeatherID$[ebp]
	mov	DWORD PTR ds:13112096, eax

; 274  : 	*(DWORD*)(0xC8131C) = iWeatherID;

	mov	eax, DWORD PTR _iWeatherID$[ebp]
	mov	DWORD PTR ds:13112092, eax

; 275  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWorldWeather@CGame@@QAEXH@Z ENDP			; CGame::SetWorldWeather
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?ToggleThePassingOfTime@CGame@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteOnOff$ = 8						; size = 1
?ToggleThePassingOfTime@CGame@@QAEXE@Z PROC		; CGame::ToggleThePassingOfTime, COMDAT
; _this$ = ecx

; 258  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 259  : 	UnFuck(0x52CF10,1);

	push	1
	push	5426960					; 0052cf10H
	call	?UnFuck@@YAXKH@Z			; UnFuck
	add	esp, 8

; 260  : 
; 261  : 	if(byteOnOff) {

	movzx	eax, BYTE PTR _byteOnOff$[ebp]
	test	eax, eax
	je	SHORT $LN2@ToggleTheP

; 262  : 		*(PBYTE)0x52CF10 = 0x56; // push esi

	mov	BYTE PTR ds:5426960, 86			; 00000056H

; 263  : 	}
; 264  : 	else {

	jmp	SHORT $LN3@ToggleTheP
$LN2@ToggleTheP:

; 265  : 		*(PBYTE)0x52CF10 = 0xC3; // ret

	mov	BYTE PTR ds:5426960, 195		; 000000c3H
$LN3@ToggleTheP:

; 266  : 	}
; 267  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ToggleThePassingOfTime@CGame@@QAEXE@Z ENDP		; CGame::ToggleThePassingOfTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?GetWorldTime@CGame@@QAEXPAH0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iHour$ = 8						; size = 4
_iMinute$ = 12						; size = 4
?GetWorldTime@CGame@@QAEXPAH0@Z PROC			; CGame::GetWorldTime, COMDAT
; _this$ = ecx

; 250  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 251  : 	*iMinute = *(PBYTE)0xB70152;

	movzx	eax, BYTE PTR ds:11993426
	mov	ecx, DWORD PTR _iMinute$[ebp]
	mov	DWORD PTR [ecx], eax

; 252  : 	*iHour = *(PBYTE)0xB70153;

	movzx	eax, BYTE PTR ds:11993427
	mov	ecx, DWORD PTR _iHour$[ebp]
	mov	DWORD PTR [ecx], eax

; 253  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWorldTime@CGame@@QAEXPAH0@Z ENDP			; CGame::GetWorldTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?SetWorldTime@CGame@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iHour$ = 8						; size = 4
_iMinute$ = 12						; size = 4
?SetWorldTime@CGame@@QAEXHH@Z PROC			; CGame::SetWorldTime, COMDAT
; _this$ = ecx

; 242  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 	*(PBYTE)0xB70152 = (BYTE)iMinute;

	mov	al, BYTE PTR _iMinute$[ebp]
	mov	BYTE PTR ds:11993426, al

; 244  : 	*(PBYTE)0xB70153 = (BYTE)iHour;

	mov	al, BYTE PTR _iHour$[ebp]
	mov	BYTE PTR ds:11993427, al

; 245  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetWorldTime@CGame@@QAEXHH@Z ENDP			; CGame::SetWorldTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?RemoveModel@CGame@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iModelID$ = 8						; size = 4
?RemoveModel@CGame@@QAEXH@Z PROC			; CGame::RemoveModel, COMDAT
; _this$ = ecx

; 228  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 229  : 	/*
; 230  : 	_asm push iModelID
; 231  : 	_asm mov edx, 0x4089A0
; 232  : 	_asm call edx
; 233  : 	_asm add esp, 4*/
; 234  : 
; 235  : 	if (IsModelLoaded(iModelID))

	mov	eax, DWORD PTR _iModelID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	je	SHORT $LN2@RemoveMode

; 236  : 		ScriptCommand(&release_model,iModelID);

	mov	eax, DWORD PTR _iModelID$[ebp]
	push	eax
	push	OFFSET _release_model
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8
$LN2@RemoveMode:

; 237  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveModel@CGame@@QAEXH@Z ENDP			; CGame::RemoveModel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?IsModelLoaded@CGame@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iModelID$ = 8						; size = 4
?IsModelLoaded@CGame@@QAEHH@Z PROC			; CGame::IsModelLoaded, COMDAT
; _this$ = ecx

; 221  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 222  : 	return ScriptCommand(&is_model_available,iModelID);

	mov	eax, DWORD PTR _iModelID$[ebp]
	push	eax
	push	OFFSET _is_model_available
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 223  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsModelLoaded@CGame@@QAEHH@Z ENDP			; CGame::IsModelLoaded
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?LoadRequestedModels@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?LoadRequestedModels@CGame@@QAEXXZ PROC			; CGame::LoadRequestedModels, COMDAT
; _this$ = ecx

; 208  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 209  : 	/*
; 210  : 	_asm push 0
; 211  : 	_asm mov edx, 0x40EA10
; 212  : 	_asm call edx
; 213  : 	_asm add esp, 4*/
; 214  : 
; 215  : 	ScriptCommand(&load_requested_models);

	push	OFFSET _load_requested_models
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 4

; 216  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadRequestedModels@CGame@@QAEXXZ ENDP			; CGame::LoadRequestedModels
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?RequestModel@CGame@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iModelID$ = 8						; size = 4
?RequestModel@CGame@@QAEXH@Z PROC			; CGame::RequestModel, COMDAT
; _this$ = ecx

; 194  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 	/*
; 196  : 	_asm push 2
; 197  : 	_asm push iModelID
; 198  : 	_asm mov edx, 0x4087E0
; 199  : 	_asm call edx
; 200  : 	_asm add esp, 8*/
; 201  : 
; 202  : 	ScriptCommand(&request_model,iModelID);

	mov	eax, DWORD PTR _iModelID$[ebp]
	push	eax
	push	OFFSET _request_model
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 203  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RequestModel@CGame@@QAEXH@Z ENDP			; CGame::RequestModel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?IsGameLoaded@CGame@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsGameLoaded@CGame@@QAEHXZ PROC			; CGame::IsGameLoaded, COMDAT
; _this$ = ecx

; 186  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 	if(!(*(PBYTE)ADDR_GAME_STARTED)) return TRUE;

	movzx	eax, BYTE PTR ds:12216369
	test	eax, eax
	jne	SHORT $LN1@IsGameLoad
	mov	eax, 1
	jmp	SHORT $LN2@IsGameLoad
$LN1@IsGameLoad:

; 188  : 	return FALSE;

	xor	eax, eax
$LN2@IsGameLoad:

; 189  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsGameLoaded@CGame@@QAEHXZ ENDP			; CGame::IsGameLoaded
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?IsMenuActive@CGame@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsMenuActive@CGame@@QAEHXZ PROC			; CGame::IsMenuActive, COMDAT
; _this$ = ecx

; 177  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 178  : 	if(*(PDWORD)ADDR_MENU) return TRUE;

	cmp	DWORD PTR ds:12216228, 0
	je	SHORT $LN1@IsMenuActi
	mov	eax, 1
	jmp	SHORT $LN2@IsMenuActi
$LN1@IsMenuActi:

; 179  : 	return FALSE;

	xor	eax, eax
$LN2@IsMenuActi:

; 180  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMenuActive@CGame@@QAEHXZ ENDP			; CGame::IsMenuActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?InitGame@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?InitGame@CGame@@QAEXXZ PROC				; CGame::InitGame, COMDAT
; _this$ = ecx

; 131  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 	// Create a buffer for game text.
; 133  : 	szGameTextMessage = (char*)malloc(256);

	push	256					; 00000100H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR ?szGameTextMessage@@3PADA, eax ; szGameTextMessage

; 134  : 
; 135  : 	// Init the keystate stuff.
; 136  : 	GameKeyStatesInit();

	call	?GameKeyStatesInit@@YAXXZ		; GameKeyStatesInit

; 137  : 
; 138  : 	// Init the aim stuff.
; 139  : 	GameAimSyncInit();

	call	?GameAimSyncInit@@YGXXZ			; GameAimSyncInit

; 140  : 
; 141  : 	// Init radar colors
; 142  : 	GameResetRadarColors();

	call	?GameResetRadarColors@@YAXXZ		; GameResetRadarColors

; 143  : 
; 144  : 	if(!ApplyPreGamePatches()) {

	call	?ApplyPreGamePatches@@YAHXZ		; ApplyPreGamePatches
	test	eax, eax
	jne	SHORT $LN3@InitGame

; 145  : 		MessageBox(0,
; 146  : 			"I can't determine your GTA version.\r\nSA-MP only supports GTA:SA v1.0 USA/EU",
; 147  : 			"Version Error",MB_OK | MB_ICONEXCLAMATION);

	mov	esi, esp
	push	48					; 00000030H
	push	OFFSET ??_C@_0O@KKCHHJBD@Version?5Error?$AA@
	push	OFFSET ??_C@_0EM@DFJJIKMA@I?5can?8t?5determine?5your?5GTA?5versi@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 148  : 		ExitProcess(1);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__ExitProcess@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@InitGame:

; 149  : 	}
; 150  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InitGame@CGame@@QAEXXZ ENDP				; CGame::InitGame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?StartGame@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?StartGame@CGame@@QAEXXZ PROC				; CGame::StartGame, COMDAT
; _this$ = ecx

; 155  : {		

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 156  : 	OutputDebugString("CGame::StartGame start");

	mov	esi, esp
	push	OFFSET ??_C@_0BH@KPOKFMND@CGame?3?3StartGame?5start?$AA@
	call	DWORD PTR __imp__OutputDebugStringA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 157  : 
; 158  : 	ApplyInGamePatches();

	call	?ApplyInGamePatches@@YAXXZ		; ApplyInGamePatches

; 159  : 
; 160  : 	// Install all hooks
; 161  : 	GameInstallHooks();

	call	?GameInstallHooks@@YAXXZ		; GameInstallHooks

; 162  : 
; 163  : 	// Setup scripting
; 164  : 	InitScripting();

	call	?InitScripting@@YAXXZ			; InitScripting

; 165  : 
; 166  : 	*(PDWORD)ADDR_ENTRY = 8;

	mov	DWORD PTR ds:13161664, 8

; 167  : 	*(PBYTE)ADDR_GAME_STARTED = 1;

	mov	BYTE PTR ds:12216369, 1

; 168  : 	*(PBYTE)ADDR_MENU = 0;

	mov	BYTE PTR ds:12216228, 0

; 169  : 	*(PBYTE)ADDR_STARTGAME = 0;

	mov	BYTE PTR ds:12216187, 0

; 170  : 
; 171  : 	OutputDebugString("CGame::StartGame end");

	mov	esi, esp
	push	OFFSET ??_C@_0BF@DFMJHNMO@CGame?3?3StartGame?5end?$AA@
	call	DWORD PTR __imp__OutputDebugStringA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 172  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartGame@CGame@@QAEXXZ ENDP				; CGame::StartGame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?ToggleKeyInputsDisabled@CGame@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bDisable$ = 8						; size = 4
?ToggleKeyInputsDisabled@CGame@@QAEXH@Z PROC		; CGame::ToggleKeyInputsDisabled, COMDAT
; _this$ = ecx

; 119  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 120  : 	if(bDisable) {

	cmp	DWORD PTR _bDisable$[ebp], 0
	je	SHORT $LN2@ToggleKeyI

; 121  : 		bInputsDisabled = TRUE;

	mov	DWORD PTR ?bInputsDisabled@@3HA, 1	; bInputsDisabled

; 122  : 	} else {

	jmp	SHORT $LN3@ToggleKeyI
$LN2@ToggleKeyI:

; 123  : 		bInputsDisabled = FALSE;

	mov	DWORD PTR ?bInputsDisabled@@3HA, 0	; bInputsDisabled

; 124  : 		iInputDisableWaitFrames = 2;

	mov	DWORD PTR ?iInputDisableWaitFrames@@3HA, 2 ; iInputDisableWaitFrames
$LN3@ToggleKeyI:

; 125  : 	}
; 126  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ToggleKeyInputsDisabled@CGame@@QAEXH@Z ENDP		; CGame::ToggleKeyInputsDisabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?FindGroundZForCoord@CGame@@QAEMMMM@Z
_TEXT	SEGMENT
_fGroundZ$ = -20					; size = 4
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?FindGroundZForCoord@CGame@@QAEMMMM@Z PROC		; CGame::FindGroundZForCoord, COMDAT
; _this$ = ecx

; 89   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 90   : 	float fGroundZ;
; 91   : 	ScriptCommand(&get_ground_z, x, y, z, &fGroundZ);

	lea	eax, DWORD PTR _fGroundZ$[ebp]
	push	eax
	cvtss2sd xmm0, DWORD PTR _z$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _y$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _x$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET _get_ground_z
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 32					; 00000020H

; 92   : 	return fGroundZ;

	fld	DWORD PTR _fGroundZ$[ebp]

; 93   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@FindGround
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN5@FindGround:
	DD	1
	DD	$LN4@FindGround
$LN4@FindGround:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@FindGround
$LN3@FindGround:
	DB	102					; 00000066H
	DB	71					; 00000047H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	90					; 0000005aH
	DB	0
?FindGroundZForCoord@CGame@@QAEMMMM@Z ENDP		; CGame::FindGroundZForCoord
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?IsKeyPressed@CGame@@QAEHH@Z
_TEXT	SEGMENT
_pControlSet$ = -20					; size = 4
_this$ = -8						; size = 4
_iKeyIdentifier$ = 8					; size = 4
?IsKeyPressed@CGame@@QAEHH@Z PROC			; CGame::IsKeyPressed, COMDAT
; _this$ = ecx

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 79   : 	GTA_CONTROLSET * pControlSet = GameGetInternalKeys();

	call	?GameGetInternalKeys@@YAPAU_GTA_CONTROLSET@@XZ ; GameGetInternalKeys
	mov	DWORD PTR _pControlSet$[ebp], eax

; 80   : 
; 81   : 	if(pControlSet->wKeys1[iKeyIdentifier]) return TRUE;

	mov	eax, DWORD PTR _iKeyIdentifier$[ebp]
	mov	ecx, DWORD PTR _pControlSet$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	test	edx, edx
	je	SHORT $LN1@IsKeyPress
	mov	eax, 1
	jmp	SHORT $LN2@IsKeyPress
$LN1@IsKeyPress:

; 82   : 
; 83   : 	return FALSE;

	xor	eax, eax
$LN2@IsKeyPress:

; 84   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsKeyPressed@CGame@@QAEHH@Z ENDP			; CGame::IsKeyPressed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?GetWeaponModelIDFromWeapon@CGame@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iWeaponID$ = 8						; size = 4
?GetWeaponModelIDFromWeapon@CGame@@QAEHH@Z PROC		; CGame::GetWeaponModelIDFromWeapon, COMDAT
; _this$ = ecx

; 71   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 72   : 	return GameGetWeaponModelIDFromWeaponID(iWeaponID);

	mov	eax, DWORD PTR _iWeaponID$[ebp]
	push	eax
	call	?GameGetWeaponModelIDFromWeaponID@@YGHH@Z ; GameGetWeaponModelIDFromWeaponID

; 73   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetWeaponModelIDFromWeapon@CGame@@QAEHH@Z ENDP		; CGame::GetWeaponModelIDFromWeapon
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z
_TEXT	SEGMENT
tv76 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
_pObjectNew$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_iModel$ = 8						; size = 4
_fPosX$ = 12						; size = 4
_fPosY$ = 16						; size = 4
_fPosZ$ = 20						; size = 4
_vecRot$ = 24						; size = 12
?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z PROC	; CGame::NewObject, COMDAT
; _this$ = ecx

; 63   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 64   : 	CObject *pObjectNew = new CObject(iModel,fPosX,fPosY,fPosZ,vecRot);

	push	81					; 00000051H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@NewObject
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vecRot$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vecRot$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vecRot$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	push	ecx
	movss	xmm0, DWORD PTR _fPosZ$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _fPosY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _fPosX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _iModel$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CObject@@QAE@HMMMU_VECTOR@@@Z	; CObject::CObject
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@NewObject
$LN3@NewObject:
	mov	DWORD PTR tv76[ebp], 0
$LN4@NewObject:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pObjectNew$[ebp], ecx

; 65   : 	return pObjectNew;

	mov	eax, DWORD PTR _pObjectNew$[ebp]

; 66   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewObject@CGame@@QAEPAVCObject@@HMMMU_VECTOR@@@Z ENDP	; CGame::NewObject
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z
_TEXT	SEGMENT
tv77 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
_pVehicleNew$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_iType$ = 8						; size = 4
_fPosX$ = 12						; size = 4
_fPosY$ = 16						; size = 4
_fPosZ$ = 20						; size = 4
_fRotation$ = 24					; size = 4
_szNumberPlate$ = 28					; size = 4
?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z PROC	; CGame::NewVehicle, COMDAT
; _this$ = ecx

; 54   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 	CVehicle *pVehicleNew = new	CVehicle(iType,fPosX,fPosY,fPosZ,fRotation,szNumberPlate);

	push	49					; 00000031H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@NewVehicle
	mov	eax, DWORD PTR _szNumberPlate$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _fRotation$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _fPosZ$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _fPosY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _fPosX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _iType$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CVehicle@@QAE@HMMMMPAD@Z		; CVehicle::CVehicle
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@NewVehicle
$LN3@NewVehicle:
	mov	DWORD PTR tv77[ebp], 0
$LN4@NewVehicle:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pVehicleNew$[ebp], eax

; 56   : 	return pVehicleNew;

	mov	eax, DWORD PTR _pVehicleNew$[ebp]

; 57   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewVehicle@CGame@@QAEPAVCVehicle@@HMMMMPAD@Z ENDP	; CGame::NewVehicle
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\game.cpp
;	COMDAT ?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z
_TEXT	SEGMENT
tv78 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
_pPlayerNew$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_iPlayerID$ = 8						; size = 4
_iSkin$ = 12						; size = 4
_fPosX$ = 16						; size = 4
_fPosY$ = 20						; size = 4
_fPosZ$ = 24						; size = 4
_fRotation$ = 28					; size = 4
_byteCreateMarker$ = 32					; size = 1
?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z PROC	; CGame::NewPlayer, COMDAT
; _this$ = ecx

; 45   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 	CPlayerPed *pPlayerNew = new CPlayerPed(iPlayerID,iSkin,fPosX,fPosY,fPosZ,fRotation,byteCreateMarker);

	push	70					; 00000046H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@NewPlayer
	movzx	eax, BYTE PTR _byteCreateMarker$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _fRotation$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _fPosZ$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _fPosY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _fPosX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _iSkin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPlayerID$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CPlayerPed@@QAE@HHMMMME@Z		; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@NewPlayer
$LN3@NewPlayer:
	mov	DWORD PTR tv78[ebp], 0
$LN4@NewPlayer:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pPlayerNew$[ebp], ecx

; 47   : 	return pPlayerNew;

	mov	eax, DWORD PTR _pPlayerNew$[ebp]

; 48   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewPlayer@CGame@@QAEPAVCPlayerPed@@HHMMMME@Z ENDP	; CGame::NewPlayer
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\saco\game\camera.h
;	COMDAT ??0CCamera@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CCamera@@QAE@XZ PROC					; CCamera::CCamera, COMDAT
; _this$ = ecx

; 28   : 	CCamera(){ m_matPos = (MATRIX4X4 *)ADDR_CAMERA; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 11991452		; 00b6f99cH
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCamera@@QAE@XZ ENDP					; CCamera::CCamera
_TEXT	ENDS
END
