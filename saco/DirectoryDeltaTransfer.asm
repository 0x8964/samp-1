; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\raknet\DirectoryDeltaTransfer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??0PluginInterface@@QAE@XZ			; PluginInterface::PluginInterface
PUBLIC	??0DirectoryDeltaTransfer@@QAE@XZ		; DirectoryDeltaTransfer::DirectoryDeltaTransfer
PUBLIC	??1DirectoryDeltaTransfer@@QAE@XZ		; DirectoryDeltaTransfer::~DirectoryDeltaTransfer
PUBLIC	?SetFileListTransferPlugin@DirectoryDeltaTransfer@@QAEXPAVFileListTransfer@@@Z ; DirectoryDeltaTransfer::SetFileListTransferPlugin
PUBLIC	?SetApplicationDirectory@DirectoryDeltaTransfer@@QAEXPBD@Z ; DirectoryDeltaTransfer::SetApplicationDirectory
PUBLIC	?SetUploadSendParameters@DirectoryDeltaTransfer@@QAEXW4PacketPriority@@D@Z ; DirectoryDeltaTransfer::SetUploadSendParameters
PUBLIC	?AddUploadsFromSubdirectory@DirectoryDeltaTransfer@@QAEXPBD@Z ; DirectoryDeltaTransfer::AddUploadsFromSubdirectory
PUBLIC	?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z ; DirectoryDeltaTransfer::DownloadFromSubdirectory
PUBLIC	?ClearUploads@DirectoryDeltaTransfer@@QAEXXZ	; DirectoryDeltaTransfer::ClearUploads
PUBLIC	?GetNumberOfFilesForUpload@DirectoryDeltaTransfer@@QBEIXZ ; DirectoryDeltaTransfer::GetNumberOfFilesForUpload
PUBLIC	?OnAttach@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z ; DirectoryDeltaTransfer::OnAttach
PUBLIC	?Update@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z ; DirectoryDeltaTransfer::Update
PUBLIC	?OnReceive@DirectoryDeltaTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ; DirectoryDeltaTransfer::OnReceive
PUBLIC	?OnDisconnect@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z ; DirectoryDeltaTransfer::OnDisconnect
PUBLIC	?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; DirectoryDeltaTransfer::OnDownloadRequest
PUBLIC	?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::List<FileListNode>::Size
PUBLIC	??_GFileList@@QAEPAXI@Z				; FileList::`scalar deleting destructor'
PUBLIC	?OnFileProgress@FileListTransferCBInterface@@UAEXIPADIIGIIIEIII@Z ; FileListTransferCBInterface::OnFileProgress
PUBLIC	??0FileListTransferCBInterface@@QAE@XZ		; FileListTransferCBInterface::FileListTransferCBInterface
PUBLIC	??$Write@G@BitStream@RakNet@@QAEXG@Z		; RakNet::BitStream::Write<unsigned short>
PUBLIC	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z		; RakNet::BitStream::Read<unsigned short>
PUBLIC	?OnFile@DDTCallback@@UAEXIPAD0IIGIIIE@Z		; DDTCallback::OnFile
PUBLIC	?OnFileProgress@DDTCallback@@UAEXIPADIIGIIIEIII@Z ; DDTCallback::OnFileProgress
PUBLIC	??0DDTCallback@@QAE@XZ				; DDTCallback::DDTCallback
PUBLIC	??$Write@E@BitStream@RakNet@@QAEXE@Z		; RakNet::BitStream::Write<unsigned char>
PUBLIC	??_7PluginInterface@@6B@			; PluginInterface::`vftable'
PUBLIC	??_7DirectoryDeltaTransfer@@6B@			; DirectoryDeltaTransfer::`vftable'
PUBLIC	??_7FileListTransferCBInterface@@6B@		; FileListTransferCBInterface::`vftable'
PUBLIC	??_7DDTCallback@@6B@				; DDTCallback::`vftable'
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA ; `DirectoryDeltaTransfer::OnDownloadRequest'::`2'::__LINE__Var
PUBLIC	??_C@_1GG@GMCGHCDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	??_R4PluginInterface@@6B@			; PluginInterface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluginInterface@@@8			; PluginInterface `RTTI Type Descriptor'
PUBLIC	??_R3PluginInterface@@8				; PluginInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluginInterface@@8				; PluginInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluginInterface@@8		; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FileListTransferCBInterface@@6B@		; FileListTransferCBInterface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFileListTransferCBInterface@@@8		; FileListTransferCBInterface `RTTI Type Descriptor'
PUBLIC	??_R3FileListTransferCBInterface@@8		; FileListTransferCBInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FileListTransferCBInterface@@8		; FileListTransferCBInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FileListTransferCBInterface@@8	; FileListTransferCBInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DirectoryDeltaTransfer@@6B@		; DirectoryDeltaTransfer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDirectoryDeltaTransfer@@@8		; DirectoryDeltaTransfer `RTTI Type Descriptor'
PUBLIC	??_R3DirectoryDeltaTransfer@@8			; DirectoryDeltaTransfer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DirectoryDeltaTransfer@@8			; DirectoryDeltaTransfer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DirectoryDeltaTransfer@@8		; DirectoryDeltaTransfer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DDTCallback@@6B@				; DDTCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDDTCallback@@@8				; DDTCallback `RTTI Type Descriptor'
PUBLIC	??_R3DDTCallback@@8				; DDTCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DDTCallback@@8				; DDTCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DDTCallback@@8			; DDTCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	___report_rangecheckfailure:PROC
EXTRN	?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnAttach
EXTRN	?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDetach
EXTRN	?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnInitialize
EXTRN	?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::Update
EXTRN	?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z:PROC ; PluginInterface::OnReceive
EXTRN	?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDisconnect
EXTRN	?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z:PROC ; PluginInterface::OnCloseConnection
EXTRN	?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketSend
EXTRN	?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketReceive
EXTRN	?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z:PROC ; PluginInterface::OnInternalPacket
EXTRN	__wassert:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	_strncpy:PROC
EXTRN	??0FileList@@QAE@XZ:PROC			; FileList::FileList
EXTRN	??1FileList@@QAE@XZ:PROC			; FileList::~FileList
EXTRN	?AddFilesFromDirectory@FileList@@QAEXPBD0_N11E@Z:PROC ; FileList::AddFilesFromDirectory
EXTRN	?Clear@FileList@@QAEXXZ:PROC			; FileList::Clear
EXTRN	?Serialize@FileList@@QAEXPAVBitStream@RakNet@@@Z:PROC ; FileList::Serialize
EXTRN	?Deserialize@FileList@@QAE_NPAVBitStream@RakNet@@@Z:PROC ; FileList::Deserialize
EXTRN	?GetDeltaToCurrent@FileList@@QAEXPAV1@0PBD1@Z:PROC ; FileList::GetDeltaToCurrent
EXTRN	?PopulateDataFromDisk@FileList@@QAEXPBD_N11@Z:PROC ; FileList::PopulateDataFromDisk
EXTRN	?Instance@StringCompressor@@SAPAV1@XZ:PROC	; StringCompressor::Instance
EXTRN	?EncodeString@StringCompressor@@QAEXPBDHPAVBitStream@RakNet@@H@Z:PROC ; StringCompressor::EncodeString
EXTRN	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z:PROC ; StringCompressor::DecodeString
EXTRN	?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z:PROC ; FileListTransfer::SetupReceive
EXTRN	?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z:PROC ; FileListTransfer::Send
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	??0BitStream@RakNet@@QAE@PAEI_N@Z:PROC		; RakNet::BitStream::BitStream
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?IgnoreBits@BitStream@RakNet@@QAEXH@Z:PROC	; RakNet::BitStream::IgnoreBits
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z:PROC	; RakNet::BitStream::WriteBits
EXTRN	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z:PROC	; RakNet::BitStream::ReadBits
EXTRN	?WriteFileWithDirectories@@YA_NPBDPADI@Z:PROC	; WriteFileWithDirectories
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@DDTCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DDTCallback@@8 DD FLAT:??_R0?AVDDTCallback@@@8 ; DDTCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DDTCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2DDTCallback@@8
rdata$r	SEGMENT
??_R2DDTCallback@@8 DD FLAT:??_R1A@?0A@EA@DDTCallback@@8 ; DDTCallback::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@FileListTransferCBInterface@@8
rdata$r	ENDS
;	COMDAT ??_R3DDTCallback@@8
rdata$r	SEGMENT
??_R3DDTCallback@@8 DD 00H				; DDTCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DDTCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDDTCallback@@@8
data$r	SEGMENT
??_R0?AVDDTCallback@@@8 DD FLAT:??_7type_info@@6B@	; DDTCallback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDDTCallback@@', 00H
data$r	ENDS
;	COMDAT ??_R4DDTCallback@@6B@
rdata$r	SEGMENT
??_R4DDTCallback@@6B@ DD 00H				; DDTCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDDTCallback@@@8
	DD	FLAT:??_R3DDTCallback@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DirectoryDeltaTransfer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DirectoryDeltaTransfer@@8 DD FLAT:??_R0?AVDirectoryDeltaTransfer@@@8 ; DirectoryDeltaTransfer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DirectoryDeltaTransfer@@8
rdata$r	ENDS
;	COMDAT ??_R2DirectoryDeltaTransfer@@8
rdata$r	SEGMENT
??_R2DirectoryDeltaTransfer@@8 DD FLAT:??_R1A@?0A@EA@DirectoryDeltaTransfer@@8 ; DirectoryDeltaTransfer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R3DirectoryDeltaTransfer@@8
rdata$r	SEGMENT
??_R3DirectoryDeltaTransfer@@8 DD 00H			; DirectoryDeltaTransfer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DirectoryDeltaTransfer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDirectoryDeltaTransfer@@@8
data$r	SEGMENT
??_R0?AVDirectoryDeltaTransfer@@@8 DD FLAT:??_7type_info@@6B@ ; DirectoryDeltaTransfer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDirectoryDeltaTransfer@@', 00H
data$r	ENDS
;	COMDAT ??_R4DirectoryDeltaTransfer@@6B@
rdata$r	SEGMENT
??_R4DirectoryDeltaTransfer@@6B@ DD 00H			; DirectoryDeltaTransfer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDirectoryDeltaTransfer@@@8
	DD	FLAT:??_R3DirectoryDeltaTransfer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FileListTransferCBInterface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FileListTransferCBInterface@@8 DD FLAT:??_R0?AVFileListTransferCBInterface@@@8 ; FileListTransferCBInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FileListTransferCBInterface@@8
rdata$r	ENDS
;	COMDAT ??_R2FileListTransferCBInterface@@8
rdata$r	SEGMENT
??_R2FileListTransferCBInterface@@8 DD FLAT:??_R1A@?0A@EA@FileListTransferCBInterface@@8 ; FileListTransferCBInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3FileListTransferCBInterface@@8
rdata$r	SEGMENT
??_R3FileListTransferCBInterface@@8 DD 00H		; FileListTransferCBInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2FileListTransferCBInterface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFileListTransferCBInterface@@@8
data$r	SEGMENT
??_R0?AVFileListTransferCBInterface@@@8 DD FLAT:??_7type_info@@6B@ ; FileListTransferCBInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFileListTransferCBInterface@@', 00H
data$r	ENDS
;	COMDAT ??_R4FileListTransferCBInterface@@6B@
rdata$r	SEGMENT
??_R4FileListTransferCBInterface@@6B@ DD 00H		; FileListTransferCBInterface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFileListTransferCBInterface@@@8
	DD	FLAT:??_R3FileListTransferCBInterface@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluginInterface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluginInterface@@8 DD FLAT:??_R0?AVPluginInterface@@@8 ; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R2PluginInterface@@8
rdata$r	SEGMENT
??_R2PluginInterface@@8 DD FLAT:??_R1A@?0A@EA@PluginInterface@@8 ; PluginInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PluginInterface@@8
rdata$r	SEGMENT
??_R3PluginInterface@@8 DD 00H				; PluginInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluginInterface@@@8
data$r	SEGMENT
??_R0?AVPluginInterface@@@8 DD FLAT:??_7type_info@@6B@	; PluginInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluginInterface@@', 00H
data$r	ENDS
;	COMDAT ??_R4PluginInterface@@6B@
rdata$r	SEGMENT
??_R4PluginInterface@@6B@ DD 00H			; PluginInterface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluginInterface@@@8
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@GMCGHCDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr@
CONST	SEGMENT
??_C@_1GG@GMCGHCDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'd', 00H, 'e', 00H, 'l', 00H, 't', 00H, 'a', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 's', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA DD 0a5H ; `DirectoryDeltaTransfer::OnDownloadRequest'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7DDTCallback@@6B@
CONST	SEGMENT
??_7DDTCallback@@6B@ DD FLAT:??_R4DDTCallback@@6B@	; DDTCallback::`vftable'
	DD	FLAT:?OnFile@DDTCallback@@UAEXIPAD0IIGIIIE@Z
	DD	FLAT:?OnFileProgress@DDTCallback@@UAEXIPADIIGIIIEIII@Z
CONST	ENDS
;	COMDAT ??_7FileListTransferCBInterface@@6B@
CONST	SEGMENT
??_7FileListTransferCBInterface@@6B@ DD FLAT:??_R4FileListTransferCBInterface@@6B@ ; FileListTransferCBInterface::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:?OnFileProgress@FileListTransferCBInterface@@UAEXIPADIIGIIIEIII@Z
CONST	ENDS
;	COMDAT ??_7DirectoryDeltaTransfer@@6B@
CONST	SEGMENT
??_7DirectoryDeltaTransfer@@6B@ DD FLAT:??_R4DirectoryDeltaTransfer@@6B@ ; DirectoryDeltaTransfer::`vftable'
	DD	FLAT:?OnAttach@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@DirectoryDeltaTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT ??_7PluginInterface@@6B@
CONST	SEGMENT
??_7PluginInterface@@6B@ DD FLAT:??_R4PluginInterface@@6B@ ; PluginInterface::`vftable'
	DD	FLAT:?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$2
__ehfuncinfo$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z$1
__ehfuncinfo$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DirectoryDeltaTransfer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DirectoryDeltaTransfer@@QAE@XZ$0
__ehfuncinfo$??0DirectoryDeltaTransfer@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DirectoryDeltaTransfer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@E@BitStream@RakNet@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 1
??$Write@E@BitStream@RakNet@@QAEXE@Z PROC		; RakNet::BitStream::Write<unsigned char>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@E@BitStream@RakNet@@QAEXE@Z ENDP		; RakNet::BitStream::Write<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DDTCallback@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DDTCallback@@QAE@XZ PROC				; DDTCallback::DDTCallback, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0FileListTransferCBInterface@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DDTCallback@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DDTCallback@@QAE@XZ ENDP				; DDTCallback::DDTCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?OnFileProgress@DDTCallback@@UAEXIPADIIGIIIEIII@Z
_TEXT	SEGMENT
$T1 = -1248						; size = 4
_fullPathToDir$ = -1044					; size = 1024
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_fileIndex$ = 8						; size = 4
_filename$ = 12						; size = 4
_compressedTransmissionLength$ = 16			; size = 4
_finalDataLength$ = 20					; size = 4
_setID$ = 24						; size = 2
_setCount$ = 28						; size = 4
_setTotalCompressedTransmissionLength$ = 32		; size = 4
_setTotalFinalLength$ = 36				; size = 4
_context$ = 40						; size = 1
_partCount$ = 44					; size = 4
_partTotal$ = 48					; size = 4
_partLength$ = 52					; size = 4
?OnFileProgress@DDTCallback@@UAEXIPADIIGIIIEIII@Z PROC	; DDTCallback::OnFileProgress, COMDAT
; _this$ = ecx

; 60   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 1252				; 000004e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1252]
	mov	ecx, 313				; 00000139H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		char fullPathToDir[1024];
; 62   : 
; 63   : 		if (filename && subdirLen < strlen(filename))

	cmp	DWORD PTR _filename$[ebp], 0
	je	SHORT $LN2@OnFileProg
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jae	SHORT $LN2@OnFileProg

; 64   : 		{
; 65   : 			strcpy(fullPathToDir, outputSubdir);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _fullPathToDir$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 66   : 			strcat(fullPathToDir, filename+subdirLen);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _filename$[ebp]
	add	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _fullPathToDir$[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 67   : 		}
; 68   : 		else

	jmp	SHORT $LN1@OnFileProg
$LN2@OnFileProg:

; 69   : 			fullPathToDir[0]=0;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 1024		; 00000400H
	jae	SHORT $LN5@OnFileProg
	jmp	SHORT $LN6@OnFileProg
$LN5@OnFileProg:
	call	___report_rangecheckfailure
$LN6@OnFileProg:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR _fullPathToDir$[ebp+edx], 0
$LN1@OnFileProg:

; 70   : 
; 71   : 		onFileCallback->OnFileProgress(fileIndex, fullPathToDir, compressedTransmissionLength, finalDataLength, setID, setCount, setTotalCompressedTransmissionLength, setTotalFinalLength, context, partCount, partTotal, partLength);

	mov	esi, esp
	mov	eax, DWORD PTR _partLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _partTotal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _partCount$[ebp]
	push	edx
	movzx	eax, BYTE PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _setTotalFinalLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _setTotalCompressedTransmissionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _setCount$[ebp]
	push	eax
	movzx	ecx, WORD PTR _setID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _finalDataLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _compressedTransmissionLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullPathToDir$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+520]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+520]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@OnFileProg:

; 72   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@OnFileProg
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1252				; 000004e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
	npad	1
$LN9@OnFileProg:
	DD	1
	DD	$LN8@OnFileProg
$LN8@OnFileProg:
	DD	-1044					; fffffbecH
	DD	1024					; 00000400H
	DD	$LN7@OnFileProg
$LN7@OnFileProg:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
?OnFileProgress@DDTCallback@@UAEXIPADIIGIIIEIII@Z ENDP	; DDTCallback::OnFileProgress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?OnFile@DDTCallback@@UAEXIPAD0IIGIIIE@Z
_TEXT	SEGMENT
$T1 = -1248						; size = 4
_fullPathToDir$ = -1044					; size = 1024
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_fileIndex$ = 8						; size = 4
_filename$ = 12						; size = 4
_fileData$ = 16						; size = 4
_compressedTransmissionLength$ = 20			; size = 4
_finalDataLength$ = 24					; size = 4
_setID$ = 28						; size = 2
_setCount$ = 32						; size = 4
_setTotalCompressedTransmissionLength$ = 36		; size = 4
_setTotalFinalLength$ = 40				; size = 4
_context$ = 44						; size = 1
?OnFile@DDTCallback@@UAEXIPAD0IIGIIIE@Z PROC		; DDTCallback::OnFile, COMDAT
; _this$ = ecx

; 33   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 1252				; 000004e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1252]
	mov	ecx, 313				; 00000139H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 		char fullPathToDir[1024];
; 35   : 
; 36   : 		if (filename && fileData && subdirLen < strlen(filename))

	cmp	DWORD PTR _filename$[ebp], 0
	je	SHORT $LN2@OnFile
	cmp	DWORD PTR _fileData$[ebp], 0
	je	SHORT $LN2@OnFile
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jae	SHORT $LN2@OnFile

; 37   : 		{
; 38   : 			strcpy(fullPathToDir, outputSubdir);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _fullPathToDir$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 39   : 			strcat(fullPathToDir, filename+subdirLen);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _filename$[ebp]
	add	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _fullPathToDir$[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 40   : 			WriteFileWithDirectories(fullPathToDir, (char*)fileData, finalDataLength);

	mov	eax, DWORD PTR _finalDataLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileData$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fullPathToDir$[ebp]
	push	edx
	call	?WriteFileWithDirectories@@YA_NPBDPADI@Z ; WriteFileWithDirectories
	add	esp, 12					; 0000000cH

; 41   : 		}
; 42   : 		else

	jmp	SHORT $LN1@OnFile
$LN2@OnFile:

; 43   : 			fullPathToDir[0]=0;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 1024		; 00000400H
	jae	SHORT $LN5@OnFile
	jmp	SHORT $LN6@OnFile
$LN5@OnFile:
	call	___report_rangecheckfailure
$LN6@OnFile:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR _fullPathToDir$[ebp+edx], 0
$LN1@OnFile:

; 44   : 
; 45   : 		onFileCallback->OnFile(fileIndex, fullPathToDir, fileData, compressedTransmissionLength, finalDataLength, setID, setCount, setTotalCompressedTransmissionLength, setTotalFinalLength, context);

	mov	esi, esp
	movzx	eax, BYTE PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _setTotalFinalLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _setTotalCompressedTransmissionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _setCount$[ebp]
	push	eax
	movzx	ecx, WORD PTR _setID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _finalDataLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _compressedTransmissionLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileData$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fullPathToDir$[ebp]
	push	edx
	mov	eax, DWORD PTR _fileIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+520]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+520]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@OnFile:

; 46   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@OnFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1252				; 000004e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
	npad	1
$LN9@OnFile:
	DD	1
	DD	$LN8@OnFile
$LN8@OnFile:
	DD	-1044					; fffffbecH
	DD	1024					; 00000400H
	DD	$LN7@OnFile
$LN7@OnFile:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
?OnFile@DDTCallback@@UAEXIPAD0IIGIIIE@Z ENDP		; DDTCallback::OnFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@G@BitStream@RakNet@@QAE_NAAG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z PROC		; RakNet::BitStream::Read<unsigned short>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z ENDP		; RakNet::BitStream::Read<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@G@BitStream@RakNet@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 2
??$Write@G@BitStream@RakNet@@QAEXG@Z PROC		; RakNet::BitStream::Write<unsigned short>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@G@BitStream@RakNet@@QAEXG@Z ENDP		; RakNet::BitStream::Write<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FileListTransferCBInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FileListTransferCBInterface@@QAE@XZ PROC		; FileListTransferCBInterface::FileListTransferCBInterface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FileListTransferCBInterface@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0FileListTransferCBInterface@@QAE@XZ ENDP		; FileListTransferCBInterface::FileListTransferCBInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\filelisttransfercbinterface.h
;	COMDAT ?OnFileProgress@FileListTransferCBInterface@@UAEXIPADIIGIIIEIII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fileIndex$ = 8						; size = 4
_filename$ = 12						; size = 4
_compressedTransmissionLength$ = 16			; size = 4
_finalDataLength$ = 20					; size = 4
_setID$ = 24						; size = 2
_setCount$ = 28						; size = 4
_setTotalCompressedTransmissionLength$ = 32		; size = 4
_setTotalFinalLength$ = 36				; size = 4
_context$ = 40						; size = 1
_partCount$ = 44					; size = 4
_partTotal$ = 48					; size = 4
_partLength$ = 52					; size = 4
?OnFileProgress@FileListTransferCBInterface@@UAEXIPADIIGIIIEIII@Z PROC ; FileListTransferCBInterface::OnFileProgress, COMDAT
; _this$ = ecx

; 34   : 		unsigned int partLength) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
?OnFileProgress@FileListTransferCBInterface@@UAEXIPADIIGIIIEIII@Z ENDP ; FileListTransferCBInterface::OnFileProgress
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFileList@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFileList@@QAEPAXI@Z PROC				; FileList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FileList@@QAE@XZ			; FileList::~FileList
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFileList@@QAEPAXI@Z ENDP				; FileList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<FileListNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<FileListNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
_setId$ = -888						; size = 2
_delta$ = -876						; size = 12
_remoteFileHash$ = -856					; size = 12
_inBitstream$ = -836					; size = 273
_remoteSubdir$ = -552					; size = 256
_subdir$ = -288						; size = 256
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z PROC ; DirectoryDeltaTransfer::OnDownloadRequest, COMDAT
; _this$ = ecx

; 165  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1072				; 00000430H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1084]
	mov	ecx, 268				; 0000010cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 	char subdir[256];
; 167  : 	char remoteSubdir[256];
; 168  : 	RakNet::BitStream inBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 169  : 	FileList remoteFileHash;

	lea	ecx, DWORD PTR _remoteFileHash$[ebp]
	call	??0FileList@@QAE@XZ			; FileList::FileList
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 170  : 	FileList delta;

	lea	ecx, DWORD PTR _delta$[ebp]
	call	??0FileList@@QAE@XZ			; FileList::FileList
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 171  : 	unsigned short setId;
; 172  :     inBitstream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 173  : 	inBitstream.Read(setId);

	lea	eax, DWORD PTR _setId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>

; 174  : 	stringCompressor->DecodeString(subdir, 256, &inBitstream);

	push	0
	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _subdir$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z ; StringCompressor::DecodeString

; 175  : 	stringCompressor->DecodeString(remoteSubdir, 256, &inBitstream);

	push	0
	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _remoteSubdir$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?DecodeString@StringCompressor@@QAE_NPADHPAVBitStream@RakNet@@H@Z ; StringCompressor::DecodeString

; 176  : 	if (remoteFileHash.Deserialize(&inBitstream)==false)

	lea	eax, DWORD PTR _inBitstream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _remoteFileHash$[ebp]
	call	?Deserialize@FileList@@QAE_NPAVBitStream@RakNet@@@Z ; FileList::Deserialize
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@OnDownload

; 177  : 	{
; 178  : #ifdef _DEBUG
; 179  : 		assert(0);

	xor	eax, eax
	jne	SHORT $LN4@OnDownload
	mov	ecx, DWORD PTR ?__LINE__Var@?1??OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z@4JA
	add	ecx, 14					; 0000000eH
	push	ecx
	push	OFFSET ??_C@_1GG@GMCGHCDE@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAo?$AAr@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@OnDownload:

; 180  : #endif
; 181  : 		return;

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _delta$[ebp]
	call	??1FileList@@QAE@XZ			; FileList::~FileList
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _remoteFileHash$[ebp]
	call	??1FileList@@QAE@XZ			; FileList::~FileList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN2@OnDownload
$LN1@OnDownload:

; 182  : 	}
; 183  : 
; 184  : 	availableUploads->GetDeltaToCurrent(&remoteFileHash, &delta, subdir, remoteSubdir);

	lea	eax, DWORD PTR _remoteSubdir$[ebp]
	push	eax
	lea	ecx, DWORD PTR _subdir$[ebp]
	push	ecx
	lea	edx, DWORD PTR _delta$[ebp]
	push	edx
	lea	eax, DWORD PTR _remoteFileHash$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+520]
	call	?GetDeltaToCurrent@FileList@@QAEXPAV1@0PBD1@Z ; FileList::GetDeltaToCurrent

; 185  : 	delta.PopulateDataFromDisk(applicationDirectory, true, false, true);

	push	1
	push	0
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR _delta$[ebp]
	call	?PopulateDataFromDisk@FileList@@QAEXPBD_N11@Z ; FileList::PopulateDataFromDisk

; 186  : 
; 187  : 	// This will call the ddtCallback interface that was passed to FileListTransfer::SetupReceive on the remote system
; 188  : 	fileListTransfer->Send(&delta, rakPeer, packet->playerId, setId, priority, orderingChannel, true);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+532]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+528]
	push	eax
	movzx	ecx, WORD PTR _setId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	add	edx, 2
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	push	ecx
	lea	edx, DWORD PTR _delta$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+516]
	call	?Send@FileListTransfer@@QAEXPAVFileList@@PAVRakPeerInterface@@UPlayerID@@GW4PacketPriority@@D_N@Z ; FileListTransfer::Send

; 189  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _delta$[ebp]
	call	??1FileList@@QAE@XZ			; FileList::~FileList
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _remoteFileHash$[ebp]
	call	??1FileList@@QAE@XZ			; FileList::~FileList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN2@OnDownload:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@OnDownload
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1084				; 0000043cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN16@OnDownload:
	DD	6
	DD	$LN15@OnDownload
$LN15@OnDownload:
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN8@OnDownload
	DD	-552					; fffffdd8H
	DD	256					; 00000100H
	DD	$LN9@OnDownload
	DD	-836					; fffffcbcH
	DD	273					; 00000111H
	DD	$LN10@OnDownload
	DD	-856					; fffffca8H
	DD	12					; 0000000cH
	DD	$LN11@OnDownload
	DD	-876					; fffffc94H
	DD	12					; 0000000cH
	DD	$LN12@OnDownload
	DD	-888					; fffffc88H
	DD	2
	DD	$LN13@OnDownload
$LN13@OnDownload:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
$LN12@OnDownload:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN11@OnDownload:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	0
$LN10@OnDownload:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN9@OnDownload:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
$LN8@OnDownload:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _inBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$1:
	lea	ecx, DWORD PTR _remoteFileHash$[ebp]
	jmp	??1FileList@@QAE@XZ			; FileList::~FileList
__unwindfunclet$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z$2:
	lea	ecx, DWORD PTR _delta$[ebp]
	jmp	??1FileList@@QAE@XZ			; FileList::~FileList
__ehhandler$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1088]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ENDP ; DirectoryDeltaTransfer::OnDownloadRequest
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?OnDisconnect@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnDisconnect@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z PROC ; DirectoryDeltaTransfer::OnDisconnect, COMDAT
; _this$ = ecx

; 216  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 217  : 
; 218  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?OnDisconnect@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z ENDP ; DirectoryDeltaTransfer::OnDisconnect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?OnReceive@DirectoryDeltaTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnReceive@DirectoryDeltaTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z PROC ; DirectoryDeltaTransfer::OnReceive, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	switch (packet->data[0]) 

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	cl, BYTE PTR [ecx+eax]
	mov	BYTE PTR tv68[ebp], cl
	cmp	BYTE PTR tv68[ebp], 48			; 00000030H
	je	SHORT $LN1@OnReceive
	jmp	SHORT $LN2@OnReceive
$LN1@OnReceive:

; 204  : 	{
; 205  : 	case ID_DDT_DOWNLOAD_REQUEST:
; 206  : 		OnDownloadRequest(peer, packet);

	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _peer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnDownloadRequest@DirectoryDeltaTransfer@@IAEXPAVRakPeerInterface@@PAUPacket@@@Z ; DirectoryDeltaTransfer::OnDownloadRequest

; 207  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	xor	eax, eax
	jmp	SHORT $LN4@OnReceive
$LN2@OnReceive:

; 208  : 	}
; 209  : 
; 210  : 	return RR_CONTINUE_PROCESSING;

	mov	eax, 1
$LN4@OnReceive:

; 211  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnReceive@DirectoryDeltaTransfer@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ENDP ; DirectoryDeltaTransfer::OnReceive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?Update@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?Update@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z PROC ; DirectoryDeltaTransfer::Update, COMDAT
; _this$ = ecx

; 198  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 199  : 
; 200  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z ENDP ; DirectoryDeltaTransfer::Update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?OnAttach@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnAttach@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z PROC ; DirectoryDeltaTransfer::OnAttach, COMDAT
; _this$ = ecx

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 192  : 	rakPeer=peer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	DWORD PTR [eax+524], ecx

; 193  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?OnAttach@DirectoryDeltaTransfer@@UAEXPAVRakPeerInterface@@@Z ENDP ; DirectoryDeltaTransfer::OnAttach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?GetNumberOfFilesForUpload@DirectoryDeltaTransfer@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetNumberOfFilesForUpload@DirectoryDeltaTransfer@@QBEIXZ PROC ; DirectoryDeltaTransfer::GetNumberOfFilesForUpload, COMDAT
; _this$ = ecx

; 221  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 222  : 	return availableUploads->fileList.Size();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+520]
	call	?Size@?$List@UFileListNode@@@DataStructures@@QBEIXZ ; DataStructures::List<FileListNode>::Size

; 223  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumberOfFilesForUpload@DirectoryDeltaTransfer@@QBEIXZ ENDP ; DirectoryDeltaTransfer::GetNumberOfFilesForUpload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?ClearUploads@DirectoryDeltaTransfer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ClearUploads@DirectoryDeltaTransfer@@QAEXXZ PROC	; DirectoryDeltaTransfer::ClearUploads, COMDAT
; _this$ = ecx

; 158  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 159  : 	availableUploads->Clear();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+520]
	call	?Clear@FileList@@QAEXXZ			; FileList::Clear

; 160  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearUploads@DirectoryDeltaTransfer@@QAEXXZ ENDP	; DirectoryDeltaTransfer::ClearUploads
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z
_TEXT	SEGMENT
tv93 = -576						; size = 4
tv86 = -576						; size = 4
$T2 = -568						; size = 4
$T3 = -554						; size = 2
_outBitstream$ = -352					; size = 273
_setId$ = -68						; size = 2
_localFiles$ = -56					; size = 12
_transferCallback$ = -36				; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_subdir$ = 8						; size = 4
_outputSubdir$ = 12					; size = 4
_prependAppDirToOutputSubdir$ = 16			; size = 1
_host$ = 20						; size = 6
_onFileCallback$ = 28					; size = 4
__priority$ = 32					; size = 4
__orderingChannel$ = 36					; size = 1
?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z PROC ; DirectoryDeltaTransfer::DownloadFromSubdirectory, COMDAT
; _this$ = ecx

; 114  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 564				; 00000234H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-576]
	mov	ecx, 141				; 0000008dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 115  : 	if (rakPeer->GetIndexFromPlayerID(host)==-1)

	mov	esi, esp
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _host$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _host$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+524]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN8@DownloadFr

; 116  : 		return (unsigned short) -1;

	mov	eax, 65535				; 0000ffffH
	jmp	$LN9@DownloadFr
$LN8@DownloadFr:

; 117  : 
; 118  : 	DDTCallback *transferCallback;
; 119  : 	FileList localFiles;

	lea	ecx, DWORD PTR _localFiles$[ebp]
	call	??0FileList@@QAE@XZ			; FileList::FileList
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 120  : 	// Get a hash of all the files that we already have (if any)
; 121  : 	localFiles.AddFilesFromDirectory(prependAppDirToOutputSubdir ? applicationDirectory : 0, outputSubdir, true, false, true, 0);

	movzx	eax, BYTE PTR _prependAppDirToOutputSubdir$[ebp]
	test	eax, eax
	je	SHORT $LN11@DownloadFr
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN12@DownloadFr
$LN11@DownloadFr:
	mov	DWORD PTR tv86[ebp], 0
$LN12@DownloadFr:
	push	0
	push	1
	push	0
	push	1
	mov	edx, DWORD PTR _outputSubdir$[ebp]
	push	edx
	mov	eax, DWORD PTR tv86[ebp]
	push	eax
	lea	ecx, DWORD PTR _localFiles$[ebp]
	call	?AddFilesFromDirectory@FileList@@QAEXPBD0_N11E@Z ; FileList::AddFilesFromDirectory

; 122  : 
; 123  : 	// Prepare the callback data
; 124  : 	transferCallback = new DDTCallback;

	push	524					; 0000020cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN13@DownloadFr
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0DDTCallback@@QAE@XZ
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN14@DownloadFr
$LN13@DownloadFr:
	mov	DWORD PTR tv93[ebp], 0
$LN14@DownloadFr:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR _transferCallback$[ebp], eax

; 125  : 	if (subdir && subdir[0])

	cmp	DWORD PTR _subdir$[ebp], 0
	je	SHORT $LN7@DownloadFr
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _subdir$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN7@DownloadFr

; 126  : 	{
; 127  : 		transferCallback->subdirLen=(unsigned int)strlen(subdir);

	mov	eax, DWORD PTR _subdir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _transferCallback$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 128  : 		if (subdir[transferCallback->subdirLen-1]!='/' && subdir[transferCallback->subdirLen-1]!='\\')

	mov	eax, DWORD PTR _transferCallback$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _subdir$[ebp]
	movsx	eax, BYTE PTR [edx+ecx-1]
	cmp	eax, 47					; 0000002fH
	je	SHORT $LN6@DownloadFr
	mov	eax, DWORD PTR _transferCallback$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _subdir$[ebp]
	movsx	eax, BYTE PTR [edx+ecx-1]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN6@DownloadFr

; 129  : 			transferCallback->subdirLen++;

	mov	eax, DWORD PTR _transferCallback$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _transferCallback$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN6@DownloadFr:

; 130  : 	}
; 131  : 	else

	jmp	SHORT $LN5@DownloadFr
$LN7@DownloadFr:

; 132  : 		transferCallback->subdirLen=0;

	mov	eax, DWORD PTR _transferCallback$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN5@DownloadFr:

; 133  : 	if (prependAppDirToOutputSubdir)

	movzx	eax, BYTE PTR _prependAppDirToOutputSubdir$[ebp]
	test	eax, eax
	je	SHORT $LN4@DownloadFr

; 134  : 		strcpy(transferCallback->outputSubdir, applicationDirectory);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _transferCallback$[ebp]
	add	ecx, 8
	push	ecx
	call	_strcpy
	add	esp, 8

; 135  : 	else

	jmp	SHORT $LN3@DownloadFr
$LN4@DownloadFr:

; 136  : 		transferCallback->outputSubdir[0]=0;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _transferCallback$[ebp]
	mov	BYTE PTR [edx+ecx+8], 0
$LN3@DownloadFr:

; 137  : 	if (outputSubdir)

	cmp	DWORD PTR _outputSubdir$[ebp], 0
	je	SHORT $LN2@DownloadFr

; 138  : 		strcat(transferCallback->outputSubdir, outputSubdir);

	mov	eax, DWORD PTR _outputSubdir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _transferCallback$[ebp]
	add	ecx, 8
	push	ecx
	call	_strcat
	add	esp, 8
$LN2@DownloadFr:

; 139  : 	if (transferCallback->outputSubdir[strlen(transferCallback->outputSubdir)-1]!='/' && transferCallback->outputSubdir[strlen(transferCallback->outputSubdir)-1]!='\\')

	mov	eax, DWORD PTR _transferCallback$[ebp]
	add	eax, 8
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _transferCallback$[ebp]
	movsx	edx, BYTE PTR [ecx+eax+7]
	cmp	edx, 47					; 0000002fH
	je	SHORT $LN1@DownloadFr
	mov	eax, DWORD PTR _transferCallback$[ebp]
	add	eax, 8
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _transferCallback$[ebp]
	movsx	edx, BYTE PTR [ecx+eax+7]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN1@DownloadFr

; 140  : 		strcat(transferCallback->outputSubdir, "/");

	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	mov	eax, DWORD PTR _transferCallback$[ebp]
	add	eax, 8
	push	eax
	call	_strcat
	add	esp, 8
$LN1@DownloadFr:

; 141  : 	transferCallback->onFileCallback=onFileCallback;

	mov	eax, DWORD PTR _transferCallback$[ebp]
	mov	ecx, DWORD PTR _onFileCallback$[ebp]
	mov	DWORD PTR [eax+520], ecx

; 142  : 
; 143  : 	// Setup the transfer plugin to get the response to this download request
; 144  : 	unsigned short setId = fileListTransfer->SetupReceive(transferCallback, true, host);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _host$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _host$[ebp+4]
	mov	WORD PTR [eax+4], dx
	push	1
	mov	eax, DWORD PTR _transferCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+516]
	call	?SetupReceive@FileListTransfer@@QAEGPAVFileListTransferCBInterface@@_NUPlayerID@@@Z ; FileListTransfer::SetupReceive
	mov	WORD PTR _setId$[ebp], ax

; 145  : 
; 146  : 	// Send to the host, telling it to process this request
; 147  : 	RakNet::BitStream outBitstream;

	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 148  : 	outBitstream.Write((unsigned char) ID_DDT_DOWNLOAD_REQUEST);

	push	48					; 00000030H
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 149  : 	outBitstream.Write(setId);

	movzx	eax, WORD PTR _setId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 150  : 	stringCompressor->EncodeString(subdir, 256, &outBitstream);

	push	0
	lea	eax, DWORD PTR _outBitstream$[ebp]
	push	eax
	push	256					; 00000100H
	mov	ecx, DWORD PTR _subdir$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?EncodeString@StringCompressor@@QAEXPBDHPAVBitStream@RakNet@@H@Z ; StringCompressor::EncodeString

; 151  : 	stringCompressor->EncodeString(outputSubdir, 256, &outBitstream);

	push	0
	lea	eax, DWORD PTR _outBitstream$[ebp]
	push	eax
	push	256					; 00000100H
	mov	ecx, DWORD PTR _outputSubdir$[ebp]
	push	ecx
	call	?Instance@StringCompressor@@SAPAV1@XZ	; StringCompressor::Instance
	mov	ecx, eax
	call	?EncodeString@StringCompressor@@QAEXPBDHPAVBitStream@RakNet@@H@Z ; StringCompressor::EncodeString

; 152  :     localFiles.Serialize(&outBitstream);

	lea	eax, DWORD PTR _outBitstream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _localFiles$[ebp]
	call	?Serialize@FileList@@QAEXPAVBitStream@RakNet@@@Z ; FileList::Serialize

; 153  : 	rakPeer->Send(&outBitstream, _priority, RELIABLE_ORDERED, _orderingChannel, host, false);

	mov	esi, esp
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _host$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _host$[ebp+4]
	mov	WORD PTR [eax+4], dx
	movzx	eax, BYTE PTR __orderingChannel$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR __priority$[ebp]
	push	ecx
	lea	edx, DWORD PTR _outBitstream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+524]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 154  : 
; 155  : 	return setId;

	mov	ax, WORD PTR _setId$[ebp]
	mov	WORD PTR $T3[ebp], ax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _localFiles$[ebp]
	call	??1FileList@@QAE@XZ			; FileList::~FileList
	mov	ax, WORD PTR $T3[ebp]
$LN9@DownloadFr:

; 156  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@DownloadFr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 576				; 00000240H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	2
$LN21@DownloadFr:
	DD	2
	DD	$LN20@DownloadFr
$LN20@DownloadFr:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN17@DownloadFr
	DD	-352					; fffffea0H
	DD	273					; 00000111H
	DD	$LN18@DownloadFr
$LN18@DownloadFr:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN17@DownloadFr:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z$0:
	lea	ecx, DWORD PTR _localFiles$[ebp]
	jmp	??1FileList@@QAE@XZ			; FileList::~FileList
__unwindfunclet$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z$1:
	lea	ecx, DWORD PTR _outBitstream$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-580]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DownloadFromSubdirectory@DirectoryDeltaTransfer@@QAEGPBD0_NUPlayerID@@PAVFileListTransferCBInterface@@W4PacketPriority@@D@Z ENDP ; DirectoryDeltaTransfer::DownloadFromSubdirectory
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?AddUploadsFromSubdirectory@DirectoryDeltaTransfer@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_subdir$ = 8						; size = 4
?AddUploadsFromSubdirectory@DirectoryDeltaTransfer@@QAEXPBD@Z PROC ; DirectoryDeltaTransfer::AddUploadsFromSubdirectory, COMDAT
; _this$ = ecx

; 110  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 	availableUploads->AddFilesFromDirectory(applicationDirectory, subdir, true, false, true, 0);

	push	0
	push	1
	push	0
	push	1
	mov	eax, DWORD PTR _subdir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+520]
	call	?AddFilesFromDirectory@FileList@@QAEXPBD0_N11E@Z ; FileList::AddFilesFromDirectory

; 112  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddUploadsFromSubdirectory@DirectoryDeltaTransfer@@QAEXPBD@Z ENDP ; DirectoryDeltaTransfer::AddUploadsFromSubdirectory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?SetUploadSendParameters@DirectoryDeltaTransfer@@QAEXW4PacketPriority@@D@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__priority$ = 8						; size = 4
__orderingChannel$ = 12					; size = 1
?SetUploadSendParameters@DirectoryDeltaTransfer@@QAEXW4PacketPriority@@D@Z PROC ; DirectoryDeltaTransfer::SetUploadSendParameters, COMDAT
; _this$ = ecx

; 105  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 106  : 	priority=_priority;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __priority$[ebp]
	mov	DWORD PTR [eax+528], ecx

; 107  : 	orderingChannel=_orderingChannel;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR __orderingChannel$[ebp]
	mov	BYTE PTR [eax+532], cl

; 108  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetUploadSendParameters@DirectoryDeltaTransfer@@QAEXW4PacketPriority@@D@Z ENDP ; DirectoryDeltaTransfer::SetUploadSendParameters
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?SetApplicationDirectory@DirectoryDeltaTransfer@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pathToApplication$ = 8					; size = 4
?SetApplicationDirectory@DirectoryDeltaTransfer@@QAEXPBD@Z PROC ; DirectoryDeltaTransfer::SetApplicationDirectory, COMDAT
; _this$ = ecx

; 93   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 94   : 	if (pathToApplication==0 || pathToApplication[0]==0)

	cmp	DWORD PTR _pathToApplication$[ebp], 0
	je	SHORT $LN3@SetApplica
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _pathToApplication$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	jne	SHORT $LN4@SetApplica
$LN3@SetApplica:

; 95   : 		applicationDirectory[0]=0;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+4], 0

; 96   : 	else

	jmp	SHORT $LN5@SetApplica
$LN4@SetApplica:

; 97   : 	{
; 98   : 		strncpy(applicationDirectory, pathToApplication, 510);

	push	510					; 000001feH
	mov	eax, DWORD PTR _pathToApplication$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 99   : 		if (applicationDirectory[strlen(applicationDirectory)-1]!='/' && applicationDirectory[strlen(applicationDirectory)-1]!='\\')

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+eax+3]
	cmp	edx, 47					; 0000002fH
	je	SHORT $LN1@SetApplica
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+eax+3]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN1@SetApplica

; 100  : 			strcat(applicationDirectory, "/");

	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	_strcat
	add	esp, 8
$LN1@SetApplica:

; 101  : 		applicationDirectory[511]=0;

	mov	eax, 1
	imul	ecx, eax, 511
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+4], 0
$LN5@SetApplica:

; 102  : 	}
; 103  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetApplicationDirectory@DirectoryDeltaTransfer@@QAEXPBD@Z ENDP ; DirectoryDeltaTransfer::SetApplicationDirectory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ?SetFileListTransferPlugin@DirectoryDeltaTransfer@@QAEXPAVFileListTransfer@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_flt$ = 8						; size = 4
?SetFileListTransferPlugin@DirectoryDeltaTransfer@@QAEXPAVFileListTransfer@@@Z PROC ; DirectoryDeltaTransfer::SetFileListTransferPlugin, COMDAT
; _this$ = ecx

; 89   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 90   : 	fileListTransfer=flt;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flt$[ebp]
	mov	DWORD PTR [eax+516], ecx

; 91   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFileListTransferPlugin@DirectoryDeltaTransfer@@QAEXPAVFileListTransfer@@@Z ENDP ; DirectoryDeltaTransfer::SetFileListTransferPlugin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ??1DirectoryDeltaTransfer@@QAE@XZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1DirectoryDeltaTransfer@@QAE@XZ PROC			; DirectoryDeltaTransfer::~DirectoryDeltaTransfer, COMDAT
; _this$ = ecx

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DirectoryDeltaTransfer@@6B@

; 86   : 	delete availableUploads;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+520]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@DirectoryD
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_GFileList@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@DirectoryD
$LN3@DirectoryD:
	mov	DWORD PTR tv74[ebp], 0
$LN1@DirectoryD:

; 87   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DirectoryDeltaTransfer@@QAE@XZ ENDP			; DirectoryDeltaTransfer::~DirectoryDeltaTransfer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\directorydeltatransfer.cpp
;	COMDAT ??0DirectoryDeltaTransfer@@QAE@XZ
_TEXT	SEGMENT
tv86 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0DirectoryDeltaTransfer@@QAE@XZ PROC			; DirectoryDeltaTransfer::DirectoryDeltaTransfer, COMDAT
; _this$ = ecx

; 76   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DirectoryDeltaTransfer@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluginInterface@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DirectoryDeltaTransfer@@6B@

; 77   : 	applicationDirectory[0]=0;

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+4], 0

; 78   : 	fileListTransfer=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+516], 0

; 79   : 	availableUploads = new FileList;

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@DirectoryD
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0FileList@@QAE@XZ			; FileList::FileList
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN4@DirectoryD
$LN3@DirectoryD:
	mov	DWORD PTR tv86[ebp], 0
$LN4@DirectoryD:
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+520], edx

; 80   : 	rakPeer=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+524], 0

; 81   : 	priority=HIGH_PRIORITY;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+528], 1

; 82   : 	orderingChannel=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+532], 0

; 83   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DirectoryDeltaTransfer@@QAE@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0DirectoryDeltaTransfer@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DirectoryDeltaTransfer@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DirectoryDeltaTransfer@@QAE@XZ ENDP			; DirectoryDeltaTransfer::DirectoryDeltaTransfer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluginInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluginInterface@@QAE@XZ PROC				; PluginInterface::PluginInterface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluginInterface@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluginInterface@@QAE@XZ ENDP				; PluginInterface::PluginInterface
_TEXT	ENDS
END
