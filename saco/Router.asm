; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\raknet\Router.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_UNASSIGNED_PLAYER_ID DD 0ffffffffH
	DW	0ffffH
CONST	ENDS
PUBLIC	??4PlayerID@@QAEAAU0@ABU0@@Z			; PlayerID::operator=
PUBLIC	??0PluginInterface@@QAE@XZ			; PluginInterface::PluginInterface
PUBLIC	??1?$List@UPlayerID@@@DataStructures@@QAE@XZ	; DataStructures::List<PlayerID>::~List<PlayerID>
PUBLIC	??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::List<PlayerID>::operator[]
PUBLIC	?GetIndexOf@?$List@UPlayerID@@@DataStructures@@QAEIUPlayerID@@@Z ; DataStructures::List<PlayerID>::GetIndexOf
PUBLIC	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ	; DataStructures::List<PlayerID>::Size
PUBLIC	??1SystemAddressList@@QAE@XZ			; SystemAddressList::~SystemAddressList
PUBLIC	??0RouterInterface@@QAE@XZ			; RouterInterface::RouterInterface
PUBLIC	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator=
PUBLIC	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z ; ConnectionGraph::PlayerIdAndGroupId::`vector deleting destructor'
PUBLIC	??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
PUBLIC	??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
PUBLIC	?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode
PUBLIC	?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection
PUBLIC	?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear
PUBLIC	?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetShortestPath
PUBLIC	?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetSpanningTree
PUBLIC	?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra
PUBLIC	?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GenerateDisjktraMatrix
PUBLIC	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
PUBLIC	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
PUBLIC	?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SetNew
PUBLIC	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
PUBLIC	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
PUBLIC	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
PUBLIC	?GetIndexAtKey@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetIndexAtKey
PUBLIC	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear
PUBLIC	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
PUBLIC	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
PUBLIC	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
PUBLIC	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
PUBLIC	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
PUBLIC	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear
PUBLIC	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size
PUBLIC	??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
PUBLIC	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
PUBLIC	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
PUBLIC	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
PUBLIC	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
PUBLIC	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
PUBLIC	?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear
PUBLIC	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
PUBLIC	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
PUBLIC	??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Insert
PUBLIC	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear
PUBLIC	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Size
PUBLIC	??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	??A?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEAAUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::operator[]
PUBLIC	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert
PUBLIC	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert
PUBLIC	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
PUBLIC	?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear
PUBLIC	??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>
PUBLIC	?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::IMPLEMENT_DEFAULT_COMPARISON
PUBLIC	??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
PUBLIC	??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
PUBLIC	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
PUBLIC	?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert
PUBLIC	?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Remove
PUBLIC	?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Clear
PUBLIC	??0?$List@E@DataStructures@@QAE@XZ		; DataStructures::List<unsigned char>::List<unsigned char>
PUBLIC	??1?$List@E@DataStructures@@QAE@XZ		; DataStructures::List<unsigned char>::~List<unsigned char>
PUBLIC	??A?$List@E@DataStructures@@QBEAAEI@Z		; DataStructures::List<unsigned char>::operator[]
PUBLIC	?Insert@?$List@E@DataStructures@@QAEXEI@Z	; DataStructures::List<unsigned char>::Insert
PUBLIC	?Insert@?$List@E@DataStructures@@QAEXE@Z	; DataStructures::List<unsigned char>::Insert
PUBLIC	?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z	; DataStructures::List<unsigned char>::RemoveAtIndex
PUBLIC	?Del@?$List@E@DataStructures@@QAEXI@Z		; DataStructures::List<unsigned char>::Del
PUBLIC	?Size@?$List@E@DataStructures@@QBEIXZ		; DataStructures::List<unsigned char>::Size
PUBLIC	?Clear@?$List@E@DataStructures@@QAEX_N@Z	; DataStructures::List<unsigned char>::Clear
PUBLIC	??0Router@@QAE@XZ				; Router::Router
PUBLIC	??1Router@@QAE@XZ				; Router::~Router
PUBLIC	?SetRestrictRoutingByType@Router@@QAEX_N@Z	; Router::SetRestrictRoutingByType
PUBLIC	?AddAllowedType@Router@@QAEXE@Z			; Router::AddAllowedType
PUBLIC	?RemoveAllowedType@Router@@QAEXE@Z		; Router::RemoveAllowedType
PUBLIC	?SetConnectionGraph@Router@@QAEXPAV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z ; Router::SetConnectionGraph
PUBLIC	?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z ; Router::Send
PUBLIC	?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z ; Router::Send
PUBLIC	?OnAttach@Router@@UAEXPAVRakPeerInterface@@@Z	; Router::OnAttach
PUBLIC	?OnDetach@Router@@UAEXPAVRakPeerInterface@@@Z	; Router::OnDetach
PUBLIC	?OnDisconnect@Router@@UAEXPAVRakPeerInterface@@@Z ; Router::OnDisconnect
PUBLIC	?Update@Router@@UAEXPAVRakPeerInterface@@@Z	; Router::Update
PUBLIC	?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ; Router::OnReceive
PUBLIC	?OnCloseConnection@Router@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z ; Router::OnCloseConnection
PUBLIC	?SendTree@Router@@IAEXW4PacketPriority@@W4PacketReliability@@DPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PBDIPAVBitStream@RakNet@@PAVSystemAddressList@@@Z ; Router::SendTree
PUBLIC	?SerializePreorder@Router@@IBEXPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PAVBitStream@RakNet@@PAVSystemAddressList@@@Z ; Router::SerializePreorder
PUBLIC	?GetWriteOffset@BitStream@RakNet@@QBEHXZ	; RakNet::BitStream::GetWriteOffset
PUBLIC	?GetData@BitStream@RakNet@@QBEPAEXZ		; RakNet::BitStream::GetData
PUBLIC	??$Write@_N@BitStream@RakNet@@QAEX_N@Z		; RakNet::BitStream::Write<bool>
PUBLIC	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>
PUBLIC	??$Write@I@BitStream@RakNet@@QAEXI@Z		; RakNet::BitStream::Write<unsigned int>
PUBLIC	??$Write@G@BitStream@RakNet@@QAEXG@Z		; RakNet::BitStream::Write<unsigned short>
PUBLIC	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z	; RakNet::BitStream::Read<bool>
PUBLIC	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>
PUBLIC	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z		; RakNet::BitStream::Read<unsigned int>
PUBLIC	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z		; RakNet::BitStream::Read<unsigned short>
PUBLIC	??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::Tree<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::~Tree<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::LevelOrderTraversal
PUBLIC	?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::DeleteDecendants
PUBLIC	??0?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
PUBLIC	??1?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
PUBLIC	??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
PUBLIC	?Insert@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Insert
PUBLIC	?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
PUBLIC	??_G?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEPAXI@Z ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::`scalar deleting destructor'
PUBLIC	??$Write@E@BitStream@RakNet@@QAEXE@Z		; RakNet::BitStream::Write<unsigned char>
PUBLIC	??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::WriteCompressed<unsigned char>
PUBLIC	??$ReadCompressed@E@BitStream@RakNet@@QAE_NAAE@Z ; RakNet::BitStream::ReadCompressed<unsigned char>
PUBLIC	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z		; RakNet::BitStream::Read<unsigned char>
PUBLIC	??$ReadCompressed@G@BitStream@RakNet@@QAE_NAAG@Z ; RakNet::BitStream::ReadCompressed<unsigned short>
PUBLIC	??$WriteCompressed@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::WriteCompressed<unsigned short>
PUBLIC	??0?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>
PUBLIC	??1?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::~Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>
PUBLIC	?Push@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAEXABUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@@Z ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Push
PUBLIC	?Pop@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE?AUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@XZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Pop
PUBLIC	?Size@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Size
PUBLIC	?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
PUBLIC	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
PUBLIC	?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set
PUBLIC	?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete
PUBLIC	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
PUBLIC	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
PUBLIC	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear
PUBLIC	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
PUBLIC	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
PUBLIC	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
PUBLIC	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
PUBLIC	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
PUBLIC	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
PUBLIC	?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex
PUBLIC	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear
PUBLIC	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size
PUBLIC	??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
PUBLIC	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
PUBLIC	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
PUBLIC	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
PUBLIC	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
PUBLIC	?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex
PUBLIC	?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
PUBLIC	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
PUBLIC	?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear
PUBLIC	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
PUBLIC	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
PUBLIC	??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::`scalar deleting destructor'
PUBLIC	??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Queue<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
PUBLIC	?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::PushAtHead
PUBLIC	?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop
PUBLIC	?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
PUBLIC	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
PUBLIC	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
PUBLIC	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode
PUBLIC	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=
PUBLIC	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor'
PUBLIC	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
PUBLIC	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
PUBLIC	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode
PUBLIC	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=
PUBLIC	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor'
PUBLIC	??0?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>
PUBLIC	??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::~Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>
PUBLIC	?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Push
PUBLIC	?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Pop
PUBLIC	?PeekWeight@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEGI@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::PeekWeight
PUBLIC	?Clear@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXXZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Clear
PUBLIC	?Size@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEIXZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Size
PUBLIC	?LeftChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::LeftChild
PUBLIC	?RightChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::RightChild
PUBLIC	?Parent@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Parent
PUBLIC	?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap
PUBLIC	??0?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>
PUBLIC	??1?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::~List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>
PUBLIC	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
PUBLIC	?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Insert
PUBLIC	?Del@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Del
PUBLIC	?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Size
PUBLIC	?Clear@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Clear
PUBLIC	??0?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
PUBLIC	??1?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
PUBLIC	?Push@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXABQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Push
PUBLIC	?Pop@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@XZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Pop
PUBLIC	?Size@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
PUBLIC	??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode
PUBLIC	??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@ABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode
PUBLIC	??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::~HeapNode
PUBLIC	??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::operator=
PUBLIC	??_EHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEPAXI@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::`vector deleting destructor'
PUBLIC	??_7PluginInterface@@6B@			; PluginInterface::`vftable'
PUBLIC	??_7RouterInterface@@6B@			; RouterInterface::`vftable'
PUBLIC	??_7Router@@6BPluginInterface@@@		; Router::`vftable'
PUBLIC	??_7Router@@6BRouterInterface@@@		; Router::`vftable'
PUBLIC	?__LINE__Var@?1??Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z@4JA ; `Router::Send'::`2'::__LINE__Var
PUBLIC	??_C@_1EG@NPKIDONI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAr?$AAo?$AAu?$AAt?$AAe?$AAr?$AA?4?$AAc@ ; `string'
PUBLIC	??_C@_19MLBBEMBH@?$AAd?$AAa?$AAt?$AAa?$AA?$AA@	; `string'
PUBLIC	??_C@_1BE@KBODLNFO@?$AAb?$AAi?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z@4JA ; `Router::Send'::`2'::__LINE__Var
PUBLIC	?__LINE__Var@?1??OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA ; `Router::OnReceive'::`2'::__LINE__Var
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@ ; `string'
PUBLIC	??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FC@PKHPOOLI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1CG@FNLJFNDG@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAt?$AAr?$AAu?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@ ; `string'
PUBLIC	??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@ ; `string'
PUBLIC	??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@ ; `string'
PUBLIC	??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EE@HKFPJHOL@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAh?$AAe?$AAa?$AAp?$AA?4@ ; `string'
PUBLIC	??_C@_19EMJEDGCJ@?$AAi?$AA?$CB?$AA?$DN?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_R4PluginInterface@@6B@			; PluginInterface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluginInterface@@@8			; PluginInterface `RTTI Type Descriptor'
PUBLIC	??_R3PluginInterface@@8				; PluginInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluginInterface@@8				; PluginInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluginInterface@@8		; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RouterInterface@@6B@			; RouterInterface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRouterInterface@@@8			; RouterInterface `RTTI Type Descriptor'
PUBLIC	??_R3RouterInterface@@8				; RouterInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RouterInterface@@8				; RouterInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RouterInterface@@8		; RouterInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Router@@6BPluginInterface@@@		; Router::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRouter@@@8				; Router `RTTI Type Descriptor'
PUBLIC	??_R3Router@@8					; Router::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Router@@8					; Router::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Router@@8				; Router::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@RouterInterface@@8			; RouterInterface::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R4Router@@6BRouterInterface@@@		; Router::`RTTI Complete Object Locator'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??8PlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator==
EXTRN	??9PlayerID@@QBE_NABU0@@Z:PROC			; PlayerID::operator!=
EXTRN	?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnAttach
EXTRN	?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDetach
EXTRN	?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnInitialize
EXTRN	?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::Update
EXTRN	?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z:PROC ; PluginInterface::OnReceive
EXTRN	?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z:PROC ; PluginInterface::OnDisconnect
EXTRN	?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z:PROC ; PluginInterface::OnCloseConnection
EXTRN	?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketSend
EXTRN	?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z:PROC ; PluginInterface::OnDirectSocketReceive
EXTRN	?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z:PROC ; PluginInterface::OnInternalPacket
EXTRN	__wassert:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	??0SystemAddressList@@QAE@XZ:PROC		; SystemAddressList::SystemAddressList
EXTRN	?AddSystem@SystemAddressList@@QAEXUPlayerID@@@Z:PROC ; SystemAddressList::AddSystem
EXTRN	?Size@SystemAddressList@@QBEIXZ:PROC		; SystemAddressList::Size
EXTRN	?GetList@SystemAddressList@@QAEPAV?$List@UPlayerID@@@DataStructures@@XZ:PROC ; SystemAddressList::GetList
EXTRN	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ:PROC ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
EXTRN	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ:PROC ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
EXTRN	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@UPlayerID@@E@Z:PROC ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
EXTRN	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z:PROC ; ConnectionGraph::PlayerIdAndGroupId::operator==
EXTRN	??9PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z:PROC ; ConnectionGraph::PlayerIdAndGroupId::operator!=
EXTRN	??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z:PROC ; ConnectionGraph::PlayerIdAndGroupId::operator<
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	??0BitStream@RakNet@@QAE@PAEI_N@Z:PROC		; RakNet::BitStream::BitStream
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?Write@BitStream@RakNet@@QAEXPBDH@Z:PROC	; RakNet::BitStream::Write
EXTRN	?Write@BitStream@RakNet@@QAEXPAV12@H@Z:PROC	; RakNet::BitStream::Write
EXTRN	?IgnoreBits@BitStream@RakNet@@QAEXH@Z:PROC	; RakNet::BitStream::IgnoreBits
EXTRN	?SetWriteOffset@BitStream@RakNet@@QAEXH@Z:PROC	; RakNet::BitStream::SetWriteOffset
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z:PROC	; RakNet::BitStream::WriteBits
EXTRN	?AlignWriteToByteBoundary@BitStream@RakNet@@QAEXXZ:PROC ; RakNet::BitStream::AlignWriteToByteBoundary
EXTRN	?AlignReadToByteBoundary@BitStream@RakNet@@QAEXXZ:PROC ; RakNet::BitStream::AlignReadToByteBoundary
EXTRN	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z:PROC	; RakNet::BitStream::ReadBits
EXTRN	?Write0@BitStream@RakNet@@QAEXXZ:PROC		; RakNet::BitStream::Write0
EXTRN	?Write1@BitStream@RakNet@@QAEXXZ:PROC		; RakNet::BitStream::Write1
EXTRN	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z:PROC ; RakNet::BitStream::WriteCompressed
EXTRN	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z:PROC ; RakNet::BitStream::ReadCompressed
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R4Router@@6BRouterInterface@@@
rdata$r	SEGMENT
??_R4Router@@6BRouterInterface@@@ DD 00H		; Router::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVRouter@@@8
	DD	FLAT:??_R3Router@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@RouterInterface@@8
rdata$r	SEGMENT
??_R13?0A@EA@RouterInterface@@8 DD FLAT:??_R0?AVRouterInterface@@@8 ; RouterInterface::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RouterInterface@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Router@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Router@@8 DD FLAT:??_R0?AVRouter@@@8	; Router::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Router@@8
rdata$r	ENDS
;	COMDAT ??_R2Router@@8
rdata$r	SEGMENT
??_R2Router@@8 DD FLAT:??_R1A@?0A@EA@Router@@8		; Router::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluginInterface@@8
	DD	FLAT:??_R13?0A@EA@RouterInterface@@8
rdata$r	ENDS
;	COMDAT ??_R3Router@@8
rdata$r	SEGMENT
??_R3Router@@8 DD 00H					; Router::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2Router@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRouter@@@8
data$r	SEGMENT
??_R0?AVRouter@@@8 DD FLAT:??_7type_info@@6B@		; Router `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRouter@@', 00H
data$r	ENDS
;	COMDAT ??_R4Router@@6BPluginInterface@@@
rdata$r	SEGMENT
??_R4Router@@6BPluginInterface@@@ DD 00H		; Router::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRouter@@@8
	DD	FLAT:??_R3Router@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RouterInterface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RouterInterface@@8 DD FLAT:??_R0?AVRouterInterface@@@8 ; RouterInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RouterInterface@@8
rdata$r	ENDS
;	COMDAT ??_R2RouterInterface@@8
rdata$r	SEGMENT
??_R2RouterInterface@@8 DD FLAT:??_R1A@?0A@EA@RouterInterface@@8 ; RouterInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3RouterInterface@@8
rdata$r	SEGMENT
??_R3RouterInterface@@8 DD 00H				; RouterInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2RouterInterface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRouterInterface@@@8
data$r	SEGMENT
??_R0?AVRouterInterface@@@8 DD FLAT:??_7type_info@@6B@	; RouterInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRouterInterface@@', 00H
data$r	ENDS
;	COMDAT ??_R4RouterInterface@@6B@
rdata$r	SEGMENT
??_R4RouterInterface@@6B@ DD 00H			; RouterInterface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRouterInterface@@@8
	DD	FLAT:??_R3RouterInterface@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluginInterface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluginInterface@@8 DD FLAT:??_R0?AVPluginInterface@@@8 ; PluginInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R2PluginInterface@@8
rdata$r	SEGMENT
??_R2PluginInterface@@8 DD FLAT:??_R1A@?0A@EA@PluginInterface@@8 ; PluginInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PluginInterface@@8
rdata$r	SEGMENT
??_R3PluginInterface@@8 DD 00H				; PluginInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluginInterface@@@8
data$r	SEGMENT
??_R0?AVPluginInterface@@@8 DD FLAT:??_7type_info@@6B@	; PluginInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluginInterface@@', 00H
data$r	ENDS
;	COMDAT ??_R4PluginInterface@@6B@
rdata$r	SEGMENT
??_R4PluginInterface@@6B@ DD 00H			; PluginInterface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluginInterface@@@8
	DD	FLAT:??_R3PluginInterface@@8
rdata$r	ENDS
;	COMDAT ??_C@_19EMJEDGCJ@?$AAi?$AA?$CB?$AA?$DN?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_19EMJEDGCJ@?$AAi?$AA?$CB?$AA?$DN?$AA0?$AA?$AA@ DB 'i', 00H, '!', 00H
	DB	'=', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@HKFPJHOL@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAh?$AAe?$AAa?$AAp?$AA?4@
CONST	SEGMENT
??_C@_1EE@HKFPJHOL@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAh?$AAe?$AAa?$AAp?$AA?4@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'h', 00H, 'e', 00H, 'a', 00H, 'p', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, '=', 00H, '='
	DB	00H, 'f', 00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, '>', 00H, '=', 00H, 'n', 00H, 'u', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
CONST	SEGMENT
??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@
CONST	SEGMENT
??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@ DB 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'h', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ DB 'n'
	DB	00H, 'e', 00H, 'w', 00H, '_', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
CONST	SEGMENT
??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'q', 00H, 'u', 00H, 'e', 00H, 'u', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@FNLJFNDG@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAt?$AAr?$AAu?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@FNLJFNDG@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAt?$AAr?$AAu?$AAe?$AA?$AA@ DB 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, '=', 00H, '='
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@PKHPOOLI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr@
CONST	SEGMENT
??_C@_1FC@PKHPOOLI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	'd', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
CONST	SEGMENT
??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 's', 00H, '_'
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA DD 093H ; `Router::OnReceive'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?1??Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z@4JA DD 03eH ; `Router::Send'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BE@KBODLNFO@?$AAb?$AAi?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@KBODLNFO@?$AAb?$AAi?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@ DB 'b'
	DB	00H, 'i', 00H, 't', 00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	't', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_19MLBBEMBH@?$AAd?$AAa?$AAt?$AAa?$AA?$AA@
CONST	SEGMENT
??_C@_19MLBBEMBH@?$AAd?$AAa?$AAt?$AAa?$AA?$AA@ DB 'd', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@NPKIDONI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAr?$AAo?$AAu?$AAt?$AAe?$AAr?$AA?4?$AAc@
CONST	SEGMENT
??_C@_1EG@NPKIDONI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAr?$AAo?$AAu?$AAt?$AAe?$AAr?$AA?4?$AAc@ DB 'z'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, '0', 00H, '2', 00H, 'x'
	DB	00H, 'u', 00H, '1', 00H, '\', 00H, 'r', 00H, 'a', 00H, 'k', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, '\', 00H, 'r', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z@4JA DD 02eH ; `Router::Send'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7Router@@6BRouterInterface@@@
CONST	SEGMENT
??_7Router@@6BRouterInterface@@@ DD FLAT:??_R4Router@@6BRouterInterface@@@ ; Router::`vftable'
	DD	FLAT:?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z
CONST	ENDS
;	COMDAT ??_7Router@@6BPluginInterface@@@
CONST	SEGMENT
??_7Router@@6BPluginInterface@@@ DD FLAT:??_R4Router@@6BPluginInterface@@@ ; Router::`vftable'
	DD	FLAT:?OnAttach@Router@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@Router@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@Router@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@Router@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@Router@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT ??_7RouterInterface@@6B@
CONST	SEGMENT
??_7RouterInterface@@6B@ DD FLAT:??_R4RouterInterface@@6B@ ; RouterInterface::`vftable'
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7PluginInterface@@6B@
CONST	SEGMENT
??_7PluginInterface@@6B@ DD FLAT:??_R4PluginInterface@@6B@ ; PluginInterface::`vftable'
	DD	FLAT:?OnAttach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnDetach@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnInitialize@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?Update@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnReceive@PluginInterface@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	FLAT:?OnDisconnect@PluginInterface@@UAEXPAVRakPeerInterface@@@Z
	DD	FLAT:?OnCloseConnection@PluginInterface@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
	DD	FLAT:?OnDirectSocketSend@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnDirectSocketReceive@PluginInterface@@UAEXPBDIUPlayerID@@@Z
	DD	FLAT:?OnInternalPacket@PluginInterface@@UAEXPAUInternalPacket@@IUPlayerID@@I_N@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z$1
__ehfuncinfo$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z$0
__ehfuncinfo$?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z$0
__ehfuncinfo$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0
__ehfuncinfo$?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ$1
__ehfuncinfo$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z$1
__ehfuncinfo$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ$0
__ehfuncinfo$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$1
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z$1
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z$0
__ehfuncinfo$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$1
__ehfuncinfo$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ$0
__ehfuncinfo$?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z$0
__ehfuncinfo$?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ$0
__ehfuncinfo$??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z$2
__ehfuncinfo$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z$0
__ehfuncinfo$?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Router@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Router@@QAE@XZ$0
__ehfuncinfo$??0Router@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Router@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z$1
__ehfuncinfo$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z$1
__ehfuncinfo$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z$1
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z$1
__ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$0
__ehfuncinfo$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$1
__ehfuncinfo$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$0
__ehfuncinfo$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$9
	DD	05H
	DD	FLAT:__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$10
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$8
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0
__ehfuncinfo$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$2
__ehfuncinfo$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$1
__ehfuncinfo$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEPAXI@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	9
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEPAXI@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::~HeapNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::~HeapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@ABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_w$ = 8							; size = 4
_d$ = 12						; size = 4
??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@ABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode, COMDAT
; _this$ = ecx

; 40   : 			HeapNode(const weight_type &w, const data_type &d) : weight(w), data(d) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR [ecx+6]
	mov	BYTE PTR [eax+6], cl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@ABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode, COMDAT
; _this$ = ecx

; 39   : 			HeapNode() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Size@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		if ( head <= tail )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@Size

; 64   : 			return tail -head;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN3@Size

; 65   : 		else

	jmp	SHORT $LN3@Size
$LN2@Size:

; 66   : 			return allocation_size -head + tail;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
$LN3@Size:

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Pop@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@XZ
_TEXT	SEGMENT
tv78 = -208						; size = 4
_this$ = -8						; size = 4
?Pop@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@XZ PROC ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Pop, COMDAT
; _this$ = ecx

; 99   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : #ifdef _DEBUG
; 101  : 		assert( allocation_size > 0 && Size() >= 0 && head != tail);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN5@Pop
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
	test	eax, eax
	jb	SHORT $LN5@Pop
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN6@Pop
$LN5@Pop:
	push	101					; 00000065H
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Pop:

; 102  : #endif
; 103  : 		//head=(head+1) % allocation_size;
; 104  : 
; 105  : 		if ( ++head == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv78[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv78[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN2@Pop

; 106  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@Pop:

; 107  : 
; 108  : 		if ( head == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Pop

; 109  : 			return ( queue_type ) array[ allocation_size -1 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	jmp	SHORT $LN3@Pop
$LN1@Pop:

; 110  : 
; 111  : 		return ( queue_type ) array[ head -1 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	eax, DWORD PTR [eax+ecx*4-4]
$LN3@Pop:

; 112  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Pop@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@XZ ENDP ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Push@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXABQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z
_TEXT	SEGMENT
$T1 = -260						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
_counter$4 = -32					; size = 4
_new_array$5 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 4
?Push@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXABQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z PROC ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Push, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN6@Push

; 184  : 		{
; 185  : 			array = new queue_type[ 16 ];

	push	64					; 00000040H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], ecx

; 186  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 187  : 			tail = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1

; 188  : 			array[ 0 ] = input;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], edx

; 189  : 			allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 190  : 			return ;

	jmp	$LN7@Push
$LN6@Push:

; 191  : 		}
; 192  : 
; 193  : 		array[ tail++ ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 194  : 
; 195  : 		if ( tail == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN5@Push

; 196  : 			tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN5@Push:

; 197  : 
; 198  : 		if ( tail == head )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	$LN7@Push

; 199  : 		{
; 200  : 			//  unsigned int index=tail;
; 201  : 
; 202  : 			// Need to allocate more memory.
; 203  : 			queue_type * new_array;
; 204  : 			new_array = new queue_type[ allocation_size * 2 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	shl	eax, 1
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _new_array$5[ebp], eax

; 205  : #ifdef _DEBUG
; 206  : 
; 207  : 			assert( new_array );

	cmp	DWORD PTR _new_array$5[ebp], 0
	jne	SHORT $LN9@Push
	push	207					; 000000cfH
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@Push:

; 208  : #endif
; 209  : 
; 210  : 			for ( unsigned int counter = 0; counter < allocation_size; ++counter )

	mov	DWORD PTR _counter$4[ebp], 0
	jmp	SHORT $LN3@Push
$LN2@Push:
	mov	eax, DWORD PTR _counter$4[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$4[ebp], eax
$LN3@Push:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _counter$4[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN1@Push

; 211  : 				new_array[ counter ] = array[ ( head + counter ) % ( allocation_size ) ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR _counter$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	div	DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _counter$4[ebp]
	mov	esi, DWORD PTR _new_array$5[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR [esi+eax*4], ecx
	jmp	SHORT $LN2@Push
$LN1@Push:

; 212  : 
; 213  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 214  : 
; 215  : 			tail = allocation_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx

; 216  : 
; 217  : 			allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 218  : 
; 219  : 			// Delete the old array and move the pointer to the new array
; 220  : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 221  : 
; 222  : 			array = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$5[ebp]
	mov	DWORD PTR [eax], ecx
$LN7@Push:

; 223  : 		}
; 224  : 
; 225  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Push@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXABQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ENDP ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??1?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN2@Queue

; 94   : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@Queue:

; 95   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??0?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??0?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>, COMDAT
; _this$ = ecx

; 83   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 		allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 85   : 		array = new queue_type[ allocation_size ];

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], ecx

; 86   : 		head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 87   : 		tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 88   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN5@Clear
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z
_TEXT	SEGMENT
tv140 = -292						; size = 4
tv129 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 9
?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z PROC ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 9
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
	push	OFFSET ??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN7@Insert
$LN6@Insert:
	mov	DWORD PTR tv129[ebp], 0
$LN7@Insert:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 9
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN8@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN9@Insert
$LN8@Insert:
	mov	DWORD PTR tv140[ebp], 0
$LN9@Insert:

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [ecx+4], 9
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z ENDP ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z PROC ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ENDP ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::~List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@List
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@List
$LN4@List:
	mov	DWORD PTR tv71[ebp], 0
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::~List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z
_TEXT	SEGMENT
_temp$ = -40						; size = 9
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_i$ = 8							; size = 4
_j$ = 12						; size = 4
?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap, COMDAT
; _this$ = ecx

; 238  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		HeapNode temp;

	lea	ecx, DWORD PTR _temp$[ebp]
	call	??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 240  : 		temp=heap[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z

; 241  : 		heap[i]=heap[j];

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	mov	ecx, eax
	call	??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z

; 242  : 		heap[j]=temp;

	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	mov	ecx, eax
	call	??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z

; 243  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN7@Swap:
	DD	1
	DD	$LN6@Swap
$LN6@Swap:
	DD	-40					; ffffffd8H
	DD	9
	DD	$LN4@Swap
$LN4@Swap:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z$0:
	lea	ecx, DWORD PTR _temp$[ebp]
	jmp	??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
__ehhandler$?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?Parent@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?Parent@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Parent, COMDAT
; _this$ = ecx

; 229  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 230  : #ifdef _DEBUG
; 231  : 		assert(i!=0);

	cmp	DWORD PTR _i$[ebp], 0
	jne	SHORT $LN3@Parent
	push	231					; 000000e7H
	push	OFFSET ??_C@_1EE@HKFPJHOL@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAh?$AAe?$AAa?$AAp?$AA?4@
	push	OFFSET ??_C@_19EMJEDGCJ@?$AAi?$AA?$CB?$AA?$DN?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Parent:

; 232  : #endif
; 233  : 		return (i-1)/2;

	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	shr	eax, 1

; 234  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Parent@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?RightChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?RightChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::RightChild, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 224  : 		return i*2+2;

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax+2]

; 225  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?RightChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::RightChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?LeftChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?LeftChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::LeftChild, COMDAT
; _this$ = ecx

; 217  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 		return i*2+1;

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax+1]

; 219  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?LeftChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::LeftChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?Size@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEIXZ PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Size, COMDAT
; _this$ = ecx

; 211  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 212  : 		return heap.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Size

; 213  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEIXZ ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?Clear@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXXZ PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Clear, COMDAT
; _this$ = ecx

; 200  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 201  : 		heap.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Clear

; 202  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXXZ ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?PeekWeight@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEGI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_startingIndex$ = 8					; size = 4
?PeekWeight@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEGI@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::PeekWeight, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 		return heap[startingIndex].weight;

	mov	eax, DWORD PTR _startingIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	mov	ax, WORD PTR [eax]

; 196  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PeekWeight@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEGI@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::PeekWeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
$T2 = -288						; size = 4
_currentWeight$ = -84					; size = 2
_rightChild$ = -72					; size = 4
_leftChild$ = -60					; size = 4
_currentIndex$ = -48					; size = 4
_returnValue$ = -36					; size = 7
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_startingIndex$ = 12					; size = 4
?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Pop, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 112  : 		// While we have children, swap out with the larger of the two children.
; 113  : 
; 114  : 		// This line will assert on an empty heap
; 115  : 		data_type returnValue=heap[0].data;

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	add	eax, 2
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _returnValue$[ebp], ecx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR _returnValue$[ebp+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR _returnValue$[ebp+6], al
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 116  : 
; 117  : 		// Move the last element to the head, and re-heapify
; 118  : 		heap[startingIndex]=heap[heap.Size()-1];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Size
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	push	eax
	mov	eax, DWORD PTR _startingIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	mov	ecx, eax
	call	??4HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEAAU012@ABU012@@Z

; 119  : 
; 120  : 		unsigned currentIndex,leftChild,rightChild;
; 121  : 		weight_type currentWeight;
; 122  : 		currentIndex=startingIndex;

	mov	eax, DWORD PTR _startingIndex$[ebp]
	mov	DWORD PTR _currentIndex$[ebp], eax

; 123  : 		currentWeight=heap[startingIndex].weight;

	mov	eax, DWORD PTR _startingIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _currentWeight$[ebp], cx

; 124  : 		heap.Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Del
$LN15@Pop:

; 125  : 
; 126  : #ifdef _MSC_VER
; 127  : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 128  : #endif
; 129  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	$LN14@Pop

; 130  : 		{
; 131  : 			leftChild=LeftChild(currentIndex);

	mov	eax, DWORD PTR _currentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LeftChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::LeftChild
	mov	DWORD PTR _leftChild$[ebp], eax

; 132  : 			rightChild=RightChild(currentIndex);

	mov	eax, DWORD PTR _currentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RightChild@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::RightChild
	mov	DWORD PTR _rightChild$[ebp], eax

; 133  : 			if (leftChild >= heap.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Size
	cmp	DWORD PTR _leftChild$[ebp], eax
	jb	SHORT $LN13@Pop

; 134  : 			{
; 135  : 				// Done
; 136  : 				return returnValue;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _returnValue$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _returnValue$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _returnValue$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _returnValue$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN16@Pop
$LN13@Pop:

; 137  : 			}
; 138  : 			if (rightChild >= heap.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Size
	cmp	DWORD PTR _rightChild$[ebp], eax
	jb	SHORT $LN12@Pop

; 139  : 			{
; 140  : 				// Only left node.
; 141  : 				if ((isMaxHeap==true && currentWeight < heap[leftChild].weight) ||
; 142  : 					(isMaxHeap==false && currentWeight > heap[leftChild].weight))

	xor	eax, eax
	jne	SHORT $LN10@Pop
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN11@Pop
	movzx	esi, WORD PTR _currentWeight$[ebp]
	mov	eax, DWORD PTR _leftChild$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	ecx, WORD PTR [eax]
	cmp	esi, ecx
	jle	SHORT $LN11@Pop
$LN10@Pop:

; 143  : 						Swap(leftChild, currentIndex);

	mov	eax, DWORD PTR _currentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _leftChild$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap
$LN11@Pop:

; 144  : 
; 145  : 				return returnValue;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _returnValue$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _returnValue$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _returnValue$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _returnValue$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN16@Pop

; 146  : 			}
; 147  : 			else

	jmp	$LN9@Pop
$LN12@Pop:

; 148  : 			{
; 149  : 				// Swap with the bigger/smaller of the two children and continue
; 150  : 				if (isMaxHeap)

	xor	eax, eax
	je	$LN8@Pop

; 151  : 				{
; 152  : 					if (heap[leftChild].weight <= currentWeight && heap[rightChild].weight <= currentWeight)

	mov	eax, DWORD PTR _leftChild$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	ecx, WORD PTR [eax]
	movzx	edx, WORD PTR _currentWeight$[ebp]
	cmp	ecx, edx
	jg	SHORT $LN7@Pop
	mov	eax, DWORD PTR _rightChild$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	ecx, WORD PTR [eax]
	movzx	edx, WORD PTR _currentWeight$[ebp]
	cmp	ecx, edx
	jg	SHORT $LN7@Pop

; 153  : 						return returnValue;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _returnValue$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _returnValue$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _returnValue$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _returnValue$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN16@Pop
$LN7@Pop:

; 154  : 
; 155  : 					if (heap[leftChild].weight > heap[rightChild].weight)

	mov	eax, DWORD PTR _leftChild$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	esi, WORD PTR [eax]
	mov	ecx, DWORD PTR _rightChild$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	edx, WORD PTR [eax]
	cmp	esi, edx
	jle	SHORT $LN6@Pop

; 156  : 					{
; 157  : 						Swap(leftChild, currentIndex);

	mov	eax, DWORD PTR _currentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _leftChild$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap

; 158  : 						currentIndex=leftChild;

	mov	eax, DWORD PTR _leftChild$[ebp]
	mov	DWORD PTR _currentIndex$[ebp], eax

; 159  : 					}
; 160  : 					else

	jmp	SHORT $LN5@Pop
$LN6@Pop:

; 161  : 					{
; 162  : 						Swap(rightChild, currentIndex);

	mov	eax, DWORD PTR _currentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rightChild$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap

; 163  : 						currentIndex=rightChild;

	mov	eax, DWORD PTR _rightChild$[ebp]
	mov	DWORD PTR _currentIndex$[ebp], eax
$LN5@Pop:

; 164  : 					}
; 165  : 				}
; 166  : 				else

	jmp	$LN9@Pop
$LN8@Pop:

; 167  : 				{
; 168  : 					if (heap[leftChild].weight >= currentWeight && heap[rightChild].weight >= currentWeight)

	mov	eax, DWORD PTR _leftChild$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	ecx, WORD PTR [eax]
	movzx	edx, WORD PTR _currentWeight$[ebp]
	cmp	ecx, edx
	jl	SHORT $LN3@Pop
	mov	eax, DWORD PTR _rightChild$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	ecx, WORD PTR [eax]
	movzx	edx, WORD PTR _currentWeight$[ebp]
	cmp	ecx, edx
	jl	SHORT $LN3@Pop

; 169  : 						return returnValue;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _returnValue$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _returnValue$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _returnValue$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _returnValue$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN16@Pop
$LN3@Pop:

; 170  : 
; 171  : 					if (heap[leftChild].weight < heap[rightChild].weight)

	mov	eax, DWORD PTR _leftChild$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	esi, WORD PTR [eax]
	mov	ecx, DWORD PTR _rightChild$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	edx, WORD PTR [eax]
	cmp	esi, edx
	jge	SHORT $LN2@Pop

; 172  : 					{
; 173  : 						Swap(leftChild, currentIndex);

	mov	eax, DWORD PTR _currentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _leftChild$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap

; 174  : 						currentIndex=leftChild;

	mov	eax, DWORD PTR _leftChild$[ebp]
	mov	DWORD PTR _currentIndex$[ebp], eax

; 175  : 					}
; 176  : 					else

	jmp	SHORT $LN9@Pop
$LN2@Pop:

; 177  : 					{
; 178  : 						Swap(rightChild, currentIndex);

	mov	eax, DWORD PTR _currentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rightChild$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap

; 179  : 						currentIndex=rightChild;

	mov	eax, DWORD PTR _rightChild$[ebp]
	mov	DWORD PTR _currentIndex$[ebp], eax
$LN9@Pop:

; 180  : 					}
; 181  : 				}
; 182  : 			}
; 183  : 		}

	jmp	$LN15@Pop
$LN14@Pop:

; 184  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _returnValue$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
$LN16@Pop:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@Pop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN24@Pop:
	DD	1
	DD	$LN23@Pop
$LN23@Pop:
	DD	-36					; ffffffdcH
	DD	7
	DD	$LN21@Pop
$LN21@Pop:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z$0:
	lea	ecx, DWORD PTR _returnValue$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN20@Pop
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
$LN20@Pop:
	ret	0
__ehhandler$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Pop
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv136 = -268						; size = 4
tv137 = -264						; size = 4
$T2 = -253						; size = 9
_parentIndex$ = -44					; size = 4
_currentIndex$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_weight$ = 8						; size = 4
_data$ = 12						; size = 4
?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Push, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 77   : 		unsigned currentIndex = heap.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Size
	mov	DWORD PTR _currentIndex$[ebp], eax

; 78   : 		unsigned parentIndex;
; 79   : 		heap.Insert(HeapNode(weight, data));

	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@ABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode::HeapNode
	mov	DWORD PTR tv137[ebp], eax
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv136[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv136[ebp]
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	al, BYTE PTR [eax+8]
	mov	BYTE PTR [ecx+8], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAEXUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@2@@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::Insert
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
$LN8@Push:

; 80   : 		while (currentIndex!=0)

	cmp	DWORD PTR _currentIndex$[ebp], 0
	je	$LN9@Push

; 81   : 		{
; 82   : 			parentIndex = Parent(currentIndex);

	mov	eax, DWORD PTR _currentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Parent@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IBEII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Parent
	mov	DWORD PTR _parentIndex$[ebp], eax

; 83   : #ifdef _MSC_VER
; 84   : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 85   : #endif
; 86   : 			if (isMaxHeap)

	xor	eax, eax
	je	SHORT $LN6@Push

; 87   : 			{
; 88   : 				if (heap[parentIndex].weight < weight)

	mov	eax, DWORD PTR _parentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _weight$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jge	SHORT $LN5@Push

; 89   : 				{
; 90   : 					Swap(currentIndex, parentIndex);

	mov	eax, DWORD PTR _parentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap

; 91   : 					currentIndex=parentIndex;

	mov	eax, DWORD PTR _parentIndex$[ebp]
	mov	DWORD PTR _currentIndex$[ebp], eax

; 92   : 				}
; 93   : 				else

	jmp	SHORT $LN4@Push
$LN5@Push:

; 94   : 					break;

	jmp	SHORT $LN9@Push
$LN4@Push:

; 95   : 			}
; 96   : 			else

	jmp	SHORT $LN3@Push
$LN6@Push:

; 97   : 			{
; 98   : 				if (heap[parentIndex].weight > weight)

	mov	eax, DWORD PTR _parentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QBEAAUHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@1@I@Z ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::operator[]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _weight$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jle	SHORT $LN2@Push

; 99   : 				{
; 100  : 					Swap(currentIndex, parentIndex);

	mov	eax, DWORD PTR _parentIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Swap@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@IAEXII@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Swap

; 101  : 					currentIndex=parentIndex;

	mov	eax, DWORD PTR _parentIndex$[ebp]
	mov	DWORD PTR _currentIndex$[ebp], eax

; 102  : 				}
; 103  : 				else

	jmp	SHORT $LN3@Push
$LN2@Push:

; 104  : 					break;

	jmp	SHORT $LN9@Push
$LN3@Push:

; 105  : 			}
; 106  : 		}

	jmp	$LN8@Push
$LN9@Push:

; 107  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1HeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
__ehhandler$?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Push
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::~Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 71   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXXZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Clear

; 72   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::~List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::~List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>
__ehhandler$??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::~Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_heap.h
;	COMDAT ??0?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ PROC ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UHeapNode@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>::List<DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::HeapNode>

; 66   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ENDP ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	9
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+7]
	mov	WORD PTR [eax+7], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__key$ = 8						; size = 7
__data$ = 16						; size = 2
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 49   : 			MapNode(key_type _key, data_type _data) : mapNodeKey(_key), mapNodeData(_data) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __key$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR __key$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR __key$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR __data$[ebp]
	mov	WORD PTR [eax+7], cx
	lea	ecx, DWORD PTR __key$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 48   : 			MapNode() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	11					; 0000000bH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+7]
	mov	DWORD PTR [eax+7], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::~MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__key$ = 8						; size = 7
__data$ = 16						; size = 4
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 49   : 			MapNode(key_type _key, data_type _data) : mapNodeKey(_key), mapNodeData(_data) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __key$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR __key$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR __key$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __data$[ebp]
	mov	DWORD PTR [eax+7], ecx
	lea	ecx, DWORD PTR __key$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode, COMDAT
; _this$ = ecx

; 48   : 			MapNode() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		if ( head <= tail )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@Size

; 64   : 			return tail -head;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN3@Size

; 65   : 		else

	jmp	SHORT $LN3@Size
$LN2@Size:

; 66   : 			return allocation_size -head + tail;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
$LN3@Size:

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ
_TEXT	SEGMENT
tv145 = -264						; size = 4
tv139 = -264						; size = 4
tv78 = -264						; size = 4
$T2 = -255						; size = 7
$T3 = -239						; size = 7
$T4 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop, COMDAT
; _this$ = ecx

; 99   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T4[ebp], 0

; 100  : #ifdef _DEBUG
; 101  : 		assert( allocation_size > 0 && Size() >= 0 && head != tail);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN5@Pop
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
	test	eax, eax
	jb	SHORT $LN5@Pop
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN6@Pop
$LN5@Pop:
	push	101					; 00000065H
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Pop:

; 102  : #endif
; 103  : 		//head=(head+1) % allocation_size;
; 104  : 
; 105  : 		if ( ++head == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv78[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv78[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN2@Pop

; 106  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@Pop:

; 107  : 
; 108  : 		if ( head == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Pop

; 109  : 			return ( queue_type ) array[ allocation_size -1 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T2[ebp], edx
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR $T2[ebp+4], ax
	mov	cl, BYTE PTR [ecx+6]
	mov	BYTE PTR $T2[ebp+6], cl
	lea	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv139[ebp], edx
	mov	eax, DWORD PTR tv139[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T4[ebp]
	or	ecx, 1
	mov	DWORD PTR $T4[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@Pop
$LN1@Pop:

; 110  : 
; 111  : 		return ( queue_type ) array[ head -1 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T3[ebp], edx
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR $T3[ebp+4], ax
	mov	cl, BYTE PTR [ecx+6]
	mov	BYTE PTR $T3[ebp+6], cl
	lea	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	eax, DWORD PTR tv145[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T4[ebp]
	or	ecx, 1
	mov	DWORD PTR $T4[ebp], ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@Pop:

; 112  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ$1:
	mov	eax, DWORD PTR $T4[ebp]
	and	eax, 1
	je	$LN9@Pop
	and	DWORD PTR $T4[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
$LN9@Pop:
	ret	0
__ehhandler$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
tv211 = -340						; size = 4
tv179 = -340						; size = 4
tv79 = -340						; size = 4
$T2 = -332						; size = 4
$T3 = -320						; size = 4
$T4 = -308						; size = 4
$T5 = -296						; size = 4
$T6 = -284						; size = 4
$T7 = -272						; size = 4
$T8 = -260						; size = 4
_counter$9 = -56					; size = 4
_new_array$10 = -44					; size = 4
_count$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 4
_index$ = 12						; size = 4
?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::PushAtHead, COMDAT
; _this$ = ecx

; 116  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 117  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	$LN9@PushAtHead

; 118  : 		{
; 119  : 			array = new queue_type[ 16 ];

	push	116					; 00000074H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN12@PushAtHead
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	push	16					; 00000010H
	push	7
	mov	ecx, DWORD PTR $T3[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T3[ebp]
	add	edx, 4
	mov	DWORD PTR tv79[ebp], edx
	jmp	SHORT $LN13@PushAtHead
$LN12@PushAtHead:
	mov	DWORD PTR tv79[ebp], 0
$LN13@PushAtHead:
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx

; 120  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 121  : 			tail = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1

; 122  : 			array[ 0 ] = input;

	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, 7
	imul	ecx, ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 123  : 			allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 124  : 			return ;

	jmp	$LN10@PushAtHead
$LN9@PushAtHead:

; 125  : 		}
; 126  : 
; 127  : 		if ( head == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN8@PushAtHead

; 128  : 			head = allocation_size - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 129  : 		else

	jmp	SHORT $LN7@PushAtHead
$LN8@PushAtHead:

; 130  : 			--head;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN7@PushAtHead:

; 131  : 
; 132  : 		unsigned count=0;

	mov	DWORD PTR _count$[ebp], 0
$LN6@PushAtHead:

; 133  : 		while (count < index)

	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _index$[ebp]
	jae	SHORT $LN5@PushAtHead

; 134  : 		{
; 135  : 			array[head+count]=array[head+count+1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _count$[ebp]
	lea	eax, DWORD PTR [ecx+edx+1]
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _count$[ebp]
	imul	ecx, ecx, 7
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 136  : 			count++;

	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax

; 137  : 		}

	jmp	SHORT $LN6@PushAtHead
$LN5@PushAtHead:

; 138  : 		array[ head+count ] = input;

	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, DWORD PTR _count$[ebp]
	imul	ecx, edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 139  : 
; 140  : 		if ( tail == head )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	$LN10@PushAtHead

; 141  : 		{
; 142  : 			//  unsigned int index=tail;
; 143  : 
; 144  : 			// Need to allocate more memory.
; 145  : 			queue_type * new_array;
; 146  : 			new_array = new queue_type[ allocation_size * 2 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	mov	DWORD PTR $T4[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T4[ebp]
	mov	edx, 7
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN14@PushAtHead
	mov	ecx, DWORD PTR $T6[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR $T6[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T6[ebp]
	add	edx, 4
	mov	DWORD PTR tv179[ebp], edx
	jmp	SHORT $LN15@PushAtHead
$LN14@PushAtHead:
	mov	DWORD PTR tv179[ebp], 0
$LN15@PushAtHead:
	mov	eax, DWORD PTR tv179[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _new_array$10[ebp], ecx

; 147  : #ifdef _DEBUG
; 148  : 
; 149  : 			assert( new_array );

	cmp	DWORD PTR _new_array$10[ebp], 0
	jne	SHORT $LN16@PushAtHead
	push	149					; 00000095H
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN16@PushAtHead:

; 150  : #endif
; 151  : 
; 152  : 			for ( unsigned int counter = 0; counter < allocation_size; ++counter )

	mov	DWORD PTR _counter$9[ebp], 0
	jmp	SHORT $LN3@PushAtHead
$LN2@PushAtHead:
	mov	eax, DWORD PTR _counter$9[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$9[ebp], eax
$LN3@PushAtHead:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _counter$9[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN1@PushAtHead

; 153  : 				new_array[ counter ] = array[ ( head + counter ) % ( allocation_size ) ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR _counter$9[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	div	DWORD PTR [ecx+12]
	imul	edx, edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	push	edx
	imul	ecx, DWORD PTR _counter$9[ebp], 7
	add	ecx, DWORD PTR _new_array$10[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	jmp	SHORT $LN2@PushAtHead
$LN1@PushAtHead:

; 154  : 
; 155  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 156  : 
; 157  : 			tail = allocation_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx

; 158  : 
; 159  : 			allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 160  : 
; 161  : 			// Delete the old array and move the pointer to the new array
; 162  : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T8[ebp], ecx
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR $T7[ebp], edx
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN17@PushAtHead
	push	3
	mov	ecx, DWORD PTR $T7[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv211[ebp], eax
	jmp	SHORT $LN18@PushAtHead
$LN17@PushAtHead:
	mov	DWORD PTR tv211[ebp], 0
$LN18@PushAtHead:

; 163  : 
; 164  : 			array = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$10[ebp]
	mov	DWORD PTR [eax], ecx
$LN10@PushAtHead:

; 165  : 		}
; 166  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z$1:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::PushAtHead
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN2@Queue

; 94   : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Queue
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@Queue
$LN4@Queue:
	mov	DWORD PTR tv71[ebp], 0
$LN2@Queue:

; 95   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv89 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
$T4 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Queue<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 83   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 		allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 85   : 		array = new queue_type[ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 7
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@Queue
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv89[ebp], edx
	jmp	SHORT $LN4@Queue
$LN3@Queue:
	mov	DWORD PTR tv89[ebp], 0
$LN4@Queue:
	mov	eax, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx

; 86   : 		head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 87   : 		tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 88   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Queue<ConnectionGraph::PlayerIdAndGroupId>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult, COMDAT
; _this$ = ecx

; 309  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		return lastSearchIndexValid && key_comparison_func(key,lastSearchKey)==0;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23]
	test	ecx, ecx
	je	SHORT $LN3@HasSavedSe
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@HasSavedSe
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@HasSavedSe
$LN3@HasSavedSe:
	mov	DWORD PTR tv72[ebp], 0
$LN4@HasSavedSe:
	mov	al, BYTE PTR tv72[ebp]

; 311  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_index$ = 12						; size = 4
?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch, COMDAT
; _this$ = ecx

; 301  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		lastSearchIndex=index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 303  : 		lastSearchKey=key;

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 304  : 		lastSearchIndexValid=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 1

; 305  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN5@Clear
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 333  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef _DEBUG
; 335  : 		assert( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN4@RemoveAtIn
	push	335					; 0000014fH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RemoveAtIn:

; 336  : #endif
; 337  : 
; 338  : 		if ( position < list_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@RemoveAtIn

; 339  : 		{
; 340  : 			// Compress the array
; 341  : 			/*
; 342  : 			for ( unsigned int counter = position; counter < list_size - 1 ; ++counter )
; 343  : 			listArray[ counter ] = listArray[ counter + 1 ];
; 344  : 			*/
; 345  : 			memmove(listArray+position, listArray+position+1, (list_size-1-position) * sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 9
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax+9]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 9
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 			Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Del
$LN2@RemoveAtIn:

; 348  : 		}
; 349  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
tv140 = -292						; size = 4
tv129 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 9
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 9
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	push	OFFSET ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN7@Insert
$LN6@Insert:
	mov	DWORD PTR tv129[ebp], 0
$LN7@Insert:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 9
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN8@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN9@Insert
$LN8@Insert:
	mov	DWORD PTR tv140[ebp], 0
$LN9@Insert:

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [ecx+4], 9
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z
_TEXT	SEGMENT
tv146 = -292						; size = 4
tv135 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 9
_position$ = 20						; size = 4
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 9
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	push	OFFSET ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN8@Insert
$LN7@Insert:
	mov	DWORD PTR tv135[ebp], 0
$LN8@Insert:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 9
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN9@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN10@Insert
$LN9@Insert:
	mov	DWORD PTR tv146[ebp], 0
$LN10@Insert:

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 9
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	imul	edx, DWORD PTR _position$[ebp], 9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx+9]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 9
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@List
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@List
$LN4@List:
	mov	DWORD PTR tv71[ebp], 0
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return orderedList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 196  : 		orderedList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXI@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::RemoveAtIndex

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[], COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		return orderedList[position];

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	al, BYTE PTR [eax+8]
	mov	BYTE PTR [ecx+8], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	cl, BYTE PTR [ecx+8]
	mov	BYTE PTR [edx+8], cl
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size, COMDAT
; _this$ = ecx

; 295  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 296  : 		return mapNodeList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size

; 297  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 278  : 		mapNodeList.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear

; 279  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_position$ = 12						; size = 4
?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex, COMDAT
; _this$ = ecx

; 289  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 290  : 		return mapNodeList[position].mapNodeKey;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 291  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[], COMDAT
; _this$ = ecx

; 283  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 284  : 		return mapNodeList[position].mapNodeData;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	add	eax, 7

; 285  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete, COMDAT
; _this$ = ecx

; 253  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 254  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Delete

; 255  : 		{
; 256  : 			lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 257  : 			mapNodeList.RemoveAtIndex(lastSearchIndex);   

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex

; 258  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@Delete
$LN3@Delete:

; 259  : 		}
; 260  : 
; 261  : 		bool objectExists;
; 262  : 		unsigned index;
; 263  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 264  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN2@Delete

; 265  : 		{
; 266  : 			lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 267  : 			mapNodeList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXI@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::RemoveAtIndex

; 268  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@Delete

; 269  : 		}
; 270  : 		else

	jmp	SHORT $LN4@Delete
$LN2@Delete:

; 271  : 			return false;

	xor	al, al
$LN4@Delete:

; 272  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Delete
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@Delete:
	DD	1
	DD	$LN7@Delete
$LN7@Delete:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Delete
$LN6@Delete:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z
_TEXT	SEGMENT
tv137 = -268						; size = 4
tv138 = -264						; size = 4
$T2 = -253						; size = 9
_index$ = -44						; size = 4
_objectExists$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		bool objectExists;
; 184  : 		unsigned index;
; 185  : 
; 186  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Set

; 187  : 		{
; 188  : 			mapNodeList[lastSearchIndex].mapNodeData=data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	edx, DWORD PTR _data$[ebp]
	mov	cx, WORD PTR [edx]
	mov	WORD PTR [eax+7], cx

; 189  : 			return;

	jmp	$LN4@Set
$LN3@Set:

; 190  : 		}
; 191  : 		
; 192  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 193  : 
; 194  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN2@Set

; 195  : 		{
; 196  : 			SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch

; 197  : 			mapNodeList[index].mapNodeData=data;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax+7], dx

; 198  : 		}
; 199  : 		else

	jmp	SHORT $LN4@Set
$LN2@Set:

; 200  : 		{
; 201  : 			SaveLastSearch(key,mapNodeList.Insert(key,MapNode(key,data)));

	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	cx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], cx
	mov	dl, BYTE PTR [edx+6]
	mov	BYTE PTR [eax+6], dl
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv137[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv137[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
$LN4@Set:

; 202  : 		}
; 203  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Set
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@Set:
	DD	1
	DD	$LN9@Set
$LN9@Set:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN7@Set
$LN7@Set:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
__ehhandler$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 105  : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear

; 106  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId

; 99   : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 100  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
__ehhandler$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc, COMDAT

; 56   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 57   : #ifdef _MSC_VER
; 58   : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 59   : #endif
; 60   : 			return key_comparison_func(a, b.mapNodeKey);

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8

; 61   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Size@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Size, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		if ( head <= tail )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@Size

; 64   : 			return tail -head;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN3@Size

; 65   : 		else

	jmp	SHORT $LN3@Size
$LN2@Size:

; 66   : 			return allocation_size -head + tail;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
$LN3@Size:

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Pop@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE?AUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@XZ
_TEXT	SEGMENT
tv78 = -240						; size = 4
$T1 = -232						; size = 8
$T2 = -216						; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Pop@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE?AUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@XZ PROC ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Pop, COMDAT
; _this$ = ecx

; 99   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : #ifdef _DEBUG
; 101  : 		assert( allocation_size > 0 && Size() >= 0 && head != tail);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN5@Pop
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Size
	test	eax, eax
	jb	SHORT $LN5@Pop
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN6@Pop
$LN5@Pop:
	push	101					; 00000065H
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1GG@JDEIIJCO@?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DN@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Pop:

; 102  : #endif
; 103  : 		//head=(head+1) % allocation_size;
; 104  : 
; 105  : 		if ( ++head == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv78[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv78[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN2@Pop

; 106  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@Pop:

; 107  : 
; 108  : 		if ( head == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Pop

; 109  : 			return ( queue_type ) array[ allocation_size -1 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+ecx*8-8]
	mov	eax, DWORD PTR [eax+ecx*8-4]
	mov	DWORD PTR $T1[ebp], edx
	mov	DWORD PTR $T1[ebp+4], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@Pop
$LN1@Pop:

; 110  : 
; 111  : 		return ( queue_type ) array[ head -1 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+ecx*8-8]
	mov	eax, DWORD PTR [eax+ecx*8-4]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR $T2[ebp+4], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@Pop:

; 112  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Pop@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE?AUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@XZ ENDP ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ?Push@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAEXABUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@@Z
_TEXT	SEGMENT
$T1 = -260						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
_counter$4 = -32					; size = 4
_new_array$5 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 4
?Push@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAEXABUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@@Z PROC ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Push, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN6@Push

; 184  : 		{
; 185  : 			array = new queue_type[ 16 ];

	push	128					; 00000080H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], ecx

; 186  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 187  : 			tail = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1

; 188  : 			array[ 0 ] = input;

	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, 8
	imul	eax, eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi]
	mov	DWORD PTR [esi+eax], ecx
	mov	DWORD PTR [esi+eax+4], edx

; 189  : 			allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 190  : 			return ;

	jmp	$LN7@Push
$LN6@Push:

; 191  : 		}
; 192  : 
; 193  : 		array[ tail++ ] = input;

	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 194  : 
; 195  : 		if ( tail == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN5@Push

; 196  : 			tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN5@Push:

; 197  : 
; 198  : 		if ( tail == head )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	$LN7@Push

; 199  : 		{
; 200  : 			//  unsigned int index=tail;
; 201  : 
; 202  : 			// Need to allocate more memory.
; 203  : 			queue_type * new_array;
; 204  : 			new_array = new queue_type[ allocation_size * 2 ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	shl	eax, 1
	xor	ecx, ecx
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _new_array$5[ebp], eax

; 205  : #ifdef _DEBUG
; 206  : 
; 207  : 			assert( new_array );

	cmp	DWORD PTR _new_array$5[ebp], 0
	jne	SHORT $LN9@Push
	push	207					; 000000cfH
	push	OFFSET ??_C@_1EG@DIEEECKO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAq?$AAu?$AAe?$AAu?$AAe@
	push	OFFSET ??_C@_1BE@OMEGJCHO@?$AAn?$AAe?$AAw?$AA_?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@Push:

; 208  : #endif
; 209  : 
; 210  : 			for ( unsigned int counter = 0; counter < allocation_size; ++counter )

	mov	DWORD PTR _counter$4[ebp], 0
	jmp	SHORT $LN3@Push
$LN2@Push:
	mov	eax, DWORD PTR _counter$4[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$4[ebp], eax
$LN3@Push:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _counter$4[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN1@Push

; 211  : 				new_array[ counter ] = array[ ( head + counter ) % ( allocation_size ) ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR _counter$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	div	DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+edx*8]
	mov	ecx, DWORD PTR [ecx+edx*8+4]
	mov	edx, DWORD PTR _counter$4[ebp]
	mov	esi, DWORD PTR _new_array$5[ebp]
	mov	DWORD PTR [esi+edx*8], eax
	mov	DWORD PTR [esi+edx*8+4], ecx
	jmp	SHORT $LN2@Push
$LN1@Push:

; 212  : 
; 213  : 			head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 214  : 
; 215  : 			tail = allocation_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx

; 216  : 
; 217  : 			allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 218  : 
; 219  : 			// Delete the old array and move the pointer to the new array
; 220  : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 221  : 
; 222  : 			array = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$5[ebp]
	mov	DWORD PTR [eax], ecx
$LN7@Push:

; 223  : 		}
; 224  : 
; 225  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Push@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAEXABUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@@Z ENDP ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??1?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::~Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jbe	SHORT $LN2@Queue

; 94   : 			delete [] array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@Queue:

; 95   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::~Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_queue.h
;	COMDAT ??0?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??0?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>, COMDAT
; _this$ = ecx

; 83   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 		allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 85   : 		array = new queue_type[ allocation_size ];

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], ecx

; 86   : 		head = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 87   : 		tail = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 88   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$WriteCompressed@G@BitStream@RakNet@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 2
??$WriteCompressed@G@BitStream@RakNet@@QAEXG@Z PROC	; RakNet::BitStream::WriteCompressed<unsigned short>, COMDAT
; _this$ = ecx

; 865  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 866  : #ifdef _MSC_VER
; 867  : #pragma warning(disable:4127)   // conditional expression is constant
; 868  : #endif
; 869  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@WriteCompr

; 870  : 			WriteCompressed( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z ; RakNet::BitStream::WriteCompressed

; 871  : 		else

	jmp	SHORT $LN3@WriteCompr
$LN2@WriteCompr:

; 872  : 		{
; 873  : #ifndef __BITSTREAM_NATIVE_END
; 874  : #ifdef _MSC_VER
; 875  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 876  : #endif
; 877  : 
; 878  : 			if (DoEndianSwap())
; 879  : 			{
; 880  : 				unsigned char output[sizeof(templateType)];
; 881  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 882  : 				WriteCompressed( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 883  : 			}
; 884  : 			else
; 885  : #endif
; 886  : 				WriteCompressed( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z ; RakNet::BitStream::WriteCompressed
$LN3@WriteCompr:

; 887  : 		}
; 888  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$WriteCompressed@G@BitStream@RakNet@@QAEXG@Z ENDP	; RakNet::BitStream::WriteCompressed<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$ReadCompressed@G@BitStream@RakNet@@QAE_NAAG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$ReadCompressed@G@BitStream@RakNet@@QAE_NAAG@Z PROC	; RakNet::BitStream::ReadCompressed<unsigned short>, COMDAT
; _this$ = ecx

; 1080 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1081 : #ifdef _MSC_VER
; 1082 : #pragma warning(disable:4127)   // conditional expression is constant
; 1083 : #endif
; 1084 : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@ReadCompre

; 1085 : 			return ReadCompressed( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z ; RakNet::BitStream::ReadCompressed
	jmp	SHORT $LN3@ReadCompre

; 1086 : 		else

	jmp	SHORT $LN3@ReadCompre
$LN2@ReadCompre:

; 1087 : 		{
; 1088 : #ifndef __BITSTREAM_NATIVE_END
; 1089 : 			if (DoEndianSwap())
; 1090 : 			{
; 1091 : 				unsigned char output[sizeof(templateType)];
; 1092 : 				if (ReadCompressed( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1093 : 				{
; 1094 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1095 : 					return true;
; 1096 : 				}
; 1097 : 				return false;
; 1098 : 			}
; 1099 : 			else
; 1100 : #endif
; 1101 : 				return ReadCompressed( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z ; RakNet::BitStream::ReadCompressed
$LN3@ReadCompre:

; 1102 : 		}
; 1103 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$ReadCompressed@G@BitStream@RakNet@@QAE_NAAG@Z ENDP	; RakNet::BitStream::ReadCompressed<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@E@BitStream@RakNet@@QAE_NAAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z PROC		; RakNet::BitStream::Read<unsigned char>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z ENDP		; RakNet::BitStream::Read<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$ReadCompressed@E@BitStream@RakNet@@QAE_NAAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$ReadCompressed@E@BitStream@RakNet@@QAE_NAAE@Z PROC	; RakNet::BitStream::ReadCompressed<unsigned char>, COMDAT
; _this$ = ecx

; 1080 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1081 : #ifdef _MSC_VER
; 1082 : #pragma warning(disable:4127)   // conditional expression is constant
; 1083 : #endif
; 1084 : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@ReadCompre

; 1085 : 			return ReadCompressed( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z ; RakNet::BitStream::ReadCompressed
	jmp	SHORT $LN3@ReadCompre

; 1086 : 		else

	jmp	SHORT $LN3@ReadCompre
$LN2@ReadCompre:

; 1087 : 		{
; 1088 : #ifndef __BITSTREAM_NATIVE_END
; 1089 : 			if (DoEndianSwap())
; 1090 : 			{
; 1091 : 				unsigned char output[sizeof(templateType)];
; 1092 : 				if (ReadCompressed( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1093 : 				{
; 1094 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1095 : 					return true;
; 1096 : 				}
; 1097 : 				return false;
; 1098 : 			}
; 1099 : 			else
; 1100 : #endif
; 1101 : 				return ReadCompressed( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadCompressed@BitStream@RakNet@@AAE_NPAEH_N@Z ; RakNet::BitStream::ReadCompressed
$LN3@ReadCompre:

; 1102 : 		}
; 1103 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$ReadCompressed@E@BitStream@RakNet@@QAE_NAAE@Z ENDP	; RakNet::BitStream::ReadCompressed<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 1
??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z PROC	; RakNet::BitStream::WriteCompressed<unsigned char>, COMDAT
; _this$ = ecx

; 865  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 866  : #ifdef _MSC_VER
; 867  : #pragma warning(disable:4127)   // conditional expression is constant
; 868  : #endif
; 869  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@WriteCompr

; 870  : 			WriteCompressed( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z ; RakNet::BitStream::WriteCompressed

; 871  : 		else

	jmp	SHORT $LN3@WriteCompr
$LN2@WriteCompr:

; 872  : 		{
; 873  : #ifndef __BITSTREAM_NATIVE_END
; 874  : #ifdef _MSC_VER
; 875  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 876  : #endif
; 877  : 
; 878  : 			if (DoEndianSwap())
; 879  : 			{
; 880  : 				unsigned char output[sizeof(templateType)];
; 881  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 882  : 				WriteCompressed( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 883  : 			}
; 884  : 			else
; 885  : #endif
; 886  : 				WriteCompressed( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCompressed@BitStream@RakNet@@AAEXPBEH_N@Z ; RakNet::BitStream::WriteCompressed
$LN3@WriteCompr:

; 887  : 		}
; 888  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z ENDP	; RakNet::BitStream::WriteCompressed<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@E@BitStream@RakNet@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 1
??$Write@E@BitStream@RakNet@@QAEXE@Z PROC		; RakNet::BitStream::Write<unsigned char>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@E@BitStream@RakNet@@QAEXE@Z ENDP		; RakNet::BitStream::Write<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEPAXI@Z PROC ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::~Tree<ConnectionGraph::PlayerIdAndGroupId>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEPAXI@Z ENDP ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_new_array$3 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 4
?Insert@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z PROC ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _new_array$3[ebp], eax

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$3[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Insert@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ENDP ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z PROC ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ENDP ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_tree.h
;	COMDAT ?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ
_TEXT	SEGMENT
tv80 = -276						; size = 4
$T2 = -268						; size = 4
$T3 = -256						; size = 4
_i$ = -52						; size = 4
_output$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ PROC ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::DeleteDecendants, COMDAT
; _this$ = ecx

; 88   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         DataStructures::List<Tree*> output;

	lea	ecx, DWORD PTR _output$[ebp]
	call	??0?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 90   : 		LevelOrderTraversal(output);

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::LevelOrderTraversal

; 91   : 		unsigned i;
; 92   : 		for (i=0; i < output.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@DeleteDece
$LN2@DeleteDece:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@DeleteDece:
	lea	ecx, DWORD PTR _output$[ebp]
	call	?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN1@DeleteDece

; 93   : 			delete output[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@DeleteDece
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_G?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN7@DeleteDece
$LN6@DeleteDece:
	mov	DWORD PTR tv80[ebp], 0
$LN7@DeleteDece:
	jmp	SHORT $LN2@DeleteDece
$LN1@DeleteDece:

; 94   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _output$[ebp]
	call	??1?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@DeleteDece
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@DeleteDece:
	DD	1
	DD	$LN11@DeleteDece
$LN11@DeleteDece:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN9@DeleteDece
$LN9@DeleteDece:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ$0:
	lea	ecx, DWORD PTR _output$[ebp]
	jmp	??1?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
__ehhandler$?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ ENDP ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::DeleteDecendants
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_tree.h
;	COMDAT ?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z
_TEXT	SEGMENT
_queue$ = -68						; size = 16
_node$ = -44						; size = 4
_i$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z PROC ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::LevelOrderTraversal, COMDAT
; _this$ = ecx

; 63   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 64   : 		unsigned i;
; 65   : 		Tree<TreeType> *node;
; 66   : 		DataStructures::Queue<Tree<TreeType>*> queue;

	lea	ecx, DWORD PTR _queue$[ebp]
	call	??0?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 67   : 
; 68   : 		for (i=0; i < children.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@LevelOrder
$LN7@LevelOrder:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@LevelOrder:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7
	call	?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN5@LevelOrder

; 69   : 			queue.Push(children[i]);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7
	call	??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
	push	eax
	lea	ecx, DWORD PTR _queue$[ebp]
	call	?Push@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXABQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Push
	jmp	SHORT $LN7@LevelOrder
$LN5@LevelOrder:

; 70   : 
; 71   : 		while (queue.Size())

	lea	ecx, DWORD PTR _queue$[ebp]
	call	?Size@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
	test	eax, eax
	je	SHORT $LN4@LevelOrder

; 72   : 		{
; 73   : 			node=queue.Pop();

	lea	ecx, DWORD PTR _queue$[ebp]
	call	?Pop@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@XZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Pop
	mov	DWORD PTR _node$[ebp], eax

; 74   : 			output.Insert(node);

	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _output$[ebp]
	call	?Insert@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Insert

; 75   : 			for (i=0; i < node->children.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@LevelOrder
$LN2@LevelOrder:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@LevelOrder:
	mov	ecx, DWORD PTR _node$[ebp]
	add	ecx, 7
	call	?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN1@LevelOrder

; 76   : 				queue.Push(node->children[i]);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	add	ecx, 7
	call	??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
	push	eax
	lea	ecx, DWORD PTR _queue$[ebp]
	call	?Push@?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXABQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Push
	jmp	SHORT $LN2@LevelOrder
$LN1@LevelOrder:

; 77   : 		}

	jmp	SHORT $LN5@LevelOrder
$LN4@LevelOrder:

; 78   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _queue$[ebp]
	call	??1?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@LevelOrder
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN15@LevelOrder:
	DD	1
	DD	$LN14@LevelOrder
$LN14@LevelOrder:
	DD	-68					; ffffffbcH
	DD	16					; 00000010H
	DD	$LN12@LevelOrder
$LN12@LevelOrder:
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z$0:
	lea	ecx, DWORD PTR _queue$[ebp]
	jmp	??1?$Queue@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~Queue<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
__ehhandler$?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LevelOrderTraversal@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXAAV?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@2@@Z ENDP ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::LevelOrderTraversal
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_tree.h
;	COMDAT ??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::~Tree<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 59   : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7
	call	??1?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::~List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::~Tree<ConnectionGraph::PlayerIdAndGroupId>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_tree.h
;	COMDAT ??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::Tree<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 46   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7
	call	??0?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>

; 47   : 
; 48   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::Tree<ConnectionGraph::PlayerIdAndGroupId>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@G@BitStream@RakNet@@QAE_NAAG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z PROC		; RakNet::BitStream::Read<unsigned short>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@G@BitStream@RakNet@@QAE_NAAG@Z ENDP		; RakNet::BitStream::Read<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@I@BitStream@RakNet@@QAE_NAAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z PROC		; RakNet::BitStream::Read<unsigned int>, COMDAT
; _this$ = ecx

; 987  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 988  : #ifdef _MSC_VER
; 989  : #pragma warning(disable:4127)   // conditional expression is constant
; 990  : #endif
; 991  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Read

; 992  : 			return ReadBits( ( unsigned char* ) &var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN3@Read

; 993  : 		else

	jmp	SHORT $LN3@Read
$LN2@Read:

; 994  : 		{
; 995  : #ifndef __BITSTREAM_NATIVE_END
; 996  : #ifdef _MSC_VER
; 997  : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 998  : #endif
; 999  : 			if (DoEndianSwap())
; 1000 : 			{
; 1001 : 				unsigned char output[sizeof(templateType)];
; 1002 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))
; 1003 : 				{
; 1004 : 					ReverseBytes(output, (unsigned char*)&var, sizeof(templateType));
; 1005 : 					return true;
; 1006 : 				}
; 1007 : 				return false;
; 1008 : 			}
; 1009 : 			else
; 1010 : #endif
; 1011 : 				return ReadBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEH_N@Z ; RakNet::BitStream::ReadBits
$LN3@Read:

; 1012 : 		}
; 1013 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z ENDP		; RakNet::BitStream::Read<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z PROC ; RakNet::BitStream::Read<PlayerID>, COMDAT
; _this$ = ecx

; 1035 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1036 : 		Read(var.binaryAddress);

	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 1037 : 		return Read(var.port);

	mov	eax, DWORD PTR _var$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Read@G@BitStream@RakNet@@QAE_NAAG@Z	; RakNet::BitStream::Read<unsigned short>

; 1038 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ENDP ; RakNet::BitStream::Read<PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z PROC		; RakNet::BitStream::Read<bool>, COMDAT
; _this$ = ecx

; 1019 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1020 : 		if ( readOffset + 1 > numberOfBitsUsed )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx]
	jle	SHORT $LN3@Read

; 1021 : 			return false;

	xor	al, al
	jmp	SHORT $LN4@Read
$LN3@Read:

; 1022 : 
; 1023 : 		if ( data[ readOffset >> 3 ] & ( 0x80 >> ( readOffset++ % 8 ) ) )   // Is it faster to just write it out here?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sar	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movzx	edx, BYTE PTR [eax+ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -2147483641			; 80000007H
	jns	SHORT $LN6@Read
	dec	ecx
	or	ecx, -8					; fffffff8H
	inc	ecx
$LN6@Read:
	mov	eax, 128				; 00000080H
	sar	eax, cl
	and	edx, eax
	mov	DWORD PTR tv82[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
	cmp	DWORD PTR tv82[ebp], 0
	je	SHORT $LN2@Read

; 1024 : 			var = true;

	mov	eax, DWORD PTR _var$[ebp]
	mov	BYTE PTR [eax], 1

; 1025 : 		else

	jmp	SHORT $LN1@Read
$LN2@Read:

; 1026 : 			var = false;

	mov	eax, DWORD PTR _var$[ebp]
	mov	BYTE PTR [eax], 0
$LN1@Read:

; 1027 : 
; 1028 : 		return true;

	mov	al, 1
$LN4@Read:

; 1029 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ENDP		; RakNet::BitStream::Read<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@G@BitStream@RakNet@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 2
??$Write@G@BitStream@RakNet@@QAEXG@Z PROC		; RakNet::BitStream::Write<unsigned short>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	16					; 00000010H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@G@BitStream@RakNet@@QAEXG@Z ENDP		; RakNet::BitStream::Write<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@I@BitStream@RakNet@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 4
??$Write@I@BitStream@RakNet@@QAEXI@Z PROC		; RakNet::BitStream::Write<unsigned int>, COMDAT
; _this$ = ecx

; 729  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 730  : #ifdef _MSC_VER
; 731  : #pragma warning(disable:4127)   // conditional expression is constant
; 732  : #endif
; 733  : 		if (sizeof(var)==1)

	xor	eax, eax
	je	SHORT $LN2@Write

; 734  : 			WriteBits( ( unsigned char* ) & var, sizeof( templateType ) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits

; 735  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 736  : 		{
; 737  : #ifndef __BITSTREAM_NATIVE_END
; 738  : 			if (DoEndianSwap())
; 739  : 			{
; 740  : 				unsigned char output[sizeof(templateType)];
; 741  : 				ReverseBytes((unsigned char*)&var, output, sizeof(templateType));
; 742  : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );
; 743  : 			}
; 744  : 			else
; 745  : #endif
; 746  : 				WriteBits( ( unsigned char* ) & var, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN3@Write:

; 747  : 		}
; 748  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@I@BitStream@RakNet@@QAEXI@Z ENDP		; RakNet::BitStream::Write<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 6
??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z PROC ; RakNet::BitStream::Write<PlayerID>, COMDAT
; _this$ = ecx

; 765  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 766  : 		Write(var.binaryAddress);

	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Write@I@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::Write<unsigned int>

; 767  : 		Write(var.port);

	movzx	eax, WORD PTR _var$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$Write@G@BitStream@RakNet@@QAEXG@Z	; RakNet::BitStream::Write<unsigned short>

; 768  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ENDP ; RakNet::BitStream::Write<PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ??$Write@_N@BitStream@RakNet@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_var$ = 8						; size = 1
??$Write@_N@BitStream@RakNet@@QAEX_N@Z PROC		; RakNet::BitStream::Write<bool>, COMDAT
; _this$ = ecx

; 754  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 755  : 		if ( var )

	movzx	eax, BYTE PTR _var$[ebp]
	test	eax, eax
	je	SHORT $LN2@Write

; 756  : 			Write1();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write1@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write1

; 757  : 		else

	jmp	SHORT $LN3@Write
$LN2@Write:

; 758  : 			Write0();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write0@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write0
$LN3@Write:

; 759  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@_N@BitStream@RakNet@@QAEX_N@Z ENDP		; RakNet::BitStream::Write<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ?GetData@BitStream@RakNet@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@BitStream@RakNet@@QBEPAEXZ PROC		; RakNet::BitStream::GetData, COMDAT
; _this$ = ecx

; 397  : 		inline unsigned char* GetData( void ) const {return data;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@BitStream@RakNet@@QBEPAEXZ ENDP		; RakNet::BitStream::GetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\bitstream.h
;	COMDAT ?GetWriteOffset@BitStream@RakNet@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetWriteOffset@BitStream@RakNet@@QBEHXZ PROC		; RakNet::BitStream::GetWriteOffset, COMDAT
; _this$ = ecx

; 370  : 		inline int GetWriteOffset( void ) const {return numberOfBitsUsed;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWriteOffset@BitStream@RakNet@@QBEHXZ ENDP		; RakNet::BitStream::GetWriteOffset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?SerializePreorder@Router@@IBEXPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PAVBitStream@RakNet@@PAVSystemAddressList@@@Z
_TEXT	SEGMENT
tv73 = -217						; size = 1
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_tree$ = 8						; size = 4
_out$ = 12						; size = 4
_recipients$ = 16					; size = 4
?SerializePreorder@Router@@IBEXPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PAVBitStream@RakNet@@PAVSystemAddressList@@@Z PROC ; Router::SerializePreorder, COMDAT
; _this$ = ecx

; 324  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 325  : 	unsigned i;
; 326  : 	out->Write((bool) (recipients->GetList()->GetIndexOf(tree->data.playerId)!=MAX_UNSIGNED_LONG));

	mov	eax, DWORD PTR _tree$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _recipients$[ebp]
	call	?GetList@SystemAddressList@@QAEPAV?$List@UPlayerID@@@DataStructures@@XZ ; SystemAddressList::GetList
	mov	ecx, eax
	call	?GetIndexOf@?$List@UPlayerID@@@DataStructures@@QAEIUPlayerID@@@Z ; DataStructures::List<PlayerID>::GetIndexOf
	cmp	eax, -1
	je	SHORT $LN6@SerializeP
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN7@SerializeP
$LN6@SerializeP:
	mov	BYTE PTR tv73[ebp], 0
$LN7@SerializeP:
	movzx	ecx, BYTE PTR tv73[ebp]
	push	ecx
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@_N@BitStream@RakNet@@QAEX_N@Z	; RakNet::BitStream::Write<bool>

; 327  : 	out->Write(tree->data.playerId);

	mov	eax, DWORD PTR _tree$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 328  : 	out->WriteCompressed((unsigned short) tree->children.Size());

	mov	ecx, DWORD PTR _tree$[ebp]
	add	ecx, 7
	call	?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$WriteCompressed@G@BitStream@RakNet@@QAEXG@Z ; RakNet::BitStream::WriteCompressed<unsigned short>

; 329  : 	for (i=0; i < tree->children.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SerializeP
$LN2@SerializeP:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@SerializeP:
	mov	ecx, DWORD PTR _tree$[ebp]
	add	ecx, 7
	call	?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN4@SerializeP

; 330  : 		SerializePreorder(tree->children[i], out, recipients);

	mov	eax, DWORD PTR _recipients$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	add	ecx, 7
	call	??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SerializePreorder@Router@@IBEXPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PAVBitStream@RakNet@@PAVSystemAddressList@@@Z ; Router::SerializePreorder
	jmp	SHORT $LN2@SerializeP
$LN4@SerializeP:

; 331  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SerializePreorder@Router@@IBEXPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PAVBitStream@RakNet@@PAVSystemAddressList@@@Z ENDP ; Router::SerializePreorder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?SendTree@Router@@IAEXW4PacketPriority@@W4PacketReliability@@DPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PBDIPAVBitStream@RakNet@@PAVSystemAddressList@@@Z
_TEXT	SEGMENT
$T1 = -238						; size = 6
_i$ = -32						; size = 4
_outputOffset$ = -20					; size = 4
_this$ = -8						; size = 4
_priority$ = 8						; size = 4
_reliability$ = 12					; size = 4
_orderingChannel$ = 16					; size = 1
_tree$ = 20						; size = 4
_data$ = 24						; size = 4
_bitLength$ = 28					; size = 4
_out$ = 32						; size = 4
_recipients$ = 36					; size = 4
?SendTree@Router@@IAEXW4PacketPriority@@W4PacketReliability@@DPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PBDIPAVBitStream@RakNet@@PAVSystemAddressList@@@Z PROC ; Router::SendTree, COMDAT
; _this$ = ecx

; 95   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 	unsigned outputOffset;
; 97   : 
; 98   : 	// Write routing identifer
; 99   : 	out->Write((unsigned char)ID_ROUTE_AND_MULTICAST);

	push	67					; 00000043H
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 100  : 
; 101  : 	// Write the send parameters
; 102  : 	out->WriteCompressed((unsigned char)priority);

	movzx	eax, BYTE PTR _priority$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z ; RakNet::BitStream::WriteCompressed<unsigned char>

; 103  : 	out->WriteCompressed((unsigned char)reliability);

	movzx	eax, BYTE PTR _reliability$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z ; RakNet::BitStream::WriteCompressed<unsigned char>

; 104  : 	out->WriteCompressed((unsigned char)orderingChannel);

	movzx	eax, BYTE PTR _orderingChannel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z ; RakNet::BitStream::WriteCompressed<unsigned char>

; 105  : 
; 106  : 	// Write the user payload length
; 107  : 	out->Write((unsigned int)bitLength);

	mov	eax, DWORD PTR _bitLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@I@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::Write<unsigned int>

; 108  : //	out->PrintBits();
; 109  : //	payload->PrintBits();
; 110  : 
; 111  : 	out->AlignWriteToByteBoundary();

	mov	ecx, DWORD PTR _out$[ebp]
	call	?AlignWriteToByteBoundary@BitStream@RakNet@@QAEXXZ ; RakNet::BitStream::AlignWriteToByteBoundary

; 112  : //	payload->AlignReadToByteBoundary();
; 113  : //	out->Write(payload, payload->GetNumberOfUnreadBits());
; 114  : //	out->PrintBits();
; 115  : 	if ((bitLength % 8)==0)

	mov	eax, DWORD PTR _bitLength$[ebp]
	xor	edx, edx
	mov	ecx, 8
	div	ecx
	test	edx, edx
	jne	SHORT $LN5@SendTree

; 116  : 		out->Write(data, BITS_TO_BYTES(bitLength));

	mov	eax, DWORD PTR _bitLength$[ebp]
	add	eax, 7
	shr	eax, 3
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _out$[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDH@Z	; RakNet::BitStream::Write

; 117  : 	else

	jmp	SHORT $LN4@SendTree
$LN5@SendTree:

; 118  : 		out->WriteBits((const unsigned char*)data, bitLength, false);

	push	0
	mov	eax, DWORD PTR _bitLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _out$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEH_N@Z ; RakNet::BitStream::WriteBits
$LN4@SendTree:

; 119  : 
; 120  : 	// Save where to start writing per-system data
; 121  : 	outputOffset=out->GetWriteOffset();

	mov	ecx, DWORD PTR _out$[ebp]
	call	?GetWriteOffset@BitStream@RakNet@@QBEHXZ ; RakNet::BitStream::GetWriteOffset
	mov	DWORD PTR _outputOffset$[ebp], eax

; 122  : 
; 123  : 	// Write every child of the root of the tree (PlayerID, isRecipient, branch)
; 124  : 	unsigned i;
; 125  : 	for (i=0; i < tree->children.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SendTree
$LN2@SendTree:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@SendTree:
	mov	ecx, DWORD PTR _tree$[ebp]
	add	ecx, 7
	call	?Size@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN6@SendTree

; 126  : 	{
; 127  : 		// Start writing at the per-system data byte
; 128  : 		out->SetWriteOffset(outputOffset);

	mov	eax, DWORD PTR _outputOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	?SetWriteOffset@BitStream@RakNet@@QAEXH@Z ; RakNet::BitStream::SetWriteOffset

; 129  : 
; 130  : 		// Write our external IP to designate the sender
; 131  : 		out->Write(rakPeer->GetExternalID(tree->children[i]->data.playerId));

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	add	ecx, 7
	call	??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	cx, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], cx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+25]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+25]
	mov	edx, DWORD PTR [eax+160]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	mov	ecx, DWORD PTR _out$[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 132  : 
; 133  : 		// Serialize the tree
; 134  : 		SerializePreorder(tree->children[i], out, recipients);

	mov	eax, DWORD PTR _recipients$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	add	ecx, 7
	call	??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SerializePreorder@Router@@IBEXPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PAVBitStream@RakNet@@PAVSystemAddressList@@@Z ; Router::SerializePreorder

; 135  : 
; 136  : 		// Send to the first hop
; 137  : #ifdef _DO_PRINTF
; 138  : 		printf("%i sending to %i\n", rakPeer->GetExternalID(tree->children[i]->data).port, tree->children[i]->data.port);
; 139  : #endif
; 140  : 		rakPeer->Send(out, priority, reliability, orderingChannel, tree->children[i]->data.playerId, false);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	add	ecx, 7
	call	??A?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QBEAAPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@1@I@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::operator[]
	mov	ecx, DWORD PTR [eax]
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	cx, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], cx
	movzx	edx, BYTE PTR _orderingChannel$[ebp]
	push	edx
	mov	eax, DWORD PTR _reliability$[ebp]
	push	eax
	mov	ecx, DWORD PTR _priority$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+25]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+25]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 141  : 	}

	jmp	$LN2@SendTree
$LN6@SendTree:

; 142  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?SendTree@Router@@IAEXW4PacketPriority@@W4PacketReliability@@DPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PBDIPAVBitStream@RakNet@@PAVSystemAddressList@@@Z ENDP ; Router::SendTree
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?OnCloseConnection@Router@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
_playerId$ = 12						; size = 6
?OnCloseConnection@Router@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z PROC ; Router::OnCloseConnection, COMDAT
; _this$ = ecx

; 320  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 321  : 
; 322  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnCloseConnection@Router@@UAEXPAVRakPeerInterface@@UPlayerID@@@Z ENDP ; Router::OnCloseConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
_TEXT	SEGMENT
$T2 = -1372						; size = 4
$T3 = -1360						; size = 4
$T4 = -1348						; size = 4
$T5 = -1336						; size = 4
$T6 = -1324						; size = 4
_pendingNodeCount$7 = -1120				; size = 4
_immediateRecipient$8 = -1108				; size = 6
_childNumberOfChildren$9 = -1092			; size = 2
_childRecipient$10 = -1080				; size = 6
_childHasData$11 = -1061				; size = 1
_childIndex$12 = -1052					; size = 4
_numberOfChildren$13 = -1040				; size = 2
_recipient$14 = -1028					; size = 6
_hasData$15 = -1009					; size = 1
_messageID$16 = -997					; size = 1
_t$17 = -988						; size = 273
_c$18 = -701						; size = 1
_incomingBitstream$19 = -692				; size = 273
_payloadWriteByteOffset$20 = -408			; size = 4
_payloadBitLength$21 = -396				; size = 4
_outStartingOffset$22 = -384				; size = 4
_out$23 = -372						; size = 273
_originalSender$24 = -88				; size = 6
_orderingChannel$25 = -69				; size = 1
_reliability$26 = -60					; size = 4
_priority$27 = -48					; size = 4
_timestamp$28 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_peer$ = 8						; size = 4
_packet$ = 12						; size = 4
?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z PROC ; Router::OnReceive, COMDAT
; _this$ = ecx

; 147  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1364				; 00000554H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1376]
	mov	ecx, 341				; 00000155H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 	if (packet->data[0]==ID_ROUTE_AND_MULTICAST ||
; 149  : 		(packet->length>5 && packet->data[0]==ID_TIMESTAMP && packet->data[5]==ID_ROUTE_AND_MULTICAST))

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 67					; 00000043H
	je	SHORT $LN15@OnReceive
	mov	eax, DWORD PTR _packet$[ebp]
	cmp	DWORD PTR [eax+8], 5
	jbe	$LN16@OnReceive
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 36					; 00000024H
	jne	$LN16@OnReceive
	mov	eax, 1
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 67					; 00000043H
	jne	$LN16@OnReceive
$LN15@OnReceive:

; 150  : 	{
; 151  : #ifdef _DO_PRINTF
; 152  : 		printf("%i got routed message from %i\n", peer->GetExternalID(packet->playerId).port, packet->playerId.port);
; 153  : #endif
; 154  : 		RakNetTime timestamp;
; 155  : 		PacketPriority priority;
; 156  : 		PacketReliability reliability;
; 157  : 		unsigned char orderingChannel;
; 158  : 		PlayerID originalSender;
; 159  : 		RakNet::BitStream out;

	lea	ecx, DWORD PTR _out$23[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 160  : 		unsigned outStartingOffset;
; 161  : 		unsigned int payloadBitLength;
; 162  : 		unsigned payloadWriteByteOffset;
; 163  : 		RakNet::BitStream incomingBitstream(packet->data, packet->length, false);

	push	0
	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 164  : 		incomingBitstream.IgnoreBits(8);

	push	8
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	?IgnoreBits@BitStream@RakNet@@QAEXH@Z	; RakNet::BitStream::IgnoreBits

; 165  : 		
; 166  : 		if (packet->data[0]==ID_TIMESTAMP)

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 36					; 00000024H
	jne	SHORT $LN14@OnReceive

; 167  : 		{
; 168  : 			incomingBitstream.Read(timestamp);

	lea	eax, DWORD PTR _timestamp$28[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 169  : 			out.Write((unsigned char)ID_TIMESTAMP);

	push	36					; 00000024H
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 170  : 			out.Write(timestamp);

	mov	eax, DWORD PTR _timestamp$28[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$Write@I@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::Write<unsigned int>
$LN14@OnReceive:

; 171  : 		}
; 172  : 
; 173  : 		// Read the send parameters
; 174  : 		unsigned char c;
; 175  : 		incomingBitstream.ReadCompressed(c);

	lea	eax, DWORD PTR _c$18[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$ReadCompressed@E@BitStream@RakNet@@QAE_NAAE@Z ; RakNet::BitStream::ReadCompressed<unsigned char>

; 176  : 		priority=(PacketPriority)c;

	movzx	eax, BYTE PTR _c$18[ebp]
	mov	DWORD PTR _priority$27[ebp], eax

; 177  : 		incomingBitstream.ReadCompressed(c);

	lea	eax, DWORD PTR _c$18[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$ReadCompressed@E@BitStream@RakNet@@QAE_NAAE@Z ; RakNet::BitStream::ReadCompressed<unsigned char>

; 178  : 		reliability=(PacketReliability)c;

	movzx	eax, BYTE PTR _c$18[ebp]
	mov	DWORD PTR _reliability$26[ebp], eax

; 179  : 		incomingBitstream.ReadCompressed(orderingChannel);

	lea	eax, DWORD PTR _orderingChannel$25[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$ReadCompressed@E@BitStream@RakNet@@QAE_NAAE@Z ; RakNet::BitStream::ReadCompressed<unsigned char>

; 180  : 		incomingBitstream.Read(payloadBitLength);

	lea	eax, DWORD PTR _payloadBitLength$21[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 181  : 		
; 182  : 		out.Write((unsigned char) ID_ROUTE_AND_MULTICAST);

	push	67					; 00000043H
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXE@Z	; RakNet::BitStream::Write<unsigned char>

; 183  : 		out.WriteCompressed((unsigned char)priority);

	movzx	eax, BYTE PTR _priority$27[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z ; RakNet::BitStream::WriteCompressed<unsigned char>

; 184  : 		out.WriteCompressed((unsigned char)reliability);

	movzx	eax, BYTE PTR _reliability$26[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z ; RakNet::BitStream::WriteCompressed<unsigned char>

; 185  : 		out.WriteCompressed((unsigned char)orderingChannel);

	movzx	eax, BYTE PTR _orderingChannel$25[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$WriteCompressed@E@BitStream@RakNet@@QAEXE@Z ; RakNet::BitStream::WriteCompressed<unsigned char>

; 186  : 		out.Write(payloadBitLength);

	mov	eax, DWORD PTR _payloadBitLength$21[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$Write@I@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::Write<unsigned int>

; 187  : 		out.AlignWriteToByteBoundary();

	lea	ecx, DWORD PTR _out$23[ebp]
	call	?AlignWriteToByteBoundary@BitStream@RakNet@@QAEXXZ ; RakNet::BitStream::AlignWriteToByteBoundary

; 188  : 		incomingBitstream.AlignReadToByteBoundary();

	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	?AlignReadToByteBoundary@BitStream@RakNet@@QAEXXZ ; RakNet::BitStream::AlignReadToByteBoundary

; 189  : 		payloadWriteByteOffset=BITS_TO_BYTES(out.GetWriteOffset());

	lea	ecx, DWORD PTR _out$23[ebp]
	call	?GetWriteOffset@BitStream@RakNet@@QBEHXZ ; RakNet::BitStream::GetWriteOffset
	add	eax, 7
	sar	eax, 3
	mov	DWORD PTR _payloadWriteByteOffset$20[ebp], eax

; 190  : 		out.Write(&incomingBitstream, payloadBitLength); // This write also does a read on incomingBitStream

	mov	eax, DWORD PTR _payloadBitLength$21[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	push	ecx
	lea	ecx, DWORD PTR _out$23[ebp]
	call	?Write@BitStream@RakNet@@QAEXPAV12@H@Z	; RakNet::BitStream::Write

; 191  : 
; 192  : 		if (restrictByType)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	je	$LN13@OnReceive

; 193  : 		{
; 194  : 			RakNet::BitStream t(out.GetData()+payloadWriteByteOffset, sizeof(unsigned char), false);

	push	0
	push	1
	lea	ecx, DWORD PTR _out$23[ebp]
	call	?GetData@BitStream@RakNet@@QBEPAEXZ	; RakNet::BitStream::GetData
	add	eax, DWORD PTR _payloadWriteByteOffset$20[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$17[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 195  : 			unsigned char messageID;
; 196  : 			t.Read(messageID);

	lea	eax, DWORD PTR _messageID$16[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$17[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 197  : 			if (allowedTypes.HasData(messageID)==false)

	lea	eax, DWORD PTR _messageID$16[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN12@OnReceive

; 198  : 				return RR_STOP_PROCESSING_AND_DEALLOCATE; // Don't route restricted types

	mov	DWORD PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _t$17[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T2[ebp]
	jmp	$LN17@OnReceive
$LN12@OnReceive:

; 199  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _t$17[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN13@OnReceive:

; 200  : 
; 201  : 		incomingBitstream.Read(originalSender);

	lea	eax, DWORD PTR _originalSender$24[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 202  : 		out.Write(originalSender);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _originalSender$24[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _originalSender$24[ebp+4]
	mov	WORD PTR [eax+4], dx
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 203  : 		outStartingOffset=out.GetWriteOffset();

	lea	ecx, DWORD PTR _out$23[ebp]
	call	?GetWriteOffset@BitStream@RakNet@@QBEHXZ ; RakNet::BitStream::GetWriteOffset
	mov	DWORD PTR _outStartingOffset$22[ebp], eax

; 204  : 
; 205  : 		// Deserialize the root
; 206  : 		bool hasData;
; 207  : 		PlayerID recipient;
; 208  : 		unsigned short numberOfChildren;
; 209  : 		incomingBitstream.Read(hasData);

	lea	eax, DWORD PTR _hasData$15[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ; RakNet::BitStream::Read<bool>

; 210  : 		incomingBitstream.Read(recipient); // This should be our own address

	lea	eax, DWORD PTR _recipient$14[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 211  : 		if (incomingBitstream.ReadCompressed(numberOfChildren)==false)

	lea	eax, DWORD PTR _numberOfChildren$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$ReadCompressed@G@BitStream@RakNet@@QAE_NAAG@Z ; RakNet::BitStream::ReadCompressed<unsigned short>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@OnReceive

; 212  : 		{
; 213  : #ifdef _DEBUG
; 214  : 			assert(0);

	xor	eax, eax
	jne	SHORT $LN19@OnReceive
	mov	ecx, DWORD PTR ?__LINE__Var@?1??OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z@4JA
	add	ecx, 67					; 00000043H
	push	ecx
	push	OFFSET ??_C@_1EG@NPKIDONI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAr?$AAo?$AAu?$AAt?$AAe?$AAr?$AA?4?$AAc@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN19@OnReceive:

; 215  : #endif
; 216  : 			return RR_STOP_PROCESSING_AND_DEALLOCATE;

	mov	DWORD PTR $T3[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN17@OnReceive
$LN11@OnReceive:

; 217  : 		}
; 218  : 
; 219  : 		unsigned childIndex;
; 220  : 		bool childHasData;
; 221  : 		PlayerID childRecipient;
; 222  : 		unsigned short childNumberOfChildren;
; 223  : 		PlayerID immediateRecipient;
; 224  : 		immediateRecipient=UNASSIGNED_PLAYER_ID;

	push	OFFSET _UNASSIGNED_PLAYER_ID
	lea	ecx, DWORD PTR _immediateRecipient$8[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 225  : 		int pendingNodeCount=0;

	mov	DWORD PTR _pendingNodeCount$7[ebp], 0

; 226  : 
; 227  : 		for (childIndex=0; childIndex < numberOfChildren; childIndex++)

	mov	DWORD PTR _childIndex$12[ebp], 0
	jmp	SHORT $LN10@OnReceive
$LN9@OnReceive:
	mov	eax, DWORD PTR _childIndex$12[ebp]
	add	eax, 1
	mov	DWORD PTR _childIndex$12[ebp], eax
$LN10@OnReceive:
	movzx	eax, WORD PTR _numberOfChildren$13[ebp]
	cmp	DWORD PTR _childIndex$12[ebp], eax
	jae	$LN8@OnReceive
$LN7@OnReceive:

; 228  : 		{
; 229  : 			while (pendingNodeCount!=-1)

	cmp	DWORD PTR _pendingNodeCount$7[ebp], -1
	je	$LN6@OnReceive

; 230  : 			{
; 231  : 				// Copy out the serialized subtree for this child
; 232  : 				incomingBitstream.Read(childHasData);

	lea	eax, DWORD PTR _childHasData$11[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ; RakNet::BitStream::Read<bool>

; 233  : 				incomingBitstream.Read(childRecipient);

	lea	eax, DWORD PTR _childRecipient$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$Read@UPlayerID@@@BitStream@RakNet@@QAE_NAAUPlayerID@@@Z ; RakNet::BitStream::Read<PlayerID>

; 234  : 				if (!incomingBitstream.ReadCompressed(childNumberOfChildren))

	lea	eax, DWORD PTR _childNumberOfChildren$9[ebp]
	push	eax
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??$ReadCompressed@G@BitStream@RakNet@@QAE_NAAG@Z ; RakNet::BitStream::ReadCompressed<unsigned short>
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@OnReceive

; 235  : 					return RR_STOP_PROCESSING_AND_DEALLOCATE;

	mov	DWORD PTR $T4[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN17@OnReceive
$LN5@OnReceive:

; 236  : 				if (immediateRecipient==UNASSIGNED_PLAYER_ID)

	push	OFFSET _UNASSIGNED_PLAYER_ID
	lea	ecx, DWORD PTR _immediateRecipient$8[ebp]
	call	??8PlayerID@@QBE_NABU0@@Z		; PlayerID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@OnReceive

; 237  : 				{
; 238  : 					immediateRecipient=childRecipient;

	lea	eax, DWORD PTR _childRecipient$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _immediateRecipient$8[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=
$LN4@OnReceive:

; 239  : 				}
; 240  : 
; 241  : 				pendingNodeCount+=childNumberOfChildren-1;

	movzx	eax, WORD PTR _childNumberOfChildren$9[ebp]
	mov	ecx, DWORD PTR _pendingNodeCount$7[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _pendingNodeCount$7[ebp], edx

; 242  : 
; 243  : 				out.Write(childHasData);

	movzx	eax, BYTE PTR _childHasData$11[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$Write@_N@BitStream@RakNet@@QAEX_N@Z	; RakNet::BitStream::Write<bool>

; 244  : 				out.Write(childRecipient);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _childRecipient$10[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _childRecipient$10[ebp+4]
	mov	WORD PTR [eax+4], dx
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$Write@UPlayerID@@@BitStream@RakNet@@QAEXUPlayerID@@@Z ; RakNet::BitStream::Write<PlayerID>

; 245  : 				out.WriteCompressed(childNumberOfChildren);

	movzx	eax, WORD PTR _childNumberOfChildren$9[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??$WriteCompressed@G@BitStream@RakNet@@QAEXG@Z ; RakNet::BitStream::WriteCompressed<unsigned short>

; 246  : 			}

	jmp	$LN7@OnReceive
$LN6@OnReceive:

; 247  : 
; 248  : #ifdef _DO_PRINTF
; 249  : 			printf("%i routing to %i\n", peer->GetExternalID(packet->playerId).port, immediateRecipient.port);
; 250  : #endif
; 251  : 
; 252  : 			// Send what we got so far
; 253  : 			rakPeer->Send(&out, priority, reliability, orderingChannel, immediateRecipient, false);

	mov	esi, esp
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _immediateRecipient$8[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _immediateRecipient$8[ebp+4]
	mov	WORD PTR [eax+4], dx
	movzx	eax, BYTE PTR _orderingChannel$25[ebp]
	push	eax
	mov	ecx, DWORD PTR _reliability$26[ebp]
	push	ecx
	mov	edx, DWORD PTR _priority$27[ebp]
	push	edx
	lea	eax, DWORD PTR _out$23[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+25]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+25]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 254  : 
; 255  : 			// Restart writing the per recipient data
; 256  : 			out.SetWriteOffset(outStartingOffset);

	mov	eax, DWORD PTR _outStartingOffset$22[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	?SetWriteOffset@BitStream@RakNet@@QAEXH@Z ; RakNet::BitStream::SetWriteOffset

; 257  : 
; 258  : 			// Reread the top level node
; 259  : 			immediateRecipient=UNASSIGNED_PLAYER_ID;

	push	OFFSET _UNASSIGNED_PLAYER_ID
	lea	ecx, DWORD PTR _immediateRecipient$8[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 260  : 
; 261  : 			pendingNodeCount=0;

	mov	DWORD PTR _pendingNodeCount$7[ebp], 0

; 262  : 
; 263  : 		}

	jmp	$LN9@OnReceive
$LN8@OnReceive:

; 264  : 
; 265  : 		// Write the user payload to the packet struct if this is a destination and change the sender and return true
; 266  : 		if (hasData)

	movzx	eax, BYTE PTR _hasData$15[ebp]
	test	eax, eax
	je	$LN3@OnReceive

; 267  : 		{
; 268  : #ifdef _DO_PRINTF
; 269  : 			printf("%i returning payload to user\n", peer->GetExternalID(packet->playerId).port);
; 270  : #endif
; 271  : 
; 272  : 			if (packet->data[0]==ID_TIMESTAMP )

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _packet$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 36					; 00000024H
	jne	SHORT $LN2@OnReceive

; 273  : 			{
; 274  : 				memcpy( packet->data + sizeof(RakNetTime)+sizeof(unsigned char), out.GetData()+payloadWriteByteOffset, BITS_TO_BYTES(payloadBitLength) );

	mov	eax, DWORD PTR _payloadBitLength$21[ebp]
	add	eax, 7
	shr	eax, 3
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	?GetData@BitStream@RakNet@@QBEPAEXZ	; RakNet::BitStream::GetData
	add	eax, DWORD PTR _payloadWriteByteOffset$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 5
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 275  : 				packet->bitSize=sizeof(RakNetTime)+sizeof(unsigned char)+payloadBitLength;

	mov	eax, DWORD PTR _payloadBitLength$21[ebp]
	add	eax, 5
	mov	ecx, DWORD PTR _packet$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 276  : 			}
; 277  : 			else

	jmp	SHORT $LN1@OnReceive
$LN2@OnReceive:

; 278  : 			{
; 279  : 				memcpy( packet->data, out.GetData()+payloadWriteByteOffset, BITS_TO_BYTES(payloadBitLength) );

	mov	eax, DWORD PTR _payloadBitLength$21[ebp]
	add	eax, 7
	shr	eax, 3
	push	eax
	lea	ecx, DWORD PTR _out$23[ebp]
	call	?GetData@BitStream@RakNet@@QBEPAEXZ	; RakNet::BitStream::GetData
	add	eax, DWORD PTR _payloadWriteByteOffset$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 280  : 				packet->bitSize=payloadBitLength;

	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR _payloadBitLength$21[ebp]
	mov	DWORD PTR [eax+12], ecx
$LN1@OnReceive:

; 281  : 			}
; 282  : 			packet->length=BITS_TO_BYTES(packet->bitSize);

	mov	eax, DWORD PTR _packet$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 7
	shr	ecx, 3
	mov	edx, DWORD PTR _packet$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 283  : 			packet->playerIndex=65535;

	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _packet$[ebp]
	mov	WORD PTR [ecx], ax

; 284  : 			packet->playerId=originalSender;

	lea	eax, DWORD PTR _originalSender$24[ebp]
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	add	ecx, 2
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 285  : 
; 286  : 			return RR_CONTINUE_PROCESSING;

	mov	DWORD PTR $T5[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T5[ebp]
	jmp	SHORT $LN17@OnReceive
$LN3@OnReceive:

; 287  : 		}
; 288  : 
; 289  : 		// Absorb
; 290  : 		return RR_STOP_PROCESSING_AND_DEALLOCATE;

	mov	DWORD PTR $T6[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _out$23[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T6[ebp]
	jmp	SHORT $LN17@OnReceive
$LN16@OnReceive:

; 291  : 	}
; 292  : 
; 293  : 	return RR_CONTINUE_PROCESSING;

	mov	eax, 1
$LN17@OnReceive:

; 294  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN41@OnReceive
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1376				; 00000560H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN41@OnReceive:
	DD	16					; 00000010H
	DD	$LN40@OnReceive
$LN40@OnReceive:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN23@OnReceive
	DD	-69					; ffffffbbH
	DD	1
	DD	$LN24@OnReceive
	DD	-88					; ffffffa8H
	DD	6
	DD	$LN25@OnReceive
	DD	-372					; fffffe8cH
	DD	273					; 00000111H
	DD	$LN26@OnReceive
	DD	-396					; fffffe74H
	DD	4
	DD	$LN27@OnReceive
	DD	-692					; fffffd4cH
	DD	273					; 00000111H
	DD	$LN28@OnReceive
	DD	-701					; fffffd43H
	DD	1
	DD	$LN29@OnReceive
	DD	-988					; fffffc24H
	DD	273					; 00000111H
	DD	$LN30@OnReceive
	DD	-997					; fffffc1bH
	DD	1
	DD	$LN31@OnReceive
	DD	-1009					; fffffc0fH
	DD	1
	DD	$LN32@OnReceive
	DD	-1028					; fffffbfcH
	DD	6
	DD	$LN33@OnReceive
	DD	-1040					; fffffbf0H
	DD	2
	DD	$LN34@OnReceive
	DD	-1061					; fffffbdbH
	DD	1
	DD	$LN35@OnReceive
	DD	-1080					; fffffbc8H
	DD	6
	DD	$LN36@OnReceive
	DD	-1092					; fffffbbcH
	DD	2
	DD	$LN37@OnReceive
	DD	-1108					; fffffbacH
	DD	6
	DD	$LN38@OnReceive
$LN38@OnReceive:
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN37@OnReceive:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN36@OnReceive:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN35@OnReceive:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN34@OnReceive:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN33@OnReceive:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN32@OnReceive:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN31@OnReceive:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN30@OnReceive:
	DB	116					; 00000074H
	DB	0
$LN29@OnReceive:
	DB	99					; 00000063H
	DB	0
$LN28@OnReceive:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN27@OnReceive:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN26@OnReceive:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN25@OnReceive:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN24@OnReceive:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN23@OnReceive:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z$0:
	lea	ecx, DWORD PTR _out$23[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z$1:
	lea	ecx, DWORD PTR _incomingBitstream$19[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__unwindfunclet$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z$2:
	lea	ecx, DWORD PTR _t$17[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnReceive@Router@@UAE?AW4PluginReceiveResult@@PAVRakPeerInterface@@PAUPacket@@@Z ENDP ; Router::OnReceive
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?Update@Router@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?Update@Router@@UAEXPAVRakPeerInterface@@@Z PROC	; Router::Update, COMDAT
; _this$ = ecx

; 314  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@Router@@UAEXPAVRakPeerInterface@@@Z ENDP	; Router::Update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?OnDisconnect@Router@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnDisconnect@Router@@UAEXPAVRakPeerInterface@@@Z PROC	; Router::OnDisconnect, COMDAT
; _this$ = ecx

; 308  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 309  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?OnDisconnect@Router@@UAEXPAVRakPeerInterface@@@Z ENDP	; Router::OnDisconnect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?OnDetach@Router@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnDetach@Router@@UAEXPAVRakPeerInterface@@@Z PROC	; Router::OnDetach, COMDAT
; _this$ = ecx

; 301  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 	peer->RemoveRouterInterface(this);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@OnDetach
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@OnDetach
$LN3@OnDetach:
	mov	DWORD PTR tv71[ebp], 0
$LN4@OnDetach:
	mov	esi, esp
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 303  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnDetach@Router@@UAEXPAVRakPeerInterface@@@Z ENDP	; Router::OnDetach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?OnAttach@Router@@UAEXPAVRakPeerInterface@@@Z
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_peer$ = 8						; size = 4
?OnAttach@Router@@UAEXPAVRakPeerInterface@@@Z PROC	; Router::OnAttach, COMDAT
; _this$ = ecx

; 296  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 297  :     rakPeer=peer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	DWORD PTR [eax+25], ecx

; 298  : 	peer->SetRouterInterface(this);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@OnAttach
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@OnAttach
$LN3@OnAttach:
	mov	DWORD PTR tv72[ebp], 0
$LN4@OnAttach:
	mov	esi, esp
	mov	ecx, DWORD PTR tv72[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _peer$[ebp]
	mov	edx, DWORD PTR [eax+244]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 299  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnAttach@Router@@UAEXPAVRakPeerInterface@@@Z ENDP	; Router::OnAttach
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z
_TEXT	SEGMENT
$T2 = -241						; size = 1
_systemAddressList$3 = -40				; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_bitLength$ = 12					; size = 4
_priority$ = 16						; size = 4
_reliability$ = 20					; size = 4
_orderingChannel$ = 24					; size = 1
_playerId$ = 28						; size = 6
?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z PROC ; Router::Send, COMDAT
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 	if (playerId!=UNASSIGNED_PLAYER_ID)

	push	OFFSET _UNASSIGNED_PLAYER_ID
	lea	ecx, DWORD PTR _playerId$[ebp]
	call	??9PlayerID@@QBE_NABU0@@Z		; PlayerID::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN2@Send

; 48   : 	{
; 49   : 		RakAssert(data);

	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN5@Send
	mov	eax, DWORD PTR ?__LINE__Var@?1??Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z@4JA
	add	eax, 3
	push	eax
	push	OFFSET ??_C@_1EG@NPKIDONI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAr?$AAo?$AAu?$AAt?$AAe?$AAr?$AA?4?$AAc@
	push	OFFSET ??_C@_19MLBBEMBH@?$AAd?$AAa?$AAt?$AAa?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@Send:

; 50   : 		RakAssert(bitLength);

	cmp	DWORD PTR _bitLength$[ebp], 0
	jne	SHORT $LN6@Send
	mov	eax, DWORD PTR ?__LINE__Var@?1??Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z@4JA
	add	eax, 4
	push	eax
	push	OFFSET ??_C@_1EG@NPKIDONI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAr?$AAo?$AAu?$AAt?$AAe?$AAr?$AA?4?$AAc@
	push	OFFSET ??_C@_1BE@KBODLNFO@?$AAb?$AAi?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Send:

; 51   : 		// Prevent recursion in case a routing call itself calls the router
; 52   : 		if (bitLength>=8 && data[0]==ID_ROUTE_AND_MULTICAST)

	cmp	DWORD PTR _bitLength$[ebp], 8
	jb	SHORT $LN1@Send
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _data$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 67					; 00000043H
	jne	SHORT $LN1@Send

; 53   : 			return false;

	xor	al, al
	jmp	SHORT $LN3@Send
$LN1@Send:

; 54   : 
; 55   : 		SystemAddressList systemAddressList;

	lea	ecx, DWORD PTR _systemAddressList$3[ebp]
	call	??0SystemAddressList@@QAE@XZ		; SystemAddressList::SystemAddressList
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 56   : 		systemAddressList.AddSystem(playerId);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _playerId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _playerId$[ebp+4]
	mov	WORD PTR [eax+4], dx
	lea	ecx, DWORD PTR _systemAddressList$3[ebp]
	call	?AddSystem@SystemAddressList@@QAEXUPlayerID@@@Z ; SystemAddressList::AddSystem

; 57   : 		return Send((char*)data, bitLength, priority, reliability, orderingChannel, &systemAddressList);

	lea	eax, DWORD PTR _systemAddressList$3[ebp]
	push	eax
	movzx	ecx, BYTE PTR _orderingChannel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _reliability$[ebp]
	push	edx
	mov	eax, DWORD PTR _priority$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z ; Router::Send
	mov	BYTE PTR $T2[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _systemAddressList$3[ebp]
	call	??1SystemAddressList@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]
	jmp	SHORT $LN3@Send
$LN2@Send:

; 58   : 	}
; 59   : 	return false;	

	xor	al, al
$LN3@Send:

; 60   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Send
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN11@Send:
	DD	1
	DD	$LN10@Send
$LN10@Send:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN8@Send
$LN8@Send:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z$0:
	lea	ecx, DWORD PTR _systemAddressList$3[ebp]
	jmp	??1SystemAddressList@@QAE@XZ
__ehhandler$?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Send@Router@@UAE_NPBDIW4PacketPriority@@W4PacketReliability@@DUPlayerID@@@Z ENDP ; Router::Send
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z
_TEXT	SEGMENT
tv179 = -704						; size = 4
tv211 = -700						; size = 4
tv209 = -700						; size = 4
tv145 = -696						; size = 4
tv83 = -696						; size = 4
$T2 = -686						; size = 6
$T3 = -670						; size = 6
$T4 = -653						; size = 1
$T5 = -643						; size = 7
$T6 = -625						; size = 1
$T7 = -615						; size = 7
$T8 = -597						; size = 1
$T9 = -585						; size = 1
_out$ = -384						; size = 273
_i$ = -100						; size = 4
_recipientList$ = -88					; size = 12
_root$ = -68						; size = 6
_tree$ = -52						; size = 19
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_bitLength$ = 12					; size = 4
_priority$ = 16						; size = 4
_reliability$ = 20					; size = 4
_orderingChannel$ = 24					; size = 1
_recipients$ = 28					; size = 4
?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z PROC ; Router::Send, COMDAT
; _this$ = ecx

; 62   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 692				; 000002b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-704]
	mov	ecx, 173				; 000000adH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 	RakAssert(data);

	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN11@Send
	mov	eax, DWORD PTR ?__LINE__Var@?1??Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1EG@NPKIDONI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAr?$AAo?$AAu?$AAt?$AAe?$AAr?$AA?4?$AAc@
	push	OFFSET ??_C@_19MLBBEMBH@?$AAd?$AAa?$AAt?$AAa?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@Send:

; 64   : 	RakAssert(bitLength);

	cmp	DWORD PTR _bitLength$[ebp], 0
	jne	SHORT $LN12@Send
	mov	eax, DWORD PTR ?__LINE__Var@?1??Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_1EG@NPKIDONI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAr?$AAo?$AAu?$AAt?$AAe?$AAr?$AA?4?$AAc@
	push	OFFSET ??_C@_1BE@KBODLNFO@?$AAb?$AAi?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@Send:

; 65   : 	if (recipients->GetList()->Size()==0)

	mov	ecx, DWORD PTR _recipients$[ebp]
	call	?GetList@SystemAddressList@@QAEPAV?$List@UPlayerID@@@DataStructures@@XZ ; SystemAddressList::GetList
	mov	ecx, eax
	call	?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ; DataStructures::List<PlayerID>::Size
	test	eax, eax
	jne	SHORT $LN8@Send

; 66   : 		return false;

	xor	al, al
	jmp	$LN9@Send
$LN8@Send:

; 67   : 	if (bitLength==0)

	cmp	DWORD PTR _bitLength$[ebp], 0
	jne	SHORT $LN7@Send

; 68   : 		return false;

	xor	al, al
	jmp	$LN9@Send
$LN7@Send:

; 69   : 	DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> tree;

	lea	ecx, DWORD PTR _tree$[ebp]
	call	??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::Tree<ConnectionGraph::PlayerIdAndGroupId>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 70   : 	PlayerID root;
; 71   : 	root = rakPeer->GetExternalID(rakPeer->GetPlayerIDFromIndex(0));

	mov	esi, esp
	push	0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+25]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+25]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+25]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+25]
	mov	eax, DWORD PTR [edx+160]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _root$[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=

; 72   : 	if (root==UNASSIGNED_PLAYER_ID)

	push	OFFSET _UNASSIGNED_PLAYER_ID
	lea	ecx, DWORD PTR _root$[ebp]
	call	??8PlayerID@@QBE_NABU0@@Z		; PlayerID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@Send

; 73   : 		return false;

	mov	BYTE PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tree$[ebp]
	call	??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::~Tree<ConnectionGraph::PlayerIdAndGroupId>
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN9@Send
$LN6@Send:

; 74   : 	DataStructures::List<ConnectionGraph::PlayerIdAndGroupId> recipientList;

	lea	ecx, DWORD PTR _recipientList$[ebp]
	call	??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 75   : 	unsigned i;
; 76   : 	for (i=0; i < recipients->Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@Send
$LN4@Send:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@Send:
	mov	ecx, DWORD PTR _recipients$[ebp]
	call	?Size@SystemAddressList@@QBEIXZ		; SystemAddressList::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN3@Send

; 77   : 		recipientList.Insert(ConnectionGraph::PlayerIdAndGroupId(recipients->GetList()->operator [](i),0));

	push	0
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _recipients$[ebp]
	call	?GetList@SystemAddressList@@QAEPAV?$List@UPlayerID@@@DataStructures@@XZ ; SystemAddressList::GetList
	mov	ecx, eax
	call	??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ; DataStructures::List<PlayerID>::operator[]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], ax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@UPlayerID@@E@Z ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv209[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv209[ebp]
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	cx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], cx
	mov	dl, BYTE PTR [edx+6]
	mov	BYTE PTR [eax+6], dl
	lea	ecx, DWORD PTR _recipientList$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	jmp	$LN4@Send
$LN3@Send:

; 78   : 	if (graph->GetSpanningTree(tree, &recipientList, ConnectionGraph::PlayerIdAndGroupId(root,0), 65535)==false)

	push	65535					; 0000ffffH
	push	0
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _root$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _root$[ebp+4]
	mov	WORD PTR [eax+4], dx
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@UPlayerID@@E@Z ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	DWORD PTR tv83[ebp], eax
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR tv211[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv211[ebp]
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], ax
	mov	cl, BYTE PTR [ecx+6]
	mov	BYTE PTR [edx+6], cl
	lea	edx, DWORD PTR _recipientList$[ebp]
	push	edx
	lea	eax, DWORD PTR _tree$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetSpanningTree
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN13@Send
	mov	DWORD PTR tv179[ebp], 1
	jmp	SHORT $LN14@Send
$LN13@Send:
	mov	DWORD PTR tv179[ebp], 0
$LN14@Send:
	mov	al, BYTE PTR tv179[ebp]
	mov	BYTE PTR $T6[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	movzx	ecx, BYTE PTR $T6[ebp]
	test	ecx, ecx
	je	SHORT $LN2@Send

; 79   : 		return false;

	mov	BYTE PTR $T8[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _recipientList$[ebp]
	call	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tree$[ebp]
	call	??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::~Tree<ConnectionGraph::PlayerIdAndGroupId>
	mov	al, BYTE PTR $T8[ebp]
	jmp	$LN9@Send
$LN2@Send:

; 80   : 
; 81   : 	RakNet::BitStream out;

	lea	ecx, DWORD PTR _out$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 82   : 
; 83   : 	// Write timestamp first, if the user had a timestamp
; 84   : 	if (data[0]==ID_TIMESTAMP && bitLength >= BYTES_TO_BITS(sizeof(MessageID)+sizeof(RakNetTime)))

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _data$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 36					; 00000024H
	jne	SHORT $LN1@Send
	cmp	DWORD PTR _bitLength$[ebp], 40		; 00000028H
	jb	SHORT $LN1@Send

; 85   : 	{
; 86   : 		out.Write(data, sizeof(MessageID)+sizeof(RakNetTime));

	push	5
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDH@Z	; RakNet::BitStream::Write

; 87   : 		data+=sizeof(MessageID)+sizeof(RakNetTime);

	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 5
	mov	DWORD PTR _data$[ebp], eax

; 88   : 		bitLength-=BYTES_TO_BITS(sizeof(MessageID)+sizeof(RakNetTime));

	mov	eax, DWORD PTR _bitLength$[ebp]
	sub	eax, 40					; 00000028H
	mov	DWORD PTR _bitLength$[ebp], eax
$LN1@Send:

; 89   : 	}
; 90   : 
; 91   : 	SendTree(priority, reliability, orderingChannel, &tree, data, bitLength, &out, recipients);

	mov	eax, DWORD PTR _recipients$[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bitLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tree$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _orderingChannel$[ebp]
	push	edx
	mov	eax, DWORD PTR _reliability$[ebp]
	push	eax
	mov	ecx, DWORD PTR _priority$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendTree@Router@@IAEXW4PacketPriority@@W4PacketReliability@@DPAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@PBDIPAVBitStream@RakNet@@PAVSystemAddressList@@@Z ; Router::SendTree

; 92   : 	return true;

	mov	BYTE PTR $T9[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _recipientList$[ebp]
	call	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tree$[ebp]
	call	??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::~Tree<ConnectionGraph::PlayerIdAndGroupId>
	mov	al, BYTE PTR $T9[ebp]
$LN9@Send:

; 93   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@Send
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 704				; 000002c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	1
$LN26@Send:
	DD	4
	DD	$LN25@Send
$LN25@Send:
	DD	-52					; ffffffccH
	DD	19					; 00000013H
	DD	$LN20@Send
	DD	-68					; ffffffbcH
	DD	6
	DD	$LN21@Send
	DD	-88					; ffffffa8H
	DD	12					; 0000000cH
	DD	$LN22@Send
	DD	-384					; fffffe80H
	DD	273					; 00000111H
	DD	$LN23@Send
$LN23@Send:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN22@Send:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN21@Send:
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	0
$LN20@Send:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$0:
	lea	ecx, DWORD PTR _tree$[ebp]
	jmp	??1?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::~Tree<ConnectionGraph::PlayerIdAndGroupId>
__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$1:
	lea	ecx, DWORD PTR _recipientList$[ebp]
	jmp	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$2:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$3:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z$4:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-708]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Send@Router@@QAE_NPADIW4PacketPriority@@W4PacketReliability@@DPAVSystemAddressList@@@Z ENDP ; Router::Send
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?SetConnectionGraph@Router@@QAEXPAV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_connectionGraph$ = 8					; size = 4
?SetConnectionGraph@Router@@QAEXPAV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z PROC ; Router::SetConnectionGraph, COMDAT
; _this$ = ecx

; 42   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 43   : 	graph=connectionGraph;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _connectionGraph$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 44   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetConnectionGraph@Router@@QAEXPAV?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@Z ENDP ; Router::SetConnectionGraph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?RemoveAllowedType@Router@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_messageId$ = 8						; size = 1
?RemoveAllowedType@Router@@QAEXE@Z PROC			; Router::RemoveAllowedType, COMDAT
; _this$ = ecx

; 37   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 	if (allowedTypes.HasData(messageId)==true)

	lea	eax, DWORD PTR _messageId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
	movzx	ecx, al
	cmp	ecx, 1
	jne	SHORT $LN2@RemoveAllo

; 39   : 		allowedTypes.Remove(messageId);

	lea	eax, DWORD PTR _messageId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Remove
$LN2@RemoveAllo:

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAllowedType@Router@@QAEXE@Z ENDP			; Router::RemoveAllowedType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?AddAllowedType@Router@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_messageId$ = 8						; size = 1
?AddAllowedType@Router@@QAEXE@Z PROC			; Router::AddAllowedType, COMDAT
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 33   : 	if (allowedTypes.HasData(messageId)==false)

	lea	eax, DWORD PTR _messageId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@AddAllowed

; 34   : 		allowedTypes.Insert(messageId,messageId);

	lea	eax, DWORD PTR _messageId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _messageId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert
$LN2@AddAllowed:

; 35   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddAllowedType@Router@@QAEXE@Z ENDP			; Router::AddAllowedType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ?SetRestrictRoutingByType@Router@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_restrict$ = 8						; size = 1
?SetRestrictRoutingByType@Router@@QAEX_N@Z PROC		; Router::SetRestrictRoutingByType, COMDAT
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 29   : 	restrictByType=restrict;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _restrict$[ebp]
	mov	BYTE PTR [eax+12], cl

; 30   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRestrictRoutingByType@Router@@QAEX_N@Z ENDP		; Router::SetRestrictRoutingByType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ??1Router@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Router@@QAE@XZ PROC					; Router::~Router, COMDAT
; _this$ = ecx

; 25   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Router@@6BPluginInterface@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7Router@@6BRouterInterface@@@

; 26   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Router@@QAE@XZ ENDP					; Router::~Router
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\router.cpp
;	COMDAT ??0Router@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0Router@@QAE@XZ PROC					; Router::Router, COMDAT
; _this$ = ecx

; 18   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Router@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluginInterface@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0RouterInterface@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Router@@6BPluginInterface@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7Router@@6BRouterInterface@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 19   : 	graph=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 20   : 	restrictByType=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0

; 21   : 	rakPeer=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+25], 0

; 22   : 	DataStructures::OrderedList<unsigned char,unsigned char>::IMPLEMENT_DEFAULT_COMPARISON();

	call	?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::IMPLEMENT_DEFAULT_COMPARISON

; 23   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Router@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	jmp	??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
__ehhandler$??0Router@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Router@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Router@@QAE@XZ ENDP					; Router::Router
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@E@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@E@DataStructures@@QAEX_N@Z PROC		; DataStructures::List<unsigned char>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@E@DataStructures@@QAEX_N@Z ENDP		; DataStructures::List<unsigned char>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@E@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@E@DataStructures@@QBEIXZ PROC		; DataStructures::List<unsigned char>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@E@DataStructures@@QBEIXZ ENDP		; DataStructures::List<unsigned char>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Del@?$List@E@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_num$ = 8						; size = 4
?Del@?$List@E@DataStructures@@QAEXI@Z PROC		; DataStructures::List<unsigned char>::Del, COMDAT
; _this$ = ecx

; 353  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 		// Delete the last elements on the list.  No compression needed
; 355  : #ifdef _DEBUG
; 356  : 		assert(list_size>=num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN3@Del
	push	356					; 00000164H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1BO@JBFMBKMD@?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$DO?$AA?$DN?$AAn?$AAu?$AAm?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Del:

; 357  : #endif
; 358  : 		list_size-=num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _num$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 359  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Del@?$List@E@DataStructures@@QAEXI@Z ENDP		; DataStructures::List<unsigned char>::Del
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z PROC	; DataStructures::List<unsigned char>::RemoveAtIndex, COMDAT
; _this$ = ecx

; 333  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef _DEBUG
; 335  : 		assert( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN4@RemoveAtIn
	push	335					; 0000014fH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@RemoveAtIn:

; 336  : #endif
; 337  : 
; 338  : 		if ( position < list_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@RemoveAtIn

; 339  : 		{
; 340  : 			// Compress the array
; 341  : 			/*
; 342  : 			for ( unsigned int counter = position; counter < list_size - 1 ; ++counter )
; 343  : 			listArray[ counter ] = listArray[ counter + 1 ];
; 344  : 			*/
; 345  : 			memmove(listArray+position, listArray+position+1, (list_size-1-position) * sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	sub	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _position$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _position$[ebp]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 346  : 
; 347  : 			Del();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Del@?$List@E@DataStructures@@QAEXI@Z	; DataStructures::List<unsigned char>::Del
$LN2@RemoveAtIn:

; 348  : 		}
; 349  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z ENDP	; DataStructures::List<unsigned char>::RemoveAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@E@DataStructures@@QAEXE@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_new_array$3 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 1
?Insert@?$List@E@DataStructures@@QAEXE@Z PROC		; DataStructures::List<unsigned char>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _new_array$3[ebp], edx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$3[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	dl, BYTE PTR _input$[ebp]
	mov	BYTE PTR [eax+ecx], dl

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Insert@?$List@E@DataStructures@@QAEXE@Z ENDP		; DataStructures::List<unsigned char>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@E@DataStructures@@QAEXEI@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_new_array$3 = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 1
_position$ = 12						; size = 4
?Insert@?$List@E@DataStructures@@QAEXEI@Z PROC		; DataStructures::List<unsigned char>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _new_array$3[ebp], edx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$3[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _position$[ebp]
	lea	ecx, DWORD PTR [edx+eax+1]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _position$[ebp]
	mov	al, BYTE PTR _input$[ebp]
	mov	BYTE PTR [ecx+edx], al

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert@?$List@E@DataStructures@@QAEXEI@Z ENDP		; DataStructures::List<unsigned char>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@E@DataStructures@@QBEAAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@E@DataStructures@@QBEAAEI@Z PROC		; DataStructures::List<unsigned char>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _position$[ebp]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@E@DataStructures@@QBEAAEI@Z ENDP		; DataStructures::List<unsigned char>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@E@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@E@DataStructures@@QAE@XZ PROC			; DataStructures::List<unsigned char>::~List<unsigned char>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@E@DataStructures@@QAE@XZ ENDP			; DataStructures::List<unsigned char>::~List<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@E@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@E@DataStructures@@QAE@XZ PROC			; DataStructures::List<unsigned char>::List<unsigned char>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@E@DataStructures@@QAE@XZ ENDP			; DataStructures::List<unsigned char>::List<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@E@DataStructures@@QAEX_N@Z ; DataStructures::List<unsigned char>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Remove, COMDAT
; _this$ = ecx

; 179  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		bool objectExists;
; 181  : 		unsigned index;
; 182  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 183  : 
; 184  : 		// Can't find the element to remove if this assert hits
; 185  : 		assert(objectExists==true);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	cmp	eax, 1
	je	SHORT $LN4@Remove
	push	185					; 000000b9H
	push	OFFSET ??_C@_1FC@PKHPOOLI@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr@
	push	OFFSET ??_C@_1CG@FNLJFNDG@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAt?$AAr?$AAu?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@Remove:

; 186  : 		if (objectExists==false)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Remove

; 187  : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Remove
$LN1@Remove:

; 188  : 
; 189  : 		orderedList.RemoveAtIndex(index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtIndex@?$List@E@DataStructures@@QAEXI@Z ; DataStructures::List<unsigned char>::RemoveAtIndex

; 190  : 		return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN2@Remove:

; 191  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Remove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@Remove:
	DD	1
	DD	$LN6@Remove
$LN6@Remove:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Remove
$LN5@Remove:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Remove@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE@Z ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Remove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@E@DataStructures@@QAEXE@Z ; DataStructures::List<unsigned char>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@E@DataStructures@@QAEXEI@Z ; DataStructures::List<unsigned char>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEIABE0@Z ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@E@DataStructures@@QBEIXZ	; DataStructures::List<unsigned char>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@E@DataStructures@@QBEAAEI@Z	; DataStructures::List<unsigned char>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData, COMDAT
; _this$ = ecx

; 91   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 		bool objectExists;
; 93   : 		unsigned index;
; 94   : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBEIABEPA_N@Z ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 95   : 		return objectExists;

	mov	al, BYTE PTR _objectExists$[ebp]

; 96   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@HasData
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@HasData:
	DD	1
	DD	$LN4@HasData
$LN4@HasData:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@HasData
$LN3@HasData:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?HasData@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QBE_NABE@Z ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::HasData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@E@DataStructures@@QAE@XZ	; DataStructures::List<unsigned char>::~List<unsigned char>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@E@DataStructures@@QAE@XZ	; DataStructures::List<unsigned char>::~List<unsigned char>
__ehhandler$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::~OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@E@DataStructures@@QAE@XZ	; DataStructures::List<unsigned char>::List<unsigned char>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
$T2 = -197						; size = 1
?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ PROC ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::IMPLEMENT_DEFAULT_COMPARISON, COMDAT

; 39   : 		static void IMPLEMENT_DEFAULT_COMPARISON(void) {DataStructures::defaultOrderedListComparison<key_type, data_type>(key_type(),data_type());}

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T1[ebp], 0
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IMPLEMENT_DEFAULT_COMPARISON@?$OrderedList@EE$1??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z@DataStructures@@SAXXZ ENDP ; DataStructures::OrderedList<unsigned char,unsigned char,&DataStructures::defaultOrderedListComparison<unsigned char,unsigned char> >::IMPLEMENT_DEFAULT_COMPARISON
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z PROC ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 31   : 		if (a<b) return -1; if (a==b) return 0; return 1;

	mov	eax, DWORD PTR _a$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _b$[ebp]
	movzx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jge	SHORT $LN2@defaultOrd
	or	eax, -1
	jmp	SHORT $LN3@defaultOrd
$LN2@defaultOrd:
	mov	eax, DWORD PTR _a$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _b$[ebp]
	movzx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN1@defaultOrd
	xor	eax, eax
	jmp	SHORT $LN3@defaultOrd
$LN1@defaultOrd:
	mov	eax, 1
$LN3@defaultOrd:

; 32   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$defaultOrderedListComparison@EE@DataStructures@@YAHABE0@Z ENDP ; DataStructures::defaultOrderedListComparison<unsigned char,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN5@Clear
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv140 = -292						; size = 4
tv129 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 7
?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 7
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN7@Insert
$LN6@Insert:
	mov	DWORD PTR tv129[ebp], 0
$LN7@Insert:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 7
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN8@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN9@Insert
$LN8@Insert:
	mov	DWORD PTR tv140[ebp], 0
$LN9@Insert:

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [ecx+4], 7
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
tv146 = -292						; size = 4
tv135 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 7
_position$ = 16						; size = 4
?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 7
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN8@Insert
$LN7@Insert:
	mov	DWORD PTR tv135[ebp], 0
$LN8@Insert:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 7
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN9@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN10@Insert
$LN9@Insert:
	mov	DWORD PTR tv146[ebp], 0
$LN10@Insert:

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 7
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	imul	edx, DWORD PTR _position$[ebp], 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx+7]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 7
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEAAUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEAAUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEAAUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@List
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@List
$LN4@List:
	mov	DWORD PTR tv71[ebp], 0
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Size, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return orderedList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@0@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@0@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	sub	esp, 8
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], ax
	mov	cl, BYTE PTR [ecx+6]
	mov	BYTE PTR [edx+6], cl
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEAAUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z PROC ; DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 31   : 		if (a<b) return -1; if (a==b) return 0; return 1;

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator<
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@defaultOrd
	or	eax, -1
	jmp	SHORT $LN3@defaultOrd
$LN2@defaultOrd:
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@defaultOrd
	xor	eax, eax
	jmp	SHORT $LN3@defaultOrd
$LN1@defaultOrd:
	mov	eax, 1
$LN3@defaultOrd:

; 32   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ENDP ; DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult, COMDAT
; _this$ = ecx

; 309  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		return lastSearchIndexValid && key_comparison_func(key,lastSearchKey)==0;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23]
	test	ecx, ecx
	je	SHORT $LN3@HasSavedSe
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@HasSavedSe
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@HasSavedSe
$LN3@HasSavedSe:
	mov	DWORD PTR tv72[ebp], 0
$LN4@HasSavedSe:
	mov	al, BYTE PTR tv72[ebp]

; 311  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_index$ = 12						; size = 4
?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch, COMDAT
; _this$ = ecx

; 301  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		lastSearchIndex=index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 303  : 		lastSearchKey=key;

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 304  : 		lastSearchIndexValid=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 1

; 305  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
_doNotDeallocate$ = 8					; size = 1
?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 		if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Clear

; 381  : 			return;

	jmp	SHORT $LN3@Clear
$LN2@Clear:

; 382  : 
; 383  : 		if (allocation_size>512 && doNotDeallocate==false)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 512			; 00000200H
	jbe	SHORT $LN1@Clear
	movzx	eax, BYTE PTR _doNotDeallocate$[ebp]
	test	eax, eax
	jne	SHORT $LN1@Clear

; 384  : 		{
; 385  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN5@Clear
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:

; 386  : 			allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 387  : 			listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@Clear:

; 388  : 		}
; 389  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@Clear:

; 390  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
tv140 = -292						; size = 4
tv129 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 11
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 242  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 243  : 		// Reallocate list if necessary
; 244  : 
; 245  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 246  : 		{
; 247  : 			// allocate twice the currently allocated memory
; 248  : 			list_type * new_array;
; 249  : 
; 250  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 251  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 252  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 253  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 254  : 
; 255  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 11					; 0000000bH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	push	OFFSET ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	11					; 0000000bH
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN7@Insert
$LN6@Insert:
	mov	DWORD PTR tv129[ebp], 0
$LN7@Insert:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 256  : 
; 257  : 			// copy old array over
; 258  : 			//	for ( unsigned int counter = 0; counter < list_size; ++counter )
; 259  : 			//		new_array[ counter ] = listArray[ counter ];
; 260  : 
; 261  : 			// Don't call constructors, assignment operators, etc.
; 262  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 11
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 263  : 
; 264  : 			// set old array to point to the newly allocated and twice as large array
; 265  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN8@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN9@Insert
$LN8@Insert:
	mov	DWORD PTR tv140[ebp], 0
$LN9@Insert:

; 266  : 
; 267  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 268  : 		}
; 269  : 
; 270  : 		// Insert the new item at the correct spot
; 271  : 		listArray[ list_size ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [ecx+4], 11
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z

; 272  : 
; 273  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 274  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z
_TEXT	SEGMENT
tv146 = -292						; size = 4
tv135 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
$T5 = -248						; size = 4
$T6 = -236						; size = 4
_new_array$7 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 11
_position$ = 20						; size = 4
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert, COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 195  : #ifdef _DEBUG
; 196  : 		assert( position <= list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN6@Insert
	push	196					; 000000c4H
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CM@FMCFHBCK@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Insert:

; 197  : #endif
; 198  : 
; 199  : 		// Reallocate list if necessary
; 200  : 		if ( list_size == allocation_size )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@Insert

; 201  : 		{
; 202  : 			// allocate twice the currently allocated memory
; 203  : 			list_type * new_array;
; 204  : 
; 205  : 			if ( allocation_size == 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@Insert

; 206  : 				allocation_size = 16;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 207  : 			else

	jmp	SHORT $LN1@Insert
$LN2@Insert:

; 208  : 				allocation_size *= 2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@Insert:

; 209  : 
; 210  : 			new_array = new list_type [ allocation_size ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp], ecx
	xor	ecx, ecx
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, 11					; 0000000bH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@Insert
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	push	OFFSET ??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	push	11					; 0000000bH
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T4[ebp]
	add	edx, 4
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN8@Insert
$LN7@Insert:
	mov	DWORD PTR tv135[ebp], 0
$LN8@Insert:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _new_array$7[ebp], ecx

; 211  : 
; 212  : 			// copy old array over
; 213  : 			//for ( unsigned int counter = 0; counter < list_size; ++counter )
; 214  : 			//	new_array[ counter ] = listArray[ counter ];
; 215  : 
; 216  : 			// Don't call constructors, assignment operators, etc.
; 217  : 			memcpy(new_array, listArray, list_size*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+4], 11
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _new_array$7[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 			// set old array to point to the newly allocated and twice as large array
; 220  : 			delete[] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN9@Insert
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN10@Insert
$LN9@Insert:
	mov	DWORD PTR tv146[ebp], 0
$LN10@Insert:

; 221  : 
; 222  : 			listArray = new_array;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_array$7[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert:

; 223  : 		}
; 224  : 
; 225  : 		// Move the elements in the list to make room
; 226  : 		//for ( unsigned int counter = list_size; counter != position; counter-- )
; 227  : 		//	listArray[ counter ] = listArray[ counter - 1 ];
; 228  : 
; 229  : 		// Don't call constructors, assignment operators, etc.
; 230  : 		memmove(listArray+position+1, listArray+position, (list_size-position)*sizeof(list_type));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _position$[ebp]
	imul	edx, ecx, 11
	push	edx
	imul	eax, DWORD PTR _position$[ebp], 11
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	imul	edx, DWORD PTR _position$[ebp], 11
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+edx+11]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 		// Insert the new item at the correct spot
; 233  : 		listArray[ position ] = input;

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	imul	ecx, DWORD PTR _position$[ebp], 11
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??4MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAU012@ABU012@@Z

; 234  : 
; 235  : 		++list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 236  : 
; 237  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _input$[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z$0:
	lea	ecx, DWORD PTR _input$[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
__unwindfunclet$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 11
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
tv71 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@List
	push	3
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_EMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@List
$LN4@List:
	mov	DWORD PTR tv71[ebp], 0
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ PROC ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		allocation_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 115  : 		listArray = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 116  : 		list_size = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ENDP ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return orderedList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear, COMDAT
; _this$ = ecx

; 219  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 220  : 		orderedList.Clear();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEX_N@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Clear

; 221  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[], COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		return orderedList[position];

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		bool objectExists;
; 158  : 		unsigned index;
; 159  : 		index = GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 160  : 
; 161  : 		// Don't allow duplicate insertion.
; 162  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@Insert

; 163  : 			return (unsigned)-1;

	or	eax, -1
	jmp	SHORT $LN4@Insert
$LN3@Insert:

; 164  : 
; 165  : 		if (index>=orderedList.Size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN2@Insert

; 166  : 		{
; 167  : 			orderedList.Insert(data);

	mov	eax, DWORD PTR _data$[ebp]
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	dx, WORD PTR [eax+8]
	mov	WORD PTR [ecx+8], dx
	mov	al, BYTE PTR [eax+10]
	mov	BYTE PTR [ecx+10], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert

; 168  : 			return orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	sub	eax, 1
	jmp	SHORT $LN4@Insert

; 169  : 		}
; 170  : 		else

	jmp	SHORT $LN4@Insert
$LN2@Insert:

; 171  : 		{
; 172  : 			orderedList.Insert(data,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ax, WORD PTR [ecx+8]
	mov	WORD PTR [edx+8], ax
	mov	cl, BYTE PTR [ecx+10]
	mov	BYTE PTR [edx+10], cl
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAEXUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Insert

; 173  : 			return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN4@Insert:

; 174  : 		}		
; 175  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Insert:
	DD	1
	DD	$LN7@Insert
$LN7@Insert:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN6@Insert
$LN6@Insert:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z
_TEXT	SEGMENT
_res$ = -56						; size = 4
_lowerBound$ = -44					; size = 4
_upperBound$ = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_objectExists$ = 12					; size = 4
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		int index, upperBound, lowerBound;
; 112  : 		int res;
; 113  : 
; 114  : 		if (orderedList.Size()==0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	test	eax, eax
	jne	SHORT $LN8@GetIndexFr

; 115  : 		{
; 116  : 			*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 			return 0;

	xor	eax, eax
	jmp	$LN9@GetIndexFr
$LN8@GetIndexFr:

; 118  : 		}
; 119  : 
; 120  : 		upperBound=(int)orderedList.Size()-1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 121  : 		lowerBound=0;

	mov	DWORD PTR _lowerBound$[ebp], 0

; 122  : 		index = (int)orderedList.Size()/2;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::Size
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN7@GetIndexFr:

; 123  : 
; 124  : #ifdef _MSC_VER
; 125  : 	#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 126  : #endif
; 127  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@GetIndexFr

; 128  : 		{
; 129  : 			res = comparison_function(key,orderedList[index]);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::operator[]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax

; 130  : 			if (res==0)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@GetIndexFr

; 131  : 			{
; 132  : 				*objectExists=true;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 1

; 133  : 				return index;

	mov	eax, DWORD PTR _index$[ebp]
	jmp	SHORT $LN9@GetIndexFr
	jmp	SHORT $LN4@GetIndexFr
$LN5@GetIndexFr:

; 134  : 			}
; 135  : 			else if (res<0)

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN3@GetIndexFr

; 136  : 			{
; 137  : 				upperBound=index-1;

	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _upperBound$[ebp], eax

; 138  : 			}
; 139  : 			else// if (res>0)

	jmp	SHORT $LN4@GetIndexFr
$LN3@GetIndexFr:

; 140  : 			{
; 141  : 				lowerBound=index+1;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _lowerBound$[ebp], eax
$LN4@GetIndexFr:

; 142  : 			}
; 143  : 
; 144  : 			index=lowerBound+(upperBound-lowerBound)/2;

	mov	eax, DWORD PTR _upperBound$[ebp]
	sub	eax, DWORD PTR _lowerBound$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _lowerBound$[ebp]
	mov	DWORD PTR _index$[ebp], eax

; 145  : 
; 146  : 			if (lowerBound>upperBound)

	mov	eax, DWORD PTR _lowerBound$[ebp]
	cmp	eax, DWORD PTR _upperBound$[ebp]
	jle	SHORT $LN1@GetIndexFr

; 147  : 			{
; 148  : 				*objectExists=false;

	mov	eax, DWORD PTR _objectExists$[ebp]
	mov	BYTE PTR [eax], 0

; 149  : 				return lowerBound; // No match

	mov	eax, DWORD PTR _lowerBound$[ebp]
	jmp	SHORT $LN9@GetIndexFr
$LN1@GetIndexFr:

; 150  : 			}
; 151  : 		}

	jmp	SHORT $LN7@GetIndexFr
$LN9@GetIndexFr:

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 72   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 73   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear

; 74   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::~List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>
__ehhandler$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_orderedlist.h
;	COMDAT ??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ PROC ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$List@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>::List<DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode>

; 68   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size, COMDAT
; _this$ = ecx

; 295  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 296  : 		return mapNodeList.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Size

; 297  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 278  : 		mapNodeList.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Clear

; 279  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?GetIndexAtKey@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?GetIndexAtKey@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetIndexAtKey, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetIndexAt

; 145  : 			return lastSearchIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	jmp	SHORT $LN2@GetIndexAt
$LN1@GetIndexAt:

; 146  : 
; 147  : 		bool objectExists;
; 148  : 		unsigned index;
; 149  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 150  : 		assert(objectExists);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN4@GetIndexAt
	push	150					; 00000096H
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@GetIndexAt:

; 151  : 		SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch

; 152  : 		return index;

	mov	eax, DWORD PTR _index$[ebp]
$LN2@GetIndexAt:

; 153  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GetIndexAt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@GetIndexAt:
	DD	1
	DD	$LN6@GetIndexAt
$LN6@GetIndexAt:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@GetIndexAt
$LN5@GetIndexAt:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?GetIndexAtKey@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetIndexAtKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_position$ = 12						; size = 4
?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex, COMDAT
; _this$ = ecx

; 289  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 290  : 		return mapNodeList[position].mapNodeKey;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	dx, WORD PTR [eax+4]
	mov	WORD PTR [ecx+4], dx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [ecx+6], al
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 291  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[], COMDAT
; _this$ = ecx

; 283  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 284  : 		return mapNodeList[position].mapNodeData;

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	add	eax, 7

; 285  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has, COMDAT
; _this$ = ecx

; 239  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 240  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Has

; 241  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Has
$LN2@Has:

; 242  : 
; 243  : 		bool objectExists;
; 244  : 		unsigned index;
; 245  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 246  : 		if (objectExists)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN1@Has

; 247  : 			SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
$LN1@Has:

; 248  : 		return objectExists;

	mov	al, BYTE PTR _objectExists$[ebp]
$LN3@Has:

; 249  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Has
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@Has:
	DD	1
	DD	$LN6@Has
$LN6@Has:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Has
$LN5@Has:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
_TEXT	SEGMENT
tv90 = -268						; size = 4
tv91 = -264						; size = 4
$T2 = -255						; size = 11
_objectExists$ = -41					; size = 1
_index$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_data$ = 12						; size = 4
?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SetNew, COMDAT
; _this$ = ecx

; 227  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 228  : #ifdef _DEBUG
; 229  : 		unsigned index;
; 230  : 		bool objectExists;
; 231  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 232  : 		assert(objectExists==false);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	je	SHORT $LN3@SetNew
	push	232					; 000000e8H
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1CI@KPPGELK@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$DN?$AA?$DN?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@SetNew:

; 233  : #endif
; 234  : 		SaveLastSearch(key,mapNodeList.Insert(key,MapNode(key,data)));

	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	cx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], cx
	mov	dl, BYTE PTR [edx+6]
	mov	BYTE PTR [eax+6], dl
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode::MapNode
	mov	DWORD PTR tv91[ebp], eax
	mov	eax, DWORD PTR tv91[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@2@@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::Insert
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ

; 235  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@SetNew
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN8@SetNew:
	DD	1
	DD	$LN7@SetNew
$LN7@SetNew:
	DD	-41					; ffffffd7H
	DD	1
	DD	$LN5@SetNew
$LN5@SetNew:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1MapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
__ehhandler$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SetNew
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
_index$ = -32						; size = 4
_objectExists$ = -17					; size = 1
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 130  : 		if (HasSavedSearchResult(key))

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasSavedSearchResult@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IBE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::HasSavedSearchResult
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Get

; 131  : 			return mapNodeList[lastSearchIndex].mapNodeData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	add	eax, 7
	jmp	SHORT $LN2@Get
$LN1@Get:

; 132  : 
; 133  : 		bool objectExists;
; 134  : 		unsigned index;
; 135  : 		index=mapNodeList.GetIndexFromKey(key, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::GetIndexFromKey
	mov	DWORD PTR _index$[ebp], eax

; 136  : 		assert(objectExists);

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Get
	push	136					; 00000088H
	push	OFFSET ??_C@_1EC@HMGNBIDO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAm?$AAa?$AAp?$AA?4?$AAh@
	push	OFFSET ??_C@_1BK@EBNJALNF@?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AAE?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@Get:

; 137  : 		SaveLastSearch(key,index);

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveLastSearch@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@IAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SaveLastSearch

; 138  : 		return mapNodeList[index].mapNodeData;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QBEAAUMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@1@I@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::operator[]
	add	eax, 7
$LN2@Get:

; 139  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Get
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@Get:
	DD	1
	DD	$LN6@Get
$LN6@Get:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Get
$LN5@Get:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 105  : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear

; 106  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
__unwindfunclet$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId

; 99   : 		lastSearchIndexValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23], 0

; 100  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@UMapNode@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@$1?NodeComparisonFunc@45@SAHABU12@ABU345@@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::MapNode,&DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc>
__ehhandler$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z PROC ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc, COMDAT

; 56   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 57   : #ifdef _MSC_VER
; 58   : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 59   : #endif
; 60   : 			return key_comparison_func(a, b.mapNodeKey);

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
	add	esp, 8

; 61   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NodeComparisonFunc@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@SAHABUPlayerIdAndGroupId@ConnectionGraph@@ABUMapNode@12@@Z ENDP ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::NodeComparisonFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_map.h
;	COMDAT ??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z PROC ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>, COMDAT

; 35   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 36   : 		if (a<b) return -1; if (a==b) return 0; return 1;

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??MPlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator<
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@defaultMap
	or	eax, -1
	jmp	SHORT $LN3@defaultMap
$LN2@defaultMap:
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@defaultMap
	xor	eax, eax
	jmp	SHORT $LN3@defaultMap
$LN1@defaultMap:
	mov	eax, 1
$LN3@defaultMap:

; 37   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ENDP ; DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z
_TEXT	SEGMENT
tv328 = -564						; size = 4
tv145 = -560						; size = 4
tv339 = -556						; size = 4
tv332 = -556						; size = 4
tv330 = -556						; size = 4
tv326 = -556						; size = 4
tv343 = -552						; size = 4
tv148 = -552						; size = 4
tv142 = -552						; size = 4
tv139 = -552						; size = 4
tv138 = -552						; size = 4
$T2 = -544						; size = 4
$T3 = -532						; size = 4
$T4 = -520						; size = 4
$T5 = -508						; size = 4
$T6 = -495						; size = 7
$T7 = -479						; size = 7
$T8 = -463						; size = 7
$T9 = -446						; size = 2
$T10 = -435						; size = 7
$T11 = -419						; size = 7
_openSet$ = -212					; size = 24
_minHeap$ = -180					; size = 12
_adjacencyList$ = -160					; size = 4
_adjacentNodeWeight$ = -148				; size = 2
_currentNodeWeight$ = -136				; size = 2
_edgeWeight$ = -124					; size = 2
_adjacentIndex$ = -112					; size = 4
_adjacentKey$ = -100					; size = 7
_openSetIndex$ = -84					; size = 4
_row2$ = -72						; size = 4
_row$ = -60						; size = 4
_col$ = -48						; size = 4
_currentNode$ = -36					; size = 7
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_startNode$ = 8						; size = 7
_INFINITE_WEIGHT$ = 16					; size = 2
?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GenerateDisjktraMatrix, COMDAT
; _this$ = ecx

; 396  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 552				; 00000228H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-564]
	mov	ecx, 138				; 0000008aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 397  : 		costMatrix = new weight_type[adjacencyLists.Size() * adjacencyLists.Size()];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	imul	esi, eax
	xor	ecx, ecx
	mov	eax, esi
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax+44], ecx

; 398  : 		leastNodeArray = new node_type[adjacencyLists.Size()];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	mov	DWORD PTR $T3[ebp], eax
	xor	ecx, ecx
	mov	eax, DWORD PTR $T3[ebp]
	mov	edx, 7
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN25@GenerateDi
	mov	ecx, DWORD PTR $T5[ebp]
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	push	OFFSET ??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR $T5[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T5[ebp]
	add	edx, 4
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN26@GenerateDi
$LN25@GenerateDi:
	mov	DWORD PTR tv138[ebp], 0
$LN26@GenerateDi:
	mov	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx+48], edx

; 399  : 
; 400  : 		node_type currentNode;

	lea	ecx, DWORD PTR _currentNode$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 401  : 		unsigned col, row, row2, openSetIndex;
; 402  : 		node_type adjacentKey;

	lea	ecx, DWORD PTR _adjacentKey$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 403  : 		unsigned adjacentIndex;
; 404  : 		weight_type edgeWeight, currentNodeWeight, adjacentNodeWeight;
; 405  : 		DataStructures::Map<node_type, weight_type> *adjacencyList;
; 406  : 		DataStructures::Heap<weight_type, node_type, false> minHeap;

	lea	ecx, DWORD PTR _minHeap$[ebp]
	call	??0?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 407  : 		DataStructures::Map<node_type, weight_type> openSet;

	lea	ecx, DWORD PTR _openSet$[ebp]
	call	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 408  : 
; 409  : 		for (col=0; col < adjacencyLists.Size(); col++)

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN22@GenerateDi
$LN21@GenerateDi:
	mov	eax, DWORD PTR _col$[ebp]
	add	eax, 1
	mov	DWORD PTR _col$[ebp], eax
$LN22@GenerateDi:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _col$[ebp], eax
	jae	$LN20@GenerateDi

; 410  : 		{
; 411  : 			// This should be already sorted, so it's a bit inefficient to do an insertion sort, but what the heck
; 412  : 			costMatrixIndices.Insert(adjacencyLists.GetKeyAtIndex(col),adjacencyLists.GetKeyAtIndex(col));

	mov	eax, DWORD PTR _col$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	DWORD PTR tv148[ebp], eax
	mov	edx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv326[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv326[ebp]
	push	eax
	mov	ecx, DWORD PTR _col$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	DWORD PTR tv145[ebp], eax
	mov	eax, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv328[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv328[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Insert@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@0@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId

; 413  : 		}

	jmp	$LN21@GenerateDi
$LN20@GenerateDi:

; 414  : 		for (col=0; col < adjacencyLists.Size() * adjacencyLists.Size(); col++)

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN19@GenerateDi
$LN18@GenerateDi:
	mov	eax, DWORD PTR _col$[ebp]
	add	eax, 1
	mov	DWORD PTR _col$[ebp], eax
$LN19@GenerateDi:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	imul	esi, eax
	cmp	DWORD PTR _col$[ebp], esi
	jae	SHORT $LN17@GenerateDi

; 415  : 			costMatrix[col]=INFINITE_WEIGHT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _col$[ebp]
	mov	ax, WORD PTR _INFINITE_WEIGHT$[ebp]
	mov	WORD PTR [ecx+edx*2], ax
	jmp	SHORT $LN18@GenerateDi
$LN17@GenerateDi:

; 416  : 		currentNode=startNode;

	lea	eax, DWORD PTR _startNode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _currentNode$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 417  : 		row=0;

	mov	DWORD PTR _row$[ebp], 0

; 418  : 		currentNodeWeight=0;

	xor	eax, eax
	mov	WORD PTR _currentNodeWeight$[ebp], ax

; 419  : 		rootNode=startNode;

	lea	eax, DWORD PTR _startNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 420  : 
; 421  : 		// Clear the starting node column
; 422  : 		adjacentIndex=adjacencyLists.GetIndexAtKey(startNode);

	lea	eax, DWORD PTR _startNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexAtKey@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetIndexAtKey
	mov	DWORD PTR _adjacentIndex$[ebp], eax

; 423  : 		for (row2=0; row2 < adjacencyLists.Size(); row2++)

	mov	DWORD PTR _row2$[ebp], 0
	jmp	SHORT $LN16@GenerateDi
$LN15@GenerateDi:
	mov	eax, DWORD PTR _row2$[ebp]
	add	eax, 1
	mov	DWORD PTR _row2$[ebp], eax
$LN16@GenerateDi:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _row2$[ebp], eax
	jae	SHORT $LN13@GenerateDi

; 424  : 			costMatrix[row2*adjacencyLists.Size() + adjacentIndex]=0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	imul	eax, DWORD PTR _row2$[ebp]
	add	eax, DWORD PTR _adjacentIndex$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	xor	ecx, ecx
	mov	WORD PTR [edx+eax*2], cx
	jmp	SHORT $LN15@GenerateDi
$LN13@GenerateDi:

; 425  : 
; 426  : 		while (row < adjacencyLists.Size()-1)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	sub	eax, 1
	cmp	DWORD PTR _row$[ebp], eax
	jae	$LN12@GenerateDi

; 427  : 		{
; 428  : 			adjacencyList = adjacencyLists.Get(currentNode);

	lea	eax, DWORD PTR _currentNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _adjacencyList$[ebp], ecx

; 429  : 			// Go through all connections from the current node.  If the new weight is less than the current weight, then update that weight.
; 430  : 			for (col=0; col < adjacencyList->Size(); col++)

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN11@GenerateDi
$LN10@GenerateDi:
	mov	eax, DWORD PTR _col$[ebp]
	add	eax, 1
	mov	DWORD PTR _col$[ebp], eax
$LN11@GenerateDi:
	mov	ecx, DWORD PTR _adjacencyList$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _col$[ebp], eax
	jae	$LN9@GenerateDi

; 431  : 			{
; 432  : 				edgeWeight=(*adjacencyList)[col];

	mov	eax, DWORD PTR _col$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adjacencyList$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _edgeWeight$[ebp], cx

; 433  : 				adjacentKey=adjacencyList->GetKeyAtIndex(col);

	mov	eax, DWORD PTR _col$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _adjacencyList$[ebp]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	DWORD PTR tv142[ebp], eax
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv330[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR tv330[ebp]
	push	eax
	lea	ecx, DWORD PTR _adjacentKey$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId

; 434  : 				adjacentIndex=adjacencyLists.GetIndexAtKey(adjacentKey);

	lea	eax, DWORD PTR _adjacentKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIndexAtKey@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEIABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetIndexAtKey
	mov	DWORD PTR _adjacentIndex$[ebp], eax

; 435  : 				adjacentNodeWeight=costMatrix[row*adjacencyLists.Size() + adjacentIndex];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	imul	eax, DWORD PTR _row$[ebp]
	add	eax, DWORD PTR _adjacentIndex$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	ax, WORD PTR [edx+eax*2]
	mov	WORD PTR _adjacentNodeWeight$[ebp], ax

; 436  : 
; 437  : 				if (currentNodeWeight + edgeWeight < adjacentNodeWeight)

	movzx	eax, WORD PTR _currentNodeWeight$[ebp]
	movzx	ecx, WORD PTR _edgeWeight$[ebp]
	add	eax, ecx
	movzx	edx, WORD PTR _adjacentNodeWeight$[ebp]
	cmp	eax, edx
	jge	SHORT $LN8@GenerateDi

; 438  : 				{
; 439  : 					// Update the weight for the adjacent node
; 440  : 					for (row2=row; row2 < adjacencyLists.Size(); row2++)

	mov	eax, DWORD PTR _row$[ebp]
	mov	DWORD PTR _row2$[ebp], eax
	jmp	SHORT $LN7@GenerateDi
$LN6@GenerateDi:
	mov	eax, DWORD PTR _row2$[ebp]
	add	eax, 1
	mov	DWORD PTR _row2$[ebp], eax
$LN7@GenerateDi:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _row2$[ebp], eax
	jae	SHORT $LN5@GenerateDi

; 441  : 						costMatrix[row2*adjacencyLists.Size() + adjacentIndex]=currentNodeWeight + edgeWeight;

	movzx	esi, WORD PTR _currentNodeWeight$[ebp]
	movzx	eax, WORD PTR _edgeWeight$[ebp]
	add	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	imul	eax, DWORD PTR _row2$[ebp]
	add	eax, DWORD PTR _adjacentIndex$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	WORD PTR [edx+eax*2], si
	jmp	SHORT $LN6@GenerateDi
$LN5@GenerateDi:

; 442  : 					openSet.Set(adjacentKey, currentNodeWeight + edgeWeight);

	movzx	eax, WORD PTR _currentNodeWeight$[ebp]
	movzx	ecx, WORD PTR _edgeWeight$[ebp]
	add	eax, ecx
	mov	WORD PTR $T9[ebp], ax
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	lea	eax, DWORD PTR _adjacentKey$[ebp]
	push	eax
	lea	ecx, DWORD PTR _openSet$[ebp]
	call	?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set
$LN8@GenerateDi:

; 443  : 				}
; 444  : 			}

	jmp	$LN10@GenerateDi
$LN9@GenerateDi:

; 445  : 
; 446  : 			// Find the lowest in the open set
; 447  : 			minHeap.Clear();

	lea	ecx, DWORD PTR _minHeap$[ebp]
	call	?Clear@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXXZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Clear

; 448  : 			for (openSetIndex=0; openSetIndex < openSet.Size(); openSetIndex++)

	mov	DWORD PTR _openSetIndex$[ebp], 0
	jmp	SHORT $LN4@GenerateDi
$LN3@GenerateDi:
	mov	eax, DWORD PTR _openSetIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _openSetIndex$[ebp], eax
$LN4@GenerateDi:
	lea	ecx, DWORD PTR _openSet$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _openSetIndex$[ebp], eax
	jae	SHORT $LN2@GenerateDi

; 449  : 				minHeap.Push(openSet[openSetIndex], openSet.GetKeyAtIndex(openSetIndex));

	mov	eax, DWORD PTR _openSetIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	lea	ecx, DWORD PTR _openSet$[ebp]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	DWORD PTR tv139[ebp], eax
	mov	edx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv332[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv332[ebp]
	push	eax
	mov	ecx, DWORD PTR _openSetIndex$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _openSet$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEAAGI@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	push	eax
	lea	ecx, DWORD PTR _minHeap$[ebp]
	call	?Push@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAEXABGABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Push
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	jmp	SHORT $LN3@GenerateDi
$LN2@GenerateDi:

; 450  : 
; 451  : 			/*
; 452  : 			unsigned i,j;
; 453  : 			for (i=0; i < adjacencyLists.Size()-1; i++)
; 454  : 			{
; 455  : 				for (j=0; j < adjacencyLists.Size(); j++)
; 456  : 				{
; 457  : 					printf("%2i ", costMatrix[i*adjacencyLists.Size() + j]);
; 458  : 				}
; 459  : 				printf("Node=%i", leastNodeArray[i]);
; 460  : 				printf("\n");
; 461  : 			}
; 462  : 			*/
; 463  : 
; 464  : 			if (minHeap.Size()==0)

	lea	ecx, DWORD PTR _minHeap$[ebp]
	call	?Size@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEIXZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Size
	test	eax, eax
	jne	SHORT $LN1@GenerateDi

; 465  : 			{
; 466  : 				// Unreachable nodes
; 467  : 				isValid=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 1

; 468  : 				return;

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openSet$[ebp]
	call	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _minHeap$[ebp]
	call	??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::~Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _adjacentKey$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _currentNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	jmp	$LN23@GenerateDi
$LN1@GenerateDi:

; 469  : 			}
; 470  : 
; 471  : 			currentNodeWeight=minHeap.PeekWeight(0);

	push	0
	lea	ecx, DWORD PTR _minHeap$[ebp]
	call	?PeekWeight@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QBEGI@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::PeekWeight
	mov	WORD PTR _currentNodeWeight$[ebp], ax

; 472  : 			leastNodeArray[row]=minHeap.Pop(0);

	push	0
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	lea	ecx, DWORD PTR _minHeap$[ebp]
	call	?Pop@?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::Pop
	mov	DWORD PTR tv343[ebp], eax
	mov	ecx, DWORD PTR tv343[ebp]
	mov	DWORD PTR tv339[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv339[ebp]
	push	edx
	imul	ecx, DWORD PTR _row$[ebp], 7
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+48]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId

; 473  : 			currentNode=leastNodeArray[row];

	imul	eax, DWORD PTR _row$[ebp], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+48]
	push	eax
	lea	ecx, DWORD PTR _currentNode$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 474  : 			openSet.Delete(currentNode);		

	lea	eax, DWORD PTR _currentNode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _openSet$[ebp]
	call	?Delete@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Delete

; 475  : 			row++;

	mov	eax, DWORD PTR _row$[ebp]
	add	eax, 1
	mov	DWORD PTR _row$[ebp], eax

; 476  : 		}

	jmp	$LN13@GenerateDi
$LN12@GenerateDi:

; 477  : 
; 478  : 		/*
; 479  : #ifdef _DEBUG
; 480  : 		unsigned i,j;
; 481  : 		for (i=0; i < adjacencyLists.Size()-1; i++)
; 482  : 		{
; 483  : 			for (j=0; j < adjacencyLists.Size(); j++)
; 484  : 			{
; 485  : 				printf("%2i ", costMatrix[i*adjacencyLists.Size() + j]);
; 486  : 			}
; 487  : 			printf("Node=%i", leastNodeArray[i]);
; 488  : 			printf("\n");
; 489  : 		}
; 490  : #endif
; 491  : 		*/
; 492  : 
; 493  : 		isValid=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 1

; 494  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openSet$[ebp]
	call	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _minHeap$[ebp]
	call	??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::~Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _adjacentKey$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _currentNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
$LN23@GenerateDi:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@GenerateDi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 564				; 00000234H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN44@GenerateDi:
	DD	4
	DD	$LN43@GenerateDi
$LN43@GenerateDi:
	DD	-36					; ffffffdcH
	DD	7
	DD	$LN38@GenerateDi
	DD	-100					; ffffff9cH
	DD	7
	DD	$LN39@GenerateDi
	DD	-180					; ffffff4cH
	DD	12					; 0000000cH
	DD	$LN40@GenerateDi
	DD	-212					; ffffff2cH
	DD	24					; 00000018H
	DD	$LN41@GenerateDi
$LN41@GenerateDi:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN40@GenerateDi:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
$LN39@GenerateDi:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	106					; 0000006aH
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN38@GenerateDi:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$0:
	lea	ecx, DWORD PTR _startNode$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$1:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$2:
	lea	ecx, DWORD PTR _currentNode$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$3:
	lea	ecx, DWORD PTR _adjacentKey$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$4:
	lea	ecx, DWORD PTR _minHeap$[ebp]
	jmp	??1?$Heap@GUPlayerIdAndGroupId@ConnectionGraph@@$0A@@DataStructures@@QAE@XZ ; DataStructures::Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>::~Heap<unsigned short,ConnectionGraph::PlayerIdAndGroupId,0>
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$5:
	lea	ecx, DWORD PTR _openSet$[ebp]
	jmp	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$6:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$7:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$8:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$9:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z$10:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-568]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GenerateDisjktraMatrix
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T1 = -236						; size = 4
$T2 = -224						; size = 4
$T3 = -212						; size = 4
_this$ = -8						; size = 4
?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra, COMDAT
; _this$ = ecx

; 498  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 499  : 		if (isValid)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN2@ClearDijks

; 500  : 		{
; 501  : 			isValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 502  : 			delete [] costMatrix;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 503  : 			delete [] leastNodeArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@ClearDijks
	push	3
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@ClearDijks
$LN4@ClearDijks:
	mov	DWORD PTR tv75[ebp], 0
$LN5@ClearDijks:

; 504  : 			costMatrixIndices.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Clear@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Clear
$LN2@ClearDijks:

; 505  : 		}
; 506  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z
_TEXT	SEGMENT
tv235 = -556						; size = 4
tv233 = -556						; size = 4
tv213 = -552						; size = 4
tv163 = -552						; size = 4
tv69 = -552						; size = 4
tv66 = -552						; size = 4
$T2 = -541						; size = 1
$T3 = -532						; size = 4
$T4 = -520						; size = 4
$T5 = -507						; size = 7
$T6 = -492						; size = 8
$T7 = -475						; size = 7
$T8 = -460						; size = 4
$T9 = -448						; size = 4
$T10 = -433						; size = 1
_nap2$ = -232						; size = 8
_nap$ = -216						; size = 8
_key$ = -200						; size = 7
_adjacencyList$ = -184					; size = 4
_current$ = -172					; size = 4
_nodesToProcess$ = -160					; size = 16
_j$ = -136						; size = 4
_i$ = -124						; size = 4
_res$ = -109						; size = 1
_outGraph$ = -100					; size = 52
_path$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_outTree$ = 8						; size = 4
_inputNodes$ = 12					; size = 4
_startNode$ = 16					; size = 7
_INFINITE_WEIGHT$ = 24					; size = 2
?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetSpanningTree, COMDAT
; _this$ = ecx

; 330  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 544				; 00000220H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-556]
	mov	ecx, 136				; 00000088H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 331  : 		// Find the shortest path from the start node to each of the input nodes.  Add this path to a new WeightedGraph if the result is reachable
; 332  : 		DataStructures::List<node_type> path;

	lea	ecx, DWORD PTR _path$[ebp]
	call	??0?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::List<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 333  : 		DataStructures::WeightedGraph<node_type, weight_type, allow_unlinkedNodes> outGraph;

	lea	ecx, DWORD PTR _outGraph$[ebp]
	call	??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 334  : 		bool res;
; 335  : 		unsigned i,j;
; 336  : 		for (i=0; i < inputNodes->Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@GetSpannin
$LN16@GetSpannin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@GetSpannin:
	mov	ecx, DWORD PTR _inputNodes$[ebp]
	call	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN15@GetSpannin

; 337  : 		{
; 338  : 			res=GetShortestPath(path, startNode, (*inputNodes)[i], INFINITE_WEIGHT);

	movzx	eax, WORD PTR _INFINITE_WEIGHT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _inputNodes$[ebp]
	call	??A?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEAAUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::operator[]
	sub	esp, 8
	mov	edx, esp
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR [edx+4], cx
	mov	al, BYTE PTR [eax+6]
	mov	BYTE PTR [edx+6], al
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _startNode$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _startNode$[ebp+4]
	mov	WORD PTR [ecx+4], ax
	mov	dl, BYTE PTR _startNode$[ebp+6]
	mov	BYTE PTR [ecx+6], dl
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetShortestPath
	mov	BYTE PTR _res$[ebp], al

; 339  : 			if (res)

	movzx	eax, BYTE PTR _res$[ebp]
	test	eax, eax
	je	SHORT $LN14@GetSpannin

; 340  : 			{
; 341  : 				for (j=0; j < path.Size()-1; j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN13@GetSpannin
$LN12@GetSpannin:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN13@GetSpannin:
	lea	ecx, DWORD PTR _path$[ebp]
	call	?Size@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Size
	sub	eax, 1
	cmp	DWORD PTR _j$[ebp], eax
	jae	SHORT $LN14@GetSpannin

; 342  : 				{
; 343  : 					// Don't bother looking up the weight
; 344  :  					outGraph.AddConnection(path[j], path[j+1], INFINITE_WEIGHT);

	movzx	eax, WORD PTR _INFINITE_WEIGHT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _path$[ebp]
	call	??A?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEAAUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::operator[]
	push	eax
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	lea	ecx, DWORD PTR _path$[ebp]
	call	??A?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEAAUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::operator[]
	push	eax
	lea	ecx, DWORD PTR _outGraph$[ebp]
	call	?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection

; 345  : 				}

	jmp	SHORT $LN12@GetSpannin
$LN14@GetSpannin:

; 346  : 			}
; 347  : 		}

	jmp	$LN16@GetSpannin
$LN15@GetSpannin:

; 348  : 
; 349  : 		// Copy the graph to a tree.
; 350  : 		DataStructures::Queue<NodeAndParent> nodesToProcess;

	lea	ecx, DWORD PTR _nodesToProcess$[ebp]
	call	??0?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 351  : 		DataStructures::Tree<node_type> *current;
; 352  : 		DataStructures::Map<node_type, weight_type> *adjacencyList;
; 353  : 		node_type key;

	lea	ecx, DWORD PTR _key$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 354  : 		NodeAndParent nap, nap2;
; 355  : 		outTree.DeleteDecendants();

	mov	ecx, DWORD PTR _outTree$[ebp]
	call	?DeleteDecendants@?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXXZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::DeleteDecendants

; 356  : 		outTree.data=startNode;

	lea	eax, DWORD PTR _startNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outTree$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 357  : 		current=&outTree;

	mov	eax, DWORD PTR _outTree$[ebp]
	mov	DWORD PTR _current$[ebp], eax

; 358  : 		if (outGraph.adjacencyLists.Has(startNode)==false)

	lea	eax, DWORD PTR _startNode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outGraph$[ebp]
	call	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@GetSpannin

; 359  : 			return false;

	mov	BYTE PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _key$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _nodesToProcess$[ebp]
	call	??1?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::~Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outGraph$[ebp]
	call	??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T2[ebp]
	jmp	$LN18@GetSpannin
$LN10@GetSpannin:

; 360  : 		adjacencyList = outGraph.adjacencyLists.Get(startNode);

	lea	eax, DWORD PTR _startNode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outGraph$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _adjacencyList$[ebp], ecx

; 361  : 
; 362  : 		for (i=0; i < adjacencyList->Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@GetSpannin
$LN8@GetSpannin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@GetSpannin:
	mov	ecx, DWORD PTR _adjacencyList$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN6@GetSpannin

; 363  : 		{
; 364  : 			nap2.node=new DataStructures::Tree<node_type>;

	push	19					; 00000013H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN20@GetSpannin
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::Tree<ConnectionGraph::PlayerIdAndGroupId>
	mov	DWORD PTR tv163[ebp], eax
	jmp	SHORT $LN21@GetSpannin
$LN20@GetSpannin:
	mov	DWORD PTR tv163[ebp], 0
$LN21@GetSpannin:
	mov	eax, DWORD PTR tv163[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _nap2$[ebp], ecx

; 365  : 			nap2.node->data=adjacencyList->GetKeyAtIndex(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _adjacencyList$[ebp]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	DWORD PTR tv69[ebp], eax
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv233[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv233[ebp]
	push	eax
	mov	ecx, DWORD PTR _nap2$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId

; 366  : 			nap2.parent=current;

	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _nap2$[ebp+4], eax

; 367  : 			nodesToProcess.Push(nap2);

	lea	eax, DWORD PTR _nap2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nodesToProcess$[ebp]
	call	?Push@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAEXABUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@@Z ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Push

; 368  : 			current->children.Insert(nap2.node);

	mov	eax, DWORD PTR _nap2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	add	ecx, 7
	call	?Insert@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Insert

; 369  : 		}

	jmp	$LN8@GetSpannin
$LN6@GetSpannin:

; 370  : 
; 371  : 		while (nodesToProcess.Size())

	lea	ecx, DWORD PTR _nodesToProcess$[ebp]
	call	?Size@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QBEIXZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Size
	test	eax, eax
	je	$LN5@GetSpannin

; 372  : 		{
; 373  : 			nap=nodesToProcess.Pop();

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	ecx, DWORD PTR _nodesToProcess$[ebp]
	call	?Pop@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE?AUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@XZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Pop
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _nap$[ebp], ecx
	mov	DWORD PTR _nap$[ebp+4], edx

; 374  : 			current=nap.node;

	mov	eax, DWORD PTR _nap$[ebp]
	mov	DWORD PTR _current$[ebp], eax

; 375  : 			adjacencyList = outGraph.adjacencyLists.Get(nap.node->data);

	mov	eax, DWORD PTR _nap$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outGraph$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _adjacencyList$[ebp], ecx

; 376  : 
; 377  : 			for (i=0; i < adjacencyList->Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@GetSpannin
$LN3@GetSpannin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@GetSpannin:
	mov	ecx, DWORD PTR _adjacencyList$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN2@GetSpannin

; 378  : 			{
; 379  : 				key=adjacencyList->GetKeyAtIndex(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _adjacencyList$[ebp]
	call	?GetKeyAtIndex@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBE?AUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::GetKeyAtIndex
	mov	DWORD PTR tv66[ebp], eax
	mov	edx, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv235[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv235[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId

; 380  : 				if (key!=nap.parent->data)

	mov	eax, DWORD PTR _nap$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR _key$[ebp]
	call	??9PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@GetSpannin

; 381  : 				{
; 382  : 					nap2.node=new DataStructures::Tree<node_type>;

	push	19					; 00000013H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN22@GetSpannin
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId>::Tree<ConnectionGraph::PlayerIdAndGroupId>
	mov	DWORD PTR tv213[ebp], eax
	jmp	SHORT $LN23@GetSpannin
$LN22@GetSpannin:
	mov	DWORD PTR tv213[ebp], 0
$LN23@GetSpannin:
	mov	eax, DWORD PTR tv213[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _nap2$[ebp], ecx

; 383  : 					nap2.node->data=key;

	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nap2$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 384  : 					nap2.parent=current;

	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _nap2$[ebp+4], eax

; 385  : 					nodesToProcess.Push(nap2);

	lea	eax, DWORD PTR _nap2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nodesToProcess$[ebp]
	call	?Push@?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAEXABUNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@2@@Z ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::Push

; 386  : 					current->children.Insert(nap2.node);

	mov	eax, DWORD PTR _nap2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	add	ecx, 7
	call	?Insert@?$List@PAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@@DataStructures@@QAEXQAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@@Z ; DataStructures::List<DataStructures::Tree<ConnectionGraph::PlayerIdAndGroupId> *>::Insert
$LN1@GetSpannin:

; 387  : 				}				
; 388  : 			}

	jmp	$LN3@GetSpannin
$LN2@GetSpannin:

; 389  : 		}

	jmp	$LN6@GetSpannin
$LN5@GetSpannin:

; 390  : 
; 391  : 		return true;

	mov	BYTE PTR $T10[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _key$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _nodesToProcess$[ebp]
	call	??1?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::~Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outGraph$[ebp]
	call	??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T10[ebp]
$LN18@GetSpannin:

; 392  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN41@GetSpannin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 556				; 0000022cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN41@GetSpannin:
	DD	6
	DD	$LN40@GetSpannin
$LN40@GetSpannin:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN33@GetSpannin
	DD	-100					; ffffff9cH
	DD	52					; 00000034H
	DD	$LN34@GetSpannin
	DD	-160					; ffffff60H
	DD	16					; 00000010H
	DD	$LN35@GetSpannin
	DD	-200					; ffffff38H
	DD	7
	DD	$LN36@GetSpannin
	DD	-216					; ffffff28H
	DD	8
	DD	$LN37@GetSpannin
	DD	-232					; ffffff18H
	DD	8
	DD	$LN38@GetSpannin
$LN38@GetSpannin:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	50					; 00000032H
	DB	0
$LN37@GetSpannin:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
$LN36@GetSpannin:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN35@GetSpannin:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN34@GetSpannin:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	71					; 00000047H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	0
$LN33@GetSpannin:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$0:
	lea	ecx, DWORD PTR _startNode$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$1:
	lea	ecx, DWORD PTR _path$[ebp]
	jmp	??1?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::~List<ConnectionGraph::PlayerIdAndGroupId>
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$2:
	lea	ecx, DWORD PTR _outGraph$[ebp]
	jmp	??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$3:
	lea	ecx, DWORD PTR _nodesToProcess$[ebp]
	jmp	??1?$Queue@UNodeAndParent@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@@DataStructures@@QAE@XZ ; DataStructures::Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>::~Queue<DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::NodeAndParent>
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$4:
	lea	ecx, DWORD PTR _key$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$5:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$6:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$7:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z$8:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-560]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetSpanningTree@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$Tree@UPlayerIdAndGroupId@ConnectionGraph@@@2@PAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@G@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetSpanningTree
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z
_TEXT	SEGMENT
tv257 = -428						; size = 4
tv251 = -428						; size = 4
tv137 = -424						; size = 4
tv91 = -424						; size = 4
$T2 = -413						; size = 1
$T3 = -401						; size = 1
$T4 = -389						; size = 1
$T5 = -377						; size = 1
$T6 = -365						; size = 1
$T7 = -355						; size = 7
$T8 = -337						; size = 1
$T9 = -327						; size = 7
$T10 = -309						; size = 1
_vertex$ = -108						; size = 7
_outputQueue$ = -92					; size = 16
_currentWeight$ = -68					; size = 2
_row$ = -56						; size = 4
_col$ = -44						; size = 4
_objectExists$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_startNode$ = 12					; size = 7
_endNode$ = 20						; size = 7
_INFINITE_WEIGHT$ = 28					; size = 2
?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetShortestPath, COMDAT
; _this$ = ecx

; 226  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-428]
	mov	ecx, 104				; 00000068H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 227  : 		path.Clear();

	push	0
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Clear@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEX_N@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Clear

; 228  : 		if (startNode==endNode)

	lea	eax, DWORD PTR _endNode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@GetShortes

; 229  : 		{
; 230  : 			path.Insert(startNode);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _startNode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _startNode$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _startNode$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert

; 231  : 			path.Insert(endNode);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _endNode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _endNode$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _endNode$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert

; 232  : 			return true;

	mov	BYTE PTR $T2[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _endNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T2[ebp]
	jmp	$LN20@GetShortes
$LN19@GetShortes:

; 233  : 		}
; 234  : 
; 235  : 		if (isValid==false || rootNode!=startNode)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN17@GetShortes
	lea	eax, DWORD PTR _startNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	call	??9PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@GetShortes
$LN17@GetShortes:

; 236  : 		{
; 237  : 			ClearDijkstra();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra

; 238  : 			GenerateDisjktraMatrix(startNode, INFINITE_WEIGHT);

	movzx	eax, WORD PTR _INFINITE_WEIGHT$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _startNode$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	ax, WORD PTR _startNode$[ebp+4]
	mov	WORD PTR [ecx+4], ax
	mov	dl, BYTE PTR _startNode$[ebp+6]
	mov	BYTE PTR [ecx+6], dl
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GenerateDisjktraMatrix@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXUPlayerIdAndGroupId@ConnectionGraph@@G@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GenerateDisjktraMatrix
$LN18@GetShortes:

; 239  : 		}
; 240  : 		
; 241  : 		// return the results
; 242  : 		bool objectExists;
; 243  : 		unsigned col,row;
; 244  : 		weight_type currentWeight;
; 245  : 		DataStructures::Queue<node_type> outputQueue;

	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	??0?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Queue<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 246  : 		col=costMatrixIndices.GetIndexFromKey(endNode, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	lea	ecx, DWORD PTR _endNode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::GetIndexFromKey
	mov	DWORD PTR _col$[ebp], eax

; 247  : 		if (costMatrixIndices.Size()<2)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	eax, 2
	jae	SHORT $LN16@GetShortes

; 248  : 		{
; 249  : 			return false;

	mov	BYTE PTR $T3[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _endNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T3[ebp]
	jmp	$LN20@GetShortes
$LN16@GetShortes:

; 250  : 		}
; 251  : 		if (objectExists==false)

	movzx	eax, BYTE PTR _objectExists$[ebp]
	test	eax, eax
	jne	SHORT $LN15@GetShortes

; 252  : 		{
; 253  : 			return false;

	mov	BYTE PTR $T4[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _endNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN20@GetShortes
$LN15@GetShortes:

; 254  : 		}
; 255  : 		node_type vertex;

	lea	ecx, DWORD PTR _vertex$[ebp]
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 256  : 		row=costMatrixIndices.Size()-2;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Size@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::Size
	sub	eax, 2
	mov	DWORD PTR _row$[ebp], eax

; 257  : 		if (row==0)

	jne	$LN14@GetShortes

; 258  : 		{
; 259  : 			path.Insert(startNode);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _startNode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _startNode$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _startNode$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert

; 260  : 			path.Insert(endNode);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _endNode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _endNode$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _endNode$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert

; 261  : 			return true;

	mov	BYTE PTR $T5[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _vertex$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _endNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T5[ebp]
	jmp	$LN20@GetShortes
$LN14@GetShortes:

; 262  : 		}
; 263  : 		currentWeight=costMatrix[row*adjacencyLists.Size() + col];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	imul	eax, DWORD PTR _row$[ebp]
	add	eax, DWORD PTR _col$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	ax, WORD PTR [edx+eax*2]
	mov	WORD PTR _currentWeight$[ebp], ax

; 264  : 		if (currentWeight==INFINITE_WEIGHT)

	movzx	eax, WORD PTR _currentWeight$[ebp]
	movzx	ecx, WORD PTR _INFINITE_WEIGHT$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN13@GetShortes

; 265  : 		{
; 266  : 			// No path
; 267  : 			return true;

	mov	BYTE PTR $T6[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _vertex$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _endNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T6[ebp]
	jmp	$LN20@GetShortes
$LN13@GetShortes:

; 268  : 		}
; 269  : 		vertex=endNode;

	lea	eax, DWORD PTR _endNode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _vertex$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 270  : 		outputQueue.PushAtHead(vertex);

	push	0
	lea	eax, DWORD PTR _vertex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::PushAtHead

; 271  : 		row--;

	mov	eax, DWORD PTR _row$[ebp]
	sub	eax, 1
	mov	DWORD PTR _row$[ebp], eax
$LN12@GetShortes:

; 272  : #ifdef _MSC_VER
; 273  : #pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant
; 274  : #endif
; 275  : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	$LN11@GetShortes
$LN10@GetShortes:

; 276  : 		{
; 277  : 			while (costMatrix[row*adjacencyLists.Size() + col] == currentWeight)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	imul	eax, DWORD PTR _row$[ebp]
	add	eax, DWORD PTR _col$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	movzx	eax, WORD PTR [edx+eax*2]
	movzx	ecx, WORD PTR _currentWeight$[ebp]
	cmp	eax, ecx
	jne	$LN9@GetShortes

; 278  : 			{
; 279  : 				if (row==0)

	cmp	DWORD PTR _row$[ebp], 0
	jne	$LN8@GetShortes

; 280  : 				{
; 281  : 					path.Insert(startNode);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _startNode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _startNode$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _startNode$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert

; 282  : 					for (col=0; outputQueue.Size(); col++)

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN7@GetShortes
$LN6@GetShortes:
	mov	eax, DWORD PTR _col$[ebp]
	add	eax, 1
	mov	DWORD PTR _col$[ebp], eax
$LN7@GetShortes:
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
	test	eax, eax
	je	SHORT $LN5@GetShortes

; 283  : 						path.Insert(outputQueue.Pop());

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv251[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv251[ebp]
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	cx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], cx
	mov	dl, BYTE PTR [edx+6]
	mov	BYTE PTR [eax+6], dl
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	jmp	SHORT $LN6@GetShortes
$LN5@GetShortes:

; 284  : 					return true;

	mov	BYTE PTR $T8[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _vertex$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _endNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T8[ebp]
	jmp	$LN20@GetShortes
$LN8@GetShortes:

; 285  : 				}
; 286  : 				--row;

	mov	eax, DWORD PTR _row$[ebp]
	sub	eax, 1
	mov	DWORD PTR _row$[ebp], eax

; 287  : 			}

	jmp	$LN10@GetShortes
$LN9@GetShortes:

; 288  : 
; 289  : 			vertex=leastNodeArray[row];

	imul	eax, DWORD PTR _row$[ebp], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+48]
	push	eax
	lea	ecx, DWORD PTR _vertex$[ebp]
	call	??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z

; 290  : 			outputQueue.PushAtHead(vertex);

	push	0
	lea	eax, DWORD PTR _vertex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	?PushAtHead@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@I@Z ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::PushAtHead

; 291  : 			if (row==0)

	cmp	DWORD PTR _row$[ebp], 0
	jne	SHORT $LN4@GetShortes

; 292  : 				break;

	jmp	SHORT $LN11@GetShortes
$LN4@GetShortes:

; 293  : 			col=costMatrixIndices.GetIndexFromKey(vertex, &objectExists);

	lea	eax, DWORD PTR _objectExists$[ebp]
	push	eax
	lea	ecx, DWORD PTR _vertex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?GetIndexFromKey@?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QBEIABUPlayerIdAndGroupId@ConnectionGraph@@PA_N@Z ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::GetIndexFromKey
	mov	DWORD PTR _col$[ebp], eax

; 294  : 			currentWeight=costMatrix[row*adjacencyLists.Size() + col];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	imul	eax, DWORD PTR _row$[ebp]
	add	eax, DWORD PTR _col$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	ax, WORD PTR [edx+eax*2]
	mov	WORD PTR _currentWeight$[ebp], ax

; 295  : 		}

	jmp	$LN12@GetShortes
$LN11@GetShortes:

; 296  : 
; 297  : 		path.Insert(startNode);

	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR _startNode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	dx, WORD PTR _startNode$[ebp+4]
	mov	WORD PTR [eax+4], dx
	mov	cl, BYTE PTR _startNode$[ebp+6]
	mov	BYTE PTR [eax+6], cl
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert

; 298  : 		for (col=0; outputQueue.Size(); col++)

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN3@GetShortes
$LN2@GetShortes:
	mov	eax, DWORD PTR _col$[ebp]
	add	eax, 1
	mov	DWORD PTR _col$[ebp], eax
$LN3@GetShortes:
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	?Size@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QBEIXZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Size
	test	eax, eax
	je	SHORT $LN1@GetShortes

; 299  : 			path.Insert(outputQueue.Pop());

	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	?Pop@?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE?AUPlayerIdAndGroupId@ConnectionGraph@@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::Pop
	mov	DWORD PTR tv91[ebp], eax
	mov	ecx, DWORD PTR tv91[ebp]
	mov	DWORD PTR tv257[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv257[ebp]
	sub	esp, 8
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	cx, WORD PTR [edx+4]
	mov	WORD PTR [eax+4], cx
	mov	dl, BYTE PTR [edx+6]
	mov	BYTE PTR [eax+6], dl
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Insert@?$List@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAEXUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::List<ConnectionGraph::PlayerIdAndGroupId>::Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	jmp	SHORT $LN2@GetShortes
$LN1@GetShortes:

; 300  : 		return true;

	mov	BYTE PTR $T10[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _vertex$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	call	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _startNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _endNode$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	al, BYTE PTR $T10[ebp]
$LN20@GetShortes:

; 301  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@GetShortes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 428				; 000001acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN33@GetShortes:
	DD	3
	DD	$LN32@GetShortes
$LN32@GetShortes:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN28@GetShortes
	DD	-92					; ffffffa4H
	DD	16					; 00000010H
	DD	$LN29@GetShortes
	DD	-108					; ffffff94H
	DD	7
	DD	$LN30@GetShortes
$LN30@GetShortes:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN29@GetShortes:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	81					; 00000051H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN28@GetShortes:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$0:
	lea	ecx, DWORD PTR _endNode$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$1:
	lea	ecx, DWORD PTR _startNode$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$2:
	lea	ecx, DWORD PTR _outputQueue$[ebp]
	jmp	??1?$Queue@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@QAE@XZ ; DataStructures::Queue<ConnectionGraph::PlayerIdAndGroupId>::~Queue<ConnectionGraph::PlayerIdAndGroupId>
__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$3:
	lea	ecx, DWORD PTR _vertex$[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$4:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z$5:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-432]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetShortestPath@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE_NAAV?$List@UPlayerIdAndGroupId@ConnectionGraph@@@2@UPlayerIdAndGroupId@ConnectionGraph@@1G@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::GetShortestPath
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ
_TEXT	SEGMENT
tv77 = -244						; size = 4
$T1 = -236						; size = 4
$T2 = -224						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear, COMDAT
; _this$ = ecx

; 215  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 216  : 		unsigned i;
; 217  : 		for (i=0; i < adjacencyLists.Size(); i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Clear
$LN2@Clear:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@Clear:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEIXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Size
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN1@Clear

; 218  : 			delete adjacencyLists[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QBEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@1@I@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN6@Clear
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_G?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEPAXI@Z
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN7@Clear
$LN6@Clear:
	mov	DWORD PTR tv77[ebp], 0
$LN7@Clear:
	jmp	SHORT $LN2@Clear
$LN1@Clear:

; 219  : 		adjacencyLists.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXXZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Clear

; 220  : 
; 221  : 		ClearDijkstra();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearDijkstra@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@IAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::ClearDijkstra

; 222  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node1$ = 8						; size = 4
_node2$ = 12						; size = 4
_weight$ = 16						; size = 2
?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection, COMDAT
; _this$ = ecx

; 181  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		if (node1==node2)

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node1$[ebp]
	call	??8PlayerIdAndGroupId@ConnectionGraph@@QBE_NABU01@@Z ; ConnectionGraph::PlayerIdAndGroupId::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@AddConnect

; 183  : 			return;

	jmp	SHORT $LN4@AddConnect
$LN3@AddConnect:

; 184  : 
; 185  : 		if (adjacencyLists.Has(node1)==false)

	mov	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@AddConnect

; 186  : 			AddNode(node1);

	mov	eax, DWORD PTR _node1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode
$LN2@AddConnect:

; 187  : 		adjacencyLists.Get(node1)->Set(node2, weight);

	lea	eax, DWORD PTR _weight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _node1$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set

; 188  : 		if (adjacencyLists.Has(node2)==false)

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Has@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE_NABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Has
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@AddConnect

; 189  : 			AddNode(node2);

	mov	eax, DWORD PTR _node2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode
$LN1@AddConnect:

; 190  : 		adjacencyLists.Get(node2)->Set(node1, weight);

	lea	eax, DWORD PTR _weight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _node2$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEAAPAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@ABUPlayerIdAndGroupId@ConnectionGraph@@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Get
	mov	ecx, DWORD PTR [eax]
	call	?Set@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABG@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Set
$LN4@AddConnect:

; 191  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AddConnection@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@0G@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddConnection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
_TEXT	SEGMENT
tv73 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
$T4 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_node$ = 8						; size = 4
?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode, COMDAT
; _this$ = ecx

; 138  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 139  : 		adjacencyLists.SetNew(node, new DataStructures::Map<node_type, weight_type>);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@AddNode
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@AddNode
$LN3@AddNode:
	mov	DWORD PTR tv73[ebp], 0
$LN4@AddNode:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNew@?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@ABQAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@2@@Z ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::SetNew

; 140  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddNode@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXABUPlayerIdAndGroupId@ConnectionGraph@@@Z ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::AddNode
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>, COMDAT
; _this$ = ecx

; 96   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 97   : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAEXXZ ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::Clear

; 98   : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__unwindfunclet$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::~OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >
__ehhandler$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::~WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_weightedgraph.h
;	COMDAT ??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ PROC ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>, COMDAT
; _this$ = ecx

; 89   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	call	??0PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::PlayerIdAndGroupId
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$OrderedList@UPlayerIdAndGroupId@ConnectionGraph@@U12@$1??$defaultOrderedListComparison@UPlayerIdAndGroupId@ConnectionGraph@@U12@@DataStructures@@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >::OrderedList<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId,&DataStructures::defaultOrderedListComparison<ConnectionGraph::PlayerIdAndGroupId,ConnectionGraph::PlayerIdAndGroupId> >

; 90   : 		isValid=false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 91   : 		costMatrix=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 92   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$Map@UPlayerIdAndGroupId@ConnectionGraph@@PAV?$Map@UPlayerIdAndGroupId@ConnectionGraph@@G$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@DataStructures@@YAHABU12@0@Z@DataStructures@@$1??$defaultMapKeyComparison@UPlayerIdAndGroupId@ConnectionGraph@@@4@YAHABU12@0@Z@DataStructures@@QAE@XZ ; DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >::~Map<ConnectionGraph::PlayerIdAndGroupId,DataStructures::Map<ConnectionGraph::PlayerIdAndGroupId,unsigned short,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> > *,&DataStructures::defaultMapKeyComparison<ConnectionGraph::PlayerIdAndGroupId> >
__unwindfunclet$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 25					; 00000019H
	jmp	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
__ehhandler$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$WeightedGraph@UPlayerIdAndGroupId@ConnectionGraph@@G$0A@@DataStructures@@QAE@XZ ENDP ; DataStructures::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>::WeightedGraph<ConnectionGraph::PlayerIdAndGroupId,unsigned short,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z PROC	; ConnectionGraph::PlayerIdAndGroupId::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	7
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PlayerIdAndGroupId@ConnectionGraph@@QAE@XZ ; ConnectionGraph::PlayerIdAndGroupId::~PlayerIdAndGroupId
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPlayerIdAndGroupId@ConnectionGraph@@QAEPAXI@Z ENDP	; ConnectionGraph::PlayerIdAndGroupId::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z PROC ; ConnectionGraph::PlayerIdAndGroupId::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PlayerID@@QAEAAU0@ABU0@@Z		; PlayerID::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+6]
	mov	BYTE PTR [eax+6], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PlayerIdAndGroupId@ConnectionGraph@@QAEAAU01@ABU01@@Z ENDP ; ConnectionGraph::PlayerIdAndGroupId::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0RouterInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0RouterInterface@@QAE@XZ PROC				; RouterInterface::RouterInterface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RouterInterface@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RouterInterface@@QAE@XZ ENDP				; RouterInterface::RouterInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1SystemAddressList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SystemAddressList@@QAE@XZ PROC			; SystemAddressList::~SystemAddressList, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$List@UPlayerID@@@DataStructures@@QAE@XZ ; DataStructures::List<PlayerID>::~List<PlayerID>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SystemAddressList@@QAE@XZ ENDP			; SystemAddressList::~SystemAddressList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ PROC	; DataStructures::List<PlayerID>::Size, COMDAT
; _this$ = ecx

; 373  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 374  : 		return list_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 375  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$List@UPlayerID@@@DataStructures@@QBEIXZ ENDP	; DataStructures::List<PlayerID>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ?GetIndexOf@?$List@UPlayerID@@@DataStructures@@QAEIUPlayerID@@@Z
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 6
?GetIndexOf@?$List@UPlayerID@@@DataStructures@@QAEIUPlayerID@@@Z PROC ; DataStructures::List<PlayerID>::GetIndexOf, COMDAT
; _this$ = ecx

; 363  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 364  : 		for ( unsigned int i = 0; i < list_size; ++i )

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@GetIndexOf
$LN3@GetIndexOf:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@GetIndexOf:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@GetIndexOf

; 365  : 			if ( listArray[ i ] == input )

	lea	eax, DWORD PTR _input$[ebp]
	push	eax
	imul	ecx, DWORD PTR _i$1[ebp], 6
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	call	??8PlayerID@@QBE_NABU0@@Z		; PlayerID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@GetIndexOf

; 366  : 				return i;

	mov	eax, DWORD PTR _i$1[ebp]
	jmp	SHORT $LN5@GetIndexOf
$LN1@GetIndexOf:

; 367  : 
; 368  : 		return MAX_UNSIGNED_LONG;

	jmp	SHORT $LN3@GetIndexOf
$LN2@GetIndexOf:
	or	eax, -1
$LN5@GetIndexOf:

; 369  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetIndexOf@?$List@UPlayerID@@@DataStructures@@QAEIUPlayerID@@@Z ENDP ; DataStructures::List<PlayerID>::GetIndexOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z PROC ; DataStructures::List<PlayerID>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : #ifdef _DEBUG
; 187  : 		assert ( position < list_size );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN3@operator
	push	187					; 000000bbH
	push	OFFSET ??_C@_1EE@MBOIAKFO@?$AAz?$AA?3?$AA?2?$AAs?$AAa?$AAm?$AAp?$AAs?$AAr?$AAc?$AA?2?$AA0?$AA2?$AAx?$AAu?$AA1?$AA?2?$AAr?$AAa?$AAk?$AAn?$AAe?$AAt?$AA?2?$AAd?$AAs?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?4@
	push	OFFSET ??_C@_1CK@HINNGFPG@?$AAp?$AAo?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$DM?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 188  : #endif
; 189  : 		return listArray[ position ];

	imul	eax, DWORD PTR _position$[ebp], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UPlayerID@@@DataStructures@@QBEAAUPlayerID@@I@Z ENDP ; DataStructures::List<PlayerID>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\ds_list.h
;	COMDAT ??1?$List@UPlayerID@@@DataStructures@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$List@UPlayerID@@@DataStructures@@QAE@XZ PROC	; DataStructures::List<PlayerID>::~List<PlayerID>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (allocation_size>0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN2@List

; 123  : 			delete [] listArray;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@List:

; 124  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UPlayerID@@@DataStructures@@QAE@XZ ENDP	; DataStructures::List<PlayerID>::~List<PlayerID>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluginInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluginInterface@@QAE@XZ PROC				; PluginInterface::PluginInterface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluginInterface@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluginInterface@@QAE@XZ ENDP				; PluginInterface::PluginInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\networktypes.h
;	COMDAT ??4PlayerID@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??4PlayerID@@QAEAAU0@ABU0@@Z PROC			; PlayerID::operator=, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 		binaryAddress = input.binaryAddress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 76   : 		port = input.port;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx

; 77   : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PlayerID@@QAEAAU0@ABU0@@Z ENDP			; PlayerID::operator=
_TEXT	ENDS
END
