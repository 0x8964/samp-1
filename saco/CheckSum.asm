; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	Z:\sampsrc\02Xu1\raknet\CheckSum.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?Add@CheckSum@@QAEXI@Z				; CheckSum::Add
PUBLIC	?Add@CheckSum@@QAEXG@Z				; CheckSum::Add
PUBLIC	?Add@CheckSum@@QAEXPAEI@Z			; CheckSum::Add
PUBLIC	?Add@CheckSum@@QAEXE@Z				; CheckSum::Add
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\checksum.cpp
;	COMDAT ?Add@CheckSum@@QAEXE@Z
_TEXT	SEGMENT
_cipher$ = -17						; size = 1
_this$ = -8						; size = 4
_value$ = 8						; size = 1
?Add@CheckSum@@QAEXE@Z PROC				; CheckSum::Add, COMDAT
; _this$ = ecx

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 74   : 	unsigned char cipher = (unsigned char)( value ^ ( r >> 8 ) );

	movzx	eax, BYTE PTR _value$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx]
	sar	edx, 8
	xor	eax, edx
	mov	BYTE PTR _cipher$[ebp], al

; 75   : 	r = ( cipher + r ) * c1 + c2;

	movzx	eax, BYTE PTR _cipher$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx]
	add	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	imul	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+4]
	add	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax

; 76   : 	sum += cipher;

	movzx	eax, BYTE PTR _cipher$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+6]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+6], eax

; 77   : } // CheckSum::add(unsigned char)

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@CheckSum@@QAEXE@Z ENDP				; CheckSum::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\checksum.cpp
;	COMDAT ?Add@CheckSum@@QAEXPAEI@Z
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_this$ = -8						; size = 4
_b$ = 8							; size = 4
_length$ = 12						; size = 4
?Add@CheckSum@@QAEXPAEI@Z PROC				; CheckSum::Add, COMDAT
; _this$ = ecx

; 92   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 	for ( unsigned int i = 0; i < length; i++ )

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@Add
$LN2@Add:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@Add:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jae	SHORT $LN4@Add

; 94   : 		Add ( b[ i ] )
; 95   : 
; 96   : 		;

	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _i$1[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@CheckSum@@QAEXE@Z			; CheckSum::Add
	jmp	SHORT $LN2@Add
$LN4@Add:

; 97   : } // CheckSum::add(LPunsigned char, unsigned int)

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Add@CheckSum@@QAEXPAEI@Z ENDP				; CheckSum::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\checksum.cpp
;	COMDAT ?Add@CheckSum@@QAEXG@Z
_TEXT	SEGMENT
_i$1 = -32						; size = 4
_data$ = -20						; size = 2
_this$ = -8						; size = 4
_value$ = 8						; size = 2
?Add@CheckSum@@QAEXG@Z PROC				; CheckSum::Add, COMDAT
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 	union
; 48   : 	{
; 49   : 		unsigned short value;
; 50   : 		unsigned char bytes[ 2 ];
; 51   : 	}
; 52   : 
; 53   : 	data;
; 54   : 	data.value = value;

	mov	ax, WORD PTR _value$[ebp]
	mov	WORD PTR _data$[ebp], ax

; 55   : 
; 56   : 	for ( unsigned int i = 0; i < sizeof( data.bytes ); i++ )

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@Add
$LN2@Add:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@Add:
	cmp	DWORD PTR _i$1[ebp], 2
	jae	SHORT $LN4@Add

; 57   : 		Add ( data.bytes[ i ] )
; 58   : 
; 59   : 		;

	mov	eax, DWORD PTR _i$1[ebp]
	movzx	ecx, BYTE PTR _data$[ebp+eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@CheckSum@@QAEXE@Z			; CheckSum::Add
	jmp	SHORT $LN2@Add
$LN4@Add:

; 60   : } // CheckSum::add(unsigned short)

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Add
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@Add:
	DD	1
	DD	$LN7@Add
$LN7@Add:
	DD	-20					; ffffffecH
	DD	2
	DD	$LN6@Add
$LN6@Add:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
?Add@CheckSum@@QAEXG@Z ENDP				; CheckSum::Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sampsrc\02xu1\raknet\checksum.cpp
;	COMDAT ?Add@CheckSum@@QAEXI@Z
_TEXT	SEGMENT
_i$1 = -32						; size = 4
_data$ = -20						; size = 4
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?Add@CheckSum@@QAEXI@Z PROC				; CheckSum::Add, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 	union
; 21   : 	{
; 22   : 		unsigned int value;
; 23   : 		unsigned char bytes[ 4 ];
; 24   : 	}
; 25   : 
; 26   : 	data;
; 27   : 	data.value = value;

	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _data$[ebp], eax

; 28   : 
; 29   : 	for ( unsigned int i = 0; i < sizeof( data.bytes ); i++ )

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@Add
$LN2@Add:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@Add:
	cmp	DWORD PTR _i$1[ebp], 4
	jae	SHORT $LN4@Add

; 30   : 		Add ( data.bytes[ i ] )
; 31   : 
; 32   : 		;

	mov	eax, DWORD PTR _i$1[ebp]
	movzx	ecx, BYTE PTR _data$[ebp+eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@CheckSum@@QAEXE@Z			; CheckSum::Add
	jmp	SHORT $LN2@Add
$LN4@Add:

; 33   : } // CheckSum::add(unsigned int)

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Add
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN8@Add:
	DD	1
	DD	$LN7@Add
$LN7@Add:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@Add
$LN6@Add:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
?Add@CheckSum@@QAEXI@Z ENDP				; CheckSum::Add
_TEXT	ENDS
END
